android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> IMPL
    int FEEDBACK_ALL_MASK -> FEEDBACK_ALL_MASK
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    java.lang.String flagToString(int) -> flagToString
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.ActionBarDrawerToggle:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> IMPL
    int ID_HOME -> ID_HOME
    android.app.Activity mActivity -> mActivity
    android.support.v4.widget.DrawerLayout mDrawerLayout -> mDrawerLayout
    boolean mDrawerIndicatorEnabled -> mDrawerIndicatorEnabled
    android.graphics.drawable.Drawable mThemeImage -> mThemeImage
    android.graphics.drawable.Drawable mDrawerImage -> mDrawerImage
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> mSlider
    int mDrawerImageResource -> mDrawerImageResource
    int mOpenDrawerContentDescRes -> mOpenDrawerContentDescRes
    int mCloseDrawerContentDescRes -> mCloseDrawerContentDescRes
    java.lang.Object mSetIndicatorInfo -> mSetIndicatorInfo
    void syncState() -> syncState
    void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.ActionBarDrawerToggle$1:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.ActionBarDrawerToggle$SlideDrawable:
    android.graphics.drawable.Drawable mWrapped -> mWrapped
    float mOffset -> mOffset
    float mOffsetBy -> mOffsetBy
    android.graphics.Rect mTmpRect -> mTmpRect
    void setOffset(float) -> setOffset
    float getOffset() -> getOffset
    void setOffsetBy(float) -> setOffsetBy
    void draw(android.graphics.Canvas) -> draw
    void setChangingConfigurations(int) -> setChangingConfigurations
    int getChangingConfigurations() -> getChangingConfigurations
    void setDither(boolean) -> setDither
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    void clearColorFilter() -> clearColorFilter
    boolean isStateful() -> isStateful
    boolean setState(int[]) -> setState
    int[] getState() -> getState
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    boolean setVisible(boolean,boolean) -> setVisible
    int getOpacity() -> getOpacity
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    boolean onStateChange(int[]) -> onStateChange
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    boolean getPadding(android.graphics.Rect) -> getPadding
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.ActionBarDrawerToggleHoneycomb:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    java.lang.reflect.Method setHomeAsUpIndicator -> setHomeAsUpIndicator
    java.lang.reflect.Method setHomeActionContentDescription -> setHomeActionContentDescription
    android.widget.ImageView upIndicatorView -> upIndicatorView
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void startActivity(android.app.Activity,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.ActivityCompatJB -> android.support.v4.app.ActivityCompatJB:
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
android.support.v4.app.ActivityOptionsCompat -> android.support.v4.app.ActivityOptionsCompat:
    android.support.v4.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB:
    android.support.v4.app.ActivityOptionsCompatJB mImpl -> mImpl
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompatJB -> android.support.v4.app.ActivityOptionsCompatJB:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    android.support.v4.app.ActivityOptionsCompatJB makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompatJB) -> update
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    java.lang.String TAG -> TAG
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    int OP_NULL -> OP_NULL
    int OP_ADD -> OP_ADD
    int OP_REPLACE -> OP_REPLACE
    int OP_REMOVE -> OP_REMOVE
    int OP_HIDE -> OP_HIDE
    int OP_SHOW -> OP_SHOW
    int OP_DETACH -> OP_DETACH
    int OP_ATTACH -> OP_ATTACH
    android.support.v4.app.BackStackRecord$Op mHead -> mHead
    android.support.v4.app.BackStackRecord$Op mTail -> mTail
    int mNumOp -> mNumOp
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    java.lang.String mName -> mName
    boolean mCommitted -> mCommitted
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> commitInternal
    void run() -> run
    void popFromBackStack(boolean) -> popFromBackStack
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> next
    android.support.v4.app.BackStackRecord$Op prev -> prev
    int cmd -> cmd
    android.support.v4.app.Fragment fragment -> fragment
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    java.util.ArrayList removed -> removed
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> mOps
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> mState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    java.util.HashMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.FragmentActivity$2:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.FragmentActivity$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> activity
    java.lang.Object custom -> custom
    java.util.HashMap children -> children
    java.util.ArrayList fragments -> fragments
    java.util.HashMap loaders -> loaders
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean HONEYCOMB -> HONEYCOMB
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.util.ArrayList mPendingActions -> mPendingActions
    java.lang.Runnable[] mTmpActions -> mTmpActions
    boolean mExecutingActions -> mExecutingActions
    java.util.ArrayList mActive -> mActive
    java.util.ArrayList mAdded -> mAdded
    java.util.ArrayList mAvailIndices -> mAvailIndices
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    int mCurState -> mCurState
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    android.support.v4.app.Fragment mParent -> mParent
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    boolean mStateSaved -> mStateSaved
    boolean mDestroyed -> mDestroyed
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    android.os.Bundle mStateBundle -> mStateBundle
    android.util.SparseArray mStateArray -> mStateArray
    java.lang.Runnable mExecCommit -> mExecCommit
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    void throwException(java.lang.RuntimeException) -> throwException
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void moveToState(int,boolean) -> moveToState
    void moveToState(int,int,int,boolean) -> moveToState
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> checkStateLoss
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> reportBackStackChanged
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    java.util.ArrayList retainNonConfig() -> retainNonConfig
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> restoreAllState
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> val$name
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> val$id
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> mClassName
    int mIndex -> mIndex
    boolean mFromLayout -> mFromLayout
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mRetainInstance -> mRetainInstance
    boolean mDetached -> mDetached
    android.os.Bundle mArguments -> mArguments
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.support.v4.app.Fragment mInstance -> mInstance
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> mTabs
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    int mContainerId -> mContainerId
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    boolean mAttached -> mAttached
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> ensureContent
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> mContext
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> curTab
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    java.lang.String tag -> tag
    java.lang.Class clss -> clss
    android.os.Bundle args -> args
    android.support.v4.app.Fragment fragment -> fragment
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> access$102
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> access$100
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> access$200
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> access$300
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> access$400
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.util.SparseArrayCompat mLoaders -> mLoaders
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> mInactiveLoaders
    java.lang.String mWho -> mWho
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mCreatingLoader -> mCreatingLoader
    void updateActivity(android.support.v4.app.FragmentActivity) -> updateActivity
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> doStart
    void doStop() -> doStop
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void doReportNextStart() -> doReportNextStart
    void doReportStart() -> doReportStart
    void doDestroy() -> doDestroy
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> mId
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mHaveData -> mHaveData
    boolean mDeliveredData -> mDeliveredData
    java.lang.Object mData -> mData
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    void start() -> start
    void retain() -> retain
    void finishRetain() -> finishRetain
    void reportStart() -> reportStart
    void stop() -> stop
    void destroy() -> destroy
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> IMPL
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.NavUtils$NavUtilsImpl:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.NavUtils$NavUtilsImplBase:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.NavUtils$NavUtilsImplJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> superGetParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.NavUtilsJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> wrap
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> access$000
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.graphics.Bitmap mBigLargeIcon -> mBigLargeIcon
    boolean mBigLargeIconSet -> mBigLargeIconSet
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mUseChronometer -> mUseChronometer
    android.support.v4.app.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.util.ArrayList mActions -> mActions
    android.app.Notification mNotification -> mNotification
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.NotificationCompatIceCreamSandwich:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> add
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    android.app.Notification$Builder b -> b
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> addBigPictureStyle
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.app.Notification build() -> build
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> access$000
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> getActivity
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.ShareCompat$ShareCompatImplJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ShareCompatJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.TaskStackBuilderJellybean:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> getActivitiesPendingIntent
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> mTask
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> mCancellingTask
    long mUpdateThrottle -> mUpdateThrottle
    long mLastLoadCompleteTime -> mLastLoadCompleteTime
    android.os.Handler mHandler -> mHandler
    void setUpdateThrottle(long) -> setUpdateThrottle
    void onForceLoad() -> onForceLoad
    boolean cancelLoad() -> cancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void executePendingTask() -> executePendingTask
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    java.lang.Object loadInBackground() -> loadInBackground
    java.lang.Object onLoadInBackground() -> onLoadInBackground
    void waitForLoader() -> waitForLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.AsyncTaskLoader$LoadTask:
    java.lang.Object result -> result
    boolean waiting -> waiting
    java.util.concurrent.CountDownLatch done -> done
    android.support.v4.content.AsyncTaskLoader this$0 -> this$0
    java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled() -> onCancelled
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> access$000
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.ContextCompatHoneycomb:
    void startActivities(android.content.Context,android.content.Intent[]) -> startActivities
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.ContextCompatJellybean:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> mObserver
    android.net.Uri mUri -> mUri
    java.lang.String[] mProjection -> mProjection
    java.lang.String mSelection -> mSelection
    java.lang.String[] mSelectionArgs -> mSelectionArgs
    java.lang.String mSortOrder -> mSortOrder
    android.database.Cursor mCursor -> mCursor
    android.database.Cursor loadInBackground() -> loadInBackground
    void registerContentObserver(android.database.Cursor,android.database.ContentObserver) -> registerContentObserver
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> COLUMNS
    java.lang.String META_DATA_FILE_PROVIDER_PATHS -> META_DATA_FILE_PROVIDER_PATHS
    java.lang.String TAG_ROOT_PATH -> TAG_ROOT_PATH
    java.lang.String TAG_FILES_PATH -> TAG_FILES_PATH
    java.lang.String TAG_CACHE_PATH -> TAG_CACHE_PATH
    java.lang.String TAG_EXTERNAL -> TAG_EXTERNAL
    java.lang.String ATTR_NAME -> ATTR_NAME
    java.lang.String ATTR_PATH -> ATTR_PATH
    java.io.File DEVICE_ROOT -> DEVICE_ROOT
    java.util.HashMap sCache -> sCache
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> mStrategy
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> getPathStrategy
    android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> parsePathStrategy
    int modeToMode(java.lang.String) -> modeToMode
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.FileProvider$PathStrategy:
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.FileProvider$SimplePathStrategy:
    java.lang.String mAuthority -> mAuthority
    java.util.HashMap mRoots -> mRoots
    void addRoot(java.lang.String,java.io.File) -> addRoot
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> IMPL
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> EXTRA_CHANGED_PACKAGE_LIST
    java.lang.String EXTRA_CHANGED_UID_LIST -> EXTRA_CHANGED_UID_LIST
    java.lang.String EXTRA_HTML_TEXT -> EXTRA_HTML_TEXT
    int FLAG_ACTIVITY_TASK_ON_HOME -> FLAG_ACTIVITY_TASK_ON_HOME
    int FLAG_ACTIVITY_CLEAR_TASK -> FLAG_ACTIVITY_CLEAR_TASK
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.IntentCompat$IntentCompatImpl:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.IntentCompat$IntentCompatImplBase:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.IntentCompat$IntentCompatImplHC:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.IntentCompatHoneycomb:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompatIcsMr1 -> android.support.v4.content.IntentCompatIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> mId
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> mListener
    android.content.Context mContext -> mContext
    boolean mStarted -> mStarted
    boolean mAbandoned -> mAbandoned
    boolean mReset -> mReset
    boolean mContentChanged -> mContentChanged
    void deliverResult(java.lang.Object) -> deliverResult
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> onStartLoading
    void forceLoad() -> forceLoad
    void onForceLoad() -> onForceLoad
    void stopLoading() -> stopLoading
    void onStopLoading() -> onStopLoading
    void abandon() -> abandon
    void onAbandon() -> onAbandon
    void reset() -> reset
    void onReset() -> onReset
    boolean takeContentChanged() -> takeContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.content.Context mAppContext -> mAppContext
    java.util.HashMap mReceivers -> mReceivers
    java.util.HashMap mActions -> mActions
    java.util.ArrayList mPendingBroadcasts -> mPendingBroadcasts
    int MSG_EXEC_PENDING_BROADCASTS -> MSG_EXEC_PENDING_BROADCASTS
    android.os.Handler mHandler -> mHandler
    java.lang.Object mLock -> mLock
    android.support.v4.content.LocalBroadcastManager mInstance -> mInstance
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    void executePendingBroadcasts() -> executePendingBroadcasts
    void access$000(android.support.v4.content.LocalBroadcastManager) -> access$000
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.LocalBroadcastManager$1:
    android.support.v4.content.LocalBroadcastManager this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.LocalBroadcastManager$BroadcastRecord:
    android.content.Intent intent -> intent
    java.util.ArrayList receivers -> receivers
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.LocalBroadcastManager$ReceiverRecord:
    android.content.IntentFilter filter -> filter
    android.content.BroadcastReceiver receiver -> receiver
    boolean broadcasting -> broadcasting
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.lang.String LOG_TAG -> LOG_TAG
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> sPoolWorkQueue
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> THREAD_POOL_EXECUTOR
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    android.support.v4.content.ModernAsyncTask$Status mStatus -> mStatus
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    void init() -> init
    void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
    void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    java.lang.Object postResult(java.lang.Object) -> postResult
    android.support.v4.content.ModernAsyncTask$Status getStatus() -> getStatus
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    android.support.v4.content.ModernAsyncTask execute(java.lang.Object[]) -> execute
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> access$200
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$300
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$400
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$500
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.ModernAsyncTask$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.ModernAsyncTask$2:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.ModernAsyncTask$3:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.ModernAsyncTask$4:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> $SwitchMap$android$support$v4$content$ModernAsyncTask$Status
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.ModernAsyncTask$AsyncTaskResult:
    android.support.v4.content.ModernAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.ModernAsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> $VALUES
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.ModernAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
    int CONFIG_UI_MODE -> CONFIG_UI_MODE
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.net.ConnectivityManagerCompat:
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> IMPL
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatGingerbread -> android.support.v4.net.ConnectivityManagerCompatGingerbread:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2 -> android.support.v4.net.ConnectivityManagerCompatHoneycombMR2:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatJellyBean -> android.support.v4.net.ConnectivityManagerCompatJellyBean:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.TrafficStatsCompat -> android.support.v4.net.TrafficStatsCompat:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL -> IMPL
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$1 -> android.support.v4.net.TrafficStatsCompat$1:
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl:
    java.lang.ThreadLocal mThreadSocketTags -> mThreadSocketTags
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1 -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1:
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$0 -> this$0
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags:
    int statsTag -> statsTag
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompatIcs -> android.support.v4.net.TrafficStatsCompatIcs:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.os.ParcelableCompat$CompatCreator:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> instantiate
android.support.v4.util.AtomicFile -> android.support.v4.util.AtomicFile:
    java.io.File mBaseName -> mBaseName
    java.io.File mBackupName -> mBackupName
    java.io.File getBaseFile() -> getBaseFile
    void delete() -> delete
    java.io.FileOutputStream startWrite() -> startWrite
    void finishWrite(java.io.FileOutputStream) -> finishWrite
    void failWrite(java.io.FileOutputStream) -> failWrite
    java.io.FileInputStream openRead() -> openRead
    byte[] readFully() -> readFully
    boolean sync(java.io.FileOutputStream) -> sync
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> mTag
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    long[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.LongSparseArray clone() -> clone
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    void delete(long) -> delete
    void remove(long) -> remove
    void removeAt(int) -> removeAt
    void gc() -> gc
    void put(long,java.lang.Object) -> put
    int size() -> size
    long keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(long) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(long,java.lang.Object) -> append
    int binarySearch(long[],int,int,long) -> binarySearch
    int idealByteArraySize(int) -> idealByteArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    java.lang.Object clone() -> clone
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    int[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void gc() -> gc
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    int binarySearch(int[],int,int,int) -> binarySearch
    int idealByteArraySize(int) -> idealByteArraySize
    int idealIntArraySize(int) -> idealIntArraySize
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    int HUNDRED_DAY_FIELD_LEN -> HUNDRED_DAY_FIELD_LEN
    int SECONDS_PER_MINUTE -> SECONDS_PER_MINUTE
    int SECONDS_PER_HOUR -> SECONDS_PER_HOUR
    int SECONDS_PER_DAY -> SECONDS_PER_DAY
    java.lang.Object sFormatSync -> sFormatSync
    char[] sFormatStr -> sFormatStr
    int accumField(int,int,boolean,int) -> accumField
    int printField(char[],int,char,int,boolean,int) -> printField
    int formatDurationLocked(long,int) -> formatDurationLocked
    void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    void formatDuration(long,java.io.PrintWriter) -> formatDuration
    void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> IMPL
    java.lang.Object DEFAULT_DELEGATE -> DEFAULT_DELEGATE
    java.lang.Object mBridge -> mBridge
    java.lang.Object getBridge() -> getBridge
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.AccessibilityDelegateCompatIcs:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> newAccessibilityDelegateDefaultImpl
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> newAccessibilityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.AccessibilityDelegateCompatIcs$1:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> newAccessibilityDelegateBridge
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$1:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> mImpl
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl:
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    int mTouchSlopSquare -> mTouchSlopSquare
    int mDoubleTapSlopSquare -> mDoubleTapSlopSquare
    int mMinimumFlingVelocity -> mMinimumFlingVelocity
    int mMaximumFlingVelocity -> mMaximumFlingVelocity
    int LONGPRESS_TIMEOUT -> LONGPRESS_TIMEOUT
    int TAP_TIMEOUT -> TAP_TIMEOUT
    int DOUBLE_TAP_TIMEOUT -> DOUBLE_TAP_TIMEOUT
    int SHOW_PRESS -> SHOW_PRESS
    int LONG_PRESS -> LONG_PRESS
    int TAP -> TAP
    android.os.Handler mHandler -> mHandler
    android.view.GestureDetector$OnGestureListener mListener -> mListener
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> mDoubleTapListener
    boolean mStillDown -> mStillDown
    boolean mDeferConfirmSingleTap -> mDeferConfirmSingleTap
    boolean mInLongPress -> mInLongPress
    boolean mAlwaysInTapRegion -> mAlwaysInTapRegion
    boolean mAlwaysInBiggerTapRegion -> mAlwaysInBiggerTapRegion
    android.view.MotionEvent mCurrentDownEvent -> mCurrentDownEvent
    android.view.MotionEvent mPreviousUpEvent -> mPreviousUpEvent
    boolean mIsDoubleTapping -> mIsDoubleTapping
    float mLastFocusX -> mLastFocusX
    float mLastFocusY -> mLastFocusY
    float mDownFocusX -> mDownFocusX
    float mDownFocusY -> mDownFocusY
    boolean mIsLongpressEnabled -> mIsLongpressEnabled
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    void init(android.content.Context) -> init
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancel() -> cancel
    void cancelTaps() -> cancelTaps
    boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    void dispatchLongPress() -> dispatchLongPress
    android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$000
    android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$100
    void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$200
    android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$300
    boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$400
    boolean access$502(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,boolean) -> access$502
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2:
    android.view.GestureDetector mDetector -> mDetector
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GravityCompat -> android.support.v4.view.GravityCompat:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> IMPL
    int RELATIVE_LAYOUT_DIRECTION -> RELATIVE_LAYOUT_DIRECTION
    int START -> START
    int END -> END
    int RELATIVE_HORIZONTAL_GRAVITY_MASK -> RELATIVE_HORIZONTAL_GRAVITY_MASK
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.GravityCompat$GravityCompatImpl:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.GravityCompat$GravityCompatImplBase:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.GravityCompatJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> IMPL
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl:
    int META_MODIFIER_MASK -> META_MODIFIER_MASK
    int META_ALL_MASK -> META_ALL_MASK
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> metaStateFilterDirectionalModifiers
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl:
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$KeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.KeyEventCompatEclair:
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.KeyEventCompatHoneycomb:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    android.support.v4.view.MenuCompat$MenuVersionImpl IMPL -> IMPL
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuCompat$BaseMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuCompat$HoneycombMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuCompat$MenuVersionImpl -> android.support.v4.view.MenuCompat$MenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> IMPL
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.MenuItemCompat$MenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.MenuItemCompatHoneycomb:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> IMPL
    int ACTION_MASK -> ACTION_MASK
    int ACTION_POINTER_DOWN -> ACTION_POINTER_DOWN
    int ACTION_POINTER_UP -> ACTION_POINTER_UP
    int ACTION_HOVER_MOVE -> ACTION_HOVER_MOVE
    int ACTION_SCROLL -> ACTION_SCROLL
    int ACTION_POINTER_INDEX_MASK -> ACTION_POINTER_INDEX_MASK
    int ACTION_POINTER_INDEX_SHIFT -> ACTION_POINTER_INDEX_SHIFT
    int ACTION_HOVER_ENTER -> ACTION_HOVER_ENTER
    int ACTION_HOVER_EXIT -> ACTION_HOVER_EXIT
    int getActionMasked(android.view.MotionEvent) -> getActionMasked
    int getActionIndex(android.view.MotionEvent) -> getActionIndex
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$MotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.MotionEventCompatEclair:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    java.lang.String TAG -> TAG
    int INDICATOR_HEIGHT -> INDICATOR_HEIGHT
    int MIN_PADDING_BOTTOM -> MIN_PADDING_BOTTOM
    int TAB_PADDING -> TAB_PADDING
    int TAB_SPACING -> TAB_SPACING
    int MIN_TEXT_SPACING -> MIN_TEXT_SPACING
    int FULL_UNDERLINE_HEIGHT -> FULL_UNDERLINE_HEIGHT
    int MIN_STRIP_HEIGHT -> MIN_STRIP_HEIGHT
    int mIndicatorColor -> mIndicatorColor
    int mIndicatorHeight -> mIndicatorHeight
    int mMinPaddingBottom -> mMinPaddingBottom
    int mMinTextSpacing -> mMinTextSpacing
    int mMinStripHeight -> mMinStripHeight
    int mTabPadding -> mTabPadding
    android.graphics.Paint mTabPaint -> mTabPaint
    android.graphics.Rect mTempRect -> mTempRect
    int mTabAlpha -> mTabAlpha
    boolean mDrawFullUnderline -> mDrawFullUnderline
    boolean mDrawFullUnderlineSet -> mDrawFullUnderlineSet
    int mFullUnderlineHeight -> mFullUnderlineHeight
    boolean mIgnoreTap -> mIgnoreTap
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mTouchSlop -> mTouchSlop
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> updateTextPositions
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.PagerTabStrip$1:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.PagerTabStrip$2:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    java.lang.String TAG -> TAG
    android.support.v4.view.ViewPager mPager -> mPager
    android.widget.TextView mPrevText -> mPrevText
    android.widget.TextView mCurrText -> mCurrText
    android.widget.TextView mNextText -> mNextText
    int mLastKnownCurrentPage -> mLastKnownCurrentPage
    float mLastKnownPositionOffset -> mLastKnownPositionOffset
    int mScaledTextSpacing -> mScaledTextSpacing
    int mGravity -> mGravity
    boolean mUpdatingText -> mUpdatingText
    boolean mUpdatingPositions -> mUpdatingPositions
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> mPageListener
    java.lang.ref.WeakReference mWatchingAdapter -> mWatchingAdapter
    int[] ATTRS -> ATTRS
    int[] TEXT_ATTRS -> TEXT_ATTRS
    float SIDE_ALPHA -> SIDE_ALPHA
    int TEXT_SPACING -> TEXT_SPACING
    int mNonPrimaryAlpha -> mNonPrimaryAlpha
    int mTextColor -> mTextColor
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> IMPL
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> updateText
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> updateAdapter
    void updateTextPositions(int,float,boolean) -> updateTextPositions
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> access$100
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.PagerTitleStrip$1:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.PagerTitleStrip$PageListener:
    int mScrollState -> mScrollState
    android.support.v4.view.PagerTitleStrip this$0 -> this$0
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.PagerTitleStripIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform:
    java.lang.String TAG -> TAG
    java.util.Locale mLocale -> mLocale
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> IMPL
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.VelocityTrackerCompatHoneycomb:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    long FAKE_FRAME_TIME -> FAKE_FRAME_TIME
    int IMPORTANT_FOR_ACCESSIBILITY_AUTO -> IMPORTANT_FOR_ACCESSIBILITY_AUTO
    int IMPORTANT_FOR_ACCESSIBILITY_YES -> IMPORTANT_FOR_ACCESSIBILITY_YES
    int IMPORTANT_FOR_ACCESSIBILITY_NO -> IMPORTANT_FOR_ACCESSIBILITY_NO
    int LAYER_TYPE_NONE -> LAYER_TYPE_NONE
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    int LAYOUT_DIRECTION_LTR -> LAYOUT_DIRECTION_LTR
    int LAYOUT_DIRECTION_RTL -> LAYOUT_DIRECTION_RTL
    int LAYOUT_DIRECTION_INHERIT -> LAYOUT_DIRECTION_INHERIT
    int LAYOUT_DIRECTION_LOCALE -> LAYOUT_DIRECTION_LOCALE
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> IMPL
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ViewCompat$BaseViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    long getFrameTime() -> getFrameTime
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ViewCompat$GBViewCompatImpl:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ViewCompat$HCViewCompatImpl:
    long getFrameTime() -> getFrameTime
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ViewCompat$ICSViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ViewCompat$JBViewCompatImpl:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ViewCompat$ViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ViewCompatGingerbread:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ViewCompatHC:
    long getFrameTime() -> getFrameTime
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ViewCompatICS:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ViewCompatJB:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.ViewCompatJellybeanMr1:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> IMPL
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ViewConfigurationCompatFroyo:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> IMPL
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.ViewGroupCompatHC:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompatIcs -> android.support.v4.view.ViewGroupCompatIcs:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int DEFAULT_OFFSCREEN_PAGES -> DEFAULT_OFFSCREEN_PAGES
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    int DEFAULT_GUTTER_SIZE -> DEFAULT_GUTTER_SIZE
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int mExpectedAdapterCount -> mExpectedAdapterCount
    java.util.Comparator COMPARATOR -> COMPARATOR
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.util.ArrayList mItems -> mItems
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> mTempItem
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v4.view.PagerAdapter mAdapter -> mAdapter
    int mCurItem -> mCurItem
    int mRestoredCurItem -> mRestoredCurItem
    android.os.Parcelable mRestoredAdapterState -> mRestoredAdapterState
    java.lang.ClassLoader mRestoredClassLoader -> mRestoredClassLoader
    android.widget.Scroller mScroller -> mScroller
    android.support.v4.view.ViewPager$PagerObserver mObserver -> mObserver
    int mPageMargin -> mPageMargin
    android.graphics.drawable.Drawable mMarginDrawable -> mMarginDrawable
    int mTopPageBounds -> mTopPageBounds
    int mBottomPageBounds -> mBottomPageBounds
    float mFirstOffset -> mFirstOffset
    float mLastOffset -> mLastOffset
    int mChildWidthMeasureSpec -> mChildWidthMeasureSpec
    int mChildHeightMeasureSpec -> mChildHeightMeasureSpec
    boolean mInLayout -> mInLayout
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mPopulatePending -> mPopulatePending
    int mOffscreenPageLimit -> mOffscreenPageLimit
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    boolean mIgnoreGutter -> mIgnoreGutter
    int mDefaultGutterSize -> mDefaultGutterSize
    int mGutterSize -> mGutterSize
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    int mCloseEnough -> mCloseEnough
    int CLOSE_ENOUGH -> CLOSE_ENOUGH
    boolean mFakeDragging -> mFakeDragging
    long mFakeDragBeginTime -> mFakeDragBeginTime
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> mLeftEdge
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> mRightEdge
    boolean mFirstLayout -> mFirstLayout
    boolean mNeedCalculatePageOffsets -> mNeedCalculatePageOffsets
    boolean mCalledSuper -> mCalledSuper
    int mDecorChildCount -> mDecorChildCount
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> mAdapterChangeListener
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> mPageTransformer
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> mSetChildrenDrawingOrderEnabled
    int DRAW_ORDER_DEFAULT -> DRAW_ORDER_DEFAULT
    int DRAW_ORDER_FORWARD -> DRAW_ORDER_FORWARD
    int DRAW_ORDER_REVERSE -> DRAW_ORDER_REVERSE
    int mDrawingOrder -> mDrawingOrder
    java.util.ArrayList mDrawingOrderedChildren -> mDrawingOrderedChildren
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> sPositionComparator
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    java.lang.Runnable mEndScrollRunnable -> mEndScrollRunnable
    int mScrollState -> mScrollState
    void initViewPager() -> initViewPager
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> removeNonDecorViews
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void smoothScrollTo(int,int) -> smoothScrollTo
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    void dataSetChanged() -> dataSetChanged
    void populate() -> populate
    void populate(int) -> populate
    void sortChildDrawingOrder() -> sortChildDrawingOrder
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> calculatePageOffsets
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> pageScrolled
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll(boolean) -> completeScroll
    boolean isGutterDrag(float,float) -> isGutterDrag
    void enableLayers(boolean) -> enableLayers
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> performDrag
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    int determineTargetPage(int,float,int,int) -> determineTargetPage
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> beginFakeDrag
    void endFakeDrag() -> endFakeDrag
    void fakeDragBy(float) -> fakeDragBy
    boolean isFakeDragging() -> isFakeDragging
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void endDrag() -> endDrag
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    boolean pageLeft() -> pageLeft
    boolean pageRight() -> pageRight
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> access$000
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> access$200
    int access$300(android.support.v4.view.ViewPager) -> access$300
    int[] access$400() -> access$400
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ViewPager$3:
    android.support.v4.view.ViewPager this$0 -> this$0
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ViewPager$Decor:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$ItemInfo:
    java.lang.Object object -> object
    int position -> position
    boolean scrolling -> scrolling
    float widthFactor -> widthFactor
    float offset -> offset
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> isDecor
    int gravity -> gravity
    float widthFactor -> widthFactor
    boolean needsMeasure -> needsMeasure
    int position -> position
    int childIndex -> childIndex
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ViewPager$MyAccessibilityDelegate:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$OnAdapterChangeListener:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> transformPage
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$PagerObserver:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> position
    android.os.Parcelable adapterState -> adapterState
    java.lang.ClassLoader loader -> loader
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$ViewPositionComparator:
    int compare(android.view.View,android.view.View) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> IMPL
    int TYPE_VIEW_HOVER_ENTER -> TYPE_VIEW_HOVER_ENTER
    int TYPE_VIEW_HOVER_EXIT -> TYPE_VIEW_HOVER_EXIT
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> TYPE_TOUCH_EXPLORATION_GESTURE_START
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> TYPE_TOUCH_EXPLORATION_GESTURE_END
    int TYPE_WINDOW_CONTENT_CHANGED -> TYPE_WINDOW_CONTENT_CHANGED
    int TYPE_VIEW_SCROLLED -> TYPE_VIEW_SCROLLED
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> TYPE_VIEW_TEXT_SELECTION_CHANGED
    int TYPE_ANNOUNCEMENT -> TYPE_ANNOUNCEMENT
    int TYPE_VIEW_ACCESSIBILITY_FOCUSED -> TYPE_VIEW_ACCESSIBILITY_FOCUSED
    int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED -> TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -> TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    int TYPE_GESTURE_DETECTION_START -> TYPE_GESTURE_DETECTION_START
    int TYPE_GESTURE_DETECTION_END -> TYPE_GESTURE_DETECTION_END
    int TYPE_TOUCH_INTERACTION_START -> TYPE_TOUCH_INTERACTION_START
    int TYPE_TOUCH_INTERACTION_END -> TYPE_TOUCH_INTERACTION_END
    int TYPES_ALL_MASK -> TYPES_ALL_MASK
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompatIcs -> android.support.v4.view.accessibility.AccessibilityEventCompatIcs:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> IMPL
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> access$000
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> val$listener
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> this$0
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    java.lang.Object mListener -> mListener
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs:
    java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> newAccessibilityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> val$bridge
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge:
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> IMPL
    java.lang.Object mInfo -> mInfo
    int ACTION_FOCUS -> ACTION_FOCUS
    int ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    int ACTION_SELECT -> ACTION_SELECT
    int ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    int ACTION_CLICK -> ACTION_CLICK
    int ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    int ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    int ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    int ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    int ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    int ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    int ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    int ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT -> ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING -> ACTION_ARGUMENT_HTML_ELEMENT_STRING
    int FOCUS_INPUT -> FOCUS_INPUT
    int FOCUS_ACCESSIBILITY -> FOCUS_ACCESSIBILITY
    int MOVEMENT_GRANULARITY_CHARACTER -> MOVEMENT_GRANULARITY_CHARACTER
    int MOVEMENT_GRANULARITY_WORD -> MOVEMENT_GRANULARITY_WORD
    int MOVEMENT_GRANULARITY_LINE -> MOVEMENT_GRANULARITY_LINE
    int MOVEMENT_GRANULARITY_PARAGRAPH -> MOVEMENT_GRANULARITY_PARAGRAPH
    int MOVEMENT_GRANULARITY_PAGE -> MOVEMENT_GRANULARITY_PAGE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
    java.lang.Object getInfo() -> getInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    int getWindowId() -> getWindowId
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    void addChild(android.view.View) -> addChild
    void addChild(android.view.View,int) -> addChild
    int getActions() -> getActions
    void addAction(int) -> addAction
    boolean performAction(int) -> performAction
    boolean performAction(int,android.os.Bundle) -> performAction
    void setMovementGranularities(int) -> setMovementGranularities
    int getMovementGranularities() -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    void setParent(android.view.View) -> setParent
    void setParent(android.view.View,int) -> setParent
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable() -> isCheckable
    void setCheckable(boolean) -> setCheckable
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isFocusable() -> isFocusable
    void setFocusable(boolean) -> setFocusable
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    boolean isVisibleToUser() -> isVisibleToUser
    void setVisibleToUser(boolean) -> setVisibleToUser
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isClickable() -> isClickable
    void setClickable(boolean) -> setClickable
    boolean isLongClickable() -> isLongClickable
    void setLongClickable(boolean) -> setLongClickable
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    java.lang.CharSequence getPackageName() -> getPackageName
    void setPackageName(java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    int getWindowId(java.lang.Object) -> getWindowId
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    int getActions(java.lang.Object) -> getActions
    void addAction(java.lang.Object,int) -> addAction
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    java.lang.Object getParent(java.lang.Object) -> getParent
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    void setParent(java.lang.Object,android.view.View) -> setParent
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable(java.lang.Object) -> isCheckable
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isFocusable(java.lang.Object) -> isFocusable
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    void setFocused(java.lang.Object,boolean) -> setFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean isSelected(java.lang.Object) -> isSelected
    void setSelected(java.lang.Object,boolean) -> setSelected
    boolean isClickable(java.lang.Object) -> isClickable
    void setClickable(java.lang.Object,boolean) -> setClickable
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText(java.lang.Object) -> getText
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl:
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean:
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccesibilityFocused(java.lang.Object,boolean) -> setAccesibilityFocused
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> IMPL
    java.lang.Object mProvider -> mProvider
    java.lang.Object getProvider() -> getProvider
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> IMPL
    java.lang.Object mRecord -> mRecord
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    int getWindowId() -> getWindowId
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isFullScreen() -> isFullScreen
    void setFullScreen(boolean) -> setFullScreen
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    int getItemCount() -> getItemCount
    void setItemCount(int) -> setItemCount
    int getCurrentItemIndex() -> getCurrentItemIndex
    void setCurrentItemIndex(int) -> setCurrentItemIndex
    int getFromIndex() -> getFromIndex
    void setFromIndex(int) -> setFromIndex
    int getToIndex() -> getToIndex
    void setToIndex(int) -> setToIndex
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    int getMaxScrollX() -> getMaxScrollX
    void setMaxScrollX(int) -> setMaxScrollX
    int getMaxScrollY() -> getMaxScrollY
    void setMaxScrollY(int) -> setMaxScrollY
    int getAddedCount() -> getAddedCount
    void setAddedCount(int) -> setAddedCount
    int getRemovedCount() -> getRemovedCount
    void setRemovedCount(int) -> setRemovedCount
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.util.List getText() -> getText
    java.lang.CharSequence getBeforeText() -> getBeforeText
    void setBeforeText(java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData() -> getParcelableData
    void setParcelableData(android.os.Parcelable) -> setParcelableData
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    int getItemCount(java.lang.Object) -> getItemCount
    void setItemCount(java.lang.Object,int) -> setItemCount
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    int getToIndex(java.lang.Object) -> getToIndex
    void setToIndex(java.lang.Object,int) -> setToIndex
    int getScrollX(java.lang.Object) -> getScrollX
    void setScrollX(java.lang.Object,int) -> setScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    void setScrollY(java.lang.Object,int) -> setScrollY
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    int getAddedCount(java.lang.Object) -> getAddedCount
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.util.List getText(java.lang.Object) -> getText
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    java.lang.Object getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> init
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.CursorAdapter$1:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.CursorAdapter$ChangeObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.CursorAdapter$MyDataSetObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.CursorFilter:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> mClient
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.CursorFilter$CursorFilterClient:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    java.lang.String TAG -> TAG
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int LOCK_MODE_UNLOCKED -> LOCK_MODE_UNLOCKED
    int LOCK_MODE_LOCKED_CLOSED -> LOCK_MODE_LOCKED_CLOSED
    int LOCK_MODE_LOCKED_OPEN -> LOCK_MODE_LOCKED_OPEN
    int MIN_DRAWER_MARGIN -> MIN_DRAWER_MARGIN
    int DEFAULT_SCRIM_COLOR -> DEFAULT_SCRIM_COLOR
    int PEEK_DELAY -> PEEK_DELAY
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    boolean ALLOW_EDGE_LOCK -> ALLOW_EDGE_LOCK
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int mMinDrawerMargin -> mMinDrawerMargin
    int mScrimColor -> mScrimColor
    float mScrimOpacity -> mScrimOpacity
    android.graphics.Paint mScrimPaint -> mScrimPaint
    android.support.v4.widget.ViewDragHelper mLeftDragger -> mLeftDragger
    android.support.v4.widget.ViewDragHelper mRightDragger -> mRightDragger
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> mLeftCallback
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> mRightCallback
    int mDrawerState -> mDrawerState
    boolean mInLayout -> mInLayout
    boolean mFirstLayout -> mFirstLayout
    int mLockModeLeft -> mLockModeLeft
    int mLockModeRight -> mLockModeRight
    boolean mDisallowInterceptRequested -> mDisallowInterceptRequested
    boolean mChildrenCanceledTouch -> mChildrenCanceledTouch
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> mListener
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.graphics.drawable.Drawable mShadowLeft -> mShadowLeft
    android.graphics.drawable.Drawable mShadowRight -> mShadowRight
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    void setDrawerShadow(int,int) -> setDrawerShadow
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> setDrawerLockMode
    void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    int getDrawerLockMode(int) -> getDrawerLockMode
    int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    void updateDrawerState(int,int,android.view.View) -> updateDrawerState
    void dispatchOnDrawerClosed(android.view.View) -> dispatchOnDrawerClosed
    void dispatchOnDrawerOpened(android.view.View) -> dispatchOnDrawerOpened
    void dispatchOnDrawerSlide(android.view.View,float) -> dispatchOnDrawerSlide
    void setDrawerViewOffset(android.view.View,float) -> setDrawerViewOffset
    float getDrawerViewOffset(android.view.View) -> getDrawerViewOffset
    int getDrawerViewGravity(android.view.View) -> getDrawerViewGravity
    boolean checkDrawerViewGravity(android.view.View,int) -> checkDrawerViewGravity
    android.view.View findOpenDrawer() -> findOpenDrawer
    void moveDrawerToOffset(android.view.View,float) -> moveDrawerToOffset
    android.view.View findDrawerWithGravity(int) -> findDrawerWithGravity
    java.lang.String gravityToString(int) -> gravityToString
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> isContentView
    boolean isDrawerView(android.view.View) -> isDrawerView
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> closeDrawers
    void closeDrawers(boolean) -> closeDrawers
    void openDrawer(android.view.View) -> openDrawer
    void openDrawer(int) -> openDrawer
    void closeDrawer(android.view.View) -> closeDrawer
    void closeDrawer(int) -> closeDrawer
    boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    boolean isDrawerOpen(int) -> isDrawerOpen
    boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    boolean isDrawerVisible(int) -> isDrawerVisible
    boolean hasPeekingDrawer() -> hasPeekingDrawer
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> hasVisibleDrawer
    android.view.View findVisibleDrawer() -> findVisibleDrawer
    void cancelChildViewTouch() -> cancelChildViewTouch
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> access$100
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.DrawerLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> filter
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.DrawerLayout$DrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> gravity
    float onScreen -> onScreen
    boolean isPeeking -> isPeeking
    boolean knownOpen -> knownOpen
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> openDrawerGravity
    int lockModeLeft -> lockModeLeft
    int lockModeRight -> lockModeRight
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.DrawerLayout$SavedState$1:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$SimpleDrawerListener -> android.support.v4.widget.DrawerLayout$SimpleDrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.DrawerLayout$ViewDragCallback:
    int mGravity -> mGravity
    android.support.v4.widget.ViewDragHelper mDragger -> mDragger
    java.lang.Runnable mPeekRunnable -> mPeekRunnable
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void setDragger(android.support.v4.widget.ViewDragHelper) -> setDragger
    void removeCallbacks() -> removeCallbacks
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void closeOtherDrawer() -> closeOtherDrawer
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    void peekDrawer() -> peekDrawer
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> access$000
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.DrawerLayout$ViewDragCallback$1:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> this$1
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    java.lang.Object mEdgeEffect -> mEdgeEffect
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> IMPL
    void setSize(int,int) -> setSize
    boolean isFinished() -> isFinished
    void finish() -> finish
    boolean onPull(float) -> onPull
    boolean onRelease() -> onRelease
    boolean onAbsorb(int) -> onAbsorb
    boolean draw(android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.EdgeEffectCompatIcs:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mLayout -> mLayout
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.ScrollerCompat:
    java.lang.Object mScroller -> mScroller
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> IMPL
    android.support.v4.widget.ScrollerCompat create(android.content.Context) -> create
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> create
    boolean isFinished() -> isFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
    int getFinalX() -> getFinalX
    int getFinalY() -> getFinalY
    float getCurrVelocity() -> getCurrVelocity
    boolean computeScrollOffset() -> computeScrollOffset
    void startScroll(int,int,int,int) -> startScroll
    void startScroll(int,int,int,int,int) -> startScroll
    void fling(int,int,int,int,int,int,int,int) -> fling
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation() -> abortAnimation
    void notifyHorizontalEdgeReached(int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled() -> isOverScrolled
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.ScrollerCompatGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.widget.ScrollerCompatIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> IMPL
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> setOnQueryTextListener
    void setOnCloseListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> access$000
android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat -> android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2:
    android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb -> android.support.v4.widget.SearchViewCompatHoneycomb:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> android.support.v4.widget.SearchViewCompatHoneycomb$1:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> val$listener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$2 -> android.support.v4.widget.SearchViewCompatHoneycomb$2:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge val$listener -> val$listener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge:
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.SearchViewCompatIcs:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    int[] mFrom -> mFrom
    int[] mTo -> mTo
    int mStringConversionColumn -> mStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> mCursorToStringConverter
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> mViewBinder
    java.lang.String[] mOriginalFrom -> mOriginalFrom
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(java.lang.String[]) -> findColumns
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    java.lang.String TAG -> TAG
    int DEFAULT_OVERHANG_SIZE -> DEFAULT_OVERHANG_SIZE
    int DEFAULT_FADE_COLOR -> DEFAULT_FADE_COLOR
    int mSliderFadeColor -> mSliderFadeColor
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int mCoveredFadeColor -> mCoveredFadeColor
    android.graphics.drawable.Drawable mShadowDrawable -> mShadowDrawable
    int mOverhangSize -> mOverhangSize
    boolean mCanSlide -> mCanSlide
    android.view.View mSlideableView -> mSlideableView
    float mSlideOffset -> mSlideOffset
    float mParallaxOffset -> mParallaxOffset
    int mSlideRange -> mSlideRange
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mParallaxBy -> mParallaxBy
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> mPanelSlideListener
    android.support.v4.widget.ViewDragHelper mDragHelper -> mDragHelper
    boolean mPreservedOpenState -> mPreservedOpenState
    boolean mFirstLayout -> mFirstLayout
    android.graphics.Rect mTmpRect -> mTmpRect
    java.util.ArrayList mPostedRunnables -> mPostedRunnables
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> IMPL
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void dispatchOnPanelSlide(android.view.View) -> dispatchOnPanelSlide
    void dispatchOnPanelOpened(android.view.View) -> dispatchOnPanelOpened
    void dispatchOnPanelClosed(android.view.View) -> dispatchOnPanelClosed
    void updateObscuredViewsVisibility(android.view.View) -> updateObscuredViewsVisibility
    void setAllChildrenVisible() -> setAllChildrenVisible
    boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> closePane
    boolean openPane(android.view.View,int) -> openPane
    void smoothSlideOpen() -> smoothSlideOpen
    boolean openPane() -> openPane
    void smoothSlideClosed() -> smoothSlideClosed
    boolean closePane() -> closePane
    boolean isOpen() -> isOpen
    boolean canSlide() -> canSlide
    boolean isSlideable() -> isSlideable
    void onPanelDragged(int) -> onPanelDragged
    void dimChildView(android.view.View,float,int) -> dimChildView
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> invalidateChildRegion
    boolean smoothSlideTo(float,int) -> smoothSlideTo
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> parallaxOtherViews
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean isDimmed(android.view.View) -> isDimmed
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> access$100
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> access$200
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> access$300
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> access$400
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> access$502
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> access$600
    int access$700(android.support.v4.widget.SlidingPaneLayout) -> access$700
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> access$900
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> access$1000
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.SlidingPaneLayout$1:
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> filter
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable:
    android.view.View mChildView -> mChildView
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.SlidingPaneLayout$DragHelperCallback:
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> ATTRS
    float weight -> weight
    boolean slideable -> slideable
    boolean dimWhenOffset -> dimWhenOffset
    android.graphics.Paint dimPaint -> dimPaint
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$PanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> isOpen
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.SlidingPaneLayout$SavedState$1:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB:
    java.lang.reflect.Method mGetDisplayList -> mGetDisplayList
    java.lang.reflect.Field mRecreateDisplayList -> mRecreateDisplayList
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ViewDragHelper:
    java.lang.String TAG -> TAG
    int INVALID_POINTER -> INVALID_POINTER
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int EDGE_LEFT -> EDGE_LEFT
    int EDGE_RIGHT -> EDGE_RIGHT
    int EDGE_TOP -> EDGE_TOP
    int EDGE_BOTTOM -> EDGE_BOTTOM
    int EDGE_ALL -> EDGE_ALL
    int DIRECTION_HORIZONTAL -> DIRECTION_HORIZONTAL
    int DIRECTION_VERTICAL -> DIRECTION_VERTICAL
    int DIRECTION_ALL -> DIRECTION_ALL
    int EDGE_SIZE -> EDGE_SIZE
    int BASE_SETTLE_DURATION -> BASE_SETTLE_DURATION
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int mDragState -> mDragState
    int mTouchSlop -> mTouchSlop
    int mActivePointerId -> mActivePointerId
    float[] mInitialMotionX -> mInitialMotionX
    float[] mInitialMotionY -> mInitialMotionY
    float[] mLastMotionX -> mLastMotionX
    float[] mLastMotionY -> mLastMotionY
    int[] mInitialEdgesTouched -> mInitialEdgesTouched
    int[] mEdgeDragsInProgress -> mEdgeDragsInProgress
    int[] mEdgeDragsLocked -> mEdgeDragsLocked
    int mPointersDown -> mPointersDown
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    float mMaxVelocity -> mMaxVelocity
    float mMinVelocity -> mMinVelocity
    int mEdgeSize -> mEdgeSize
    int mTrackingEdges -> mTrackingEdges
    android.support.v4.widget.ScrollerCompat mScroller -> mScroller
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> mCallback
    android.view.View mCapturedView -> mCapturedView
    boolean mReleaseInProgress -> mReleaseInProgress
    android.view.ViewGroup mParentView -> mParentView
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.lang.Runnable mSetIdleRunnable -> mSetIdleRunnable
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> create
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> create
    void setMinVelocity(float) -> setMinVelocity
    float getMinVelocity() -> getMinVelocity
    int getViewDragState() -> getViewDragState
    void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    int getEdgeSize() -> getEdgeSize
    void captureChildView(android.view.View,int) -> captureChildView
    android.view.View getCapturedView() -> getCapturedView
    int getActivePointerId() -> getActivePointerId
    int getTouchSlop() -> getTouchSlop
    void cancel() -> cancel
    void abort() -> abort
    boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    int computeAxisDuration(int,int,int) -> computeAxisDuration
    int clampMag(int,int,int) -> clampMag
    float clampMag(float,float,float) -> clampMag
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void flingCapturedView(int,int,int,int) -> flingCapturedView
    boolean continueSettling(boolean) -> continueSettling
    void dispatchViewReleased(float,float) -> dispatchViewReleased
    void clearMotionHistory() -> clearMotionHistory
    void clearMotionHistory(int) -> clearMotionHistory
    void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    void saveInitialMotion(float,float,int) -> saveInitialMotion
    void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    boolean isPointerDown(int) -> isPointerDown
    void setDragState(int) -> setDragState
    boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
    boolean canScroll(android.view.View,boolean,int,int,int,int) -> canScroll
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    boolean checkTouchSlop(int) -> checkTouchSlop
    boolean checkTouchSlop(int,int) -> checkTouchSlop
    boolean isEdgeTouched(int) -> isEdgeTouched
    boolean isEdgeTouched(int,int) -> isEdgeTouched
    void releaseViewForPointerUp() -> releaseViewForPointerUp
    void dragTo(int,int,int,int) -> dragTo
    boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    int getEdgesTouched(int,int) -> getEdgesTouched
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ViewDragHelper$1:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.ViewDragHelper$2:
    android.support.v4.widget.ViewDragHelper this$0 -> this$0
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ViewDragHelper$Callback:
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getOrderedChildIndex(int) -> getOrderedChildIndex
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
com.aidigame.hisun.pet.CrashHandler -> com.aidigame.hisun.pet.a:
    java.lang.Thread$UncaughtExceptionHandler mDefaultHandler -> a
    com.aidigame.hisun.pet.CrashHandler INSTANCE -> b
    android.content.Context mContext -> c
    java.util.Map infos -> d
    java.text.SimpleDateFormat format -> e
    com.aidigame.hisun.pet.CrashHandler getInstance() -> a
    void init(android.content.Context) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    boolean handleException(java.lang.Throwable) -> a
    void collectDeviceInfo(android.content.Context) -> b
    java.lang.String saveCrashInfo2File(java.lang.Throwable) -> b
com.aidigame.hisun.pet.FirstPageActivity -> com.aidigame.hisun.pet.FirstPageActivity:
    android.widget.ImageView welcomeImage -> a
    android.widget.ImageView imageView -> b
    boolean canJump -> c
    android.view.animation.Animation animation -> d
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> e
    android.os.Handler handler -> f
    boolean netIsNotConnect -> g
    android.content.BroadcastReceiver receiver -> h
    void onCreate(android.os.Bundle) -> onCreate
    void login() -> a
    void getSIDAndUserID() -> b
    void onDestroy() -> onDestroy
com.aidigame.hisun.pet.FirstPageActivity$1 -> com.aidigame.hisun.pet.b:
    com.aidigame.hisun.pet.FirstPageActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.aidigame.hisun.pet.FirstPageActivity$2 -> com.aidigame.hisun.pet.c:
    com.aidigame.hisun.pet.FirstPageActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.aidigame.hisun.pet.FirstPageActivity$3 -> com.aidigame.hisun.pet.d:
    com.aidigame.hisun.pet.FirstPageActivity this$0 -> a
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
    com.aidigame.hisun.pet.FirstPageActivity access$0(com.aidigame.hisun.pet.FirstPageActivity$3) -> a
com.aidigame.hisun.pet.FirstPageActivity$3$1 -> com.aidigame.hisun.pet.FirstPageActivity$3$1:
    com.aidigame.hisun.pet.FirstPageActivity$3 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.FirstPageActivity$4 -> com.aidigame.hisun.pet.FirstPageActivity$4:
    com.aidigame.hisun.pet.FirstPageActivity this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.PetApplication -> com.aidigame.hisun.pet.PetApplication:
    com.aidigame.hisun.pet.PetApplication petApp -> petApp
    com.aidigame.hisun.pet.bean.User user -> user
    com.aidigame.hisun.pet.constant.Constants constants -> constants
    float TARGET_HEAP_UTILIZATION -> TARGET_HEAP_UTILIZATION
    java.util.LinkedList activityList -> activityList
    void onCreate() -> onCreate
com.aidigame.hisun.pet.R -> com.aidigame.hisun.pet.e:
com.aidigame.hisun.pet.R$styleable -> com.aidigame.hisun.pet.f:
    int[] AbsHListView -> AbsHListView
    int AbsHListView_android_cacheColorHint -> AbsHListView_android_cacheColorHint
    int AbsHListView_android_choiceMode -> AbsHListView_android_choiceMode
    int AbsHListView_android_drawSelectorOnTop -> AbsHListView_android_drawSelectorOnTop
    int AbsHListView_android_listSelector -> AbsHListView_android_listSelector
    int AbsHListView_android_scrollingCache -> AbsHListView_android_scrollingCache
    int AbsHListView_android_smoothScrollbar -> AbsHListView_android_smoothScrollbar
    int AbsHListView_stackFromRight -> AbsHListView_stackFromRight
    int AbsHListView_transcriptMode -> AbsHListView_transcriptMode
    int[] ArcLayout -> ArcLayout
    int ArcLayout_childSize -> ArcLayout_childSize
    int ArcLayout_fromDegrees -> ArcLayout_fromDegrees
    int ArcLayout_toDegrees -> ArcLayout_toDegrees
    int[] ArcMenu -> ArcMenu
    int ArcMenu_childSize -> ArcMenu_childSize
    int ArcMenu_fromDegrees -> ArcMenu_fromDegrees
    int ArcMenu_toDegrees -> ArcMenu_toDegrees
    int[] AviaryAdjustImageView -> AviaryAdjustImageView
    int AviaryAdjustImageView_android_padding -> AviaryAdjustImageView_android_padding
    int AviaryAdjustImageView_aviary_animationDuration -> AviaryAdjustImageView_aviary_animationDuration
    int AviaryAdjustImageView_aviary_animationDuration2 -> AviaryAdjustImageView_aviary_animationDuration2
    int AviaryAdjustImageView_aviary_color1 -> AviaryAdjustImageView_aviary_color1
    int AviaryAdjustImageView_aviary_enable3d -> AviaryAdjustImageView_aviary_enable3d
    int AviaryAdjustImageView_aviary_freeRotate -> AviaryAdjustImageView_aviary_freeRotate
    int AviaryAdjustImageView_aviary_handle -> AviaryAdjustImageView_aviary_handle
    int AviaryAdjustImageView_aviary_strokeColor -> AviaryAdjustImageView_aviary_strokeColor
    int AviaryAdjustImageView_aviary_strokeColor2 -> AviaryAdjustImageView_aviary_strokeColor2
    int AviaryAdjustImageView_aviary_strokeWidth -> AviaryAdjustImageView_aviary_strokeWidth
    int AviaryAdjustImageView_aviary_strokeWidth2 -> AviaryAdjustImageView_aviary_strokeWidth2
    int[] AviaryCellLayout -> AviaryCellLayout
    int AviaryCellLayout_aviary_cellBottomPadding -> AviaryCellLayout_aviary_cellBottomPadding
    int AviaryCellLayout_aviary_cellEndPadding -> AviaryCellLayout_aviary_cellEndPadding
    int AviaryCellLayout_aviary_cellStartPadding -> AviaryCellLayout_aviary_cellStartPadding
    int AviaryCellLayout_aviary_cellTopPadding -> AviaryCellLayout_aviary_cellTopPadding
    int AviaryCellLayout_aviary_cells -> AviaryCellLayout_aviary_cells
    int AviaryCellLayout_aviary_horizontalPadding -> AviaryCellLayout_aviary_horizontalPadding
    int AviaryCellLayout_aviary_layout_direction -> AviaryCellLayout_aviary_layout_direction
    int AviaryCellLayout_aviary_rows -> AviaryCellLayout_aviary_rows
    int AviaryCellLayout_aviary_verticalPadding -> AviaryCellLayout_aviary_verticalPadding
    int[] AviaryCropHighlightView -> AviaryCropHighlightView
    int AviaryCropHighlightView_android_src -> AviaryCropHighlightView_android_src
    int AviaryCropHighlightView_aviary_color1 -> AviaryCropHighlightView_aviary_color1
    int AviaryCropHighlightView_aviary_color2 -> AviaryCropHighlightView_aviary_color2
    int AviaryCropHighlightView_aviary_strokeColor -> AviaryCropHighlightView_aviary_strokeColor
    int AviaryCropHighlightView_aviary_strokeColor2 -> AviaryCropHighlightView_aviary_strokeColor2
    int AviaryCropHighlightView_aviary_strokeColor3 -> AviaryCropHighlightView_aviary_strokeColor3
    int AviaryCropHighlightView_aviary_strokeColor4 -> AviaryCropHighlightView_aviary_strokeColor4
    int AviaryCropHighlightView_aviary_strokeWidth -> AviaryCropHighlightView_aviary_strokeWidth
    int AviaryCropHighlightView_aviary_strokeWidth2 -> AviaryCropHighlightView_aviary_strokeWidth2
    int[] AviaryCropImageView -> AviaryCropImageView
    int AviaryCropImageView_aviary_highlightStyle -> AviaryCropImageView_aviary_highlightStyle
    int AviaryCropImageView_aviary_minCropSize -> AviaryCropImageView_aviary_minCropSize
    int[] AviaryDrawableHighlightView -> AviaryDrawableHighlightView
    int AviaryDrawableHighlightView_android_background -> AviaryDrawableHighlightView_android_background
    int AviaryDrawableHighlightView_android_padding -> AviaryDrawableHighlightView_android_padding
    int AviaryDrawableHighlightView_aviary_deleteDrawable -> AviaryDrawableHighlightView_aviary_deleteDrawable
    int AviaryDrawableHighlightView_aviary_minSize -> AviaryDrawableHighlightView_aviary_minSize
    int AviaryDrawableHighlightView_aviary_moveEnabled -> AviaryDrawableHighlightView_aviary_moveEnabled
    int AviaryDrawableHighlightView_aviary_resizeEdgeMode -> AviaryDrawableHighlightView_aviary_resizeEdgeMode
    int AviaryDrawableHighlightView_aviary_resizeEnabled -> AviaryDrawableHighlightView_aviary_resizeEnabled
    int AviaryDrawableHighlightView_aviary_rotateDrawable -> AviaryDrawableHighlightView_aviary_rotateDrawable
    int AviaryDrawableHighlightView_aviary_rotateEnabled -> AviaryDrawableHighlightView_aviary_rotateEnabled
    int[] AviaryEdgeEffect -> AviaryEdgeEffect
    int AviaryEdgeEffect_aviary_blendMode -> AviaryEdgeEffect_aviary_blendMode
    int AviaryEdgeEffect_aviary_edgeColor -> AviaryEdgeEffect_aviary_edgeColor
    int AviaryEdgeEffect_aviary_edgeDrawable -> AviaryEdgeEffect_aviary_edgeDrawable
    int AviaryEdgeEffect_aviary_glowDrawable -> AviaryEdgeEffect_aviary_glowDrawable
    int[] AviaryEffectThumbLayout -> AviaryEffectThumbLayout
    int AviaryEffectThumbLayout_aviary_animationDuration -> AviaryEffectThumbLayout_aviary_animationDuration
    int[] AviaryGallery -> AviaryGallery
    int AviaryGallery_android_animationDuration -> AviaryGallery_android_animationDuration
    int[] AviaryGalleryIndicatorView -> AviaryGalleryIndicatorView
    int AviaryGalleryIndicatorView_aviary_drawableStyle -> AviaryGalleryIndicatorView_aviary_drawableStyle
    int[] AviaryGalleryTopIndicator -> AviaryGalleryTopIndicator
    int AviaryGalleryTopIndicator_android_minHeight -> AviaryGalleryTopIndicator_android_minHeight
    int AviaryGalleryTopIndicator_android_shadowColor -> AviaryGalleryTopIndicator_android_shadowColor
    int AviaryGalleryTopIndicator_android_shadowDy -> AviaryGalleryTopIndicator_android_shadowDy
    int AviaryGalleryTopIndicator_aviary_color1 -> AviaryGalleryTopIndicator_aviary_color1
    int AviaryGalleryTopIndicator_aviary_direction -> AviaryGalleryTopIndicator_aviary_direction
    int AviaryGalleryTopIndicator_aviary_indicatorSize -> AviaryGalleryTopIndicator_aviary_indicatorSize
    int AviaryGalleryTopIndicator_aviary_offsety -> AviaryGalleryTopIndicator_aviary_offsety
    int AviaryGalleryTopIndicator_aviary_strokeColor -> AviaryGalleryTopIndicator_aviary_strokeColor
    int AviaryGalleryTopIndicator_aviary_strokeColor2 -> AviaryGalleryTopIndicator_aviary_strokeColor2
    int AviaryGalleryTopIndicator_aviary_strokeWidth -> AviaryGalleryTopIndicator_aviary_strokeWidth
    int[] AviaryHighlightImageButton -> AviaryHighlightImageButton
    int AviaryHighlightImageButton_android_focusable -> AviaryHighlightImageButton_android_focusable
    int AviaryHighlightImageButton_aviary_blendMode -> AviaryHighlightImageButton_aviary_blendMode
    int AviaryHighlightImageButton_aviary_checked -> AviaryHighlightImageButton_aviary_checked
    int AviaryHighlightImageButton_aviary_glowMode -> AviaryHighlightImageButton_aviary_glowMode
    int AviaryHighlightImageButton_aviary_glowSize -> AviaryHighlightImageButton_aviary_glowSize
    int AviaryHighlightImageButton_aviary_highlightColorChecked -> AviaryHighlightImageButton_aviary_highlightColorChecked
    int AviaryHighlightImageButton_aviary_highlightColorPressed -> AviaryHighlightImageButton_aviary_highlightColorPressed
    int AviaryHighlightImageButton_aviary_highlightColorSelected -> AviaryHighlightImageButton_aviary_highlightColorSelected
    int AviaryHighlightImageButton_aviary_highlightMode -> AviaryHighlightImageButton_aviary_highlightMode
    int AviaryHighlightImageButton_aviary_toggleable -> AviaryHighlightImageButton_aviary_toggleable
    int AviaryHighlightImageButton_aviary_untoggleable -> AviaryHighlightImageButton_aviary_untoggleable
    int[] AviaryImageRestoreSwitcher -> AviaryImageRestoreSwitcher
    int AviaryImageRestoreSwitcher_aviary_restoreTimeout -> AviaryImageRestoreSwitcher_aviary_restoreTimeout
    int[] AviaryImageViewDrawableOverlay -> AviaryImageViewDrawableOverlay
    int AviaryImageViewDrawableOverlay_aviary_highlightStyle -> AviaryImageViewDrawableOverlay_aviary_highlightStyle
    int[] AviaryPluginDividerDrawable -> AviaryPluginDividerDrawable
    int AviaryPluginDividerDrawable_android_textColor -> AviaryPluginDividerDrawable_android_textColor
    int AviaryPluginDividerDrawable_aviary_strokeColor -> AviaryPluginDividerDrawable_aviary_strokeColor
    int AviaryPluginDividerDrawable_aviary_strokeWidth -> AviaryPluginDividerDrawable_aviary_strokeWidth
    int AviaryPluginDividerDrawable_aviary_textPerc -> AviaryPluginDividerDrawable_aviary_textPerc
    int AviaryPluginDividerDrawable_aviary_typeface -> AviaryPluginDividerDrawable_aviary_typeface
    int[] AviaryPreviewFillDrawable -> AviaryPreviewFillDrawable
    int AviaryPreviewFillDrawable_aviary_radius -> AviaryPreviewFillDrawable_aviary_radius
    int AviaryPreviewFillDrawable_aviary_strokeColor -> AviaryPreviewFillDrawable_aviary_strokeColor
    int AviaryPreviewFillDrawable_aviary_strokeWidth -> AviaryPreviewFillDrawable_aviary_strokeWidth
    int[] AviaryPreviewSpotDrawable -> AviaryPreviewSpotDrawable
    int AviaryPreviewSpotDrawable_aviary_bg_color1 -> AviaryPreviewSpotDrawable_aviary_bg_color1
    int AviaryPreviewSpotDrawable_aviary_bg_color2 -> AviaryPreviewSpotDrawable_aviary_bg_color2
    int AviaryPreviewSpotDrawable_aviary_color1 -> AviaryPreviewSpotDrawable_aviary_color1
    int AviaryPreviewSpotDrawable_aviary_color2 -> AviaryPreviewSpotDrawable_aviary_color2
    int AviaryPreviewSpotDrawable_aviary_color3 -> AviaryPreviewSpotDrawable_aviary_color3
    int AviaryPreviewSpotDrawable_aviary_color4 -> AviaryPreviewSpotDrawable_aviary_color4
    int AviaryPreviewSpotDrawable_aviary_glowSize -> AviaryPreviewSpotDrawable_aviary_glowSize
    int AviaryPreviewSpotDrawable_aviary_highlightColorChecked -> AviaryPreviewSpotDrawable_aviary_highlightColorChecked
    int AviaryPreviewSpotDrawable_aviary_strokeColor -> AviaryPreviewSpotDrawable_aviary_strokeColor
    int AviaryPreviewSpotDrawable_aviary_strokeWidth -> AviaryPreviewSpotDrawable_aviary_strokeWidth
    int[] AviarySeekBar -> AviarySeekBar
    int AviarySeekBar_aviarySeekBarSecondary -> AviarySeekBar_aviarySeekBarSecondary
    int AviarySeekBar_aviarySeekBarSecondaryCenter -> AviarySeekBar_aviarySeekBarSecondaryCenter
    int AviarySeekBar_aviarySeekBarSecondaryInverted -> AviarySeekBar_aviarySeekBarSecondaryInverted
    int AviarySeekBar_aviarySeekBarThumb -> AviarySeekBar_aviarySeekBarThumb
    int AviarySeekBar_aviarySeekBarThumbOffset -> AviarySeekBar_aviarySeekBarThumbOffset
    int[] AviaryTextView -> AviaryTextView
    int AviaryTextView_android_clickable -> AviaryTextView_android_clickable
    int AviaryTextView_android_focusable -> AviaryTextView_android_focusable
    int AviaryTextView_aviary_typeface -> AviaryTextView_aviary_typeface
    int[] AviaryTiltShiftImageView -> AviaryTiltShiftImageView
    int AviaryTiltShiftImageView_aviaryCrosshair_enabled -> AviaryTiltShiftImageView_aviaryCrosshair_enabled
    int AviaryTiltShiftImageView_aviaryWave_animationDuration -> AviaryTiltShiftImageView_aviaryWave_animationDuration
    int AviaryTiltShiftImageView_aviaryWave_innerRadius -> AviaryTiltShiftImageView_aviaryWave_innerRadius
    int AviaryTiltShiftImageView_aviaryWave_outerRadius -> AviaryTiltShiftImageView_aviaryWave_outerRadius
    int AviaryTiltShiftImageView_aviaryWave_pointDrawable -> AviaryTiltShiftImageView_aviaryWave_pointDrawable
    int AviaryTiltShiftImageView_aviary_animationDuration -> AviaryTiltShiftImageView_aviary_animationDuration
    int AviaryTiltShiftImageView_aviary_crosshair_edge -> AviaryTiltShiftImageView_aviary_crosshair_edge
    int AviaryTiltShiftImageView_aviary_crosshair_radius -> AviaryTiltShiftImageView_aviary_crosshair_radius
    int AviaryTiltShiftImageView_aviary_crosshair_strokeWidth -> AviaryTiltShiftImageView_aviary_crosshair_strokeWidth
    int AviaryTiltShiftImageView_aviary_shape_defaultsize -> AviaryTiltShiftImageView_aviary_shape_defaultsize
    int AviaryTiltShiftImageView_aviary_shape_maxsize -> AviaryTiltShiftImageView_aviary_shape_maxsize
    int AviaryTiltShiftImageView_aviary_shape_minsize -> AviaryTiltShiftImageView_aviary_shape_minsize
    int AviaryTiltShiftImageView_aviary_strokeColor -> AviaryTiltShiftImageView_aviary_strokeColor
    int AviaryTiltShiftImageView_aviary_strokeColor2 -> AviaryTiltShiftImageView_aviary_strokeColor2
    int AviaryTiltShiftImageView_aviary_strokeWidth -> AviaryTiltShiftImageView_aviary_strokeWidth
    int AviaryTiltShiftImageView_aviary_timeout -> AviaryTiltShiftImageView_aviary_timeout
    int[] AviaryWheel -> AviaryWheel
    int AviaryWheel_aviaryWheelIndicator -> AviaryWheel_aviaryWheelIndicator
    int AviaryWheel_aviaryWheelLine -> AviaryWheel_aviaryWheelLine
    int AviaryWheel_aviaryWheelShadowTop -> AviaryWheel_aviaryWheelShadowTop
    int AviaryWheel_aviary_edgeStyle -> AviaryWheel_aviary_edgeStyle
    int[] AviaryWorkspace -> AviaryWorkspace
    int AviaryWorkspace_aviary_defaultScreen -> AviaryWorkspace_aviary_defaultScreen
    int AviaryWorkspace_aviary_overscroll -> AviaryWorkspace_aviary_overscroll
    int[] AviaryWorkspaceIndicator -> AviaryWorkspaceIndicator
    int AviaryWorkspaceIndicator_aviary_indicatorId -> AviaryWorkspaceIndicator_aviary_indicatorId
    int[] HListView -> HListView
    int HListView_android_divider -> HListView_android_divider
    int HListView_android_entries -> HListView_android_entries
    int HListView_dividerWidth -> HListView_dividerWidth
    int HListView_footerDividersEnabled -> HListView_footerDividersEnabled
    int HListView_headerDividersEnabled -> HListView_headerDividersEnabled
    int HListView_measureWithChild -> HListView_measureWithChild
    int HListView_overScrollFooter -> HListView_overScrollFooter
    int HListView_overScrollHeader -> HListView_overScrollHeader
    int[] NumberPicker -> NumberPicker
    int NumberPicker_internalLayout -> NumberPicker_internalLayout
    int NumberPicker_internalMaxHeight -> NumberPicker_internalMaxHeight
    int NumberPicker_internalMaxWidth -> NumberPicker_internalMaxWidth
    int NumberPicker_internalMinHeight -> NumberPicker_internalMinHeight
    int NumberPicker_internalMinWidth -> NumberPicker_internalMinWidth
    int NumberPicker_selectionDivider -> NumberPicker_selectionDivider
    int NumberPicker_selectionDividerHeight -> NumberPicker_selectionDividerHeight
    int NumberPicker_selectionDividersDistance -> NumberPicker_selectionDividersDistance
    int NumberPicker_solidColor -> NumberPicker_solidColor
    int NumberPicker_virtualButtonPressedDrawable -> NumberPicker_virtualButtonPressedDrawable
    int[] RayLayout -> RayLayout
    int RayLayout_leftHolderWidth -> RayLayout_leftHolderWidth
    int[] SlidingMenu -> SlidingMenu
    int SlidingMenu_behindOffset -> SlidingMenu_behindOffset
    int SlidingMenu_behindScrollScale -> SlidingMenu_behindScrollScale
    int SlidingMenu_behindWidth -> SlidingMenu_behindWidth
    int SlidingMenu_fadeDegree -> SlidingMenu_fadeDegree
    int SlidingMenu_fadeEnabled -> SlidingMenu_fadeEnabled
    int SlidingMenu_mode -> SlidingMenu_mode
    int SlidingMenu_selectorDrawable -> SlidingMenu_selectorDrawable
    int SlidingMenu_selectorEnabled -> SlidingMenu_selectorEnabled
    int SlidingMenu_shadowDrawable -> SlidingMenu_shadowDrawable
    int SlidingMenu_shadowWidth -> SlidingMenu_shadowWidth
    int SlidingMenu_touchModeAbove -> SlidingMenu_touchModeAbove
    int SlidingMenu_touchModeBehind -> SlidingMenu_touchModeBehind
    int SlidingMenu_viewAbove -> SlidingMenu_viewAbove
    int SlidingMenu_viewBehind -> SlidingMenu_viewBehind
    int[] Theme -> Theme
    int Theme_aviaryAdjustDividerWeight -> Theme_aviaryAdjustDividerWeight
    int Theme_aviaryAdjustImageViewStyle -> Theme_aviaryAdjustImageViewStyle
    int Theme_aviaryAdjustItemWeight -> Theme_aviaryAdjustItemWeight
    int Theme_aviaryAdjustOptionPanelToggleButtonStyle -> Theme_aviaryAdjustOptionPanelToggleButtonStyle
    int Theme_aviaryAdjustOptionPanelToggleCenterButtonStyle -> Theme_aviaryAdjustOptionPanelToggleCenterButtonStyle
    int Theme_aviaryAdjustOptionPanelToggleLeftButtonStyle -> Theme_aviaryAdjustOptionPanelToggleLeftButtonStyle
    int Theme_aviaryAdjustOptionPanelToggleRightButtonStyle -> Theme_aviaryAdjustOptionPanelToggleRightButtonStyle
    int Theme_aviaryBackgroundColor -> Theme_aviaryBackgroundColor
    int Theme_aviaryBottomBarHeight -> Theme_aviaryBottomBarHeight
    int Theme_aviaryBottomBarHorizontalViewStyle -> Theme_aviaryBottomBarHorizontalViewStyle
    int Theme_aviaryBottomBarLogoContainerStyle -> Theme_aviaryBottomBarLogoContainerStyle
    int Theme_aviaryBottomBarLogoImageStyle -> Theme_aviaryBottomBarLogoImageStyle
    int Theme_aviaryBottomBarOptionPanelContainerStyle -> Theme_aviaryBottomBarOptionPanelContainerStyle
    int Theme_aviaryBottomBarOptionPanelContainerStyleNoMargin -> Theme_aviaryBottomBarOptionPanelContainerStyleNoMargin
    int Theme_aviaryBottomBarOptionPanelStyle -> Theme_aviaryBottomBarOptionPanelStyle
    int Theme_aviaryBottomBarToolFeedBackStyle -> Theme_aviaryBottomBarToolFeedBackStyle
    int Theme_aviaryBottomBarToolImageStyle -> Theme_aviaryBottomBarToolImageStyle
    int Theme_aviaryBottomBarToolStyle -> Theme_aviaryBottomBarToolStyle
    int Theme_aviaryBottomBarToolTextStyle -> Theme_aviaryBottomBarToolTextStyle
    int Theme_aviaryBottomBarViewFlipperStyle -> Theme_aviaryBottomBarViewFlipperStyle
    int Theme_aviaryColorSplashOptionPanelToggleButtonStyle -> Theme_aviaryColorSplashOptionPanelToggleButtonStyle
    int Theme_aviaryColorSplashOptionPanelToggleLeftButtonStyle -> Theme_aviaryColorSplashOptionPanelToggleLeftButtonStyle
    int Theme_aviaryColorSplashOptionPanelToggleRightButtonStyle -> Theme_aviaryColorSplashOptionPanelToggleRightButtonStyle
    int Theme_aviaryCropHighlightStyle -> Theme_aviaryCropHighlightStyle
    int Theme_aviaryCropImageViewStyle -> Theme_aviaryCropImageViewStyle
    int Theme_aviaryCustomDialogButtonSecondaryStyle -> Theme_aviaryCustomDialogButtonSecondaryStyle
    int Theme_aviaryCustomDialogButtonStyle -> Theme_aviaryCustomDialogButtonStyle
    int Theme_aviaryDefaultTextStyle -> Theme_aviaryDefaultTextStyle
    int Theme_aviaryEdgeEffectDefaultStyle -> Theme_aviaryEdgeEffectDefaultStyle
    int Theme_aviaryEffectThumbDividerLeftContainerStyle -> Theme_aviaryEffectThumbDividerLeftContainerStyle
    int Theme_aviaryEffectThumbDividerLeftStyle -> Theme_aviaryEffectThumbDividerLeftStyle
    int Theme_aviaryEffectThumbDividerRightContainerStyle -> Theme_aviaryEffectThumbDividerRightContainerStyle
    int Theme_aviaryEffectThumbDividerRightStyle -> Theme_aviaryEffectThumbDividerRightStyle
    int Theme_aviaryEffectThumbDividerStyle -> Theme_aviaryEffectThumbDividerStyle
    int Theme_aviaryEffectThumbDividerTextStyle -> Theme_aviaryEffectThumbDividerTextStyle
    int Theme_aviaryEffectThumbHiddenSelector -> Theme_aviaryEffectThumbHiddenSelector
    int Theme_aviaryEffectThumbLayoutExternalStyle -> Theme_aviaryEffectThumbLayoutExternalStyle
    int Theme_aviaryEffectThumbLayoutStyle -> Theme_aviaryEffectThumbLayoutStyle
    int Theme_aviaryEffectThumbTextStyle -> Theme_aviaryEffectThumbTextStyle
    int Theme_aviaryEffectsHorizontalViewStyle -> Theme_aviaryEffectsHorizontalViewStyle
    int Theme_aviaryEnhanceItemWeight -> Theme_aviaryEnhanceItemWeight
    int Theme_aviaryEnhanceOptionPanelToggleCenterButtonStyle -> Theme_aviaryEnhanceOptionPanelToggleCenterButtonStyle
    int Theme_aviaryEnhanceOptionPanelToggleLeftButtonStyle -> Theme_aviaryEnhanceOptionPanelToggleLeftButtonStyle
    int Theme_aviaryEnhanceOptionPanelToggleRightButtonStyle -> Theme_aviaryEnhanceOptionPanelToggleRightButtonStyle
    int Theme_aviaryFeedbackDialogDividerStyle -> Theme_aviaryFeedbackDialogDividerStyle
    int Theme_aviaryFeedbackDialogStyle -> Theme_aviaryFeedbackDialogStyle
    int Theme_aviaryFeedbackDialogTextMessageStyle -> Theme_aviaryFeedbackDialogTextMessageStyle
    int Theme_aviaryFeedbackDialogTextVersionStyle -> Theme_aviaryFeedbackDialogTextVersionStyle
    int Theme_aviaryFocusOptionPanelToggleLeftButtonStyle -> Theme_aviaryFocusOptionPanelToggleLeftButtonStyle
    int Theme_aviaryFocusOptionPanelToggleRightButtonStyle -> Theme_aviaryFocusOptionPanelToggleRightButtonStyle
    int Theme_aviaryFontLight -> Theme_aviaryFontLight
    int Theme_aviaryFontRegular -> Theme_aviaryFontRegular
    int Theme_aviaryGalleryBottomIndicatorStyle -> Theme_aviaryGalleryBottomIndicatorStyle
    int Theme_aviaryGalleryItemContainerStyle -> Theme_aviaryGalleryItemContainerStyle
    int Theme_aviaryGalleryItemCropImageViewStyle -> Theme_aviaryGalleryItemCropImageViewStyle
    int Theme_aviaryGalleryItemCropTextCustomStyle -> Theme_aviaryGalleryItemCropTextCustomStyle
    int Theme_aviaryGalleryItemCropTextNormalStyle -> Theme_aviaryGalleryItemCropTextNormalStyle
    int Theme_aviaryGalleryItemDividerStyle -> Theme_aviaryGalleryItemDividerStyle
    int Theme_aviaryGalleryItemHighlightImageStyle -> Theme_aviaryGalleryItemHighlightImageStyle
    int Theme_aviaryGalleryStyle -> Theme_aviaryGalleryStyle
    int Theme_aviaryGalleryTopIndicatorStyle -> Theme_aviaryGalleryTopIndicatorStyle
    int Theme_aviaryHiddenEditTextStyle -> Theme_aviaryHiddenEditTextStyle
    int Theme_aviaryHiddenEditTextStyleMultiline -> Theme_aviaryHiddenEditTextStyleMultiline
    int Theme_aviaryHighlightImageButtonStyle -> Theme_aviaryHighlightImageButtonStyle
    int Theme_aviaryIAPBannerTextStyle -> Theme_aviaryIAPBannerTextStyle
    int Theme_aviaryIAPDialogButtonErrorStyle -> Theme_aviaryIAPDialogButtonErrorStyle
    int Theme_aviaryIAPDialogContainerStyle -> Theme_aviaryIAPDialogContainerStyle
    int Theme_aviaryIAPDialogDownloadButtonStyle -> Theme_aviaryIAPDialogDownloadButtonStyle
    int Theme_aviaryIAPDialogDownloadButtonTextStyle -> Theme_aviaryIAPDialogDownloadButtonTextStyle
    int Theme_aviaryIAPDialogGridBackground -> Theme_aviaryIAPDialogGridBackground
    int Theme_aviaryIAPDialogGridTopStyle -> Theme_aviaryIAPDialogGridTopStyle
    int Theme_aviaryIAPDialogHeightWeight -> Theme_aviaryIAPDialogHeightWeight
    int Theme_aviaryIAPDialogIcon -> Theme_aviaryIAPDialogIcon
    int Theme_aviaryIAPDialogListItemTextStyle -> Theme_aviaryIAPDialogListItemTextStyle
    int Theme_aviaryIAPDialogListItemTitleStyle -> Theme_aviaryIAPDialogListItemTitleStyle
    int Theme_aviaryIAPDialogMainLayout -> Theme_aviaryIAPDialogMainLayout
    int Theme_aviaryIAPDialogMarginTopWeight -> Theme_aviaryIAPDialogMarginTopWeight
    int Theme_aviaryIAPDialogRestoreAllButtonStyle -> Theme_aviaryIAPDialogRestoreAllButtonStyle
    int Theme_aviaryIAPDialogRestoreDialogTextStyle -> Theme_aviaryIAPDialogRestoreDialogTextStyle
    int Theme_aviaryIAPDialogShadowBottom -> Theme_aviaryIAPDialogShadowBottom
    int Theme_aviaryIAPDialogShadowTop -> Theme_aviaryIAPDialogShadowTop
    int Theme_aviaryIAPDialogTextErrorStyle -> Theme_aviaryIAPDialogTextErrorStyle
    int Theme_aviaryIAPDialogTextStyle -> Theme_aviaryIAPDialogTextStyle
    int Theme_aviaryIAPDialogTitleStyle -> Theme_aviaryIAPDialogTitleStyle
    int Theme_aviaryIAPDialogWidthWeight -> Theme_aviaryIAPDialogWidthWeight
    int Theme_aviaryIAPDialogWorkspaceCellEffects -> Theme_aviaryIAPDialogWorkspaceCellEffects
    int Theme_aviaryIAPDialogWorkspaceCellStickers -> Theme_aviaryIAPDialogWorkspaceCellStickers
    int Theme_aviaryIAPDialogWorkspaceIndicatorStyle -> Theme_aviaryIAPDialogWorkspaceIndicatorStyle
    int Theme_aviaryIAPDialogWorkspaceStyle -> Theme_aviaryIAPDialogWorkspaceStyle
    int Theme_aviaryImageRestoreViewStyle -> Theme_aviaryImageRestoreViewStyle
    int Theme_aviaryImageViewDrawableOverlaySticker -> Theme_aviaryImageViewDrawableOverlaySticker
    int Theme_aviaryImageViewDrawableOverlayStickerHighlightStyle -> Theme_aviaryImageViewDrawableOverlayStickerHighlightStyle
    int Theme_aviaryImageViewDrawableOverlayText -> Theme_aviaryImageViewDrawableOverlayText
    int Theme_aviaryImageViewDrawableOverlayTextHighlightStyle -> Theme_aviaryImageViewDrawableOverlayTextHighlightStyle
    int Theme_aviaryLensViewStyle -> Theme_aviaryLensViewStyle
    int Theme_aviaryLightGrayButtonStyle -> Theme_aviaryLightGrayButtonStyle
    int Theme_aviaryLoaderToastStyle -> Theme_aviaryLoaderToastStyle
    int Theme_aviaryMainImagePadding -> Theme_aviaryMainImagePadding
    int Theme_aviaryMemeButtonStyle -> Theme_aviaryMemeButtonStyle
    int Theme_aviaryMemeClearButtonStyle -> Theme_aviaryMemeClearButtonStyle
    int Theme_aviaryNavBarHeight -> Theme_aviaryNavBarHeight
    int Theme_aviaryNavBarRestoreButtonStyle -> Theme_aviaryNavBarRestoreButtonStyle
    int Theme_aviaryNavBarStyle -> Theme_aviaryNavBarStyle
    int Theme_aviaryNavButtonApplyStyle -> Theme_aviaryNavButtonApplyStyle
    int Theme_aviaryNavButtonStyle -> Theme_aviaryNavButtonStyle
    int Theme_aviaryNavDividerStyle -> Theme_aviaryNavDividerStyle
    int Theme_aviaryNavTitleStyle -> Theme_aviaryNavTitleStyle
    int Theme_aviaryOptionPanelBottomIndicatorStyle -> Theme_aviaryOptionPanelBottomIndicatorStyle
    int Theme_aviaryOptionPanelBottomLineStyle -> Theme_aviaryOptionPanelBottomLineStyle
    int Theme_aviaryOptionPanelDefaultButtonStyle -> Theme_aviaryOptionPanelDefaultButtonStyle
    int Theme_aviaryOptionPanelToggleButtonStyle -> Theme_aviaryOptionPanelToggleButtonStyle
    int Theme_aviaryOptionPanelToggleCenterButtonStyle -> Theme_aviaryOptionPanelToggleCenterButtonStyle
    int Theme_aviaryOptionPanelToggleLeftButtonStyle -> Theme_aviaryOptionPanelToggleLeftButtonStyle
    int Theme_aviaryOptionPanelToggleRightButtonStyle -> Theme_aviaryOptionPanelToggleRightButtonStyle
    int Theme_aviaryOptionPanelTopIndicatorStyle -> Theme_aviaryOptionPanelTopIndicatorStyle
    int Theme_aviaryPanelDisabledStatusBackground -> Theme_aviaryPanelDisabledStatusBackground
    int Theme_aviaryPreviewFillDrawableStyle -> Theme_aviaryPreviewFillDrawableStyle
    int Theme_aviaryPreviewSpotDrawableStyle -> Theme_aviaryPreviewSpotDrawableStyle
    int Theme_aviaryPreviewSpotViewStyle -> Theme_aviaryPreviewSpotViewStyle
    int Theme_aviaryPrimaryButtonStyle -> Theme_aviaryPrimaryButtonStyle
    int Theme_aviaryProgressBarActionBar -> Theme_aviaryProgressBarActionBar
    int Theme_aviaryProgressBarActionBarHeight -> Theme_aviaryProgressBarActionBarHeight
    int Theme_aviaryProgressBarActionBarWidth -> Theme_aviaryProgressBarActionBarWidth
    int Theme_aviaryProgressBarLarge -> Theme_aviaryProgressBarLarge
    int Theme_aviaryProgressBarLargeInverse -> Theme_aviaryProgressBarLargeInverse
    int Theme_aviaryProgressBarMedium -> Theme_aviaryProgressBarMedium
    int Theme_aviaryProgressBarMediumInverse -> Theme_aviaryProgressBarMediumInverse
    int Theme_aviaryProgressBarSmall -> Theme_aviaryProgressBarSmall
    int Theme_aviaryProgressBarSmallInverse -> Theme_aviaryProgressBarSmallInverse
    int Theme_aviarySecondaryButtonStyle -> Theme_aviarySecondaryButtonStyle
    int Theme_aviarySeekBarStyle -> Theme_aviarySeekBarStyle
    int Theme_aviarySplashDividerWeight -> Theme_aviarySplashDividerWeight
    int Theme_aviarySplashItemWeight -> Theme_aviarySplashItemWeight
    int Theme_aviarySymbolMinusStyle -> Theme_aviarySymbolMinusStyle
    int Theme_aviarySymbolPlusStyle -> Theme_aviarySymbolPlusStyle
    int Theme_aviaryTextAppearance -> Theme_aviaryTextAppearance
    int Theme_aviaryTextAppearanceInverted -> Theme_aviaryTextAppearanceInverted
    int Theme_aviaryTextAppearanceLarge -> Theme_aviaryTextAppearanceLarge
    int Theme_aviaryTextAppearanceLargeInverted -> Theme_aviaryTextAppearanceLargeInverted
    int Theme_aviaryTextAppearanceLargeNoSelection -> Theme_aviaryTextAppearanceLargeNoSelection
    int Theme_aviaryTextAppearanceMedium -> Theme_aviaryTextAppearanceMedium
    int Theme_aviaryTextAppearanceMediumInverted -> Theme_aviaryTextAppearanceMediumInverted
    int Theme_aviaryTextAppearanceMediumNoSelection -> Theme_aviaryTextAppearanceMediumNoSelection
    int Theme_aviaryTextAppearanceSmall -> Theme_aviaryTextAppearanceSmall
    int Theme_aviaryTextAppearanceSmallInverted -> Theme_aviaryTextAppearanceSmallInverted
    int Theme_aviaryTextAppearanceSmallNoSelection -> Theme_aviaryTextAppearanceSmallNoSelection
    int Theme_aviaryTiltShiftViewStyle -> Theme_aviaryTiltShiftViewStyle
    int Theme_aviaryToastExitAnimation -> Theme_aviaryToastExitAnimation
    int Theme_aviaryToggleButtonStyle -> Theme_aviaryToggleButtonStyle
    int Theme_aviaryWheelStyle -> Theme_aviaryWheelStyle
    int[] roundedimageview -> roundedimageview
    int roundedimageview_border_inside_color -> roundedimageview_border_inside_color
    int roundedimageview_border_outside_color -> roundedimageview_border_outside_color
    int roundedimageview_border_thickness -> roundedimageview_border_thickness
com.aidigame.hisun.pet.adapter.ActivityListAdapter -> com.aidigame.hisun.pet.adapter.ActivityListAdapter:
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> imageLoader
    com.nostra13.universalimageloader.core.DisplayImageOptions displayImageOptions -> displayImageOptions
    android.content.Context context -> context
    java.util.ArrayList list -> list
    void updateList(java.util.ArrayList) -> updateList
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.aidigame.hisun.pet.adapter.ActivityListAdapter$1 -> com.aidigame.hisun.pet.adapter.a:
    com.aidigame.hisun.pet.adapter.ActivityListAdapter this$0 -> a
    android.widget.ImageView val$temp -> b
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.aidigame.hisun.pet.adapter.ActivityListAdapter$Holder -> com.aidigame.hisun.pet.adapter.b:
    android.widget.ImageView advertiseImage -> a
    android.widget.ImageView joinImage -> b
    android.widget.TextView activityAame -> c
    android.widget.TextView activityTime -> d
    android.widget.TextView activityAward -> e
    android.widget.TextView activityJoinNum -> f
    com.aidigame.hisun.pet.adapter.ActivityListAdapter this$0 -> g
com.aidigame.hisun.pet.adapter.AnimalsListAdapter -> com.aidigame.hisun.pet.adapter.AnimalsListAdapter:
    com.nostra13.universalimageloader.core.DisplayImageOptions displayImageOptions -> displayImageOptions
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> imageLoader
    android.app.Activity context -> context
    java.util.ArrayList list -> list
    android.os.Handler handler -> handler
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> handleHttpConnectionException
    void updateList(java.util.ArrayList) -> updateList
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void loadIcon(com.aidigame.hisun.pet.view.RoundImageView,com.aidigame.hisun.pet.bean.Animal) -> loadIcon
com.aidigame.hisun.pet.adapter.AnimalsListAdapter$1 -> com.aidigame.hisun.pet.adapter.c:
    com.aidigame.hisun.pet.adapter.AnimalsListAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.adapter.AnimalsListAdapter$2 -> com.aidigame.hisun.pet.adapter.d:
    com.aidigame.hisun.pet.adapter.AnimalsListAdapter this$0 -> a
    com.aidigame.hisun.pet.bean.Animal val$data -> b
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.adapter.AnimalsListAdapter access$0(com.aidigame.hisun.pet.adapter.AnimalsListAdapter$2) -> a
com.aidigame.hisun.pet.adapter.AnimalsListAdapter$2$1 -> com.aidigame.hisun.pet.adapter.AnimalsListAdapter$2$1:
    com.aidigame.hisun.pet.adapter.AnimalsListAdapter$2 this$1 -> this$1
    android.view.View val$v -> val$v
    com.aidigame.hisun.pet.bean.Animal val$data -> val$data
    void run() -> run
    com.aidigame.hisun.pet.adapter.AnimalsListAdapter$2 access$0(com.aidigame.hisun.pet.adapter.AnimalsListAdapter$2$1) -> access$0
com.aidigame.hisun.pet.adapter.AnimalsListAdapter$2$1$1 -> com.aidigame.hisun.pet.adapter.AnimalsListAdapter$2$1$1:
    com.aidigame.hisun.pet.adapter.AnimalsListAdapter$2$1 this$2 -> this$2
    android.widget.TextView val$tv -> val$tv
    com.aidigame.hisun.pet.bean.Animal val$data -> val$data
    void run() -> run
com.aidigame.hisun.pet.adapter.AnimalsListAdapter$2$1$2 -> com.aidigame.hisun.pet.adapter.AnimalsListAdapter$2$1$2:
    com.aidigame.hisun.pet.adapter.AnimalsListAdapter$2$1 this$2 -> this$2
    android.widget.TextView val$tv -> val$tv
    com.aidigame.hisun.pet.bean.Animal val$data -> val$data
    void run() -> run
com.aidigame.hisun.pet.adapter.AnimalsListAdapter$Holder -> com.aidigame.hisun.pet.adapter.e:
    com.aidigame.hisun.pet.view.RoundImageView icon -> a
    android.widget.ImageView gender -> b
    android.widget.ImageView giftType -> c
    android.widget.TextView name -> d
    android.widget.TextView provinceTV -> e
    android.widget.TextView cityTV -> f
    android.widget.TextView sendEmail -> g
    com.aidigame.hisun.pet.adapter.AnimalsListAdapter this$0 -> h
com.aidigame.hisun.pet.adapter.AtUserListAdapter -> com.aidigame.hisun.pet.adapter.AtUserListAdapter:
    com.nostra13.universalimageloader.core.DisplayImageOptions displayImageOptions -> displayImageOptions
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> imageLoader
    android.content.Context context -> context
    java.util.ArrayList list -> list
    void updateList(java.util.ArrayList) -> updateList
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.aidigame.hisun.pet.adapter.AtUserListAdapter$1 -> com.aidigame.hisun.pet.adapter.f:
    com.aidigame.hisun.pet.adapter.AtUserListAdapter this$0 -> a
    android.widget.ImageView val$temp -> b
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.adapter.AtUserListAdapter$Holder -> com.aidigame.hisun.pet.adapter.g:
    com.aidigame.hisun.pet.view.RoundImageView icon -> a
    android.widget.TextView nameTV -> b
    android.widget.ImageView flagIV -> c
    com.aidigame.hisun.pet.adapter.AtUserListAdapter this$0 -> d
com.aidigame.hisun.pet.adapter.ChoseKingListViewAdapter -> com.aidigame.hisun.pet.adapter.ChoseKingListViewAdapter:
    com.nostra13.universalimageloader.core.DisplayImageOptions displayImageOptions -> displayImageOptions
    java.util.ArrayList list -> list
    com.aidigame.hisun.pet.ui.ChoseKingActivity context -> context
    android.widget.LinearLayout currentShowInfoLayout -> currentShowInfoLayout
    android.view.View hidenLineView -> hidenLineView
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> handleHttpConnectionException
    int mode -> mode
    int from -> from
    boolean isRecord -> isRecord
    int imageWidth -> imageWidth
    void updateList(java.util.ArrayList) -> updateList
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.aidigame.hisun.pet.adapter.ChoseKingListViewAdapter$1 -> com.aidigame.hisun.pet.adapter.h:
    com.aidigame.hisun.pet.adapter.ChoseKingListViewAdapter this$0 -> a
    com.aidigame.hisun.pet.bean.Animal val$data -> b
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.adapter.ChoseKingListViewAdapter access$0(com.aidigame.hisun.pet.adapter.ChoseKingListViewAdapter$1) -> a
com.aidigame.hisun.pet.adapter.ChoseKingListViewAdapter$1$1 -> com.aidigame.hisun.pet.adapter.i:
    com.aidigame.hisun.pet.adapter.ChoseKingListViewAdapter$1 this$1 -> a
    void getResult(boolean) -> a
com.aidigame.hisun.pet.adapter.ChoseKingListViewAdapter$2 -> com.aidigame.hisun.pet.adapter.j:
    com.aidigame.hisun.pet.adapter.ChoseKingListViewAdapter this$0 -> a
    android.widget.LinearLayout val$temp -> b
    android.view.View val$lineView -> c
    com.aidigame.hisun.pet.bean.Animal val$data -> d
    android.widget.LinearLayout val$imagsLayout -> e
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.adapter.ChoseKingListViewAdapter access$0(com.aidigame.hisun.pet.adapter.ChoseKingListViewAdapter$2) -> a
com.aidigame.hisun.pet.adapter.ChoseKingListViewAdapter$2$1 -> com.aidigame.hisun.pet.adapter.ChoseKingListViewAdapter$2$1:
    com.aidigame.hisun.pet.adapter.ChoseKingListViewAdapter$2 this$1 -> this$1
    android.view.View val$v -> val$v
    com.aidigame.hisun.pet.bean.Animal val$data -> val$data
    android.widget.LinearLayout val$imagsLayout -> val$imagsLayout
    void run() -> run
    com.aidigame.hisun.pet.adapter.ChoseKingListViewAdapter$2 access$0(com.aidigame.hisun.pet.adapter.ChoseKingListViewAdapter$2$1) -> access$0
com.aidigame.hisun.pet.adapter.ChoseKingListViewAdapter$2$1$1 -> com.aidigame.hisun.pet.adapter.ChoseKingListViewAdapter$2$1$1:
    com.aidigame.hisun.pet.adapter.ChoseKingListViewAdapter$2$1 this$2 -> this$2
    com.aidigame.hisun.pet.bean.KingdomCard val$card -> val$card
    com.aidigame.hisun.pet.adapter.ChoseKingListViewAdapter$Holder val$holder -> val$holder
    android.widget.LinearLayout val$imagsLayout -> val$imagsLayout
    void run() -> run
com.aidigame.hisun.pet.adapter.ChoseKingListViewAdapter$Holder -> com.aidigame.hisun.pet.adapter.k:
    com.aidigame.hisun.pet.view.RoundImageView petIcon -> a
    com.aidigame.hisun.pet.view.RoundImageView userIcon -> b
    android.widget.ImageView petSex -> c
    android.widget.ImageView userSex -> d
    android.widget.ImageView image1 -> e
    android.widget.ImageView image2 -> f
    android.widget.ImageView image3 -> g
    android.widget.ImageView image4 -> h
    android.widget.TextView petName -> i
    android.widget.TextView userName -> j
    android.widget.TextView petRace -> k
    android.widget.TextView petAge -> l
    android.widget.TextView provinceTV -> m
    android.widget.TextView fansTV -> n
    android.widget.TextView t_rq_tv -> o
    android.widget.TextView join -> p
    android.view.View line -> q
    android.widget.LinearLayout infoLayout -> r
    android.widget.LinearLayout briefInfoLayout -> s
    android.widget.LinearLayout imagesLayout -> t
    com.aidigame.hisun.pet.adapter.ChoseKingListViewAdapter this$0 -> u
com.aidigame.hisun.pet.adapter.ChoseKingListViewAdapter$MyImageLoaderListener -> com.aidigame.hisun.pet.adapter.l:
    android.widget.LinearLayout parent -> a
    com.aidigame.hisun.pet.adapter.ChoseKingListViewAdapter this$0 -> b
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.aidigame.hisun.pet.adapter.ChosePetListAdapter -> com.aidigame.hisun.pet.adapter.ChosePetListAdapter:
    com.nostra13.universalimageloader.core.DisplayImageOptions displayImageOptions -> displayImageOptions
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> imageLoader
    android.app.Activity context -> context
    java.util.ArrayList list -> list
    android.os.Handler handler -> handler
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> handleHttpConnectionException
    void updateList(java.util.ArrayList) -> updateList
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void loadIcon(com.aidigame.hisun.pet.view.RoundImageView,com.aidigame.hisun.pet.bean.Animal) -> loadIcon
com.aidigame.hisun.pet.adapter.ChosePetListAdapter$1 -> com.aidigame.hisun.pet.adapter.m:
    com.aidigame.hisun.pet.adapter.ChosePetListAdapter this$0 -> a
    com.aidigame.hisun.pet.bean.Animal val$data -> b
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.adapter.ChosePetListAdapter access$0(com.aidigame.hisun.pet.adapter.ChosePetListAdapter$1) -> a
com.aidigame.hisun.pet.adapter.ChosePetListAdapter$1$1 -> com.aidigame.hisun.pet.adapter.ChosePetListAdapter$1$1:
    com.aidigame.hisun.pet.adapter.ChosePetListAdapter$1 this$1 -> this$1
    com.aidigame.hisun.pet.bean.Animal val$data -> val$data
    void run() -> run
com.aidigame.hisun.pet.adapter.ChosePetListAdapter$2 -> com.aidigame.hisun.pet.adapter.n:
    com.aidigame.hisun.pet.adapter.ChosePetListAdapter this$0 -> a
    com.aidigame.hisun.pet.bean.Animal val$data -> b
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.adapter.ChosePetListAdapter access$0(com.aidigame.hisun.pet.adapter.ChosePetListAdapter$2) -> a
com.aidigame.hisun.pet.adapter.ChosePetListAdapter$2$1 -> com.aidigame.hisun.pet.adapter.ChosePetListAdapter$2$1:
    com.aidigame.hisun.pet.adapter.ChosePetListAdapter$2 this$1 -> this$1
    com.aidigame.hisun.pet.bean.Animal val$data -> val$data
    void run() -> run
    com.aidigame.hisun.pet.adapter.ChosePetListAdapter$2 access$0(com.aidigame.hisun.pet.adapter.ChosePetListAdapter$2$1) -> access$0
com.aidigame.hisun.pet.adapter.ChosePetListAdapter$2$1$1 -> com.aidigame.hisun.pet.adapter.ChosePetListAdapter$2$1$1:
    com.aidigame.hisun.pet.adapter.ChosePetListAdapter$2$1 this$2 -> this$2
    void run() -> run
com.aidigame.hisun.pet.adapter.ChosePetListAdapter$Holder -> com.aidigame.hisun.pet.adapter.o:
    com.aidigame.hisun.pet.view.RoundImageView icon -> a
    android.widget.ImageView gender -> b
    android.widget.ImageView hatIv -> c
    android.widget.TextView name -> d
    android.widget.TextView raceTv -> e
    android.widget.TextView ageTv -> f
    android.widget.TextView setTv -> g
    com.aidigame.hisun.pet.adapter.ChosePetListAdapter this$0 -> h
com.aidigame.hisun.pet.adapter.ClassListViewAdapter -> com.aidigame.hisun.pet.adapter.ClassListViewAdapter:
    android.content.Context context -> context
    java.util.ArrayList list -> list
    void update(java.util.ArrayList) -> update
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.aidigame.hisun.pet.adapter.ClassListViewAdapter$Holder -> com.aidigame.hisun.pet.adapter.p:
    android.widget.TextView tv -> a
    com.aidigame.hisun.pet.adapter.ClassListViewAdapter this$0 -> b
com.aidigame.hisun.pet.adapter.CommentListViewAdapter -> com.aidigame.hisun.pet.adapter.CommentListViewAdapter:
    android.content.Context context -> context
    java.util.ArrayList listComment -> listComment
    com.aidigame.hisun.pet.adapter.CommentListViewAdapter$ClickUserName clickUserName -> clickUserName
    void update(java.util.ArrayList) -> update
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.String judgeTime(long) -> judgeTime
    void setClickUserName(com.aidigame.hisun.pet.adapter.CommentListViewAdapter$ClickUserName) -> setClickUserName
com.aidigame.hisun.pet.adapter.CommentListViewAdapter$1 -> com.aidigame.hisun.pet.adapter.q:
    com.aidigame.hisun.pet.adapter.CommentListViewAdapter this$0 -> a
    com.aidigame.hisun.pet.bean.PetPicture$Comments val$comments -> b
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.aidigame.hisun.pet.adapter.CommentListViewAdapter$ClickUserName -> com.aidigame.hisun.pet.adapter.r:
    void clickUserName(com.aidigame.hisun.pet.bean.PetPicture$Comments) -> a
com.aidigame.hisun.pet.adapter.CommentListViewAdapter$Holder -> com.aidigame.hisun.pet.adapter.s:
    android.widget.TextView nameTextView -> a
    android.widget.TextView body -> b
    android.widget.TextView time -> c
    android.widget.RelativeLayout layout -> d
    com.aidigame.hisun.pet.adapter.CommentListViewAdapter this$0 -> e
com.aidigame.hisun.pet.adapter.ContributeRankListAdapter -> com.aidigame.hisun.pet.adapter.ContributeRankListAdapter:
    com.nostra13.universalimageloader.core.DisplayImageOptions displayImageOptions -> displayImageOptions
    com.aidigame.hisun.pet.ui.ContributeRankListActivity context -> context
    java.util.ArrayList list -> list
    int mode -> mode
    android.os.Handler handler -> handler
    int h -> h
    int w -> w
    int layoutH -> layoutH
    int arrowH -> arrowH
    boolean flag -> flag
    boolean arrowCanShow -> arrowCanShow
    android.widget.ImageView currentArrowImageView -> currentArrowImageView
    int index -> index
    void updateData(java.util.ArrayList) -> updateData
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.aidigame.hisun.pet.adapter.ContributeRankListAdapter$1 -> com.aidigame.hisun.pet.adapter.t:
    com.aidigame.hisun.pet.adapter.ContributeRankListAdapter this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.aidigame.hisun.pet.adapter.ContributeRankListAdapter$Holder -> com.aidigame.hisun.pet.adapter.u:
    android.widget.LinearLayout layout -> a
    com.aidigame.hisun.pet.view.RoundImageView icon -> b
    android.widget.TextView nameTV -> c
    android.widget.TextView contributeNumTV -> d
    android.widget.TextView rankNoTV -> e
    android.widget.ImageView rankNoIV -> f
    android.widget.ImageView trendIV -> g
    android.widget.ImageView arrowIV -> h
    com.aidigame.hisun.pet.adapter.ContributeRankListAdapter this$0 -> i
com.aidigame.hisun.pet.adapter.FAQListAdapter1 -> com.aidigame.hisun.pet.adapter.FAQListAdapter1:
    java.lang.String[] strArray -> strArray
    android.content.Context context -> context
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.aidigame.hisun.pet.adapter.FAQListAdapter1$Holder -> com.aidigame.hisun.pet.adapter.v:
    android.widget.TextView tView -> a
    com.aidigame.hisun.pet.adapter.FAQListAdapter1 this$0 -> b
com.aidigame.hisun.pet.adapter.FAQListAdapter2 -> com.aidigame.hisun.pet.adapter.FAQListAdapter2:
    java.lang.String[] strArray1 -> strArray1
    java.lang.String[] strArray2 -> strArray2
    android.content.Context context -> context
    void update(java.lang.String[],java.lang.String[]) -> update
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.aidigame.hisun.pet.adapter.FAQListAdapter2$Holder -> com.aidigame.hisun.pet.adapter.w:
    android.widget.TextView tView1 -> a
    android.widget.TextView tView2 -> b
    com.aidigame.hisun.pet.adapter.FAQListAdapter2 this$0 -> c
com.aidigame.hisun.pet.adapter.HomeViewPagerAdapter -> com.aidigame.hisun.pet.adapter.x:
    java.util.ArrayList list -> a
    int getCount() -> getCount
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    int getItemPosition(java.lang.Object) -> getItemPosition
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
com.aidigame.hisun.pet.adapter.KingdomPeoplesAdapter -> com.aidigame.hisun.pet.adapter.KingdomPeoplesAdapter:
    com.nostra13.universalimageloader.core.DisplayImageOptions displayImageOptions -> displayImageOptions
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> imageLoader
    android.app.Activity context -> context
    java.util.ArrayList list -> list
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> handleHttpConnectionException
    void updateList(java.util.ArrayList) -> updateList
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void loadIcon(com.aidigame.hisun.pet.view.RoundImageView,com.aidigame.hisun.pet.bean.User) -> loadIcon
com.aidigame.hisun.pet.adapter.KingdomPeoplesAdapter$1 -> com.aidigame.hisun.pet.adapter.y:
    com.aidigame.hisun.pet.adapter.KingdomPeoplesAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.adapter.KingdomPeoplesAdapter$2 -> com.aidigame.hisun.pet.adapter.z:
    com.aidigame.hisun.pet.adapter.KingdomPeoplesAdapter this$0 -> a
    com.aidigame.hisun.pet.bean.User val$data -> b
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.adapter.KingdomPeoplesAdapter$Holder -> com.aidigame.hisun.pet.adapter.aa:
    com.aidigame.hisun.pet.view.RoundImageView roundImageView -> a
    android.widget.ImageView gender -> b
    android.widget.TextView name -> c
    android.widget.TextView job -> d
    android.widget.TextView province -> e
    android.widget.TextView city -> f
    android.widget.TextView contribute -> g
    android.widget.LinearLayout layout -> h
    com.aidigame.hisun.pet.adapter.KingdomPeoplesAdapter this$0 -> i
com.aidigame.hisun.pet.adapter.KingdomTrendsListAdapter -> com.aidigame.hisun.pet.adapter.KingdomTrendsListAdapter:
    java.util.ArrayList list -> list
    com.nostra13.universalimageloader.core.DisplayImageOptions displayImageOptions -> displayImageOptions
    android.content.Context context -> context
    com.aidigame.hisun.pet.bean.Animal animal -> animal
    java.util.ArrayList giftList -> giftList
    java.lang.String lastJob -> lastJob
    void update(java.util.ArrayList) -> update
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.aidigame.hisun.pet.adapter.KingdomTrendsListAdapter$Holder -> com.aidigame.hisun.pet.adapter.ab:
    android.widget.LinearLayout fansLayout -> a
    android.widget.LinearLayout kingdomLayout -> b
    android.widget.LinearLayout imageLayout -> c
    android.widget.LinearLayout makeTroubleLayout -> d
    android.widget.LinearLayout sendGiftLayout -> e
    android.widget.LinearLayout biteLayout -> f
    android.widget.LinearLayout playWithLayout -> g
    android.widget.TextView fansDesTv -> h
    android.widget.TextView kingdomDesTv -> i
    android.widget.TextView imagesDesTv -> j
    android.widget.TextView fansTimeTv -> k
    android.widget.TextView kingdomTimeTv -> l
    android.widget.TextView imagesTimeTv -> m
    android.widget.TextView makeTroubleDesTv -> n
    android.widget.TextView makeTroubleTimeTv -> o
    android.widget.TextView sendGiftDesTv -> p
    android.widget.TextView sendGiftTimeTv -> q
    android.widget.TextView biteDesTv -> r
    android.widget.TextView biteTimeTv -> s
    android.widget.TextView playWithDesTv -> t
    android.widget.TextView playWithTimeTv -> u
    android.widget.ImageView imageIv -> v
    android.widget.ImageView playWithIV -> w
    android.widget.ImageView sendGiftIv -> x
    android.widget.ImageView biteIv -> y
    com.aidigame.hisun.pet.adapter.KingdomTrendsListAdapter this$0 -> z
com.aidigame.hisun.pet.adapter.MailListViewAdapter -> com.aidigame.hisun.pet.adapter.MailListViewAdapter:
    com.nostra13.universalimageloader.core.DisplayImageOptions displayImageOptions -> displayImageOptions
    android.content.Context context -> context
    com.aidigame.hisun.pet.bean.TalkMessage datas -> datas
    void update(com.aidigame.hisun.pet.bean.TalkMessage) -> update
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.aidigame.hisun.pet.adapter.MailListViewAdapter$1 -> com.aidigame.hisun.pet.adapter.ac:
    com.aidigame.hisun.pet.adapter.MailListViewAdapter this$0 -> a
    com.aidigame.hisun.pet.bean.TalkMessage$Msg val$data -> b
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.adapter.MailListViewAdapter$Holder -> com.aidigame.hisun.pet.adapter.ad:
    android.widget.Button body_left -> a
    android.widget.Button body_right -> b
    android.widget.TextView timeTv -> c
    com.aidigame.hisun.pet.view.RoundImageView icon_left -> d
    com.aidigame.hisun.pet.view.RoundImageView icon_right -> e
    android.widget.ImageView arrowView1 -> f
    android.widget.ImageView arrowView2 -> g
    android.widget.LinearLayout layout1 -> h
    android.widget.LinearLayout layout2 -> i
    com.aidigame.hisun.pet.adapter.MailListViewAdapter this$0 -> j
com.aidigame.hisun.pet.adapter.MarketGridViewAdapter -> com.aidigame.hisun.pet.adapter.MarketGridViewAdapter:
    android.content.Context context -> context
    java.util.List list -> list
    void updateList(java.util.List) -> updateList
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.aidigame.hisun.pet.adapter.MarketGridViewAdapter$Holder -> com.aidigame.hisun.pet.adapter.ae:
    android.widget.TextView name -> a
    android.widget.TextView addlike -> b
    android.widget.TextView status -> c
    android.widget.TextView price -> d
    android.widget.ImageView imageView -> e
    android.widget.RelativeLayout boxLayout -> f
    com.aidigame.hisun.pet.adapter.MarketGridViewAdapter this$0 -> g
com.aidigame.hisun.pet.adapter.MarketRealGridViewAdapter -> com.aidigame.hisun.pet.adapter.MarketRealGridViewAdapter:
    android.content.Context context -> context
    java.util.List list -> list
    void updateList(java.util.List) -> updateList
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.aidigame.hisun.pet.adapter.MarketRealGridViewAdapter$Holder -> com.aidigame.hisun.pet.adapter.af:
    android.widget.TextView name -> a
    android.widget.TextView addlike -> b
    android.widget.TextView status -> c
    android.widget.TextView price -> d
    android.widget.ImageView imageView -> e
    com.aidigame.hisun.pet.adapter.MarketRealGridViewAdapter this$0 -> f
com.aidigame.hisun.pet.adapter.MessageListAdapter -> com.aidigame.hisun.pet.adapter.MessageListAdapter:
    com.nostra13.universalimageloader.core.DisplayImageOptions displayImageOptions -> displayImageOptions
    android.app.Activity context -> context
    java.util.ArrayList datas -> datas
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> handleHttpConnectionException
    float x -> x
    float ux -> ux
    android.widget.LinearLayout rightLayout -> rightLayout
    android.widget.RelativeLayout leftLayout -> leftLayout
    boolean isDeleting -> isDeleting
    int touchSlop -> touchSlop
    void update(java.util.ArrayList) -> update
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.String judgeTime(long) -> judgeTime
com.aidigame.hisun.pet.adapter.MessageListAdapter$1 -> com.aidigame.hisun.pet.adapter.ag:
    android.widget.Toast toast -> a
    com.aidigame.hisun.pet.adapter.MessageListAdapter this$0 -> b
    int val$position -> c
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.adapter.MessageListAdapter access$0(com.aidigame.hisun.pet.adapter.MessageListAdapter$1) -> a
com.aidigame.hisun.pet.adapter.MessageListAdapter$1$1 -> com.aidigame.hisun.pet.adapter.MessageListAdapter$1$1:
    com.aidigame.hisun.pet.adapter.MessageListAdapter$1 this$1 -> this$1
    int val$position -> val$position
    void run() -> run
    com.aidigame.hisun.pet.adapter.MessageListAdapter$1 access$0(com.aidigame.hisun.pet.adapter.MessageListAdapter$1$1) -> access$0
com.aidigame.hisun.pet.adapter.MessageListAdapter$1$1$1 -> com.aidigame.hisun.pet.adapter.MessageListAdapter$1$1$1:
    com.aidigame.hisun.pet.adapter.MessageListAdapter$1$1 this$2 -> this$2
    com.aidigame.hisun.pet.bean.TalkMessage val$dataSystem -> val$dataSystem
    void run() -> run
com.aidigame.hisun.pet.adapter.MessageListAdapter$2 -> com.aidigame.hisun.pet.adapter.ah:
    float startX -> a
    float distance -> b
    boolean isRecord -> c
    com.aidigame.hisun.pet.adapter.MessageListAdapter this$0 -> d
    int val$position -> e
    android.widget.TextView val$tv -> f
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.aidigame.hisun.pet.adapter.MessageListAdapter$Holder -> com.aidigame.hisun.pet.adapter.ai:
    com.aidigame.hisun.pet.view.RoundImageView icon -> a
    android.widget.TextView nameTv -> b
    android.widget.TextView timeTv -> c
    android.widget.TextView textTv -> d
    android.widget.TextView deleteTv -> e
    android.widget.TextView mailType -> f
    android.widget.TextView numTV -> g
    android.widget.RelativeLayout leftLayout -> h
    android.widget.LinearLayout rightLayout -> i
    com.aidigame.hisun.pet.adapter.MessageListAdapter this$0 -> j
com.aidigame.hisun.pet.adapter.PopularRankListAdapter -> com.aidigame.hisun.pet.adapter.PopularRankListAdapter:
    com.nostra13.universalimageloader.core.DisplayImageOptions displayImageOptions -> displayImageOptions
    com.aidigame.hisun.pet.ui.PopularRankListActivity context -> context
    java.util.ArrayList list -> list
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> handleHttpConnectionException
    int mode -> mode
    android.os.Handler handler -> handler
    int h -> h
    int w -> w
    int layoutH -> layoutH
    int arrowH -> arrowH
    boolean flag -> flag
    boolean arrowCanShow -> arrowCanShow
    android.widget.ImageView currentArrowImageView -> currentArrowImageView
    int index -> index
    com.aidigame.hisun.pet.view.RoundImageView firCircleView -> firCircleView
    android.widget.LinearLayout firstLinearLayout -> firstLinearLayout
    void updateData(java.util.ArrayList) -> updateData
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.aidigame.hisun.pet.adapter.PopularRankListAdapter$1 -> com.aidigame.hisun.pet.adapter.aj:
    com.aidigame.hisun.pet.adapter.PopularRankListAdapter this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.aidigame.hisun.pet.adapter.PopularRankListAdapter$2 -> com.aidigame.hisun.pet.adapter.ak:
    com.aidigame.hisun.pet.adapter.PopularRankListAdapter this$0 -> a
    com.aidigame.hisun.pet.bean.Animal val$people -> b
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.adapter.PopularRankListAdapter$3 -> com.aidigame.hisun.pet.adapter.al:
    com.aidigame.hisun.pet.adapter.PopularRankListAdapter this$0 -> a
    com.aidigame.hisun.pet.bean.Animal val$people -> b
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.adapter.PopularRankListAdapter access$0(com.aidigame.hisun.pet.adapter.PopularRankListAdapter$3) -> a
com.aidigame.hisun.pet.adapter.PopularRankListAdapter$3$1 -> com.aidigame.hisun.pet.adapter.PopularRankListAdapter$3$1:
    com.aidigame.hisun.pet.adapter.PopularRankListAdapter$3 this$1 -> this$1
    com.aidigame.hisun.pet.bean.Animal val$people -> val$people
    void run() -> run
    com.aidigame.hisun.pet.adapter.PopularRankListAdapter$3 access$0(com.aidigame.hisun.pet.adapter.PopularRankListAdapter$3$1) -> access$0
com.aidigame.hisun.pet.adapter.PopularRankListAdapter$3$1$1 -> com.aidigame.hisun.pet.adapter.PopularRankListAdapter$3$1$1:
    com.aidigame.hisun.pet.adapter.PopularRankListAdapter$3$1 this$2 -> this$2
    com.aidigame.hisun.pet.bean.Animal val$user -> val$user
    void run() -> run
com.aidigame.hisun.pet.adapter.PopularRankListAdapter$Holder -> com.aidigame.hisun.pet.adapter.am:
    android.widget.LinearLayout layout -> a
    com.aidigame.hisun.pet.view.RoundImageView icon -> b
    android.widget.TextView nameTV -> c
    android.widget.TextView contributeNumTV -> d
    android.widget.TextView rankNoTV -> e
    android.widget.ImageView rankNoIV -> f
    android.widget.ImageView trendIV -> g
    android.widget.ImageView arrowIV -> h
    com.aidigame.hisun.pet.adapter.PopularRankListAdapter this$0 -> i
com.aidigame.hisun.pet.adapter.PopularWindowAdapter -> com.aidigame.hisun.pet.adapter.PopularWindowAdapter:
    android.content.Context context -> context
    java.lang.String[] list -> list
    void update(java.lang.String[]) -> update
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.aidigame.hisun.pet.adapter.PopularWindowAdapter$Holder -> com.aidigame.hisun.pet.adapter.an:
    android.widget.TextView tv -> a
    android.view.View line -> b
    com.aidigame.hisun.pet.adapter.PopularWindowAdapter this$0 -> c
com.aidigame.hisun.pet.adapter.SearchPetListAdapter -> com.aidigame.hisun.pet.adapter.SearchPetListAdapter:
    com.nostra13.universalimageloader.core.DisplayImageOptions displayImageOptions -> displayImageOptions
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> imageLoader
    android.content.Context context -> context
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> handleHttpConnectionException
    java.util.ArrayList list -> list
    void updateList(java.util.ArrayList) -> updateList
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.aidigame.hisun.pet.adapter.SearchPetListAdapter$Holder -> com.aidigame.hisun.pet.adapter.ao:
    com.aidigame.hisun.pet.view.RoundImageView icon -> a
    android.widget.TextView nameTV -> b
    com.aidigame.hisun.pet.adapter.SearchPetListAdapter this$0 -> c
com.aidigame.hisun.pet.adapter.ShowTopicHorizontalAdapter -> com.aidigame.hisun.pet.adapter.ShowTopicHorizontalAdapter:
    android.app.Activity context -> context
    com.nostra13.universalimageloader.core.DisplayImageOptions displayImageOptions -> displayImageOptions
    java.util.ArrayList urls -> urls
    boolean isAnimal -> isAnimal
    com.aidigame.hisun.pet.bean.PetPicture petPicture -> petPicture
    boolean[] type -> type
    void updateAdapter(java.util.ArrayList) -> updateAdapter
    void setPetPicture(com.aidigame.hisun.pet.bean.PetPicture) -> setPetPicture
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.aidigame.hisun.pet.adapter.ShowTopicHorizontalAdapter$Holder -> com.aidigame.hisun.pet.adapter.ap:
    com.aidigame.hisun.pet.view.RoundImageView circleView -> a
    android.widget.ImageView typeIV -> b
    com.aidigame.hisun.pet.adapter.ShowTopicHorizontalAdapter this$0 -> c
com.aidigame.hisun.pet.adapter.ShowTopicsAdapter -> com.aidigame.hisun.pet.adapter.ShowTopicsAdapter:
    com.nostra13.universalimageloader.core.DisplayImageOptions displayImageOptions -> displayImageOptions
    com.nostra13.universalimageloader.core.DisplayImageOptions displayImageOptions2 -> displayImageOptions2
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> imageLoader
    android.app.Activity context -> context
    java.util.ArrayList petPictures -> petPictures
    int mode -> mode
    android.os.Handler handler -> handler
    void updateTopics(java.util.ArrayList) -> updateTopics
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void loadTopicImage(com.aidigame.hisun.pet.view.TopicView,com.aidigame.hisun.pet.bean.PetPicture) -> loadTopicImage
    void loadIcon(com.aidigame.hisun.pet.view.RoundImageView,com.aidigame.hisun.pet.bean.PetPicture) -> loadIcon
    java.lang.String judgeTime(long) -> judgeTime
    int[] getTimeArray(long) -> getTimeArray
com.aidigame.hisun.pet.adapter.ShowTopicsAdapter$1 -> com.aidigame.hisun.pet.adapter.aq:
    com.aidigame.hisun.pet.adapter.ShowTopicsAdapter this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.aidigame.hisun.pet.adapter.ShowTopicsAdapter$2 -> com.aidigame.hisun.pet.adapter.ar:
    com.aidigame.hisun.pet.adapter.ShowTopicsAdapter this$0 -> a
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.aidigame.hisun.pet.adapter.ShowTopicsAdapter$3 -> com.aidigame.hisun.pet.adapter.as:
    com.aidigame.hisun.pet.adapter.ShowTopicsAdapter this$0 -> a
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.aidigame.hisun.pet.adapter.ShowTopicsAdapter$Holder -> com.aidigame.hisun.pet.adapter.at:
    com.aidigame.hisun.pet.view.RoundImageView icon -> a
    com.aidigame.hisun.pet.view.TopicView image -> b
    android.widget.ImageView heart -> c
    android.widget.TextView tv1 -> d
    android.widget.TextView tv2 -> e
    android.widget.TextView tv3 -> f
    android.widget.TextView tv4 -> g
    android.widget.TextView tv5 -> h
    android.widget.RelativeLayout rLayout -> i
    android.widget.LinearLayout lLayout -> j
    com.aidigame.hisun.pet.adapter.ShowTopicsAdapter this$0 -> k
com.aidigame.hisun.pet.adapter.ShowTopicsAdapter$ItemClickListener -> com.aidigame.hisun.pet.adapter.au:
    com.aidigame.hisun.pet.adapter.ShowTopicsAdapter$Holder holder -> a
    int position -> b
    int type -> c
    com.aidigame.hisun.pet.adapter.ShowTopicsAdapter this$0 -> d
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.adapter.ShowTopicsAdapter access$0(com.aidigame.hisun.pet.adapter.ShowTopicsAdapter$ItemClickListener) -> a
com.aidigame.hisun.pet.adapter.ShowTopicsAdapter$ItemClickListener$1 -> com.aidigame.hisun.pet.adapter.ShowTopicsAdapter$ItemClickListener$1:
    com.aidigame.hisun.pet.adapter.ShowTopicsAdapter$ItemClickListener this$1 -> this$1
    android.widget.TextView val$tv -> val$tv
    com.aidigame.hisun.pet.bean.PetPicture val$data -> val$data
    android.widget.ImageView val$iv -> val$iv
    void run() -> run
    com.aidigame.hisun.pet.adapter.ShowTopicsAdapter$ItemClickListener access$0(com.aidigame.hisun.pet.adapter.ShowTopicsAdapter$ItemClickListener$1) -> access$0
com.aidigame.hisun.pet.adapter.ShowTopicsAdapter$ItemClickListener$1$1 -> com.aidigame.hisun.pet.adapter.ShowTopicsAdapter$ItemClickListener$1$1:
    com.aidigame.hisun.pet.adapter.ShowTopicsAdapter$ItemClickListener$1 this$2 -> this$2
    android.widget.TextView val$tv -> val$tv
    com.aidigame.hisun.pet.bean.PetPicture val$data -> val$data
    android.widget.ImageView val$iv -> val$iv
    void run() -> run
com.aidigame.hisun.pet.adapter.ShowTopicsAdapter2 -> com.aidigame.hisun.pet.adapter.ShowTopicsAdapter2:
    com.nostra13.universalimageloader.core.DisplayImageOptions displayImageOptions -> displayImageOptions
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> imageLoader
    android.app.Activity context -> context
    java.util.ArrayList petPictures -> petPictures
    int mode -> mode
    android.os.Handler handler -> handler
    void updateTopics(java.util.ArrayList) -> updateTopics
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void loadTopicImage(com.aidigame.hisun.pet.view.TopicView,com.aidigame.hisun.pet.bean.PetPicture) -> loadTopicImage
    java.lang.String judgeTime(long) -> judgeTime
    int[] getTimeArray(long) -> getTimeArray
com.aidigame.hisun.pet.adapter.ShowTopicsAdapter2$1 -> com.aidigame.hisun.pet.adapter.av:
    com.aidigame.hisun.pet.adapter.ShowTopicsAdapter2 this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.aidigame.hisun.pet.adapter.ShowTopicsAdapter2$2 -> com.aidigame.hisun.pet.adapter.aw:
    com.aidigame.hisun.pet.adapter.ShowTopicsAdapter2 this$0 -> a
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.aidigame.hisun.pet.adapter.ShowTopicsAdapter2$Holder -> com.aidigame.hisun.pet.adapter.ax:
    com.aidigame.hisun.pet.view.TopicView image -> a
    android.widget.ImageView heart -> b
    android.widget.TextView tv4 -> c
    android.widget.TextView tv5 -> d
    android.widget.LinearLayout lLayout -> e
    com.aidigame.hisun.pet.adapter.ShowTopicsAdapter2 this$0 -> f
com.aidigame.hisun.pet.adapter.ShowTopicsAdapter2$ItemClickListener -> com.aidigame.hisun.pet.adapter.ay:
    com.aidigame.hisun.pet.adapter.ShowTopicsAdapter2$Holder holder -> a
    int position -> b
    int type -> c
    com.aidigame.hisun.pet.adapter.ShowTopicsAdapter2 this$0 -> d
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.adapter.ShowTopicsAdapter2 access$0(com.aidigame.hisun.pet.adapter.ShowTopicsAdapter2$ItemClickListener) -> a
com.aidigame.hisun.pet.adapter.ShowTopicsAdapter2$ItemClickListener$1 -> com.aidigame.hisun.pet.adapter.ShowTopicsAdapter2$ItemClickListener$1:
    com.aidigame.hisun.pet.adapter.ShowTopicsAdapter2$ItemClickListener this$1 -> this$1
    com.aidigame.hisun.pet.bean.PetPicture val$petPicture -> val$petPicture
    android.widget.TextView val$tv -> val$tv
    android.widget.ImageView val$iv -> val$iv
    void run() -> run
    com.aidigame.hisun.pet.adapter.ShowTopicsAdapter2$ItemClickListener access$0(com.aidigame.hisun.pet.adapter.ShowTopicsAdapter2$ItemClickListener$1) -> access$0
com.aidigame.hisun.pet.adapter.ShowTopicsAdapter2$ItemClickListener$1$1 -> com.aidigame.hisun.pet.adapter.ShowTopicsAdapter2$ItemClickListener$1$1:
    com.aidigame.hisun.pet.adapter.ShowTopicsAdapter2$ItemClickListener$1 this$2 -> this$2
    android.widget.TextView val$tv -> val$tv
    com.aidigame.hisun.pet.bean.PetPicture val$petPicture -> val$petPicture
    android.widget.ImageView val$iv -> val$iv
    void run() -> run
com.aidigame.hisun.pet.adapter.TopicListAdapter -> com.aidigame.hisun.pet.adapter.TopicListAdapter:
    android.content.Context context -> context
    java.util.ArrayList list -> list
    void updateList(java.util.ArrayList) -> updateList
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.aidigame.hisun.pet.adapter.TopicListAdapter$Holder -> com.aidigame.hisun.pet.adapter.az:
    android.widget.TextView nameTV -> a
    android.widget.ImageView flagIV -> b
    com.aidigame.hisun.pet.adapter.TopicListAdapter this$0 -> c
com.aidigame.hisun.pet.adapter.UserActivityAdapter2 -> com.aidigame.hisun.pet.adapter.UserActivityAdapter2:
    com.nostra13.universalimageloader.core.DisplayImageOptions displayImageOptions -> displayImageOptions
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> imageLoader
    android.app.Activity context -> context
    java.util.ArrayList petPictures -> petPictures
    int mode -> mode
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> handleHttpConnectionException
    android.os.Handler handler -> handler
    void updateTopics(java.util.ArrayList) -> updateTopics
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void loadTopicImage(com.aidigame.hisun.pet.view.TopicView,com.aidigame.hisun.pet.bean.PetPicture) -> loadTopicImage
    java.lang.String judgeTime(long) -> judgeTime
    int[] getTimeArray(long) -> getTimeArray
com.aidigame.hisun.pet.adapter.UserActivityAdapter2$1 -> com.aidigame.hisun.pet.adapter.ba:
    com.aidigame.hisun.pet.adapter.UserActivityAdapter2 this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.aidigame.hisun.pet.adapter.UserActivityAdapter2$2 -> com.aidigame.hisun.pet.adapter.bb:
    com.aidigame.hisun.pet.adapter.UserActivityAdapter2 this$0 -> a
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.aidigame.hisun.pet.adapter.UserActivityAdapter2$Holder -> com.aidigame.hisun.pet.adapter.bc:
    com.aidigame.hisun.pet.view.TopicView image -> a
    android.widget.TextView tv4 -> b
    android.widget.TextView tv6 -> c
    com.aidigame.hisun.pet.adapter.UserActivityAdapter2 this$0 -> d
com.aidigame.hisun.pet.adapter.UserFocusAdapter -> com.aidigame.hisun.pet.adapter.UserFocusAdapter:
    com.nostra13.universalimageloader.core.DisplayImageOptions displayImageOptions -> displayImageOptions
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> imageLoader
    android.app.Activity context -> context
    java.util.ArrayList list -> list
    int mode -> mode
    android.os.Handler handler -> handler
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> handleHttpConnectionException
    com.aidigame.hisun.pet.bean.User user -> user
    float x -> x
    float ux -> ux
    android.widget.LinearLayout rightLayout -> rightLayout
    android.widget.RelativeLayout leftLayout -> leftLayout
    int touchSlop -> touchSlop
    boolean isSlidingTouch -> isSlidingTouch
    void updateList(java.util.ArrayList) -> updateList
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void loadIcon(com.aidigame.hisun.pet.view.RoundImageView,com.aidigame.hisun.pet.bean.Animal) -> loadIcon
com.aidigame.hisun.pet.adapter.UserFocusAdapter$Holder -> com.aidigame.hisun.pet.adapter.bd:
    com.aidigame.hisun.pet.view.RoundImageView icon -> a
    android.widget.ImageView gender -> b
    android.widget.TextView name -> c
    android.widget.TextView race -> d
    android.widget.TextView age -> e
    android.widget.TextView rank -> f
    android.widget.TextView userName -> g
    android.widget.LinearLayout rightLayout -> h
    android.widget.RelativeLayout leftLayout -> i
    android.widget.RelativeLayout rLayout3 -> j
    com.aidigame.hisun.pet.adapter.UserFocusAdapter this$0 -> k
com.aidigame.hisun.pet.adapter.UserGiftGridViewAdapter -> com.aidigame.hisun.pet.adapter.UserGiftGridViewAdapter:
    android.content.Context context -> context
    java.util.ArrayList list -> list
    void update(java.util.ArrayList) -> update
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.aidigame.hisun.pet.adapter.UserGiftGridViewAdapter$Holder -> com.aidigame.hisun.pet.adapter.be:
    android.widget.TextView addLikeTV -> a
    android.widget.TextView giftNameTV -> b
    android.widget.TextView giftNumTV -> c
    android.widget.ImageView giftIV -> d
    android.widget.RelativeLayout boxLayout -> e
    com.aidigame.hisun.pet.adapter.UserGiftGridViewAdapter this$0 -> f
com.aidigame.hisun.pet.adapter.UserKingdomListAdapter -> com.aidigame.hisun.pet.adapter.UserKingdomListAdapter:
    com.nostra13.universalimageloader.core.DisplayImageOptions displayImageOptions -> displayImageOptions
    java.util.ArrayList list -> list
    com.aidigame.hisun.pet.ui.UserDossierActivity context -> context
    com.aidigame.hisun.pet.bean.User user -> user
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> handleHttpConnectionException
    float x -> x
    float ux -> ux
    android.widget.LinearLayout rightLayout -> rightLayout
    android.widget.RelativeLayout leftLayout -> leftLayout
    int touchSlop -> touchSlop
    boolean hasMeasured -> hasMeasured
    boolean isSlidingTouch -> isSlidingTouch
    void update(java.util.ArrayList) -> update
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.aidigame.hisun.pet.adapter.UserKingdomListAdapter$1 -> com.aidigame.hisun.pet.adapter.bf:
    com.aidigame.hisun.pet.adapter.UserKingdomListAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.adapter.UserKingdomListAdapter$2 -> com.aidigame.hisun.pet.adapter.bg:
    boolean hasMeasured -> a
    com.aidigame.hisun.pet.adapter.UserKingdomListAdapter this$0 -> b
    android.view.View val$expLayout -> c
    com.aidigame.hisun.pet.bean.Animal val$animal -> d
    android.widget.TextView val$experienceProgressTV -> e
    android.view.View val$experenceProgressView -> f
    boolean onPreDraw() -> onPreDraw
com.aidigame.hisun.pet.adapter.UserKingdomListAdapter$Holder -> com.aidigame.hisun.pet.adapter.bh:
    android.widget.LinearLayout rightLayout -> a
    android.widget.LinearLayout quitKingdomLayout -> b
    android.widget.LinearLayout changKingdomLayout -> c
    android.widget.LinearLayout linearLayout3 -> d
    android.widget.RelativeLayout leftLayout -> e
    android.widget.RelativeLayout progressParentLayout -> f
    android.widget.RelativeLayout joinRlaout -> g
    android.widget.TextView userJobTv -> h
    android.widget.TextView kingdomNameTv -> i
    android.widget.TextView experienceTv -> j
    android.widget.TextView hotNumTv -> k
    android.widget.TextView trendsNumTv -> l
    android.widget.TextView peoplesNumTv -> m
    android.view.View experienceView -> n
    android.widget.ImageView greenKingHatIv -> o
    com.aidigame.hisun.pet.view.RoundImageView iconCircleView -> p
    com.aidigame.hisun.pet.adapter.UserKingdomListAdapter this$0 -> q
com.aidigame.hisun.pet.adapter.UsersListAdapter -> com.aidigame.hisun.pet.adapter.UsersListAdapter:
    com.nostra13.universalimageloader.core.DisplayImageOptions displayImageOptions -> displayImageOptions
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> imageLoader
    android.app.Activity context -> context
    java.util.ArrayList list -> list
    android.os.Handler handler -> handler
    int animalType -> animalType
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> handleHttpConnectionException
    void updateList(java.util.ArrayList) -> updateList
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void loadIcon(com.aidigame.hisun.pet.view.RoundImageView,com.aidigame.hisun.pet.bean.User) -> loadIcon
com.aidigame.hisun.pet.adapter.UsersListAdapter$1 -> com.aidigame.hisun.pet.adapter.bi:
    com.aidigame.hisun.pet.adapter.UsersListAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.adapter.UsersListAdapter$2 -> com.aidigame.hisun.pet.adapter.bj:
    com.aidigame.hisun.pet.adapter.UsersListAdapter this$0 -> a
    com.aidigame.hisun.pet.bean.User val$data -> b
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.adapter.UsersListAdapter$Holder -> com.aidigame.hisun.pet.adapter.bk:
    com.aidigame.hisun.pet.view.RoundImageView icon -> a
    android.widget.ImageView gender -> b
    android.widget.ImageView giftType -> c
    android.widget.TextView name -> d
    android.widget.TextView provinceTV -> e
    android.widget.TextView cityTV -> f
    android.widget.TextView sendEmail -> g
    com.aidigame.hisun.pet.adapter.UsersListAdapter this$0 -> h
com.aidigame.hisun.pet.bean.Animal -> com.aidigame.hisun.pet.bean.Animal:
    long serialVersionUID -> serialVersionUID
    int a_gender -> a_gender
    java.lang.String race -> race
    int type -> type
    java.lang.String pet_nickName -> pet_nickName
    int a_age -> a_age
    java.lang.String a_age_str -> a_age_str
    java.lang.String pet_iconPath -> pet_iconPath
    java.lang.String pet_iconUrl -> pet_iconUrl
    long a_id -> a_id
    java.lang.String job -> job
    java.lang.String u_rank -> u_rank
    int u_rankCode -> u_rankCode
    int master_id -> master_id
    int fans -> fans
    int followers -> followers
    int t_rq -> t_rq
    int d_rq -> d_rq
    int w_rq -> w_rq
    int m_rq -> m_rq
    int t_contri -> t_contri
    int from -> from
    java.lang.String u_name -> u_name
    java.lang.String u_tx -> u_tx
    int img_id -> img_id
    int news_count -> news_count
    com.aidigame.hisun.pet.bean.User user -> user
    int change -> change
    boolean showArrow -> showArrow
    boolean isScale -> isScale
    int ranking -> ranking
    boolean hasJoinOrCreate -> hasJoinOrCreate
    boolean is_follow -> is_follow
    boolean is_join -> is_join
    boolean isTouched -> isTouched
    java.lang.String touchedPath -> touchedPath
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.aidigame.hisun.pet.bean.Gift -> com.aidigame.hisun.pet.bean.Gift:
    int no -> no
    java.lang.String name -> name
    int price -> price
    int add_rq -> add_rq
    float ratio -> ratio
    int level -> level
    boolean isReal -> isReal
    int detail_image -> detail_image
    int sale_status -> sale_status
    java.lang.String effect_des -> effect_des
    long aid -> aid
    com.aidigame.hisun.pet.bean.Animal animal -> animal
    int img_id -> img_id
    boolean is_buy -> is_buy
    boolean is_shake -> is_shake
    java.lang.String status -> status
    boolean hasBought -> hasBought
    int boughtNum -> boughtNum
    int buyingNum -> buyingNum
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.aidigame.hisun.pet.bean.KingdomCard -> com.aidigame.hisun.pet.bean.KingdomCard:
    com.aidigame.hisun.pet.bean.User user -> user
    java.util.ArrayList list -> list
com.aidigame.hisun.pet.bean.PetNews -> com.aidigame.hisun.pet.bean.PetNews:
    int nid -> nid
    long aid -> aid
    int type -> type
    boolean content -> content
    int usr_id -> usr_id
    java.lang.String u_name -> u_name
    long create_time -> create_time
    int img_id -> img_id
    java.lang.String img_url -> img_url
    int item_id -> item_id
    java.lang.String item_name -> item_name
    int rq -> rq
    int rank -> rank
    java.lang.String job -> job
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.aidigame.hisun.pet.bean.PetPicture -> com.aidigame.hisun.pet.bean.PetPicture:
    long serialVersionUID -> serialVersionUID
    int img_id -> img_id
    java.lang.String cmt -> cmt
    java.lang.String topic_name -> topic_name
    int topic_id -> topic_id
    java.lang.String petPicture_path -> petPicture_path
    java.lang.String url -> url
    int likes -> likes
    java.lang.String is_deleted -> is_deleted
    java.lang.String relates -> relates
    java.lang.String relatesString -> relatesString
    long create_time -> create_time
    java.lang.String likers -> likers
    java.lang.String comments -> comments
    long update_time -> update_time
    int gifts -> gifts
    java.lang.String senders -> senders
    int shares -> shares
    com.aidigame.hisun.pet.bean.Animal animal -> animal
    java.util.ArrayList like_txUrlList -> like_txUrlList
    java.util.ArrayList gift_txUrlList -> gift_txUrlList
    java.util.ArrayList commentsList -> commentsList
    int errorCode -> errorCode
    java.lang.String errorMessage -> errorMessage
    boolean isVoice -> isVoice
    java.lang.String voicePath -> voicePath
    boolean updateVoiceSuccess -> updateVoiceSuccess
    int exp -> exp
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.aidigame.hisun.pet.bean.PetPicture$Comments -> com.aidigame.hisun.pet.bean.PetPicture$Comments:
    long serialVersionUID -> serialVersionUID
    int usr_id -> usr_id
    java.lang.String name -> name
    java.lang.String body -> body
    long create_time -> create_time
    int reply_id -> reply_id
    java.lang.String reply_name -> reply_name
    boolean isReply -> isReply
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.aidigame.hisun.pet.bean.TalkMessage -> com.aidigame.hisun.pet.bean.TalkMessage:
    java.lang.String usr_tx -> usr_tx
    int usr_id -> usr_id
    java.lang.String usr_name -> usr_name
    int new_msg -> new_msg
    int old_new_msg_num -> old_new_msg_num
    java.util.ArrayList msgList -> msgList
    int position -> position
    void sortMsgList() -> sortMsgList
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.aidigame.hisun.pet.bean.TalkMessage$Msg -> com.aidigame.hisun.pet.bean.TalkMessage$Msg:
    long time -> time
    java.lang.String content -> content
    int from -> from
    boolean showTime -> showTime
    long img_id -> img_id
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.aidigame.hisun.pet.bean.Topic -> com.aidigame.hisun.pet.bean.Topic:
    int topic_id -> topic_id
    boolean isSelected -> isSelected
    java.lang.String topic -> topic
    java.lang.String reward -> reward
    java.lang.String img -> img
    java.lang.String imgPath -> imgPath
    long start_time -> start_time
    long end_time -> end_time
    int people -> people
    java.lang.String remark -> remark
    java.lang.String txs -> txs
    java.lang.String des -> des
    java.util.ArrayList rewards -> rewards
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.aidigame.hisun.pet.bean.User -> com.aidigame.hisun.pet.bean.User:
    long serialVersionUID -> serialVersionUID
    int userId -> userId
    java.lang.String u_iconPath -> u_iconPath
    java.lang.String u_iconUrl -> u_iconUrl
    int u_gender -> u_gender
    int u_age -> u_age
    java.lang.String u_nick -> u_nick
    com.aidigame.hisun.pet.bean.Animal currentAnimal -> currentAnimal
    java.util.ArrayList aniList -> aniList
    int locationCode -> locationCode
    java.lang.String province -> province
    java.lang.String city -> city
    int coinCount -> coinCount
    int t_contri -> t_contri
    int d_contri -> d_contri
    int w_contri -> w_contri
    int m_contri -> m_contri
    int ranking -> ranking
    int change -> change
    java.lang.String rank -> rank
    int rankCode -> rankCode
    boolean showArrow -> showArrow
    java.lang.String create_time -> create_time
    java.lang.String update_time -> update_time
    int exp -> exp
    int lv -> lv
    int follow -> follow
    int follower -> follower
    int con_login -> con_login
    int next_gold -> next_gold
    int imagesCount -> imagesCount
    int senderOrLiker -> senderOrLiker
    boolean isSelected -> isSelected
    int a_gender -> a_gender
    java.lang.String race -> race
    java.lang.String pet_nickName -> pet_nickName
    java.lang.String a_age -> a_age
    java.lang.String pet_iconPath -> pet_iconPath
    java.lang.String pet_iconUrl -> pet_iconUrl
    int classs -> classs
    java.lang.String code -> code
    java.lang.String uid -> uid
    int focus -> focus
    java.lang.String inviter -> inviter
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.aidigame.hisun.pet.blur.Blur -> com.aidigame.hisun.pet.blur.a:
    android.graphics.Bitmap fastblur(android.content.Context,android.graphics.Bitmap,int) -> a
com.aidigame.hisun.pet.blur.ScrollableImageView -> com.aidigame.hisun.pet.blur.ScrollableImageView:
    android.graphics.Bitmap adaptedImage -> adaptedImage
    android.graphics.Paint paint -> paint
    android.graphics.Bitmap originalImage -> originalImage
    int screenWidth -> screenWidth
    int scrollY -> scrollY
    void onDraw(android.graphics.Canvas) -> onDraw
    void handleScroll(float) -> handleScroll
    void setoriginalImage(android.graphics.Bitmap) -> setoriginalImage
    void setScreenWidth(int) -> setScreenWidth
com.aidigame.hisun.pet.blur.TopCenterImageView -> com.aidigame.hisun.pet.blur.TopCenterImageView:
    boolean setFrame(int,int,int,int) -> setFrame
com.aidigame.hisun.pet.constant.AddressData -> com.aidigame.hisun.pet.constant.AddressData:
    java.lang.String[] NO_LIMITS -> NO_LIMITS
    java.lang.String[] PROVINCES -> PROVINCES
    java.lang.String[][] CITIES -> CITIES
com.aidigame.hisun.pet.constant.Constants -> com.aidigame.hisun.pet.constant.Constants:
    java.lang.String audioPath -> audioPath
    boolean hasStart -> hasStart
    java.lang.String IMIE -> IMIE
    java.lang.String OPEN_UDID -> OPEN_UDID
    int status -> status
    int planet -> planet
    java.lang.String EXTRA_IN_API_KEY_SECRET -> EXTRA_IN_API_KEY_SECRET
    com.aidigame.hisun.pet.bean.User user -> user
    boolean netStatus -> netStatus
    int REGISTER_SUCCESS -> REGISTER_SUCCESS
    int REGISTER_FAIL -> REGISTER_FAIL
    int LOGIN_SUCCESS -> LOGIN_SUCCESS
    int screen_width -> screen_width
    int screen_height -> screen_height
    java.lang.String URL_ROOT -> URL_ROOT
    java.lang.String URL_ROOT2 -> URL_ROOT2
    java.lang.String IP -> IP
    java.lang.String IP2 -> IP2
    java.lang.String USER_DOWNLOAD_TX -> USER_DOWNLOAD_TX
    java.lang.String ANIMAL_DOWNLOAD_TX -> ANIMAL_DOWNLOAD_TX
    java.lang.String DOWNLOAD_VOICE -> DOWNLOAD_VOICE
    java.lang.String WELCOME_IMAGE -> WELCOME_IMAGE
    java.lang.String UPLOAD_IMAGE_RETURN_URL -> UPLOAD_IMAGE_RETURN_URL
    java.lang.String GET_SID -> GET_SID
    java.lang.String REGISTER_PATH -> REGISTER_PATH
    java.lang.String USER_MODIFY -> USER_MODIFY
    java.lang.String PET_MODIFY -> PET_MODIFY
    java.lang.String LOGIN_PATH -> LOGIN_PATH
    java.lang.String SEND_GIFT_API -> SEND_GIFT_API
    java.lang.String BUY_GIFT_API -> BUY_GIFT_API
    java.lang.String SHAKE_API -> SHAKE_API
    java.lang.String TOUCH_API -> TOUCH_API
    java.lang.String KINGDOM_TRENDS -> KINGDOM_TRENDS
    java.lang.String KINGDOM_PEOPLES -> KINGDOM_PEOPLES
    java.lang.String JOIN_KINGDOM -> JOIN_KINGDOM
    java.lang.String IMAGE_SHARE_NUM -> IMAGE_SHARE_NUM
    java.lang.String CHANGE_PLANT -> CHANGE_PLANT
    java.lang.String CREATE_KINGDOM -> CREATE_KINGDOM
    java.lang.String IS_TOUCHED -> IS_TOUCHED
    java.lang.String USER_SHARE_NUM -> USER_SHARE_NUM
    java.lang.String EXIT_KINGDOM -> EXIT_KINGDOM
    java.lang.String KING_USER_RELATION -> KING_USER_RELATION
    java.lang.String KINGDOM_GIFT -> KINGDOM_GIFT
    java.lang.String USER_GIFT -> USER_GIFT
    java.lang.String USER_ACTIVITY -> USER_ACTIVITY
    java.lang.String RECOMMEND_KINGDOM -> RECOMMEND_KINGDOM
    java.lang.String POPULAR_KINGDOM -> POPULAR_KINGDOM
    java.lang.String CARD_API -> CARD_API
    java.lang.String CONTRIBUTE_RANK -> CONTRIBUTE_RANK
    java.lang.String RQ_RANK -> RQ_RANK
    java.lang.String USER_PETS -> USER_PETS
    java.lang.String CHANGE_DEFAULT_KINGDOM -> CHANGE_DEFAULT_KINGDOM
    java.lang.String USER_ADDRESS -> USER_ADDRESS
    java.lang.String isVoicedApi -> isVoicedApi
    java.lang.String MARKET_ITEMS -> MARKET_ITEMS
    java.lang.String INFO_PATH -> INFO_PATH
    java.lang.String ANIMAL_INFO_PATH -> ANIMAL_INFO_PATH
    com.aidigame.hisun.pet.http.json.InfoJson infoJson -> infoJson
    java.lang.String USER_IMAGES -> USER_IMAGES
    java.lang.String KINGDOM_IMAGES -> KINGDOM_IMAGES
    java.lang.String IMAGE_FAVORITE -> IMAGE_FAVORITE
    java.lang.String IMAGE_RECOMMEND -> IMAGE_RECOMMEND
    java.lang.String IMAGE_RANDOM -> IMAGE_RANDOM
    java.lang.String IMAGE_INFO -> IMAGE_INFO
    java.lang.String OTHER_INFO -> OTHER_INFO
    java.lang.String OTHERS_INFO -> OTHERS_INFO
    java.lang.String ANIMAL_OTHERS_INFO -> ANIMAL_OTHERS_INFO
    java.lang.String USER_UPDATE_TX -> USER_UPDATE_TX
    java.lang.String Animal_UPDATE_TX -> Animal_UPDATE_TX
    java.lang.String USER_FOLLOW -> USER_FOLLOW
    java.lang.String USER_UNFOLLOW -> USER_UNFOLLOW
    java.lang.String USER_FOLLOWING -> USER_FOLLOWING
    java.lang.String USER_FOLLOWER -> USER_FOLLOWER
    java.lang.String UPLOAD_IMAGE_PATH -> UPLOAD_IMAGE_PATH
    java.lang.String UPLOAD_VOICE_PATH -> UPLOAD_VOICE_PATH
    java.lang.String DOWNLOAD_VOICE_URL -> DOWNLOAD_VOICE_URL
    java.lang.String IMAGE_TOPIC_API -> IMAGE_TOPIC_API
    java.lang.String DOWNLOAD_IMAGE_INFO -> DOWNLOAD_IMAGE_INFO
    java.lang.String LIKE_IMAGE_PATH -> LIKE_IMAGE_PATH
    java.lang.String DELETE_IMAGE_PATH -> DELETE_IMAGE_PATH
    java.lang.String ACTIVITY_LIST -> ACTIVITY_LIST
    java.lang.String ACTIVITY_IMAGE -> ACTIVITY_IMAGE
    java.lang.String ACTIVITY_INFO -> ACTIVITY_INFO
    java.lang.String ACTIVITY_REWARD_INFO -> ACTIVITY_REWARD_INFO
    java.lang.String ACTIVITY_NEWEST -> ACTIVITY_NEWEST
    java.lang.String ACTIVITY_POPULAR -> ACTIVITY_POPULAR
    java.lang.String MAIL_LIST -> MAIL_LIST
    java.lang.String MAIL_CREATE -> MAIL_CREATE
    java.lang.String TALK_LIST -> TALK_LIST
    java.lang.String TALK_ID -> TALK_ID
    java.lang.String TALK_DELETE -> TALK_DELETE
    java.lang.String SEARCH_PET -> SEARCH_PET
    java.lang.String MAIL_DELETE -> MAIL_DELETE
    java.lang.String MAIL_ACTIVITY_NEW_NUM -> MAIL_ACTIVITY_NEW_NUM
    java.lang.String ADD_A_COMMENT -> ADD_A_COMMENT
    java.lang.String GET_RACE_TYPE -> GET_RACE_TYPE
    java.lang.String WELCOME -> WELCOME
    int LEVEL_1 -> LEVEL_1
    int LEVEL_2 -> LEVEL_2
    int LEVEL_3 -> LEVEL_3
    int LEVEL_4 -> LEVEL_4
    int LEVEL_5 -> LEVEL_5
    int LEVEL_6 -> LEVEL_6
    java.lang.String SID -> SID
    boolean isSuccess -> isSuccess
    java.lang.String Picture_Topic_Path -> Picture_Topic_Path
    java.lang.String Picture_ICON_Path -> Picture_ICON_Path
    java.lang.String Picture_Root_Path -> Picture_Root_Path
    java.lang.String Picture_Camera -> Picture_Camera
    int MESSAGE_DOWNLOAD_IMAGES_LIST -> MESSAGE_DOWNLOAD_IMAGES_LIST
    int ERROR_MESSAGE -> ERROR_MESSAGE
    java.lang.String APP_KEY -> APP_KEY
    java.lang.String APP_SECRET -> APP_SECRET
    java.lang.String Weixin_APP_KEY -> Weixin_APP_KEY
    java.lang.String Weixin_APP_SECRET -> Weixin_APP_SECRET
    com.tencent.mm.sdk.openapi.IWXAPI api -> api
    java.lang.String REDIRECT_URL -> REDIRECT_URL
    java.lang.String SCOPE -> SCOPE
    com.sina.weibo.sdk.auth.Oauth2AccessToken accessToken -> accessToken
    java.lang.String OAUTH2_ACCESS_TOKEN_URL -> OAUTH2_ACCESS_TOKEN_URL
    java.lang.String NOTE_MESSAGE_1 -> NOTE_MESSAGE_1
    java.lang.String NOTE_MESSAGE_2 -> NOTE_MESSAGE_2
    java.lang.String NOTE_MESSAGE_3 -> NOTE_MESSAGE_3
    java.lang.String NOTE_MESSAGE_4 -> NOTE_MESSAGE_4
    java.lang.String NOTE_MESSAGE_5 -> NOTE_MESSAGE_5
    java.lang.String SHAREDPREFERENCE_NAME -> SHAREDPREFERENCE_NAME
    java.lang.String LOCK_TO_WEIXIN -> LOCK_TO_WEIXIN
    java.lang.String LOCK_TO_XINLANG -> LOCK_TO_XINLANG
    java.lang.String PICTURE_SEND_TO_WEIXIN -> PICTURE_SEND_TO_WEIXIN
    java.lang.String PICTURE_SEND_TO_XINLANG -> PICTURE_SEND_TO_XINLANG
    java.lang.String ACOUNT_VISIVAL_AREAR -> ACOUNT_VISIVAL_AREAR
    java.lang.String CURRENT_STAR -> CURRENT_STAR
    java.lang.String IS_FIRST_START_APP -> IS_FIRST_START_APP
    int whereShare -> whereShare
    int shareMode -> shareMode
com.aidigame.hisun.pet.http.HttpUtil -> com.aidigame.hisun.pet.http.a:
    boolean register(android.os.Handler,com.aidigame.hisun.pet.bean.User,android.app.Activity) -> a
    boolean modifyUserInfo(android.os.Handler,com.aidigame.hisun.pet.bean.User,android.app.Activity) -> b
    boolean modifyPetInfo(android.os.Handler,com.aidigame.hisun.pet.bean.User,android.app.Activity) -> c
    boolean login(android.content.Context,android.os.Handler) -> a
    java.lang.String getSID(android.content.Context,android.os.Handler) -> b
    long createKingdom(android.content.Context,com.aidigame.hisun.pet.bean.Animal,android.os.Handler) -> a
    com.aidigame.hisun.pet.bean.Animal isTouched(android.content.Context,com.aidigame.hisun.pet.bean.Animal,android.os.Handler) -> b
    com.aidigame.hisun.pet.bean.User info(android.app.Activity,android.os.Handler,int) -> a
    com.aidigame.hisun.pet.bean.Animal animalInfo(android.content.Context,com.aidigame.hisun.pet.bean.Animal,android.os.Handler) -> c
    java.util.HashMap rqRankApi(int,long,android.os.Handler,android.content.Context) -> a
    java.util.ArrayList contributeRankList(android.content.Context,int,long,android.os.Handler) -> a
    java.util.ArrayList kingdomTrends(android.content.Context,int,long,android.os.Handler) -> b
    java.util.ArrayList kingdomPeoples(android.content.Context,int,com.aidigame.hisun.pet.bean.Animal,android.os.Handler) -> a
    boolean joinOrQuitKingdom(android.content.Context,com.aidigame.hisun.pet.bean.Animal,android.os.Handler,int) -> a
    com.aidigame.hisun.pet.bean.User imageShareNumsApi(android.content.Context,int,android.os.Handler) -> a
    boolean kingAndUserRelation(android.content.Context,com.aidigame.hisun.pet.bean.Animal,android.os.Handler) -> d
    java.util.ArrayList kingdomGift(android.content.Context,com.aidigame.hisun.pet.bean.Animal,android.os.Handler) -> e
    java.util.ArrayList usersKingdom(android.content.Context,com.aidigame.hisun.pet.bean.User,long,android.os.Handler) -> a
    boolean setDefaultKingdom(android.content.Context,com.aidigame.hisun.pet.bean.Animal,android.os.Handler) -> f
    java.util.ArrayList userItems(android.content.Context,com.aidigame.hisun.pet.bean.User,long,android.os.Handler) -> b
    java.util.ArrayList userActivity(android.content.Context,com.aidigame.hisun.pet.bean.User,long,android.os.Handler) -> c
    boolean userAddress(android.content.Context,com.aidigame.hisun.pet.ui.ReceiverAddressActivity$UserAddress,android.os.Handler) -> a
    java.util.ArrayList recommendKingdom(android.content.Context,int,long,android.os.Handler,int,int) -> a
    com.aidigame.hisun.pet.bean.KingdomCard cardApi(android.content.Context,long,android.os.Handler) -> a
    com.aidigame.hisun.pet.bean.PetPicture uploadImage(com.aidigame.hisun.pet.bean.PetPicture,android.os.Handler,android.app.Activity) -> a
    boolean isVoicedApi(android.content.Context,com.aidigame.hisun.pet.bean.Animal,android.os.Handler) -> g
    com.aidigame.hisun.pet.bean.PetPicture post(com.aidigame.hisun.pet.bean.PetPicture,android.app.Activity) -> a
    java.lang.String uploadUserIcon(java.lang.String,android.app.Activity,long) -> a
    com.aidigame.hisun.pet.http.json.UserImagesJson downloadPetkingdomImages(android.os.Handler,int,int,android.app.Activity,long) -> a
    boolean likeImage(com.aidigame.hisun.pet.bean.PetPicture,android.os.Handler) -> a
    boolean imageInfo(com.aidigame.hisun.pet.bean.PetPicture,android.os.Handler,android.app.Activity) -> b
    boolean userAddFollow(com.aidigame.hisun.pet.bean.Animal,android.os.Handler,android.app.Activity) -> a
    java.util.ArrayList otherAnimals(android.os.Handler,java.lang.String,long,android.app.Activity) -> a
    boolean userDeleteFollow(com.aidigame.hisun.pet.bean.Animal,android.os.Handler,android.app.Activity) -> b
    java.util.ArrayList followList(android.os.Handler,long,int,android.app.Activity) -> a
    java.util.ArrayList getOthersList(java.lang.String,android.os.Handler,android.app.Activity,int) -> a
    java.lang.String downloadImage(java.lang.String,java.lang.String,android.os.Handler,android.app.Activity) -> a
    java.lang.String getVoiceUrl(android.content.Context,long,android.os.Handler) -> b
    java.lang.String downloadVoiceFile(java.lang.String,android.os.Handler) -> a
    java.util.ArrayList imageTopicApi(android.content.Context,android.os.Handler) -> c
    boolean downloadImage(java.lang.String,java.lang.String) -> a
    com.aidigame.hisun.pet.http.json.ActivityJson loadTopicList(android.app.Activity,int,android.os.Handler) -> a
    void downloadActivityImagesList(android.os.Handler,int,int,android.app.Activity,com.aidigame.hisun.pet.http.json.ActivityJson$Data,int) -> a
    boolean loadActivityInfo(com.aidigame.hisun.pet.http.json.ActivityJson$Data,android.os.Handler,android.content.Context) -> a
    boolean loadRewardInfo(com.aidigame.hisun.pet.http.json.ActivityJson$Data,android.os.Handler,android.content.Context) -> b
    com.aidigame.hisun.pet.http.json.LoginJson$Data getMailAndActivityNum(android.os.Handler,android.content.Context) -> a
    com.aidigame.hisun.pet.bean.User sendComment(android.content.Context,java.lang.String,int,int,java.lang.String,android.os.Handler) -> a
    boolean sendMail(int,java.lang.String) -> a
    int getTalk_id(android.content.Context,int,android.os.Handler) -> b
    java.util.ArrayList getTalkList(android.content.Context,int,android.os.Handler) -> c
    java.lang.String getJsonKey(java.lang.String,int) -> a
    com.aidigame.hisun.pet.bean.User sendGift(android.content.Context,com.aidigame.hisun.pet.bean.Gift,android.os.Handler) -> a
    com.aidigame.hisun.pet.bean.User buyGift(android.content.Context,com.aidigame.hisun.pet.bean.Gift,android.os.Handler) -> b
    int shakeApi(android.content.Context,long,android.os.Handler) -> c
    boolean touchApi(android.content.Context,long,android.os.Handler) -> d
    java.util.ArrayList searchUserOrPet(android.content.Context,java.lang.String,long,android.os.Handler) -> a
    java.lang.String getMD5(java.lang.String) -> a
    java.lang.String getMD5Value(java.lang.String) -> b
    java.lang.String downloadWelcomeImage(android.os.Handler,android.app.Activity) -> a
    java.lang.String getIMEI(android.content.Context) -> a
    java.lang.String getUniqueID(android.content.Context) -> b
    java.lang.String getAndroid_id(android.content.Context) -> c
    java.lang.String getPseudoUniqueID() -> a
    java.lang.String getWLAN_MAC_Adress(android.content.Context) -> d
    java.lang.String getBT_MAC_Adress() -> b
    java.lang.String judgeEmpty(java.lang.String) -> c
    com.aidigame.hisun.pet.http.json.LoginJson parseJson(java.lang.String) -> d
    com.aidigame.hisun.pet.http.json.RegisterJson parseRegisterJson(java.lang.String,android.os.Handler) -> b
    com.aidigame.hisun.pet.bean.User parseInfoJson(java.lang.String,android.app.Activity) -> a
    com.aidigame.hisun.pet.bean.PetPicture parseUpdateImageJson(java.lang.String) -> e
    boolean judgeSID(int) -> a
    int handleResult(android.content.Context,java.lang.String,android.os.Handler) -> a
    void judgeHttpStatus(int,android.os.Handler) -> a
    java.lang.String getAge(int) -> b
    void sendLevelChangeReceiver(android.content.Context,int,int,int,int,int,boolean) -> a
    void setConnectionTime(org.apache.http.impl.client.DefaultHttpClient,int) -> a
    java.lang.String connect(org.apache.http.impl.client.DefaultHttpClient,android.os.Handler,org.apache.http.client.methods.HttpGet) -> a
com.aidigame.hisun.pet.http.JsonUtil -> com.aidigame.hisun.pet.http.b:
com.aidigame.hisun.pet.http.JsonUtil$1 -> com.aidigame.hisun.pet.http.JsonUtil$1:
    java.lang.String val$errorString -> val$errorString
    android.app.Activity val$context -> val$context
    void run() -> run
com.aidigame.hisun.pet.http.json.ActivityJson -> com.aidigame.hisun.pet.http.json.ActivityJson:
    int errorCode -> a
    java.lang.String errorMessage -> b
    java.util.ArrayList datas -> c
    void parseJson(java.lang.String) -> a
com.aidigame.hisun.pet.http.json.ActivityJson$Data -> com.aidigame.hisun.pet.http.json.ActivityJson$Data:
    long serialVersionUID -> serialVersionUID
    int topic_id -> topic_id
    java.lang.String topic -> topic
    java.lang.String reward -> reward
    java.lang.String img -> img
    java.lang.String imgPath -> imgPath
    long start_time -> start_time
    long end_time -> end_time
    int people -> people
    java.lang.String remark -> remark
    java.lang.String txs -> txs
    java.lang.String des -> des
    java.util.ArrayList rewards -> rewards
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.aidigame.hisun.pet.http.json.ActivityJson$Reward -> com.aidigame.hisun.pet.http.json.ActivityJson$Reward:
    java.lang.String name -> name
    java.lang.String des -> des
    float price -> price
    int item_id -> item_id
    java.lang.String img -> img
    java.lang.String imgPath -> imgPath
    int level -> level
com.aidigame.hisun.pet.http.json.InfoJson -> com.aidigame.hisun.pet.http.json.a:
com.aidigame.hisun.pet.http.json.LoginJson -> com.aidigame.hisun.pet.http.json.b:
    int state -> a
    int errorCode -> b
    java.lang.String errorMessage -> c
    java.lang.String version -> d
    java.lang.String confVersion -> e
    long currentTime -> f
    com.aidigame.hisun.pet.http.json.LoginJson$Data data -> g
com.aidigame.hisun.pet.http.json.LoginJson$Data -> com.aidigame.hisun.pet.http.json.c:
    boolean isSuccess -> a
    java.lang.String SID -> b
    int mail_count -> c
    int topic_count -> d
com.aidigame.hisun.pet.http.json.RegisterJson -> com.aidigame.hisun.pet.http.json.d:
    int state -> a
    int errorCode -> b
    java.lang.String errorMessage -> c
    java.lang.String version -> d
    java.lang.String confVersion -> e
    long currentTime -> f
    com.aidigame.hisun.pet.http.json.RegisterJson$Data data -> g
com.aidigame.hisun.pet.http.json.RegisterJson$Data -> com.aidigame.hisun.pet.http.json.e:
    boolean isSuccess -> a
com.aidigame.hisun.pet.http.json.UpdateIconJson -> com.aidigame.hisun.pet.http.json.f:
    int state -> a
    int errorCode -> b
    java.lang.String errorMessage -> c
    java.lang.String version -> d
    java.lang.String confVersion -> e
    long currentTime -> f
    com.aidigame.hisun.pet.http.json.UpdateIconJson$Data data -> g
    void parseJson(java.lang.String) -> a
com.aidigame.hisun.pet.http.json.UpdateIconJson$Data -> com.aidigame.hisun.pet.http.json.g:
    java.lang.String tx -> a
com.aidigame.hisun.pet.http.json.UserImagesJson -> com.aidigame.hisun.pet.http.json.UserImagesJson:
    long serialVersionUID -> serialVersionUID
    int state -> state
    int errorCode -> errorCode
    java.lang.String errorMessage -> errorMessage
    java.lang.String version -> version
    java.lang.String confVersion -> confVersion
    long currentTime -> currentTime
    java.util.ArrayList datas -> datas
    java.util.ArrayList petPictures -> petPictures
    void parseJson(java.lang.String) -> parseJson
com.aidigame.hisun.pet.http.json.UserImagesJson$Data -> com.aidigame.hisun.pet.http.json.UserImagesJson$Data:
    boolean isLoadInfo -> isLoadInfo
    int likes -> likes
    java.util.ArrayList likers -> likers
    java.lang.String likersString -> likersString
    java.lang.String url -> url
    java.lang.String files -> files
    int usr_id -> usr_id
    java.lang.String comment -> comment
    java.lang.String comments -> comments
    java.util.ArrayList listComments -> listComments
    long create_time -> create_time
    int img_id -> img_id
    java.lang.String update_time -> update_time
    java.lang.String path -> path
    com.aidigame.hisun.pet.bean.User user -> user
    boolean isUser -> isUser
    boolean isFriend -> isFriend
    java.util.ArrayList likers_icons_urls -> likers_icons_urls
    java.lang.String likers_icons_url_strString -> likers_icons_url_strString
    java.lang.String des -> des
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.aidigame.hisun.pet.http.json.UserJson -> com.aidigame.hisun.pet.http.json.h:
    int errorCode -> a
    java.lang.String errorMessage -> b
    java.util.ArrayList datas -> c
com.aidigame.hisun.pet.service.BlurImageBroadcastReceiver -> com.aidigame.hisun.pet.service.BlurImageBroadcastReceiver:
    android.content.Context context -> a
    android.view.View view -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.aidigame.hisun.pet.service.LocationSvc -> com.aidigame.hisun.pet.service.LocationSvc:
    android.location.LocationManager locationManager -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onStart(android.content.Intent,int) -> onStart
    boolean stopService(android.content.Intent) -> stopService
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.aidigame.hisun.pet.ui.AboutUsActivity -> com.aidigame.hisun.pet.ui.AboutUsActivity:
    android.widget.FrameLayout frameLayout -> a
    android.view.View viewTopWhite -> b
    void onCreate(android.os.Bundle) -> onCreate
    void setBlurImageBackground() -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.AboutUsActivity$1 -> com.aidigame.hisun.pet.ui.AboutUsActivity$1:
    com.aidigame.hisun.pet.ui.AboutUsActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.AboutUsActivity access$0(com.aidigame.hisun.pet.ui.AboutUsActivity$1) -> access$0
com.aidigame.hisun.pet.ui.AboutUsActivity$1$1 -> com.aidigame.hisun.pet.ui.AboutUsActivity$1$1:
    com.aidigame.hisun.pet.ui.AboutUsActivity$1 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.AddGoldContriExpActivity -> com.aidigame.hisun.pet.ui.AddGoldContriExpActivity:
    android.widget.ImageView imageView -> a
    android.widget.TextView textView -> b
    void onCreate(android.os.Bundle) -> onCreate
com.aidigame.hisun.pet.ui.AddGoldContriExpActivity$1 -> com.aidigame.hisun.pet.ui.AddGoldContriExpActivity$1:
    com.aidigame.hisun.pet.ui.AddGoldContriExpActivity this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.ui.AdviceActivity -> com.aidigame.hisun.pet.ui.AdviceActivity:
    android.widget.LinearLayout frameLayout -> a
    android.widget.Button submit -> b
    android.widget.EditText adviceET -> c
    android.widget.EditText contactET -> d
    java.lang.String advice -> e
    java.lang.String contact -> f
    boolean isClickable -> g
    boolean isSendingMail -> h
    void onCreate(android.os.Bundle) -> onCreate
    void setBlurImageBackground() -> a
com.aidigame.hisun.pet.ui.AdviceActivity$1 -> com.aidigame.hisun.pet.ui.a:
    com.aidigame.hisun.pet.ui.AdviceActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.AdviceActivity$2 -> com.aidigame.hisun.pet.ui.b:
    com.aidigame.hisun.pet.ui.AdviceActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.aidigame.hisun.pet.ui.AdviceActivity$3 -> com.aidigame.hisun.pet.ui.c:
    com.aidigame.hisun.pet.ui.AdviceActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.aidigame.hisun.pet.ui.AdviceActivity$4 -> com.aidigame.hisun.pet.ui.d:
    com.aidigame.hisun.pet.ui.AdviceActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.AdviceActivity$5 -> com.aidigame.hisun.pet.ui.AdviceActivity$5:
    com.aidigame.hisun.pet.ui.AdviceActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.AdviceActivity access$0(com.aidigame.hisun.pet.ui.AdviceActivity$5) -> access$0
com.aidigame.hisun.pet.ui.AdviceActivity$5$1 -> com.aidigame.hisun.pet.ui.AdviceActivity$5$1:
    com.aidigame.hisun.pet.ui.AdviceActivity$5 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.AlbumPictureBackground -> com.aidigame.hisun.pet.ui.AlbumPictureBackground:
    int mode -> a
    java.lang.String filename -> b
    java.lang.String path -> c
    com.aidigame.hisun.pet.bean.Animal animal -> d
    android.os.Handler handler -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void loadBitmap(android.net.Uri) -> a
com.aidigame.hisun.pet.ui.AlbumPictureBackground$1 -> com.aidigame.hisun.pet.ui.e:
    com.aidigame.hisun.pet.ui.AlbumPictureBackground this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.aidigame.hisun.pet.ui.AnimalsListActivity -> com.aidigame.hisun.pet.ui.AnimalsListActivity:
    android.widget.FrameLayout frameLayout -> a
    android.view.View viewTopWhite -> b
    com.aidigame.hisun.pet.adapter.AnimalsListAdapter adapter -> c
    java.util.ArrayList list -> d
    android.widget.ListView listView -> e
    java.lang.String aids -> f
    android.widget.ImageView back -> g
    android.widget.TextView title -> h
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> i
    android.os.Handler handler -> j
    void onCreate(android.os.Bundle) -> onCreate
    void setBlurImageBackground() -> a
com.aidigame.hisun.pet.ui.AnimalsListActivity$1 -> com.aidigame.hisun.pet.ui.f:
    com.aidigame.hisun.pet.ui.AnimalsListActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.aidigame.hisun.pet.ui.AnimalsListActivity$2 -> com.aidigame.hisun.pet.ui.g:
    com.aidigame.hisun.pet.ui.AnimalsListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    com.aidigame.hisun.pet.ui.AnimalsListActivity access$0(com.aidigame.hisun.pet.ui.AnimalsListActivity$2) -> a
com.aidigame.hisun.pet.ui.AnimalsListActivity$2$1 -> com.aidigame.hisun.pet.ui.AnimalsListActivity$2$1:
    com.aidigame.hisun.pet.ui.AnimalsListActivity$2 this$1 -> this$1
    com.aidigame.hisun.pet.bean.Animal val$user -> val$user
    void run() -> run
com.aidigame.hisun.pet.ui.AnimalsListActivity$3 -> com.aidigame.hisun.pet.ui.h:
    com.aidigame.hisun.pet.ui.AnimalsListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.AnimalsListActivity$4 -> com.aidigame.hisun.pet.ui.AnimalsListActivity$4:
    com.aidigame.hisun.pet.ui.AnimalsListActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.AnimalsListActivity access$0(com.aidigame.hisun.pet.ui.AnimalsListActivity$4) -> access$0
com.aidigame.hisun.pet.ui.AnimalsListActivity$4$1 -> com.aidigame.hisun.pet.ui.AnimalsListActivity$4$1:
    com.aidigame.hisun.pet.ui.AnimalsListActivity$4 this$1 -> this$1
    java.util.ArrayList val$temp -> val$temp
    void run() -> run
com.aidigame.hisun.pet.ui.AnimalsListActivity$5 -> com.aidigame.hisun.pet.ui.AnimalsListActivity$5:
    com.aidigame.hisun.pet.ui.AnimalsListActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.AnimalsListActivity access$0(com.aidigame.hisun.pet.ui.AnimalsListActivity$5) -> access$0
com.aidigame.hisun.pet.ui.AnimalsListActivity$5$1 -> com.aidigame.hisun.pet.ui.AnimalsListActivity$5$1:
    com.aidigame.hisun.pet.ui.AnimalsListActivity$5 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.AnimalsListActivity$6 -> com.aidigame.hisun.pet.ui.i:
    com.aidigame.hisun.pet.ui.AnimalsListActivity this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.aidigame.hisun.pet.ui.AtUserListActivity -> com.aidigame.hisun.pet.ui.AtUserListActivity:
    android.widget.FrameLayout frameLayout -> a
    android.view.View viewTopWhite -> b
    android.widget.ImageView back -> c
    android.widget.TextView sureTV -> d
    android.widget.TextView searchTV -> e
    android.widget.EditText inputET -> f
    com.aidigame.hisun.pet.view.PullToRefreshAndMoreView pullToRefreshAndMoreView -> g
    android.widget.ListView listView -> h
    java.util.ArrayList topicList -> i
    com.aidigame.hisun.pet.adapter.AtUserListAdapter adapter -> j
    java.lang.String userIdString -> k
    android.os.Handler handler -> l
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> c
    void setBlurImageBackground() -> d
    void loadData() -> e
    void onRefresh() -> a
    void onMore() -> b
com.aidigame.hisun.pet.ui.AtUserListActivity$1 -> com.aidigame.hisun.pet.ui.j:
    com.aidigame.hisun.pet.ui.AtUserListActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.aidigame.hisun.pet.ui.AtUserListActivity$2 -> com.aidigame.hisun.pet.ui.k:
    com.aidigame.hisun.pet.ui.AtUserListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.AtUserListActivity$3 -> com.aidigame.hisun.pet.ui.l:
    com.aidigame.hisun.pet.ui.AtUserListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.AtUserListActivity$4 -> com.aidigame.hisun.pet.ui.m:
    com.aidigame.hisun.pet.ui.AtUserListActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void deleteErrorChar(android.text.Editable) -> a
com.aidigame.hisun.pet.ui.AtUserListActivity$5 -> com.aidigame.hisun.pet.ui.AtUserListActivity$5:
    com.aidigame.hisun.pet.ui.AtUserListActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.AtUserListActivity access$0(com.aidigame.hisun.pet.ui.AtUserListActivity$5) -> access$0
com.aidigame.hisun.pet.ui.AtUserListActivity$5$1 -> com.aidigame.hisun.pet.ui.AtUserListActivity$5$1:
    com.aidigame.hisun.pet.ui.AtUserListActivity$5 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.AtUserListActivity$6 -> com.aidigame.hisun.pet.ui.n:
    com.aidigame.hisun.pet.ui.AtUserListActivity this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.aidigame.hisun.pet.ui.AtUserListActivity$7 -> com.aidigame.hisun.pet.ui.AtUserListActivity$7:
    com.aidigame.hisun.pet.ui.AtUserListActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.AtUserListActivity access$0(com.aidigame.hisun.pet.ui.AtUserListActivity$7) -> access$0
com.aidigame.hisun.pet.ui.AtUserListActivity$7$1 -> com.aidigame.hisun.pet.ui.AtUserListActivity$7$1:
    com.aidigame.hisun.pet.ui.AtUserListActivity$7 this$1 -> this$1
    java.util.ArrayList val$temp -> val$temp
    void run() -> run
com.aidigame.hisun.pet.ui.AtUserListActivity$7$2 -> com.aidigame.hisun.pet.ui.AtUserListActivity$7$2:
    com.aidigame.hisun.pet.ui.AtUserListActivity$7 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.AwardDetailActivity -> com.aidigame.hisun.pet.ui.AwardDetailActivity:
    android.widget.LinearLayout frameLayout -> a
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> b
    com.aidigame.hisun.pet.http.json.ActivityJson$Data data -> c
    void onCreate(android.os.Bundle) -> onCreate
    void setView() -> a
    void setImage() -> b
    void setBlurImageBackground() -> c
com.aidigame.hisun.pet.ui.AwardDetailActivity$1 -> com.aidigame.hisun.pet.ui.AwardDetailActivity$1:
    com.aidigame.hisun.pet.ui.AwardDetailActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.AwardDetailActivity access$0(com.aidigame.hisun.pet.ui.AwardDetailActivity$1) -> access$0
com.aidigame.hisun.pet.ui.AwardDetailActivity$1$1 -> com.aidigame.hisun.pet.ui.AwardDetailActivity$1$1:
    com.aidigame.hisun.pet.ui.AwardDetailActivity$1 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.AwardDetailActivity$1$2 -> com.aidigame.hisun.pet.ui.AwardDetailActivity$1$2:
    com.aidigame.hisun.pet.ui.AwardDetailActivity$1 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.AwardDetailActivity$2 -> com.aidigame.hisun.pet.ui.o:
    com.aidigame.hisun.pet.ui.AwardDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.AwardDetailActivity$3 -> com.aidigame.hisun.pet.ui.AwardDetailActivity$3:
    com.aidigame.hisun.pet.ui.AwardDetailActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.AwardDetailActivity access$0(com.aidigame.hisun.pet.ui.AwardDetailActivity$3) -> access$0
com.aidigame.hisun.pet.ui.AwardDetailActivity$3$1 -> com.aidigame.hisun.pet.ui.AwardDetailActivity$3$1:
    com.aidigame.hisun.pet.ui.AwardDetailActivity$3 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.BiteActivity -> com.aidigame.hisun.pet.ui.BiteActivity:
    com.nostra13.universalimageloader.core.DisplayImageOptions displayImageOptions -> a
    android.support.v4.view.ViewPager viewPager -> b
    android.view.View view1 -> c
    android.view.View view2 -> d
    android.view.View view3 -> e
    android.view.View view4 -> f
    android.view.View view5 -> g
    com.aidigame.hisun.pet.adapter.HomeViewPagerAdapter adapter -> h
    java.util.ArrayList viewList -> i
    com.aidigame.hisun.pet.widget.AudioRecordAndPlayer audioRecordAndPlayer -> j
    android.widget.LinearLayout progressLayout -> k
    com.buihha.audiorecorder.Mp3Recorder mp3Recorder -> l
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> m
    com.aidigame.hisun.pet.bean.Animal animal -> n
    com.aidigame.hisun.pet.widget.ShowProgress showProgress -> o
    java.lang.String voicePath -> p
    android.widget.ImageView cloudIV1 -> q
    android.widget.ImageView cloudIV2 -> r
    android.widget.RelativeLayout shareBitmapLayout -> s
    java.lang.String view4Note -> t
    android.os.Handler handler -> u
    boolean islongClick -> v
    java.lang.String timeStr -> w
    int recordTime -> x
    int playState -> y
    int max -> z
    int progress -> A
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> c
    void initView1() -> d
    void initView2() -> e
    void initView3() -> a
    void initView4() -> b
    void initView5() -> f
    void share(android.view.View) -> share
    void access$0(com.aidigame.hisun.pet.ui.BiteActivity) -> a
    void access$1(com.aidigame.hisun.pet.ui.BiteActivity) -> b
    void access$2(com.aidigame.hisun.pet.ui.BiteActivity) -> c
com.aidigame.hisun.pet.ui.BiteActivity$1 -> com.aidigame.hisun.pet.ui.p:
    com.aidigame.hisun.pet.ui.BiteActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.aidigame.hisun.pet.ui.BiteActivity$10 -> com.aidigame.hisun.pet.ui.q:
    com.aidigame.hisun.pet.ui.BiteActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.BiteActivity$11 -> com.aidigame.hisun.pet.ui.r:
    com.aidigame.hisun.pet.ui.BiteActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.BiteActivity$12 -> com.aidigame.hisun.pet.ui.s:
    com.aidigame.hisun.pet.ui.BiteActivity this$0 -> a
    android.widget.TextView val$timeTV -> b
    android.widget.ImageView val$controlIv -> c
    com.aidigame.hisun.pet.view.BallProgressView val$ballProgressView -> d
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.ui.BiteActivity access$0(com.aidigame.hisun.pet.ui.BiteActivity$12) -> a
com.aidigame.hisun.pet.ui.BiteActivity$12$1 -> com.aidigame.hisun.pet.ui.BiteActivity$12$1:
    com.aidigame.hisun.pet.ui.BiteActivity$12 this$1 -> this$1
    com.aidigame.hisun.pet.view.BallProgressView val$ballProgressView -> val$ballProgressView
    void run() -> run
com.aidigame.hisun.pet.ui.BiteActivity$13 -> com.aidigame.hisun.pet.ui.t:
    java.lang.String temp -> a
    com.aidigame.hisun.pet.ui.BiteActivity this$0 -> b
    android.widget.ImageView val$controlIv -> c
    android.widget.TextView val$timeTV -> d
    void onStop() -> a
    void onProgress(int) -> a
    com.aidigame.hisun.pet.ui.BiteActivity access$0(com.aidigame.hisun.pet.ui.BiteActivity$13) -> a
com.aidigame.hisun.pet.ui.BiteActivity$13$1 -> com.aidigame.hisun.pet.ui.BiteActivity$13$1:
    com.aidigame.hisun.pet.ui.BiteActivity$13 this$1 -> this$1
    android.widget.ImageView val$controlIv -> val$controlIv
    void run() -> run
com.aidigame.hisun.pet.ui.BiteActivity$13$2 -> com.aidigame.hisun.pet.ui.BiteActivity$13$2:
    com.aidigame.hisun.pet.ui.BiteActivity$13 this$1 -> this$1
    android.widget.TextView val$timeTV -> val$timeTV
    void run() -> run
com.aidigame.hisun.pet.ui.BiteActivity$14 -> com.aidigame.hisun.pet.ui.BiteActivity$14:
    com.aidigame.hisun.pet.ui.BiteActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.BiteActivity access$0(com.aidigame.hisun.pet.ui.BiteActivity$14) -> access$0
com.aidigame.hisun.pet.ui.BiteActivity$14$1 -> com.aidigame.hisun.pet.ui.BiteActivity$14$1:
    com.aidigame.hisun.pet.ui.BiteActivity$14 this$1 -> this$1
    com.aidigame.hisun.pet.bean.PetPicture val$picture -> val$picture
    void run() -> run
com.aidigame.hisun.pet.ui.BiteActivity$15 -> com.aidigame.hisun.pet.ui.u:
    com.aidigame.hisun.pet.ui.BiteActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.BiteActivity$16 -> com.aidigame.hisun.pet.ui.v:
    com.aidigame.hisun.pet.ui.BiteActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.BiteActivity$17 -> com.aidigame.hisun.pet.ui.w:
    com.aidigame.hisun.pet.ui.BiteActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.BiteActivity$18 -> com.aidigame.hisun.pet.ui.x:
    com.aidigame.hisun.pet.ui.BiteActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.BiteActivity$19 -> com.aidigame.hisun.pet.ui.y:
    com.aidigame.hisun.pet.ui.BiteActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.BiteActivity$2 -> com.aidigame.hisun.pet.ui.z:
    com.aidigame.hisun.pet.ui.BiteActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.BiteActivity$3 -> com.aidigame.hisun.pet.ui.BiteActivity$3:
    com.aidigame.hisun.pet.ui.BiteActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.BiteActivity access$0(com.aidigame.hisun.pet.ui.BiteActivity$3) -> access$0
com.aidigame.hisun.pet.ui.BiteActivity$3$1 -> com.aidigame.hisun.pet.ui.BiteActivity$3$1:
    com.aidigame.hisun.pet.ui.BiteActivity$3 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.BiteActivity$4 -> com.aidigame.hisun.pet.ui.aa:
    com.aidigame.hisun.pet.ui.BiteActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.aidigame.hisun.pet.ui.BiteActivity$5 -> com.aidigame.hisun.pet.ui.ab:
    com.aidigame.hisun.pet.ui.BiteActivity this$0 -> a
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.aidigame.hisun.pet.ui.BiteActivity$6 -> com.aidigame.hisun.pet.ui.ac:
    com.aidigame.hisun.pet.ui.BiteActivity this$0 -> a
    android.widget.TextView val$timeTv -> b
    android.widget.ImageView val$pressIv -> c
    com.aidigame.hisun.pet.view.BallProgressView val$ballProgressView -> d
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.BiteActivity$7 -> com.aidigame.hisun.pet.ui.ad:
    com.aidigame.hisun.pet.ui.BiteActivity this$0 -> a
    android.widget.ImageView val$pressIv -> b
    android.widget.TextView val$timeTv -> c
    com.aidigame.hisun.pet.view.BallProgressView val$ballProgressView -> d
    boolean onLongClick(android.view.View) -> onLongClick
com.aidigame.hisun.pet.ui.BiteActivity$8 -> com.aidigame.hisun.pet.ui.ae:
    com.aidigame.hisun.pet.ui.BiteActivity this$0 -> a
    android.widget.TextView val$timeTv -> b
    android.widget.ImageView val$pressIv -> c
    com.aidigame.hisun.pet.view.BallProgressView val$ballProgressView -> d
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.aidigame.hisun.pet.ui.BiteActivity$9 -> com.aidigame.hisun.pet.ui.af:
    java.lang.String temp -> a
    com.aidigame.hisun.pet.ui.BiteActivity this$0 -> b
    com.aidigame.hisun.pet.view.BallProgressView val$ballProgressView -> c
    android.widget.ImageView val$pressIv -> d
    android.widget.TextView val$timeTv -> e
    void onStop() -> a
    void onProgress(int) -> a
    com.aidigame.hisun.pet.ui.BiteActivity access$0(com.aidigame.hisun.pet.ui.BiteActivity$9) -> a
com.aidigame.hisun.pet.ui.BiteActivity$9$1 -> com.aidigame.hisun.pet.ui.BiteActivity$9$1:
    com.aidigame.hisun.pet.ui.BiteActivity$9 this$1 -> this$1
    com.aidigame.hisun.pet.view.BallProgressView val$ballProgressView -> val$ballProgressView
    android.widget.ImageView val$pressIv -> val$pressIv
    android.widget.TextView val$timeTv -> val$timeTv
    void run() -> run
com.aidigame.hisun.pet.ui.BiteActivity$9$2 -> com.aidigame.hisun.pet.ui.BiteActivity$9$2:
    com.aidigame.hisun.pet.ui.BiteActivity$9 this$1 -> this$1
    android.widget.TextView val$timeTv -> val$timeTv
    void run() -> run
com.aidigame.hisun.pet.ui.ChatActivity -> com.aidigame.hisun.pet.ui.ChatActivity:
    android.widget.FrameLayout frameLayout -> a
    android.view.View viewTopWhite -> b
    android.widget.ImageView back -> c
    android.widget.TextView whoTv -> d
    android.widget.TextView sendTv -> e
    android.widget.ListView listView -> f
    android.widget.EditText editText -> g
    boolean isSendingMail -> h
    com.aidigame.hisun.pet.bean.User user -> i
    int toId -> j
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> k
    com.aidigame.hisun.pet.bean.TalkMessage mailList -> l
    java.util.ArrayList talks -> m
    com.aidigame.hisun.pet.adapter.MailListViewAdapter mailListViewAdapter -> n
    java.lang.Thread chatThread -> o
    boolean stopThread -> p
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> b
    void onDestroy() -> onDestroy
    void setBlurImageBackground() -> c
    void onClick(android.view.View) -> onClick
    void sendMail() -> a
com.aidigame.hisun.pet.ui.ChatActivity$1 -> com.aidigame.hisun.pet.ui.ChatActivity$1:
    com.aidigame.hisun.pet.ui.ChatActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.ChatActivity access$0(com.aidigame.hisun.pet.ui.ChatActivity$1) -> access$0
com.aidigame.hisun.pet.ui.ChatActivity$1$1 -> com.aidigame.hisun.pet.ui.ChatActivity$1$1:
    com.aidigame.hisun.pet.ui.ChatActivity$1 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.ChatActivity$1$2 -> com.aidigame.hisun.pet.ui.ChatActivity$1$2:
    com.aidigame.hisun.pet.ui.ChatActivity$1 this$1 -> this$1
    java.util.ArrayList val$msgs -> val$msgs
    void run() -> run
com.aidigame.hisun.pet.ui.ChatActivity$2 -> com.aidigame.hisun.pet.ui.ChatActivity$2:
    com.aidigame.hisun.pet.ui.ChatActivity this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.ui.ChatActivity$3 -> com.aidigame.hisun.pet.ui.ChatActivity$3:
    com.aidigame.hisun.pet.ui.ChatActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.ChatActivity access$0(com.aidigame.hisun.pet.ui.ChatActivity$3) -> access$0
com.aidigame.hisun.pet.ui.ChatActivity$3$1 -> com.aidigame.hisun.pet.ui.ChatActivity$3$1:
    com.aidigame.hisun.pet.ui.ChatActivity$3 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.ChatActivity$4 -> com.aidigame.hisun.pet.ui.ag:
    com.aidigame.hisun.pet.ui.ChatActivity this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.aidigame.hisun.pet.ui.ChatActivity$5 -> com.aidigame.hisun.pet.ui.ChatActivity$5:
    android.widget.Toast toast -> toast
    com.aidigame.hisun.pet.ui.ChatActivity this$0 -> this$0
    com.aidigame.hisun.pet.bean.TalkMessage$Msg val$dataSystem -> val$dataSystem
    void run() -> run
    com.aidigame.hisun.pet.ui.ChatActivity access$0(com.aidigame.hisun.pet.ui.ChatActivity$5) -> access$0
com.aidigame.hisun.pet.ui.ChatActivity$5$1 -> com.aidigame.hisun.pet.ui.ChatActivity$5$1:
    com.aidigame.hisun.pet.ui.ChatActivity$5 this$1 -> this$1
    boolean val$flag -> val$flag
    com.aidigame.hisun.pet.bean.TalkMessage$Msg val$dataSystem -> val$dataSystem
    void run() -> run
com.aidigame.hisun.pet.ui.ChoseAcountTypeActivity -> com.aidigame.hisun.pet.ui.ChoseAcountTypeActivity:
    android.widget.ImageView noPetIV -> a
    android.widget.ImageView hasPetIV -> b
    android.widget.ImageView backIV -> c
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> d
    com.aidigame.hisun.pet.ui.ChoseAcountTypeActivity choseAcountTypeActivity -> e
    int mode -> f
    int from -> g
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
com.aidigame.hisun.pet.ui.ChoseAcountTypeActivity$1 -> com.aidigame.hisun.pet.ui.ah:
    com.aidigame.hisun.pet.ui.ChoseAcountTypeActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.ChoseAcountTypeActivity$2 -> com.aidigame.hisun.pet.ui.ai:
    com.aidigame.hisun.pet.ui.ChoseAcountTypeActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.ChoseAcountTypeActivity$3 -> com.aidigame.hisun.pet.ui.aj:
    com.aidigame.hisun.pet.ui.ChoseAcountTypeActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.ChoseClassActivity -> com.aidigame.hisun.pet.ui.ChoseClassActivity:
    android.widget.RelativeLayout parentLayout -> a
    android.widget.ListView listView -> b
    java.util.ArrayList list -> c
    com.aidigame.hisun.pet.adapter.ClassListViewAdapter adapter -> d
    android.widget.TextView tv -> e
    int classs -> f
    boolean choseRace -> g
    int mode -> h
    void onCreate(android.os.Bundle) -> onCreate
    void setBlurImageBackground() -> a
    void initListener() -> b
com.aidigame.hisun.pet.ui.ChoseClassActivity$1 -> com.aidigame.hisun.pet.ui.ChoseClassActivity$1:
    com.aidigame.hisun.pet.ui.ChoseClassActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.ChoseClassActivity access$0(com.aidigame.hisun.pet.ui.ChoseClassActivity$1) -> access$0
com.aidigame.hisun.pet.ui.ChoseClassActivity$1$1 -> com.aidigame.hisun.pet.ui.ChoseClassActivity$1$1:
    com.aidigame.hisun.pet.ui.ChoseClassActivity$1 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.ChoseClassActivity$2 -> com.aidigame.hisun.pet.ui.ak:
    com.aidigame.hisun.pet.ui.ChoseClassActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.ChoseClassActivity$3 -> com.aidigame.hisun.pet.ui.al:
    com.aidigame.hisun.pet.ui.ChoseClassActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.aidigame.hisun.pet.ui.ChoseKingActivity -> com.aidigame.hisun.pet.ui.ChoseKingActivity:
    android.widget.FrameLayout frameLayout -> a
    android.view.View viewTopWhite -> b
    android.view.View popupParent -> c
    android.widget.RelativeLayout black_layout -> d
    com.aidigame.hisun.pet.ui.ChoseKingActivity choseKingActivity -> e
    com.aidigame.hisun.pet.view.PullToRefreshAndMoreView pullToRefreshAndMoreView -> f
    android.widget.LinearLayout progressLayout -> g
    android.widget.ListView listView -> h
    android.widget.ImageView back -> i
    android.widget.ImageView search -> j
    android.widget.ImageView cleanIV -> k
    android.widget.TextView raceTV -> l
    android.widget.TextView choseStyleSpinner -> m
    android.widget.PopupWindow raceWindow -> n
    com.aidigame.hisun.pet.widget.ShowProgress showProgress -> o
    java.util.ArrayList list -> p
    com.aidigame.hisun.pet.adapter.ChoseKingListViewAdapter choseKingListViewAdapter -> q
    android.widget.RelativeLayout functionLayout -> r
    android.widget.LinearLayout searchLayout -> s
    android.widget.ImageView search2 -> t
    android.widget.TextView cancel -> u
    android.widget.EditText inputET -> v
    int from -> w
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> x
    android.widget.LinearLayout noteLinearLayout -> y
    int mode -> z
    int currentType -> A
    int currentStyle -> B
    int currentFrom -> C
    long last_aid -> D
    boolean isSearching -> E
    void onCreate(android.os.Bundle) -> onCreate
    void inintView() -> d
    void loadData() -> e
    void setBlurImageBackground() -> f
    void onClick(android.view.View) -> onClick
    void showStyleWindow() -> c
    void showStarWindow() -> g
    void searchPet(java.lang.String) -> a
    void onRefresh() -> a
    void onMore() -> b
com.aidigame.hisun.pet.ui.ChoseKingActivity$1 -> com.aidigame.hisun.pet.ui.am:
    com.aidigame.hisun.pet.ui.ChoseKingActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.aidigame.hisun.pet.ui.ChoseKingActivity$10 -> com.aidigame.hisun.pet.ui.an:
    com.aidigame.hisun.pet.ui.ChoseKingActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.ui.ChoseKingActivity access$0(com.aidigame.hisun.pet.ui.ChoseKingActivity$10) -> a
com.aidigame.hisun.pet.ui.ChoseKingActivity$10$1 -> com.aidigame.hisun.pet.ui.ChoseKingActivity$10$1:
    com.aidigame.hisun.pet.ui.ChoseKingActivity$10 this$1 -> this$1
    void run() -> run
    com.aidigame.hisun.pet.ui.ChoseKingActivity$10 access$0(com.aidigame.hisun.pet.ui.ChoseKingActivity$10$1) -> access$0
com.aidigame.hisun.pet.ui.ChoseKingActivity$10$1$1 -> com.aidigame.hisun.pet.ui.ChoseKingActivity$10$1$1:
    com.aidigame.hisun.pet.ui.ChoseKingActivity$10$1 this$2 -> this$2
    java.util.ArrayList val$animals -> val$animals
    void run() -> run
com.aidigame.hisun.pet.ui.ChoseKingActivity$11 -> com.aidigame.hisun.pet.ui.ao:
    com.aidigame.hisun.pet.ui.ChoseKingActivity this$0 -> a
    void onDismiss() -> onDismiss
com.aidigame.hisun.pet.ui.ChoseKingActivity$12 -> com.aidigame.hisun.pet.ui.ap:
    com.aidigame.hisun.pet.ui.ChoseKingActivity this$0 -> a
    java.lang.String[] val$strArray -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    com.aidigame.hisun.pet.ui.ChoseKingActivity access$0(com.aidigame.hisun.pet.ui.ChoseKingActivity$12) -> a
com.aidigame.hisun.pet.ui.ChoseKingActivity$12$1 -> com.aidigame.hisun.pet.ui.ChoseKingActivity$12$1:
    com.aidigame.hisun.pet.ui.ChoseKingActivity$12 this$1 -> this$1
    java.lang.String val$temp -> val$temp
    void run() -> run
    com.aidigame.hisun.pet.ui.ChoseKingActivity$12 access$0(com.aidigame.hisun.pet.ui.ChoseKingActivity$12$1) -> access$0
com.aidigame.hisun.pet.ui.ChoseKingActivity$12$1$1 -> com.aidigame.hisun.pet.ui.ChoseKingActivity$12$1$1:
    com.aidigame.hisun.pet.ui.ChoseKingActivity$12$1 this$2 -> this$2
    java.util.ArrayList val$animals -> val$animals
    void run() -> run
com.aidigame.hisun.pet.ui.ChoseKingActivity$13 -> com.aidigame.hisun.pet.ui.ChoseKingActivity$13:
    com.aidigame.hisun.pet.ui.ChoseKingActivity this$0 -> this$0
    java.lang.String val$name -> val$name
    void run() -> run
    com.aidigame.hisun.pet.ui.ChoseKingActivity access$0(com.aidigame.hisun.pet.ui.ChoseKingActivity$13) -> access$0
com.aidigame.hisun.pet.ui.ChoseKingActivity$13$1 -> com.aidigame.hisun.pet.ui.ChoseKingActivity$13$1:
    com.aidigame.hisun.pet.ui.ChoseKingActivity$13 this$1 -> this$1
    java.util.ArrayList val$animals -> val$animals
    java.lang.String val$name -> val$name
    void run() -> run
com.aidigame.hisun.pet.ui.ChoseKingActivity$14 -> com.aidigame.hisun.pet.ui.ChoseKingActivity$14:
    com.aidigame.hisun.pet.ui.ChoseKingActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.ChoseKingActivity access$0(com.aidigame.hisun.pet.ui.ChoseKingActivity$14) -> access$0
com.aidigame.hisun.pet.ui.ChoseKingActivity$14$1 -> com.aidigame.hisun.pet.ui.ChoseKingActivity$14$1:
    com.aidigame.hisun.pet.ui.ChoseKingActivity$14 this$1 -> this$1
    java.util.ArrayList val$animals -> val$animals
    void run() -> run
com.aidigame.hisun.pet.ui.ChoseKingActivity$15 -> com.aidigame.hisun.pet.ui.ChoseKingActivity$15:
    com.aidigame.hisun.pet.ui.ChoseKingActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.ChoseKingActivity access$0(com.aidigame.hisun.pet.ui.ChoseKingActivity$15) -> access$0
com.aidigame.hisun.pet.ui.ChoseKingActivity$15$1 -> com.aidigame.hisun.pet.ui.ChoseKingActivity$15$1:
    com.aidigame.hisun.pet.ui.ChoseKingActivity$15 this$1 -> this$1
    java.util.ArrayList val$animals -> val$animals
    void run() -> run
com.aidigame.hisun.pet.ui.ChoseKingActivity$2 -> com.aidigame.hisun.pet.ui.ChoseKingActivity$2:
    com.aidigame.hisun.pet.ui.ChoseKingActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.ChoseKingActivity access$0(com.aidigame.hisun.pet.ui.ChoseKingActivity$2) -> access$0
com.aidigame.hisun.pet.ui.ChoseKingActivity$2$1 -> com.aidigame.hisun.pet.ui.ChoseKingActivity$2$1:
    com.aidigame.hisun.pet.ui.ChoseKingActivity$2 this$1 -> this$1
    java.util.ArrayList val$temp -> val$temp
    void run() -> run
com.aidigame.hisun.pet.ui.ChoseKingActivity$3 -> com.aidigame.hisun.pet.ui.ChoseKingActivity$3:
    com.aidigame.hisun.pet.ui.ChoseKingActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.ChoseKingActivity access$0(com.aidigame.hisun.pet.ui.ChoseKingActivity$3) -> access$0
com.aidigame.hisun.pet.ui.ChoseKingActivity$3$1 -> com.aidigame.hisun.pet.ui.ChoseKingActivity$3$1:
    com.aidigame.hisun.pet.ui.ChoseKingActivity$3 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.ChoseKingActivity$4 -> com.aidigame.hisun.pet.ui.aq:
    com.aidigame.hisun.pet.ui.ChoseKingActivity this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.aidigame.hisun.pet.ui.ChoseKingActivity$5 -> com.aidigame.hisun.pet.ui.ar:
    com.aidigame.hisun.pet.ui.ChoseKingActivity this$0 -> a
    void onDismiss() -> onDismiss
com.aidigame.hisun.pet.ui.ChoseKingActivity$6 -> com.aidigame.hisun.pet.ui.as:
    com.aidigame.hisun.pet.ui.ChoseKingActivity this$0 -> a
    java.lang.String[] val$strArray -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    com.aidigame.hisun.pet.ui.ChoseKingActivity access$0(com.aidigame.hisun.pet.ui.ChoseKingActivity$6) -> a
com.aidigame.hisun.pet.ui.ChoseKingActivity$6$1 -> com.aidigame.hisun.pet.ui.ChoseKingActivity$6$1:
    com.aidigame.hisun.pet.ui.ChoseKingActivity$6 this$1 -> this$1
    void run() -> run
    com.aidigame.hisun.pet.ui.ChoseKingActivity$6 access$0(com.aidigame.hisun.pet.ui.ChoseKingActivity$6$1) -> access$0
com.aidigame.hisun.pet.ui.ChoseKingActivity$6$1$1 -> com.aidigame.hisun.pet.ui.ChoseKingActivity$6$1$1:
    com.aidigame.hisun.pet.ui.ChoseKingActivity$6$1 this$2 -> this$2
    java.util.ArrayList val$animals -> val$animals
    void run() -> run
com.aidigame.hisun.pet.ui.ChoseKingActivity$7 -> com.aidigame.hisun.pet.ui.at:
    com.aidigame.hisun.pet.ui.ChoseKingActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.ui.ChoseKingActivity access$0(com.aidigame.hisun.pet.ui.ChoseKingActivity$7) -> a
com.aidigame.hisun.pet.ui.ChoseKingActivity$7$1 -> com.aidigame.hisun.pet.ui.ChoseKingActivity$7$1:
    com.aidigame.hisun.pet.ui.ChoseKingActivity$7 this$1 -> this$1
    void run() -> run
    com.aidigame.hisun.pet.ui.ChoseKingActivity$7 access$0(com.aidigame.hisun.pet.ui.ChoseKingActivity$7$1) -> access$0
com.aidigame.hisun.pet.ui.ChoseKingActivity$7$1$1 -> com.aidigame.hisun.pet.ui.ChoseKingActivity$7$1$1:
    com.aidigame.hisun.pet.ui.ChoseKingActivity$7$1 this$2 -> this$2
    java.util.ArrayList val$animals -> val$animals
    void run() -> run
com.aidigame.hisun.pet.ui.ChoseKingActivity$9 -> com.aidigame.hisun.pet.ui.au:
    com.aidigame.hisun.pet.ui.ChoseKingActivity this$0 -> a
    java.lang.String[] val$strArray -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    com.aidigame.hisun.pet.ui.ChoseKingActivity access$0(com.aidigame.hisun.pet.ui.ChoseKingActivity$9) -> a
com.aidigame.hisun.pet.ui.ChoseKingActivity$9$1 -> com.aidigame.hisun.pet.ui.ChoseKingActivity$9$1:
    com.aidigame.hisun.pet.ui.ChoseKingActivity$9 this$1 -> this$1
    java.lang.String val$temp -> val$temp
    void run() -> run
    com.aidigame.hisun.pet.ui.ChoseKingActivity$9 access$0(com.aidigame.hisun.pet.ui.ChoseKingActivity$9$1) -> access$0
com.aidigame.hisun.pet.ui.ChoseKingActivity$9$1$1 -> com.aidigame.hisun.pet.ui.ChoseKingActivity$9$1$1:
    com.aidigame.hisun.pet.ui.ChoseKingActivity$9$1 this$2 -> this$2
    java.util.ArrayList val$animals -> val$animals
    void run() -> run
com.aidigame.hisun.pet.ui.ChosePetActivity -> com.aidigame.hisun.pet.ui.ChosePetActivity:
    android.widget.FrameLayout frameLayout -> a
    android.view.View viewTopWhite -> b
    com.aidigame.hisun.pet.adapter.ChosePetListAdapter adapter -> c
    java.util.ArrayList list -> d
    android.widget.ListView listView -> e
    java.lang.String likerString -> f
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> g
    android.widget.ImageView back -> h
    android.os.Handler handler -> i
    void onCreate(android.os.Bundle) -> onCreate
    void loadData() -> a
    void setBlurImageBackground() -> b
com.aidigame.hisun.pet.ui.ChosePetActivity$1 -> com.aidigame.hisun.pet.ui.av:
    com.aidigame.hisun.pet.ui.ChosePetActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.aidigame.hisun.pet.ui.ChosePetActivity$2 -> com.aidigame.hisun.pet.ui.aw:
    com.aidigame.hisun.pet.ui.ChosePetActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.aidigame.hisun.pet.ui.ChosePetActivity$3 -> com.aidigame.hisun.pet.ui.ax:
    com.aidigame.hisun.pet.ui.ChosePetActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.ChosePetActivity$4 -> com.aidigame.hisun.pet.ui.ChosePetActivity$4:
    com.aidigame.hisun.pet.ui.ChosePetActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.ChosePetActivity access$0(com.aidigame.hisun.pet.ui.ChosePetActivity$4) -> access$0
com.aidigame.hisun.pet.ui.ChosePetActivity$4$1 -> com.aidigame.hisun.pet.ui.ChosePetActivity$4$1:
    com.aidigame.hisun.pet.ui.ChosePetActivity$4 this$1 -> this$1
    java.util.ArrayList val$temp -> val$temp
    void run() -> run
com.aidigame.hisun.pet.ui.ChosePetActivity$5 -> com.aidigame.hisun.pet.ui.ChosePetActivity$5:
    com.aidigame.hisun.pet.ui.ChosePetActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.ChosePetActivity access$0(com.aidigame.hisun.pet.ui.ChosePetActivity$5) -> access$0
com.aidigame.hisun.pet.ui.ChosePetActivity$5$1 -> com.aidigame.hisun.pet.ui.ChosePetActivity$5$1:
    com.aidigame.hisun.pet.ui.ChosePetActivity$5 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.ChosePetActivity$6 -> com.aidigame.hisun.pet.ui.ay:
    com.aidigame.hisun.pet.ui.ChosePetActivity this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.aidigame.hisun.pet.ui.ChoseStarActivity -> com.aidigame.hisun.pet.ui.ChoseStarActivity:
    android.widget.ImageView cloud1 -> a
    android.widget.ImageView cloud2 -> b
    android.widget.ImageView catImage -> c
    android.widget.ImageView dogImage -> d
    android.widget.ImageView imageView2 -> e
    boolean catAnimaShow -> f
    int mode -> g
    android.os.Handler handler -> h
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> b
    void onClick(android.view.View) -> onClick
    void timeDelay() -> a
    void cloudAnimation(android.view.View,int) -> a
    void starShake(android.widget.ImageView) -> a
    void access$0(com.aidigame.hisun.pet.ui.ChoseStarActivity,android.view.View,int) -> a
    void access$1(com.aidigame.hisun.pet.ui.ChoseStarActivity,android.widget.ImageView) -> a
com.aidigame.hisun.pet.ui.ChoseStarActivity$1 -> com.aidigame.hisun.pet.ui.az:
    com.aidigame.hisun.pet.ui.ChoseStarActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.aidigame.hisun.pet.ui.ChoseStarActivity$2 -> com.aidigame.hisun.pet.ui.ChoseStarActivity$2:
    com.aidigame.hisun.pet.ui.ChoseStarActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.ChoseStarActivity access$0(com.aidigame.hisun.pet.ui.ChoseStarActivity$2) -> access$0
com.aidigame.hisun.pet.ui.ChoseStarActivity$2$1 -> com.aidigame.hisun.pet.ui.ChoseStarActivity$2$1:
    com.aidigame.hisun.pet.ui.ChoseStarActivity$2 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.ChoseStarActivity$2$2 -> com.aidigame.hisun.pet.ui.ChoseStarActivity$2$2:
    com.aidigame.hisun.pet.ui.ChoseStarActivity$2 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.ChoseStarActivity$2$3 -> com.aidigame.hisun.pet.ui.ChoseStarActivity$2$3:
    com.aidigame.hisun.pet.ui.ChoseStarActivity$2 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.ChoseStarActivity$3 -> com.aidigame.hisun.pet.ui.ChoseStarActivity$3:
    com.aidigame.hisun.pet.ui.ChoseStarActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.ChoseStarActivity access$0(com.aidigame.hisun.pet.ui.ChoseStarActivity$3) -> access$0
com.aidigame.hisun.pet.ui.ChoseStarActivity$3$1 -> com.aidigame.hisun.pet.ui.ba:
    com.aidigame.hisun.pet.ui.ChoseStarActivity$3 this$1 -> a
    java.lang.String val$url -> b
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.aidigame.hisun.pet.ui.ChoseStarActivity$4 -> com.aidigame.hisun.pet.ui.bb:
    com.aidigame.hisun.pet.ui.ChoseStarActivity this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    com.aidigame.hisun.pet.ui.ChoseStarActivity access$0(com.aidigame.hisun.pet.ui.ChoseStarActivity$4) -> a
com.aidigame.hisun.pet.ui.ChoseStarActivity$4$1 -> com.aidigame.hisun.pet.ui.ChoseStarActivity$4$1:
    com.aidigame.hisun.pet.ui.ChoseStarActivity$4 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.ChoseStarActivity$4$2 -> com.aidigame.hisun.pet.ui.ChoseStarActivity$4$2:
    com.aidigame.hisun.pet.ui.ChoseStarActivity$4 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.ContributeRankListActivity -> com.aidigame.hisun.pet.ui.ContributeRankListActivity:
    android.widget.FrameLayout frameLayout -> a
    android.view.View viewTopWhite -> b
    android.view.View popupParent -> c
    android.widget.RelativeLayout black_layout -> d
    android.widget.ListView listView -> e
    android.widget.TextView findMeTV -> f
    android.widget.TextView contributeTv -> g
    com.aidigame.hisun.pet.adapter.ContributeRankListAdapter adapter -> h
    java.util.ArrayList peopleList -> i
    java.util.ArrayList tempList -> j
    android.widget.PopupWindow popupWindow -> k
    boolean findMe -> l
    int category -> m
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> n
    com.aidigame.hisun.pet.bean.Animal animal -> o
    boolean isFindMeScroll -> p
    void onCreate(android.os.Bundle) -> onCreate
    void setBlurImageBackground() -> a
    void loadData(int) -> b
    void findTempList(int) -> a
    void initView() -> b
    void showPopupWindow() -> c
    void showListArrow() -> d
    void access$0(com.aidigame.hisun.pet.ui.ContributeRankListActivity) -> a
    void access$1(com.aidigame.hisun.pet.ui.ContributeRankListActivity) -> b
    void access$2(com.aidigame.hisun.pet.ui.ContributeRankListActivity,int) -> a
com.aidigame.hisun.pet.ui.ContributeRankListActivity$1 -> com.aidigame.hisun.pet.ui.ContributeRankListActivity$1:
    com.aidigame.hisun.pet.ui.ContributeRankListActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.ContributeRankListActivity access$0(com.aidigame.hisun.pet.ui.ContributeRankListActivity$1) -> access$0
com.aidigame.hisun.pet.ui.ContributeRankListActivity$1$1 -> com.aidigame.hisun.pet.ui.ContributeRankListActivity$1$1:
    com.aidigame.hisun.pet.ui.ContributeRankListActivity$1 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.ContributeRankListActivity$10 -> com.aidigame.hisun.pet.ui.bc:
    com.aidigame.hisun.pet.ui.ContributeRankListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.ContributeRankListActivity$11 -> com.aidigame.hisun.pet.ui.bd:
    com.aidigame.hisun.pet.ui.ContributeRankListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.ContributeRankListActivity$12 -> com.aidigame.hisun.pet.ui.be:
    com.aidigame.hisun.pet.ui.ContributeRankListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.ContributeRankListActivity$2 -> com.aidigame.hisun.pet.ui.bf:
    com.aidigame.hisun.pet.ui.ContributeRankListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.aidigame.hisun.pet.ui.ContributeRankListActivity$3 -> com.aidigame.hisun.pet.ui.bg:
    com.aidigame.hisun.pet.ui.ContributeRankListActivity this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.aidigame.hisun.pet.ui.ContributeRankListActivity$4 -> com.aidigame.hisun.pet.ui.ContributeRankListActivity$4:
    com.aidigame.hisun.pet.ui.ContributeRankListActivity this$0 -> this$0
    int val$category -> val$category
    void run() -> run
    com.aidigame.hisun.pet.ui.ContributeRankListActivity access$0(com.aidigame.hisun.pet.ui.ContributeRankListActivity$4) -> access$0
com.aidigame.hisun.pet.ui.ContributeRankListActivity$4$1 -> com.aidigame.hisun.pet.ui.ContributeRankListActivity$4$1:
    com.aidigame.hisun.pet.ui.ContributeRankListActivity$4 this$1 -> this$1
    java.util.ArrayList val$users -> val$users
    void run() -> run
com.aidigame.hisun.pet.ui.ContributeRankListActivity$5 -> com.aidigame.hisun.pet.ui.bh:
    com.aidigame.hisun.pet.ui.ContributeRankListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.ContributeRankListActivity$6 -> com.aidigame.hisun.pet.ui.bi:
    com.aidigame.hisun.pet.ui.ContributeRankListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.ContributeRankListActivity$7 -> com.aidigame.hisun.pet.ui.bj:
    com.aidigame.hisun.pet.ui.ContributeRankListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.ContributeRankListActivity$8 -> com.aidigame.hisun.pet.ui.bk:
    com.aidigame.hisun.pet.ui.ContributeRankListActivity this$0 -> a
    void onDismiss() -> onDismiss
com.aidigame.hisun.pet.ui.ContributeRankListActivity$9 -> com.aidigame.hisun.pet.ui.bl:
    com.aidigame.hisun.pet.ui.ContributeRankListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.DetailActivity -> com.aidigame.hisun.pet.ui.DetailActivity:
    android.view.View popupParent -> a
    android.widget.RelativeLayout black_layout -> b
    android.widget.FrameLayout frameLayout -> c
    android.view.View viewTopWhite -> d
    com.aidigame.hisun.pet.view.MyScrollowView myScrollowView -> e
    com.nostra13.universalimageloader.core.DisplayImageOptions displayImageOptions -> f
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> g
    android.widget.LinearLayout waterFullParent -> h
    com.aidigame.hisun.pet.http.json.ActivityJson$Data data -> i
    com.aidigame.hisun.pet.view.HorizontalListView2 horizontalListView2 -> j
    com.aidigame.hisun.pet.widget.ShowWaterFull1 showWaterFull1 -> k
    android.widget.TextView popularTv -> l
    android.widget.TextView newestTv -> m
    com.aidigame.hisun.pet.adapter.ShowTopicHorizontalAdapter horizontalAdapter -> n
    int touchSlop -> o
    int distance -> p
    boolean isRecord -> q
    int yDown -> r
    void onCreate(android.os.Bundle) -> onCreate
    void setBlurImageBackground() -> b
    void setView() -> a
com.aidigame.hisun.pet.ui.DetailActivity$1 -> com.aidigame.hisun.pet.ui.bm:
    com.aidigame.hisun.pet.ui.DetailActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.aidigame.hisun.pet.ui.DetailActivity$10 -> com.aidigame.hisun.pet.ui.DetailActivity$10:
    com.aidigame.hisun.pet.ui.DetailActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.DetailActivity access$0(com.aidigame.hisun.pet.ui.DetailActivity$10) -> access$0
com.aidigame.hisun.pet.ui.DetailActivity$10$1 -> com.aidigame.hisun.pet.ui.DetailActivity$10$1:
    com.aidigame.hisun.pet.ui.DetailActivity$10 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.DetailActivity$11 -> com.aidigame.hisun.pet.ui.bn:
    com.aidigame.hisun.pet.ui.DetailActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.aidigame.hisun.pet.ui.DetailActivity$12 -> com.aidigame.hisun.pet.ui.bo:
    com.aidigame.hisun.pet.ui.DetailActivity this$0 -> a
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.aidigame.hisun.pet.ui.DetailActivity$13 -> com.aidigame.hisun.pet.ui.DetailActivity$13:
    com.aidigame.hisun.pet.ui.DetailActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.DetailActivity access$0(com.aidigame.hisun.pet.ui.DetailActivity$13) -> access$0
com.aidigame.hisun.pet.ui.DetailActivity$13$1 -> com.aidigame.hisun.pet.ui.DetailActivity$13$1:
    com.aidigame.hisun.pet.ui.DetailActivity$13 this$1 -> this$1
    java.util.ArrayList val$urls -> val$urls
    void run() -> run
com.aidigame.hisun.pet.ui.DetailActivity$2 -> com.aidigame.hisun.pet.ui.bp:
    com.aidigame.hisun.pet.ui.DetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.DetailActivity$3 -> com.aidigame.hisun.pet.ui.DetailActivity$3:
    com.aidigame.hisun.pet.ui.DetailActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.DetailActivity access$0(com.aidigame.hisun.pet.ui.DetailActivity$3) -> access$0
com.aidigame.hisun.pet.ui.DetailActivity$3$1 -> com.aidigame.hisun.pet.ui.DetailActivity$3$1:
    com.aidigame.hisun.pet.ui.DetailActivity$3 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.DetailActivity$4 -> com.aidigame.hisun.pet.ui.bq:
    com.aidigame.hisun.pet.ui.DetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.DetailActivity$5 -> com.aidigame.hisun.pet.ui.br:
    com.aidigame.hisun.pet.ui.DetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.DetailActivity$6 -> com.aidigame.hisun.pet.ui.bs:
    com.aidigame.hisun.pet.ui.DetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.DetailActivity$7 -> com.aidigame.hisun.pet.ui.bt:
    com.aidigame.hisun.pet.ui.DetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.DetailActivity$8 -> com.aidigame.hisun.pet.ui.bu:
    com.aidigame.hisun.pet.ui.DetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.DetailActivity$9 -> com.aidigame.hisun.pet.ui.bv:
    com.aidigame.hisun.pet.ui.DetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.DialogGiveSbGiftActivity -> com.aidigame.hisun.pet.ui.DialogGiveSbGiftActivity:
    android.widget.LinearLayout black_layout -> a
    com.aidigame.hisun.pet.widget.ShowProgress showProgress -> b
    android.content.Context context -> c
    java.util.ArrayList giftList -> d
    android.widget.TextView toWhoTV -> e
    android.widget.TextView goShoppngTV -> f
    android.widget.ImageView closeIV -> g
    com.aidigame.hisun.pet.ui.DialogGiveSbGiftActivity dialogGiveSbGiftActivity -> h
    android.widget.ImageView[] ivs -> i
    android.support.v4.view.ViewPager viewPager -> j
    java.util.ArrayList viewList -> k
    com.aidigame.hisun.pet.adapter.HomeViewPagerAdapter adapter -> l
    com.aidigame.hisun.pet.ui.DialogGiveSbGiftActivity$DialogGoListener dialogGoListener -> m
    android.widget.RelativeLayout progressLayout -> n
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> o
    com.aidigame.hisun.pet.bean.Animal animal -> p
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void loadData() -> b
    void giftNumChange(java.util.ArrayList) -> a
com.aidigame.hisun.pet.ui.DialogGiveSbGiftActivity$1 -> com.aidigame.hisun.pet.ui.bw:
    com.aidigame.hisun.pet.ui.DialogGiveSbGiftActivity this$0 -> a
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.aidigame.hisun.pet.ui.DialogGiveSbGiftActivity$2 -> com.aidigame.hisun.pet.ui.bx:
    com.aidigame.hisun.pet.ui.DialogGiveSbGiftActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.DialogGiveSbGiftActivity$3 -> com.aidigame.hisun.pet.ui.by:
    com.aidigame.hisun.pet.ui.DialogGiveSbGiftActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.DialogGiveSbGiftActivity$4 -> com.aidigame.hisun.pet.ui.DialogGiveSbGiftActivity$4:
    com.aidigame.hisun.pet.ui.DialogGiveSbGiftActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.DialogGiveSbGiftActivity access$0(com.aidigame.hisun.pet.ui.DialogGiveSbGiftActivity$4) -> access$0
com.aidigame.hisun.pet.ui.DialogGiveSbGiftActivity$4$1 -> com.aidigame.hisun.pet.ui.DialogGiveSbGiftActivity$4$1:
    com.aidigame.hisun.pet.ui.DialogGiveSbGiftActivity$4 this$1 -> this$1
    java.util.ArrayList val$temp1 -> val$temp1
    void run() -> run
com.aidigame.hisun.pet.ui.DialogGiveSbGiftActivity$5 -> com.aidigame.hisun.pet.ui.bz:
    com.aidigame.hisun.pet.ui.DialogGiveSbGiftActivity this$0 -> a
    java.util.ArrayList val$giftList -> b
    void lastResult(boolean,com.aidigame.hisun.pet.bean.Gift) -> a
    void unRegister() -> a
com.aidigame.hisun.pet.ui.DialogGiveSbGiftActivity$6 -> com.aidigame.hisun.pet.ui.ca:
    com.aidigame.hisun.pet.ui.DialogGiveSbGiftActivity this$0 -> a
    java.util.ArrayList val$giftList -> b
    void lastResult(boolean,com.aidigame.hisun.pet.bean.Gift) -> a
    void unRegister() -> a
com.aidigame.hisun.pet.ui.DialogGiveSbGiftActivity$DialogGoListener -> com.aidigame.hisun.pet.ui.cb:
    void toDo() -> a
    void closeDialog() -> b
    void lastResult(boolean) -> a
    void unRegister() -> c
com.aidigame.hisun.pet.ui.DialogNoteActivity -> com.aidigame.hisun.pet.ui.DialogNoteActivity:
    int mode -> a
    android.widget.TextView goTV -> b
    int gold -> c
    com.aidigame.hisun.pet.ui.DialogNoteActivity$DialogNoteGoListener dialogNoteGoListener -> d
    int num -> e
    void onCreate(android.os.Bundle) -> onCreate
com.aidigame.hisun.pet.ui.DialogNoteActivity$1 -> com.aidigame.hisun.pet.ui.cc:
    com.aidigame.hisun.pet.ui.DialogNoteActivity this$0 -> a
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.aidigame.hisun.pet.ui.DialogNoteActivity$2 -> com.aidigame.hisun.pet.ui.cd:
    com.aidigame.hisun.pet.ui.DialogNoteActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.DialogNoteActivity$DialogNoteGoListener -> com.aidigame.hisun.pet.ui.ce:
    void todo() -> a
com.aidigame.hisun.pet.ui.FAQActivity -> com.aidigame.hisun.pet.ui.FAQActivity:
    android.widget.FrameLayout frameLayout -> a
    android.view.View viewTopWhite -> b
    android.widget.ListView listView1 -> c
    android.widget.ListView listView2 -> d
    com.aidigame.hisun.pet.adapter.FAQListAdapter1 adapter1 -> e
    com.aidigame.hisun.pet.adapter.FAQListAdapter2 adapter2 -> f
    android.widget.TextView commonTv -> g
    android.widget.TextView sendAdviceTv -> h
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void setBlurImageBackground() -> b
com.aidigame.hisun.pet.ui.FAQActivity$1 -> com.aidigame.hisun.pet.ui.cf:
    com.aidigame.hisun.pet.ui.FAQActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.FAQActivity$2 -> com.aidigame.hisun.pet.ui.cg:
    com.aidigame.hisun.pet.ui.FAQActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.FAQActivity$3 -> com.aidigame.hisun.pet.ui.ch:
    com.aidigame.hisun.pet.ui.FAQActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.aidigame.hisun.pet.ui.FAQActivity$4 -> com.aidigame.hisun.pet.ui.FAQActivity$4:
    com.aidigame.hisun.pet.ui.FAQActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.FAQActivity access$0(com.aidigame.hisun.pet.ui.FAQActivity$4) -> access$0
com.aidigame.hisun.pet.ui.FAQActivity$4$1 -> com.aidigame.hisun.pet.ui.FAQActivity$4$1:
    com.aidigame.hisun.pet.ui.FAQActivity$4 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.FAQActivity$5 -> com.aidigame.hisun.pet.ui.ci:
    com.aidigame.hisun.pet.ui.FAQActivity this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.aidigame.hisun.pet.ui.FAQActivity$6 -> com.aidigame.hisun.pet.ui.cj:
    com.aidigame.hisun.pet.ui.FAQActivity this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.aidigame.hisun.pet.ui.GiftInfoActivity -> com.aidigame.hisun.pet.ui.GiftInfoActivity:
    com.aidigame.hisun.pet.bean.Gift gift -> a
    android.widget.ImageView back -> b
    android.widget.ImageView giftIV -> c
    android.widget.TextView giftDesTV -> d
    android.widget.TextView priceTV -> e
    android.widget.TextView addLikeTV -> f
    android.widget.TextView des2TV -> g
    android.widget.TextView scopeTV -> h
    android.widget.TextView standardTV -> i
    android.widget.TextView gperiodTV -> j
    android.widget.TextView postModeTV -> k
    android.widget.TextView decreaseTV -> l
    android.widget.TextView numTV -> m
    android.widget.TextView addTV -> n
    android.widget.TextView buyTV -> o
    int num -> p
    android.widget.LinearLayout blurLayout -> q
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void setBlurImageBackground() -> b
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.GiftInfoActivity$1 -> com.aidigame.hisun.pet.ui.GiftInfoActivity$1:
    com.aidigame.hisun.pet.ui.GiftInfoActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.GiftInfoActivity access$0(com.aidigame.hisun.pet.ui.GiftInfoActivity$1) -> access$0
com.aidigame.hisun.pet.ui.GiftInfoActivity$1$1 -> com.aidigame.hisun.pet.ui.GiftInfoActivity$1$1:
    com.aidigame.hisun.pet.ui.GiftInfoActivity$1 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.ModifyPetInfoActivity -> com.aidigame.hisun.pet.ui.ModifyPetInfoActivity:
    android.widget.FrameLayout frameLayout -> a
    android.widget.LinearLayout black_layout -> b
    com.nostra13.universalimageloader.core.DisplayImageOptions displayImageOptions -> c
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> d
    android.graphics.Bitmap pet_bmp -> e
    android.graphics.Bitmap user_bmp -> f
    com.aidigame.hisun.pet.widget.fragment.AddressDialog addressDialog -> g
    com.aidigame.hisun.pet.widget.ShowProgress showProgress -> h
    android.support.v4.view.ViewPager viewPager -> i
    com.aidigame.hisun.pet.adapter.HomeViewPagerAdapter adapter -> j
    android.widget.ImageView back -> k
    android.view.View view1 -> l
    android.view.View view2 -> m
    android.widget.TextView tv1 -> n
    java.util.ArrayList viewList -> o
    com.aidigame.hisun.pet.view.RoundImageView petIcon -> p
    com.aidigame.hisun.pet.view.RoundImageView userIcon -> q
    android.widget.EditText petName -> r
    android.widget.EditText userName -> s
    android.widget.EditText petRace -> t
    android.widget.EditText petAge -> u
    android.widget.EditText userCity -> v
    android.widget.ImageView petMale -> w
    android.widget.ImageView petFemale -> x
    android.widget.ImageView petSex -> y
    android.widget.RadioGroup radioGroup -> z
    android.widget.Button complete -> A
    android.widget.Button complete2 -> B
    boolean isLogining -> C
    int mode -> D
    android.widget.LinearLayout camera_album -> E
    android.widget.LinearLayout petRaceLayout -> F
    boolean isUserIcon -> G
    java.lang.String petNameStr -> H
    java.lang.String userNameStr -> I
    java.lang.String petAgeStr -> J
    java.lang.String userCityStr -> K
    java.lang.String userCityCode -> L
    java.lang.String petRaceStr -> M
    java.lang.String petRaceCode -> N
    java.lang.String petIconPath -> O
    java.lang.String petSexStr -> P
    java.lang.String userSexStr -> Q
    java.lang.String userIconPath -> R
    com.aidigame.hisun.pet.bean.Animal animal -> S
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> T
    android.os.Handler handler -> U
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void initView() -> a
    void setPetInfo(com.aidigame.hisun.pet.bean.Animal) -> a
    void setUserInfo(com.aidigame.hisun.pet.bean.User) -> a
    void setBlurImageBackground() -> b
    void initUserListener() -> c
    void initPetListener() -> d
    void showCameraAlbum() -> e
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void loadBitmap(android.net.Uri) -> a
    boolean judgeStringLength(java.lang.String,int) -> a
    void access$0(com.aidigame.hisun.pet.ui.ModifyPetInfoActivity) -> a
com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$1 -> com.aidigame.hisun.pet.ui.ck:
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$1$1 -> com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$1$1:
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$1 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$10 -> com.aidigame.hisun.pet.ui.cl:
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity access$0(com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$10) -> a
com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$10$1 -> com.aidigame.hisun.pet.ui.cm:
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$10 this$1 -> a
    com.aidigame.hisun.pet.widget.fragment.RaceDialog val$raceDialog -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$10$2 -> com.aidigame.hisun.pet.ui.cn:
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$10 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$11 -> com.aidigame.hisun.pet.ui.co:
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity access$0(com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$11) -> a
com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$11$1 -> com.aidigame.hisun.pet.ui.cp:
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$11 this$1 -> a
    com.aidigame.hisun.pet.widget.fragment.AgeDialog val$ageDialog -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$11$2 -> com.aidigame.hisun.pet.ui.cq:
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$11 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$12 -> com.aidigame.hisun.pet.ui.cr:
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$13 -> com.aidigame.hisun.pet.ui.cs:
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$14 -> com.aidigame.hisun.pet.ui.ct:
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$15 -> com.aidigame.hisun.pet.ui.cu:
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$16 -> com.aidigame.hisun.pet.ui.cv:
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity access$0(com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$16) -> a
com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$16$1 -> com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$16$1:
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$16 this$1 -> this$1
    com.aidigame.hisun.pet.bean.User val$user -> val$user
    void run() -> run
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$16 access$0(com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$16$1) -> access$0
com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$16$1$1 -> com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$16$1$1:
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$16$1 this$2 -> this$2
    com.aidigame.hisun.pet.bean.Animal val$animal -> val$animal
    void run() -> run
com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$17 -> com.aidigame.hisun.pet.ui.cw:
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$18 -> com.aidigame.hisun.pet.ui.cx:
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$19 -> com.aidigame.hisun.pet.ui.cy:
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity this$0 -> a
    android.view.View val$view -> b
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity access$0(com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$19) -> a
com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$19$1 -> com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$19$1:
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$19 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$2 -> com.aidigame.hisun.pet.ui.cz:
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$3 -> com.aidigame.hisun.pet.ui.da:
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$4 -> com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$4:
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity access$0(com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$4) -> access$0
com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$4$1 -> com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$4$1:
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$4 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$5 -> com.aidigame.hisun.pet.ui.db:
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$6 -> com.aidigame.hisun.pet.ui.dc:
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity access$0(com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$6) -> a
com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$6$1 -> com.aidigame.hisun.pet.ui.dd:
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$6 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$6$2 -> com.aidigame.hisun.pet.ui.de:
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$6 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$7 -> com.aidigame.hisun.pet.ui.df:
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity access$0(com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$7) -> a
com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$7$1 -> com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$7$1:
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$7 this$1 -> this$1
    com.aidigame.hisun.pet.bean.User val$user -> val$user
    void run() -> run
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$7 access$0(com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$7$1) -> access$0
com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$7$1$1 -> com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$7$1$1:
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$7$1 this$2 -> this$2
    void run() -> run
com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$8 -> com.aidigame.hisun.pet.ui.dg:
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$9 -> com.aidigame.hisun.pet.ui.dh:
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.ModifyPetInfoActivity$MyTextWatcher -> com.aidigame.hisun.pet.ui.di:
    android.widget.EditText et -> a
    com.aidigame.hisun.pet.ui.ModifyPetInfoActivity this$0 -> b
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.aidigame.hisun.pet.ui.MyItemActivity -> com.aidigame.hisun.pet.ui.MyItemActivity:
    android.widget.FrameLayout frameLayout -> a
    android.view.View viewTopWhite -> b
    android.widget.ImageView back -> c
    android.widget.GridView gridView -> d
    com.aidigame.hisun.pet.adapter.UserGiftGridViewAdapter adapter -> e
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> f
    java.util.ArrayList giftList -> g
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void setBlurImageBackground() -> b
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.MyItemActivity$1 -> com.aidigame.hisun.pet.ui.MyItemActivity$1:
    com.aidigame.hisun.pet.ui.MyItemActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.MyItemActivity access$0(com.aidigame.hisun.pet.ui.MyItemActivity$1) -> access$0
com.aidigame.hisun.pet.ui.MyItemActivity$1$1 -> com.aidigame.hisun.pet.ui.MyItemActivity$1$1:
    com.aidigame.hisun.pet.ui.MyItemActivity$1 this$1 -> this$1
    java.util.ArrayList val$temp -> val$temp
    void run() -> run
com.aidigame.hisun.pet.ui.MyItemActivity$2 -> com.aidigame.hisun.pet.ui.dj:
    com.aidigame.hisun.pet.ui.MyItemActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.aidigame.hisun.pet.ui.MyItemActivity$3 -> com.aidigame.hisun.pet.ui.MyItemActivity$3:
    com.aidigame.hisun.pet.ui.MyItemActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.MyItemActivity access$0(com.aidigame.hisun.pet.ui.MyItemActivity$3) -> access$0
com.aidigame.hisun.pet.ui.MyItemActivity$3$1 -> com.aidigame.hisun.pet.ui.MyItemActivity$3$1:
    com.aidigame.hisun.pet.ui.MyItemActivity$3 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.MyItemActivity$4 -> com.aidigame.hisun.pet.ui.dk:
    com.aidigame.hisun.pet.ui.MyItemActivity this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.aidigame.hisun.pet.ui.NewHomeActivity -> com.aidigame.hisun.pet.ui.NewHomeActivity:
    com.aidigame.hisun.pet.widget.fragment.MenuFragment menuFragment -> a
    com.aidigame.hisun.pet.widget.fragment.HomeFragment homeFragment -> b
    com.aidigame.hisun.pet.widget.fragment.MessageFragment messageFragment -> c
    com.aidigame.hisun.pet.widget.fragment.ActivityFragment activityFragment -> d
    com.aidigame.hisun.pet.widget.fragment.SetupFragment setupFragment -> e
    com.aidigame.hisun.pet.widget.fragment.MarketFragment marketFragment -> f
    com.aidigame.hisun.pet.ui.NewHomeActivity homeActivity -> g
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> h
    int count -> i
    long lastTime -> j
    android.content.BroadcastReceiver receiver -> k
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void showHomeFragment() -> a
    void showMessageFragment() -> b
    void showActivityFragment() -> c
    void showSetupFragment() -> d
    void showMarketFragment() -> e
    void showHomeFragment(int) -> a
    void showMessageFragment(int) -> b
    void showActivityFragment(int) -> c
    void showSetupFragment(int) -> d
    void showMarketFragment(int) -> e
    void initSlidingMenu() -> i
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onDestroy() -> onDestroy
    void login() -> f
    void getSIDAndUserID() -> g
    void update() -> h
com.aidigame.hisun.pet.ui.NewHomeActivity$1 -> com.aidigame.hisun.pet.ui.dl:
    com.aidigame.hisun.pet.ui.NewHomeActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.aidigame.hisun.pet.ui.NewHomeActivity$2 -> com.aidigame.hisun.pet.ui.NewHomeActivity$2:
    com.aidigame.hisun.pet.ui.NewHomeActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.NewHomeActivity access$0(com.aidigame.hisun.pet.ui.NewHomeActivity$2) -> access$0
com.aidigame.hisun.pet.ui.NewHomeActivity$2$1 -> com.aidigame.hisun.pet.ui.NewHomeActivity$2$1:
    com.aidigame.hisun.pet.ui.NewHomeActivity$2 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.NewHomeActivity$3 -> com.aidigame.hisun.pet.ui.NewHomeActivity$3:
    com.aidigame.hisun.pet.ui.NewHomeActivity this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.ui.NewHomeActivity$4 -> com.aidigame.hisun.pet.ui.NewHomeActivity$4:
    com.aidigame.hisun.pet.ui.NewHomeActivity this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.ui.NewRegisterActivity -> com.aidigame.hisun.pet.ui.NewRegisterActivity:
    android.widget.FrameLayout frameLayout -> frameLayout
    android.widget.LinearLayout black_layout -> black_layout
    com.nostra13.universalimageloader.core.DisplayImageOptions displayImageOptions -> displayImageOptions
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> imageLoader
    com.aidigame.hisun.pet.widget.fragment.AddressDialog addressDialog -> addressDialog
    int DISMISS_PROGRESS -> DISMISS_PROGRESS
    int SHOW_PROGRESS -> SHOW_PROGRESS
    com.aidigame.hisun.pet.widget.ShowProgress showProgress -> showProgress
    android.support.v4.view.ViewPager viewPager -> viewPager
    com.aidigame.hisun.pet.adapter.HomeViewPagerAdapter adapter -> adapter
    android.widget.ImageView back -> back
    android.view.View view1 -> view1
    android.view.View view2 -> view2
    android.widget.TextView tv1 -> tv1
    java.util.ArrayList viewList -> viewList
    com.aidigame.hisun.pet.view.RoundImageView petIcon -> petIcon
    com.aidigame.hisun.pet.view.RoundImageView userIcon -> userIcon
    android.graphics.Bitmap pet_bmp -> pet_bmp
    android.graphics.Bitmap user_bmp -> user_bmp
    android.widget.EditText petName -> petName
    android.widget.EditText userName -> userName
    android.widget.EditText petRace -> petRace
    android.widget.EditText petAge -> petAge
    android.widget.EditText userCity -> userCity
    android.widget.ImageView petMale -> petMale
    android.widget.ImageView petFemale -> petFemale
    android.widget.ImageView petSex -> petSex
    android.widget.RadioGroup radioGroup -> radioGroup
    android.widget.Button complete -> complete
    boolean isLogining -> isLogining
    int mode -> mode
    int from -> from
    android.widget.LinearLayout camera_album -> camera_album
    android.widget.LinearLayout petRaceLayout -> petRaceLayout
    boolean isUserIcon -> isUserIcon
    int classs -> classs
    java.lang.String petNameStr -> petNameStr
    java.lang.String userNameStr -> userNameStr
    java.lang.String petAgeStr -> petAgeStr
    java.lang.String userCityStr -> userCityStr
    java.lang.String userCityCode -> userCityCode
    java.lang.String petRaceStr -> petRaceStr
    java.lang.String petRaceCode -> petRaceCode
    java.lang.String petIconPath -> petIconPath
    java.lang.String petSexStr -> petSexStr
    java.lang.String userSexStr -> userSexStr
    java.lang.String userIconPath -> userIconPath
    com.aidigame.hisun.pet.bean.Animal animal -> animal
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> handleHttpConnectionException
    android.os.Handler handler -> handler
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void initView() -> initView
    void setPetInfo(com.aidigame.hisun.pet.bean.Animal) -> setPetInfo
    void setUserInfo(com.aidigame.hisun.pet.bean.User) -> setUserInfo
    void setBlurImageBackground() -> setBlurImageBackground
    void initUserListener() -> initUserListener
    void initPetListener() -> initPetListener
    boolean checkUserInfo() -> checkUserInfo
    boolean checkPetInfo() -> checkPetInfo
    void showCameraAlbum() -> showCameraAlbum
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void loadBitmap(android.net.Uri) -> loadBitmap
    boolean judgeStringLength(java.lang.String,int) -> judgeStringLength
    void createKingdom() -> createKingdom
    void access$0(com.aidigame.hisun.pet.ui.NewRegisterActivity) -> access$0
com.aidigame.hisun.pet.ui.NewRegisterActivity$1 -> com.aidigame.hisun.pet.ui.dm:
    com.aidigame.hisun.pet.ui.NewRegisterActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.aidigame.hisun.pet.ui.NewRegisterActivity$1$1 -> com.aidigame.hisun.pet.ui.NewRegisterActivity$1$1:
    com.aidigame.hisun.pet.ui.NewRegisterActivity$1 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.NewRegisterActivity$10 -> com.aidigame.hisun.pet.ui.dn:
    com.aidigame.hisun.pet.ui.NewRegisterActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.NewRegisterActivity$11 -> com.aidigame.hisun.pet.ui.do:
    com.aidigame.hisun.pet.ui.NewRegisterActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.ui.NewRegisterActivity access$0(com.aidigame.hisun.pet.ui.NewRegisterActivity$11) -> a
com.aidigame.hisun.pet.ui.NewRegisterActivity$11$1 -> com.aidigame.hisun.pet.ui.dp:
    com.aidigame.hisun.pet.ui.NewRegisterActivity$11 this$1 -> a
    com.aidigame.hisun.pet.widget.fragment.RaceDialog val$raceDialog -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.aidigame.hisun.pet.ui.NewRegisterActivity$11$2 -> com.aidigame.hisun.pet.ui.dq:
    com.aidigame.hisun.pet.ui.NewRegisterActivity$11 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.aidigame.hisun.pet.ui.NewRegisterActivity$12 -> com.aidigame.hisun.pet.ui.dr:
    com.aidigame.hisun.pet.ui.NewRegisterActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.ui.NewRegisterActivity access$0(com.aidigame.hisun.pet.ui.NewRegisterActivity$12) -> a
com.aidigame.hisun.pet.ui.NewRegisterActivity$12$1 -> com.aidigame.hisun.pet.ui.ds:
    com.aidigame.hisun.pet.ui.NewRegisterActivity$12 this$1 -> a
    com.aidigame.hisun.pet.widget.fragment.AgeDialog val$ageDialog -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.aidigame.hisun.pet.ui.NewRegisterActivity$12$2 -> com.aidigame.hisun.pet.ui.dt:
    com.aidigame.hisun.pet.ui.NewRegisterActivity$12 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.aidigame.hisun.pet.ui.NewRegisterActivity$13 -> com.aidigame.hisun.pet.ui.du:
    com.aidigame.hisun.pet.ui.NewRegisterActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.NewRegisterActivity$14 -> com.aidigame.hisun.pet.ui.dv:
    com.aidigame.hisun.pet.ui.NewRegisterActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.NewRegisterActivity$15 -> com.aidigame.hisun.pet.ui.dw:
    com.aidigame.hisun.pet.ui.NewRegisterActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.NewRegisterActivity$16 -> com.aidigame.hisun.pet.ui.dx:
    com.aidigame.hisun.pet.ui.NewRegisterActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.NewRegisterActivity$17 -> com.aidigame.hisun.pet.ui.dy:
    com.aidigame.hisun.pet.ui.NewRegisterActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.NewRegisterActivity$18 -> com.aidigame.hisun.pet.ui.dz:
    com.aidigame.hisun.pet.ui.NewRegisterActivity this$0 -> a
    android.view.View val$view -> b
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.ui.NewRegisterActivity access$0(com.aidigame.hisun.pet.ui.NewRegisterActivity$18) -> a
com.aidigame.hisun.pet.ui.NewRegisterActivity$18$1 -> com.aidigame.hisun.pet.ui.NewRegisterActivity$18$1:
    com.aidigame.hisun.pet.ui.NewRegisterActivity$18 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.NewRegisterActivity$19 -> com.aidigame.hisun.pet.ui.NewRegisterActivity$19:
    com.aidigame.hisun.pet.ui.NewRegisterActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.NewRegisterActivity access$0(com.aidigame.hisun.pet.ui.NewRegisterActivity$19) -> access$0
com.aidigame.hisun.pet.ui.NewRegisterActivity$19$1 -> com.aidigame.hisun.pet.ui.NewRegisterActivity$19$1:
    com.aidigame.hisun.pet.ui.NewRegisterActivity$19 this$1 -> this$1
    long val$aid -> val$aid
    com.aidigame.hisun.pet.bean.Animal val$animal -> val$animal
    void run() -> run
com.aidigame.hisun.pet.ui.NewRegisterActivity$2 -> com.aidigame.hisun.pet.ui.ea:
    com.aidigame.hisun.pet.ui.NewRegisterActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.NewRegisterActivity$3 -> com.aidigame.hisun.pet.ui.eb:
    com.aidigame.hisun.pet.ui.NewRegisterActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.NewRegisterActivity$4 -> com.aidigame.hisun.pet.ui.NewRegisterActivity$4:
    com.aidigame.hisun.pet.ui.NewRegisterActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.NewRegisterActivity access$0(com.aidigame.hisun.pet.ui.NewRegisterActivity$4) -> access$0
com.aidigame.hisun.pet.ui.NewRegisterActivity$4$1 -> com.aidigame.hisun.pet.ui.NewRegisterActivity$4$1:
    com.aidigame.hisun.pet.ui.NewRegisterActivity$4 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.NewRegisterActivity$5 -> com.aidigame.hisun.pet.ui.ec:
    com.aidigame.hisun.pet.ui.NewRegisterActivity this$0 -> a
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.aidigame.hisun.pet.ui.NewRegisterActivity$6 -> com.aidigame.hisun.pet.ui.ed:
    com.aidigame.hisun.pet.ui.NewRegisterActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.NewRegisterActivity$7 -> com.aidigame.hisun.pet.ui.ee:
    com.aidigame.hisun.pet.ui.NewRegisterActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.ui.NewRegisterActivity access$0(com.aidigame.hisun.pet.ui.NewRegisterActivity$7) -> a
com.aidigame.hisun.pet.ui.NewRegisterActivity$7$1 -> com.aidigame.hisun.pet.ui.ef:
    com.aidigame.hisun.pet.ui.NewRegisterActivity$7 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.aidigame.hisun.pet.ui.NewRegisterActivity$7$2 -> com.aidigame.hisun.pet.ui.eg:
    com.aidigame.hisun.pet.ui.NewRegisterActivity$7 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.aidigame.hisun.pet.ui.NewRegisterActivity$8 -> com.aidigame.hisun.pet.ui.eh:
    com.aidigame.hisun.pet.ui.NewRegisterActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.ui.NewRegisterActivity access$0(com.aidigame.hisun.pet.ui.NewRegisterActivity$8) -> a
com.aidigame.hisun.pet.ui.NewRegisterActivity$8$1 -> com.aidigame.hisun.pet.ui.NewRegisterActivity$8$1:
    com.aidigame.hisun.pet.ui.NewRegisterActivity$8 this$1 -> this$1
    com.aidigame.hisun.pet.bean.User val$user -> val$user
    void run() -> run
    com.aidigame.hisun.pet.ui.NewRegisterActivity$8 access$0(com.aidigame.hisun.pet.ui.NewRegisterActivity$8$1) -> access$0
com.aidigame.hisun.pet.ui.NewRegisterActivity$8$1$1 -> com.aidigame.hisun.pet.ui.NewRegisterActivity$8$1$1:
    com.aidigame.hisun.pet.ui.NewRegisterActivity$8$1 this$2 -> this$2
    void run() -> run
com.aidigame.hisun.pet.ui.NewRegisterActivity$8$2 -> com.aidigame.hisun.pet.ui.NewRegisterActivity$8$2:
    com.aidigame.hisun.pet.ui.NewRegisterActivity$8 this$1 -> this$1
    com.aidigame.hisun.pet.bean.User val$user -> val$user
    void run() -> run
    com.aidigame.hisun.pet.ui.NewRegisterActivity$8 access$0(com.aidigame.hisun.pet.ui.NewRegisterActivity$8$2) -> access$0
com.aidigame.hisun.pet.ui.NewRegisterActivity$8$2$1 -> com.aidigame.hisun.pet.ui.NewRegisterActivity$8$2$1:
    com.aidigame.hisun.pet.ui.NewRegisterActivity$8$2 this$2 -> this$2
    void run() -> run
com.aidigame.hisun.pet.ui.NewRegisterActivity$9 -> com.aidigame.hisun.pet.ui.ei:
    com.aidigame.hisun.pet.ui.NewRegisterActivity this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.aidigame.hisun.pet.ui.NewRegisterActivity$MyTextWatcher -> com.aidigame.hisun.pet.ui.ej:
    android.widget.EditText et -> a
    com.aidigame.hisun.pet.ui.NewRegisterActivity this$0 -> b
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.aidigame.hisun.pet.ui.PetKingdomActivity -> com.aidigame.hisun.pet.ui.PetKingdomActivity:
    android.widget.ImageView backIV -> a
    android.widget.ImageView changeIconIV -> b
    android.widget.ImageView trackClawIV -> c
    android.widget.ImageView pictureListIV -> d
    android.widget.ImageView peoplesListIV -> e
    android.widget.ImageView giftListIV -> f
    android.widget.ImageView petSexIV -> g
    android.widget.ImageView moreIv -> h
    android.widget.TextView titleTV -> i
    android.widget.TextView addFocusTV -> j
    android.widget.TextView petNameTV -> k
    android.widget.TextView petRaceTV -> l
    android.widget.TextView petAgeTV -> m
    android.widget.TextView userJobTV -> n
    android.widget.TextView userNameTV -> o
    android.widget.TextView hotProgressTV -> p
    android.widget.TextView contributeTV -> q
    android.widget.TextView hotRankTV -> r
    android.widget.TextView peopleNumTV -> s
    android.widget.TextView hotNumTv -> t
    android.widget.TextView fansNumTv -> u
    android.widget.TextView line1 -> v
    android.widget.TextView line2 -> w
    android.view.View trackLineView -> x
    android.view.View pictureLineView -> y
    android.view.View peopleLineView -> z
    android.view.View giftLineView -> A
    android.view.View popupParent -> B
    android.widget.RelativeLayout black_layout -> C
    com.aidigame.hisun.pet.view.RoundImageView petIcon -> D
    com.aidigame.hisun.pet.view.RoundImageView userIcon -> E
    com.aidigame.hisun.pet.ui.PetKingdomActivity petKingdomActivity -> F
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> G
    com.aidigame.hisun.pet.widget.ShowProgress showProgress -> H
    android.widget.LinearLayout bottomLinearLayout2 -> I
    android.widget.LinearLayout userInfoLayout -> J
    android.widget.LinearLayout moreLayout -> K
    android.widget.LinearLayout animLayout -> L
    android.widget.LinearLayout progresslayout -> M
    android.widget.LinearLayout linearLayout2 -> N
    android.widget.LinearLayout linearLayout3 -> O
    android.widget.LinearLayout listParentLayout -> P
    android.widget.LinearLayout blurLayout -> Q
    android.widget.LinearLayout listParentLayout2 -> R
    android.widget.LinearLayout listParentLayout3 -> S
    android.widget.LinearLayout listParentLayout4 -> T
    android.view.View topWhiteView -> U
    android.view.View infoShadowView -> V
    com.aidigame.hisun.pet.widget.fragment.KingdomTrends kingdomTrends -> W
    com.aidigame.hisun.pet.widget.fragment.KingdomImages kingdomImages -> X
    com.aidigame.hisun.pet.widget.fragment.KingdomPeoples kingdomPeoples -> Y
    com.aidigame.hisun.pet.widget.fragment.PetGiftList userGiftList -> Z
    boolean isShowInfoLayout -> aa
    android.widget.FrameLayout frameLayout -> ab
    android.graphics.Bitmap loadedImage1 -> ac
    android.widget.RelativeLayout clawFunctionLayout -> ad
    android.widget.RelativeLayout moreParentLayout -> ae
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction clawStyleFunction -> af
    com.aidigame.hisun.pet.bean.Animal data -> ag
    com.nostra13.universalimageloader.core.DisplayImageOptions displayImageOptions -> ah
    android.os.Handler handler -> ai
    boolean isChangingUserIcon -> aj
    int getPictureMode -> ak
    java.lang.String path -> al
    java.lang.String sharePath -> am
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> m
    void initArc() -> a
    void setPetInfo(com.aidigame.hisun.pet.bean.Animal) -> a
    void initListener() -> n
    void onClick(android.view.View) -> onClick
    void showKingdomTrends() -> b
    void showKingdomImages() -> c
    void showKingdomPeoples() -> d
    void showKingdomGift() -> e
    void changeTabState() -> f
    void onDestroy() -> onDestroy
    void changeUserIcon() -> o
    void publishPicture() -> p
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void loadBitmap(android.net.Uri) -> a
    void clickItem1() -> g
    void clickItem2() -> h
    void clickItem3() -> i
    void clickItem4() -> j
    void getSharePetKingdomPicture() -> k
    void shareNumChange() -> l
    void setPeoplesNum(int,boolean) -> a
    void fansNum(int,boolean) -> b
com.aidigame.hisun.pet.ui.PetKingdomActivity$1 -> com.aidigame.hisun.pet.ui.ek:
    com.aidigame.hisun.pet.ui.PetKingdomActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.aidigame.hisun.pet.ui.PetKingdomActivity$10 -> com.aidigame.hisun.pet.ui.el:
    com.aidigame.hisun.pet.ui.PetKingdomActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.PetKingdomActivity$11 -> com.aidigame.hisun.pet.ui.em:
    com.aidigame.hisun.pet.ui.PetKingdomActivity this$0 -> a
    android.view.View val$view -> b
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.ui.PetKingdomActivity access$0(com.aidigame.hisun.pet.ui.PetKingdomActivity$11) -> a
com.aidigame.hisun.pet.ui.PetKingdomActivity$11$1 -> com.aidigame.hisun.pet.ui.PetKingdomActivity$11$1:
    com.aidigame.hisun.pet.ui.PetKingdomActivity$11 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.PetKingdomActivity$12 -> com.aidigame.hisun.pet.ui.en:
    com.aidigame.hisun.pet.ui.PetKingdomActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.PetKingdomActivity$13 -> com.aidigame.hisun.pet.ui.eo:
    com.aidigame.hisun.pet.ui.PetKingdomActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.PetKingdomActivity$14 -> com.aidigame.hisun.pet.ui.ep:
    com.aidigame.hisun.pet.ui.PetKingdomActivity this$0 -> a
    android.view.View val$view -> b
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.ui.PetKingdomActivity access$0(com.aidigame.hisun.pet.ui.PetKingdomActivity$14) -> a
com.aidigame.hisun.pet.ui.PetKingdomActivity$14$1 -> com.aidigame.hisun.pet.ui.PetKingdomActivity$14$1:
    com.aidigame.hisun.pet.ui.PetKingdomActivity$14 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.PetKingdomActivity$15 -> com.aidigame.hisun.pet.ui.PetKingdomActivity$15:
    com.aidigame.hisun.pet.ui.PetKingdomActivity this$0 -> this$0
    java.lang.String val$path -> val$path
    void run() -> run
com.aidigame.hisun.pet.ui.PetKingdomActivity$16 -> com.aidigame.hisun.pet.ui.eq:
    com.aidigame.hisun.pet.ui.PetKingdomActivity this$0 -> a
    void toDo() -> a
    void closeDialog() -> b
    void lastResult(boolean) -> a
    void unRegister() -> c
com.aidigame.hisun.pet.ui.PetKingdomActivity$17 -> com.aidigame.hisun.pet.ui.PetKingdomActivity$17:
    com.aidigame.hisun.pet.ui.PetKingdomActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.PetKingdomActivity access$0(com.aidigame.hisun.pet.ui.PetKingdomActivity$17) -> access$0
com.aidigame.hisun.pet.ui.PetKingdomActivity$17$1 -> com.aidigame.hisun.pet.ui.PetKingdomActivity$17$1:
    com.aidigame.hisun.pet.ui.PetKingdomActivity$17 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.PetKingdomActivity$18 -> com.aidigame.hisun.pet.ui.PetKingdomActivity$18:
    com.aidigame.hisun.pet.ui.PetKingdomActivity this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.ui.PetKingdomActivity$2 -> com.aidigame.hisun.pet.ui.PetKingdomActivity$2:
    com.aidigame.hisun.pet.ui.PetKingdomActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.PetKingdomActivity access$0(com.aidigame.hisun.pet.ui.PetKingdomActivity$2) -> access$0
com.aidigame.hisun.pet.ui.PetKingdomActivity$2$1 -> com.aidigame.hisun.pet.ui.PetKingdomActivity$2$1:
    com.aidigame.hisun.pet.ui.PetKingdomActivity$2 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.PetKingdomActivity$3 -> com.aidigame.hisun.pet.ui.er:
    com.aidigame.hisun.pet.ui.PetKingdomActivity this$0 -> a
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
    com.aidigame.hisun.pet.ui.PetKingdomActivity access$0(com.aidigame.hisun.pet.ui.PetKingdomActivity$3) -> a
com.aidigame.hisun.pet.ui.PetKingdomActivity$3$1 -> com.aidigame.hisun.pet.ui.PetKingdomActivity$3$1:
    com.aidigame.hisun.pet.ui.PetKingdomActivity$3 this$1 -> this$1
    android.graphics.Bitmap val$loadedImage -> val$loadedImage
    void run() -> run
    com.aidigame.hisun.pet.ui.PetKingdomActivity$3 access$0(com.aidigame.hisun.pet.ui.PetKingdomActivity$3$1) -> access$0
com.aidigame.hisun.pet.ui.PetKingdomActivity$3$1$1 -> com.aidigame.hisun.pet.ui.PetKingdomActivity$3$1$1:
    com.aidigame.hisun.pet.ui.PetKingdomActivity$3$1 this$2 -> this$2
    void run() -> run
com.aidigame.hisun.pet.ui.PetKingdomActivity$4 -> com.aidigame.hisun.pet.ui.PetKingdomActivity$4:
    com.aidigame.hisun.pet.ui.PetKingdomActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.PetKingdomActivity access$0(com.aidigame.hisun.pet.ui.PetKingdomActivity$4) -> access$0
com.aidigame.hisun.pet.ui.PetKingdomActivity$4$1 -> com.aidigame.hisun.pet.ui.PetKingdomActivity$4$1:
    com.aidigame.hisun.pet.ui.PetKingdomActivity$4 this$1 -> this$1
    boolean val$flag -> val$flag
    void run() -> run
com.aidigame.hisun.pet.ui.PetKingdomActivity$5 -> com.aidigame.hisun.pet.ui.PetKingdomActivity$5:
    com.aidigame.hisun.pet.ui.PetKingdomActivity this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.ui.PetKingdomActivity$6 -> com.aidigame.hisun.pet.ui.PetKingdomActivity$6:
    com.aidigame.hisun.pet.ui.PetKingdomActivity this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.ui.PetKingdomActivity$7 -> com.aidigame.hisun.pet.ui.PetKingdomActivity$7:
    com.aidigame.hisun.pet.ui.PetKingdomActivity this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.ui.PetKingdomActivity$8 -> com.aidigame.hisun.pet.ui.PetKingdomActivity$8:
    com.aidigame.hisun.pet.ui.PetKingdomActivity this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.ui.PetKingdomActivity$9 -> com.aidigame.hisun.pet.ui.es:
    com.aidigame.hisun.pet.ui.PetKingdomActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.PlayGameActivity -> com.aidigame.hisun.pet.ui.PlayGameActivity:
    android.webkit.WebView webView -> a
    java.lang.String url -> b
    com.aidigame.hisun.pet.bean.Animal animal -> c
    void onCreate(android.os.Bundle) -> onCreate
com.aidigame.hisun.pet.ui.PlayGameActivity$1 -> com.aidigame.hisun.pet.ui.et:
    com.aidigame.hisun.pet.ui.PlayGameActivity this$0 -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.aidigame.hisun.pet.ui.PlayJokeActivity -> com.aidigame.hisun.pet.ui.PlayJokeActivity:
    com.nostra13.universalimageloader.core.DisplayImageOptions displayImageOptions -> a
    android.widget.RelativeLayout progressLayout -> b
    android.support.v4.view.ViewPager viewPager -> c
    android.view.View view1 -> d
    android.view.View view2 -> e
    android.view.View view3 -> f
    android.view.View view4 -> g
    android.view.View view5 -> h
    com.aidigame.hisun.pet.adapter.HomeViewPagerAdapter adapter -> i
    java.util.ArrayList viewList -> j
    com.aidigame.hisun.pet.widget.ShakeSensor shakeSensor -> k
    android.os.Vibrator vibrator -> l
    int currentPosition -> m
    int optortunity -> n
    android.widget.TextView optNumTv -> o
    android.widget.TextView titleTv -> p
    android.widget.ImageView cloudIV1 -> q
    android.widget.ImageView cloudIV2 -> r
    com.aidigame.hisun.pet.bean.Animal animal -> s
    int mode -> t
    android.widget.RelativeLayout shareBitmapLayout -> u
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> v
    boolean isSending -> w
    java.util.ArrayList giftList -> x
    android.os.Handler handler -> y
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> d
    void initVibrator() -> a
    void startVibrator() -> e
    void initView2(com.aidigame.hisun.pet.bean.Gift) -> a
    void initView4() -> b
    void initView5() -> c
    void share(android.view.View) -> share
    void onDestroy() -> onDestroy
    void access$0(com.aidigame.hisun.pet.ui.PlayJokeActivity) -> a
com.aidigame.hisun.pet.ui.PlayJokeActivity$1 -> com.aidigame.hisun.pet.ui.eu:
    com.aidigame.hisun.pet.ui.PlayJokeActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.aidigame.hisun.pet.ui.PlayJokeActivity$10 -> com.aidigame.hisun.pet.ui.ev:
    com.aidigame.hisun.pet.ui.PlayJokeActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.PlayJokeActivity$2 -> com.aidigame.hisun.pet.ui.ew:
    com.aidigame.hisun.pet.ui.PlayJokeActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.PlayJokeActivity$3 -> com.aidigame.hisun.pet.ui.ex:
    com.aidigame.hisun.pet.ui.PlayJokeActivity this$0 -> a
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.aidigame.hisun.pet.ui.PlayJokeActivity$4 -> com.aidigame.hisun.pet.ui.PlayJokeActivity$4:
    com.aidigame.hisun.pet.ui.PlayJokeActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.PlayJokeActivity access$0(com.aidigame.hisun.pet.ui.PlayJokeActivity$4) -> access$0
com.aidigame.hisun.pet.ui.PlayJokeActivity$4$1 -> com.aidigame.hisun.pet.ui.PlayJokeActivity$4$1:
    com.aidigame.hisun.pet.ui.PlayJokeActivity$4 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.PlayJokeActivity$5 -> com.aidigame.hisun.pet.ui.ey:
    com.aidigame.hisun.pet.ui.PlayJokeActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.aidigame.hisun.pet.ui.PlayJokeActivity$6 -> com.aidigame.hisun.pet.ui.ez:
    com.aidigame.hisun.pet.ui.PlayJokeActivity this$0 -> a
    void onShake() -> a
    com.aidigame.hisun.pet.ui.PlayJokeActivity access$0(com.aidigame.hisun.pet.ui.PlayJokeActivity$6) -> a
com.aidigame.hisun.pet.ui.PlayJokeActivity$6$1 -> com.aidigame.hisun.pet.ui.PlayJokeActivity$6$1:
    com.aidigame.hisun.pet.ui.PlayJokeActivity$6 this$1 -> this$1
    void run() -> run
    com.aidigame.hisun.pet.ui.PlayJokeActivity$6 access$0(com.aidigame.hisun.pet.ui.PlayJokeActivity$6$1) -> access$0
com.aidigame.hisun.pet.ui.PlayJokeActivity$6$1$1 -> com.aidigame.hisun.pet.ui.PlayJokeActivity$6$1$1:
    com.aidigame.hisun.pet.ui.PlayJokeActivity$6$1 this$2 -> this$2
    void run() -> run
    com.aidigame.hisun.pet.ui.PlayJokeActivity$6$1 access$0(com.aidigame.hisun.pet.ui.PlayJokeActivity$6$1$1) -> access$0
com.aidigame.hisun.pet.ui.PlayJokeActivity$6$1$1$1 -> com.aidigame.hisun.pet.ui.PlayJokeActivity$6$1$1$1:
    com.aidigame.hisun.pet.ui.PlayJokeActivity$6$1$1 this$3 -> this$3
    void run() -> run
com.aidigame.hisun.pet.ui.PlayJokeActivity$7 -> com.aidigame.hisun.pet.ui.PlayJokeActivity$7:
    com.aidigame.hisun.pet.ui.PlayJokeActivity this$0 -> this$0
    com.aidigame.hisun.pet.bean.Gift val$gift -> val$gift
    void run() -> run
com.aidigame.hisun.pet.ui.PlayJokeActivity$8 -> com.aidigame.hisun.pet.ui.fa:
    com.aidigame.hisun.pet.ui.PlayJokeActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.PlayJokeActivity$9 -> com.aidigame.hisun.pet.ui.fb:
    com.aidigame.hisun.pet.ui.PlayJokeActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.PopularRankListActivity -> com.aidigame.hisun.pet.ui.PopularRankListActivity:
    android.widget.FrameLayout frameLayout -> a
    android.view.View viewTopWhite -> b
    android.view.View popup_parent -> c
    android.widget.RelativeLayout black_layout -> d
    android.widget.ListView listView -> e
    android.widget.TextView findMeTV -> f
    android.widget.TextView popularTV -> g
    android.widget.TextView starTV -> h
    android.widget.TextView raceTV -> i
    com.aidigame.hisun.pet.adapter.PopularRankListAdapter adapter -> j
    java.util.ArrayList peopleList -> k
    java.util.ArrayList myList -> l
    android.widget.PopupWindow popularWindow -> m
    android.widget.PopupWindow raceWindow -> n
    boolean isAllData -> o
    int myListIndex -> p
    int position -> q
    int category -> r
    int currentType -> s
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> t
    int count -> u
    boolean isFindMeScroll -> v
    void onCreate(android.os.Bundle) -> onCreate
    void setBlurImageBackground() -> a
    void loadData(int) -> b
    void initView() -> b
    void findMe() -> c
    void showPopularWindow() -> d
    void loadTotalData() -> e
    void loadDayData() -> f
    void loadWeekData() -> g
    void loadMonthData() -> h
    void showRaceWindow() -> i
    void getDataByType(int) -> a
    void access$0(com.aidigame.hisun.pet.ui.PopularRankListActivity) -> a
    void access$1(com.aidigame.hisun.pet.ui.PopularRankListActivity) -> b
    void access$2(com.aidigame.hisun.pet.ui.PopularRankListActivity) -> c
    void access$3(com.aidigame.hisun.pet.ui.PopularRankListActivity) -> d
    void access$4(com.aidigame.hisun.pet.ui.PopularRankListActivity) -> e
    void access$5(com.aidigame.hisun.pet.ui.PopularRankListActivity) -> f
    void access$6(com.aidigame.hisun.pet.ui.PopularRankListActivity) -> g
com.aidigame.hisun.pet.ui.PopularRankListActivity$1 -> com.aidigame.hisun.pet.ui.PopularRankListActivity$1:
    com.aidigame.hisun.pet.ui.PopularRankListActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.PopularRankListActivity access$0(com.aidigame.hisun.pet.ui.PopularRankListActivity$1) -> access$0
com.aidigame.hisun.pet.ui.PopularRankListActivity$1$1 -> com.aidigame.hisun.pet.ui.PopularRankListActivity$1$1:
    com.aidigame.hisun.pet.ui.PopularRankListActivity$1 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.PopularRankListActivity$10 -> com.aidigame.hisun.pet.ui.fc:
    com.aidigame.hisun.pet.ui.PopularRankListActivity this$0 -> a
    void onDismiss() -> onDismiss
com.aidigame.hisun.pet.ui.PopularRankListActivity$11 -> com.aidigame.hisun.pet.ui.fd:
    com.aidigame.hisun.pet.ui.PopularRankListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.PopularRankListActivity$12 -> com.aidigame.hisun.pet.ui.fe:
    com.aidigame.hisun.pet.ui.PopularRankListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.PopularRankListActivity$13 -> com.aidigame.hisun.pet.ui.ff:
    com.aidigame.hisun.pet.ui.PopularRankListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.PopularRankListActivity$14 -> com.aidigame.hisun.pet.ui.fg:
    com.aidigame.hisun.pet.ui.PopularRankListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.PopularRankListActivity$15 -> com.aidigame.hisun.pet.ui.PopularRankListActivity$15:
    com.aidigame.hisun.pet.ui.PopularRankListActivity this$0 -> this$0
    java.lang.String val$json -> val$json
    int val$category -> val$category
    void run() -> run
    com.aidigame.hisun.pet.ui.PopularRankListActivity access$0(com.aidigame.hisun.pet.ui.PopularRankListActivity$15) -> access$0
com.aidigame.hisun.pet.ui.PopularRankListActivity$15$1 -> com.aidigame.hisun.pet.ui.PopularRankListActivity$15$1:
    com.aidigame.hisun.pet.ui.PopularRankListActivity$15 this$1 -> this$1
    java.util.ArrayList val$temp1 -> val$temp1
    java.util.ArrayList val$temp2 -> val$temp2
    void run() -> run
com.aidigame.hisun.pet.ui.PopularRankListActivity$16 -> com.aidigame.hisun.pet.ui.fh:
    com.aidigame.hisun.pet.ui.PopularRankListActivity this$0 -> a
    void onDismiss() -> onDismiss
com.aidigame.hisun.pet.ui.PopularRankListActivity$17 -> com.aidigame.hisun.pet.ui.fi:
    com.aidigame.hisun.pet.ui.PopularRankListActivity this$0 -> a
    java.lang.String[] val$strArray -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.aidigame.hisun.pet.ui.PopularRankListActivity$18 -> com.aidigame.hisun.pet.ui.PopularRankListActivity$18:
    com.aidigame.hisun.pet.ui.PopularRankListActivity this$0 -> this$0
    int val$type -> val$type
    void run() -> run
    com.aidigame.hisun.pet.ui.PopularRankListActivity access$0(com.aidigame.hisun.pet.ui.PopularRankListActivity$18) -> access$0
com.aidigame.hisun.pet.ui.PopularRankListActivity$18$1 -> com.aidigame.hisun.pet.ui.PopularRankListActivity$18$1:
    com.aidigame.hisun.pet.ui.PopularRankListActivity$18 this$1 -> this$1
    java.util.ArrayList val$temp1 -> val$temp1
    java.util.ArrayList val$temp2 -> val$temp2
    void run() -> run
com.aidigame.hisun.pet.ui.PopularRankListActivity$2 -> com.aidigame.hisun.pet.ui.fj:
    com.aidigame.hisun.pet.ui.PopularRankListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.aidigame.hisun.pet.ui.PopularRankListActivity$3 -> com.aidigame.hisun.pet.ui.fk:
    com.aidigame.hisun.pet.ui.PopularRankListActivity this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.aidigame.hisun.pet.ui.PopularRankListActivity$4 -> com.aidigame.hisun.pet.ui.PopularRankListActivity$4:
    com.aidigame.hisun.pet.ui.PopularRankListActivity this$0 -> this$0
    int val$category -> val$category
    void run() -> run
    com.aidigame.hisun.pet.ui.PopularRankListActivity access$0(com.aidigame.hisun.pet.ui.PopularRankListActivity$4) -> access$0
com.aidigame.hisun.pet.ui.PopularRankListActivity$4$1 -> com.aidigame.hisun.pet.ui.PopularRankListActivity$4$1:
    com.aidigame.hisun.pet.ui.PopularRankListActivity$4 this$1 -> this$1
    java.util.HashMap val$map -> val$map
    void run() -> run
com.aidigame.hisun.pet.ui.PopularRankListActivity$5 -> com.aidigame.hisun.pet.ui.fl:
    com.aidigame.hisun.pet.ui.PopularRankListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.PopularRankListActivity$6 -> com.aidigame.hisun.pet.ui.fm:
    com.aidigame.hisun.pet.ui.PopularRankListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.PopularRankListActivity$7 -> com.aidigame.hisun.pet.ui.fn:
    com.aidigame.hisun.pet.ui.PopularRankListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.PopularRankListActivity$8 -> com.aidigame.hisun.pet.ui.fo:
    com.aidigame.hisun.pet.ui.PopularRankListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.PopularRankListActivity$9 -> com.aidigame.hisun.pet.ui.fp:
    com.aidigame.hisun.pet.ui.PopularRankListActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.aidigame.hisun.pet.ui.ReceiverAddressActivity -> com.aidigame.hisun.pet.ui.ReceiverAddressActivity:
    net.simonvt.numberpicker.NumberPicker provicePicker -> a
    net.simonvt.numberpicker.NumberPicker cityPicker -> b
    java.util.ArrayList provincesList -> c
    java.util.ArrayList cityList -> d
    int provinceValue -> e
    int cityValue -> f
    java.lang.String province -> g
    java.lang.String city -> h
    android.widget.EditText nameET -> i
    android.widget.EditText phoneET -> j
    android.widget.EditText postCodeET -> k
    android.widget.EditText provinceCityET -> l
    android.widget.EditText addressET -> m
    android.widget.TextView provinceTV -> n
    android.widget.TextView titleTV -> o
    android.widget.TextView saveTV -> p
    android.widget.ImageView back -> q
    android.widget.LinearLayout addressLayout -> r
    android.widget.LinearLayout blurLayout -> s
    java.lang.String name -> t
    java.lang.String phone -> u
    java.lang.String postCode -> v
    java.lang.String provinceCity -> w
    java.lang.String address -> x
    com.aidigame.hisun.pet.ui.ReceiverAddressActivity$UserAddress userAddress -> y
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> z
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void onClick(android.view.View) -> onClick
    void saveAddress() -> b
com.aidigame.hisun.pet.ui.ReceiverAddressActivity$1 -> com.aidigame.hisun.pet.ui.ReceiverAddressActivity$1:
    com.aidigame.hisun.pet.ui.ReceiverAddressActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.ReceiverAddressActivity access$0(com.aidigame.hisun.pet.ui.ReceiverAddressActivity$1) -> access$0
com.aidigame.hisun.pet.ui.ReceiverAddressActivity$1$1 -> com.aidigame.hisun.pet.ui.ReceiverAddressActivity$1$1:
    com.aidigame.hisun.pet.ui.ReceiverAddressActivity$1 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.ReceiverAddressActivity$2 -> com.aidigame.hisun.pet.ui.ReceiverAddressActivity$2:
    com.aidigame.hisun.pet.ui.ReceiverAddressActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.ReceiverAddressActivity access$0(com.aidigame.hisun.pet.ui.ReceiverAddressActivity$2) -> access$0
com.aidigame.hisun.pet.ui.ReceiverAddressActivity$2$1 -> com.aidigame.hisun.pet.ui.ReceiverAddressActivity$2$1:
    com.aidigame.hisun.pet.ui.ReceiverAddressActivity$2 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.ReceiverAddressActivity$3 -> com.aidigame.hisun.pet.ui.fq:
    com.aidigame.hisun.pet.ui.ReceiverAddressActivity this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.aidigame.hisun.pet.ui.ReceiverAddressActivity$4 -> com.aidigame.hisun.pet.ui.fr:
    com.aidigame.hisun.pet.ui.ReceiverAddressActivity this$0 -> a
    void onValueChange(net.simonvt.numberpicker.NumberPicker,int,int) -> onValueChange
com.aidigame.hisun.pet.ui.ReceiverAddressActivity$5 -> com.aidigame.hisun.pet.ui.fs:
    com.aidigame.hisun.pet.ui.ReceiverAddressActivity this$0 -> a
    void onValueChange(net.simonvt.numberpicker.NumberPicker,int,int) -> onValueChange
com.aidigame.hisun.pet.ui.ReceiverAddressActivity$6 -> com.aidigame.hisun.pet.ui.ReceiverAddressActivity$6:
    com.aidigame.hisun.pet.ui.ReceiverAddressActivity this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.ui.ReceiverAddressActivity$UserAddress -> com.aidigame.hisun.pet.ui.ft:
    java.lang.String name -> a
    java.lang.String telephone -> b
    java.lang.String zipcode -> c
    java.lang.String region -> d
    java.lang.String building -> e
    long aid -> f
com.aidigame.hisun.pet.ui.ShakeActivity -> com.aidigame.hisun.pet.ui.ShakeActivity:
    com.nostra13.universalimageloader.core.DisplayImageOptions displayImageOptions -> a
    android.widget.RelativeLayout progressLayout -> b
    android.support.v4.view.ViewPager viewPager -> c
    android.view.View view1 -> d
    android.view.View view2 -> e
    android.view.View view3 -> f
    android.view.View view4 -> g
    android.view.View view5 -> h
    com.aidigame.hisun.pet.adapter.HomeViewPagerAdapter adapter -> i
    java.util.ArrayList viewList -> j
    com.aidigame.hisun.pet.widget.ShakeSensor shakeSensor -> k
    android.os.Vibrator vibrator -> l
    int currentPosition -> m
    int optortunity -> n
    android.widget.TextView optNumTv -> o
    android.widget.TextView titleTv -> p
    android.widget.ImageView cloudIV1 -> q
    android.widget.ImageView cloudIV2 -> r
    com.aidigame.hisun.pet.bean.Animal animal -> s
    com.aidigame.hisun.pet.bean.Gift gift -> t
    int mode -> u
    android.widget.RelativeLayout shareBitmapLayout -> v
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> w
    boolean isSending -> x
    java.util.ArrayList giftList -> y
    android.os.Handler handler -> z
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> d
    void initVibrator() -> a
    void startVibrator() -> e
    void initView2(com.aidigame.hisun.pet.bean.Gift) -> a
    void initView4() -> b
    void initView5() -> c
    void share(android.view.View) -> share
    void onDestroy() -> onDestroy
    void access$0(com.aidigame.hisun.pet.ui.ShakeActivity) -> a
com.aidigame.hisun.pet.ui.ShakeActivity$1 -> com.aidigame.hisun.pet.ui.fu:
    com.aidigame.hisun.pet.ui.ShakeActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.aidigame.hisun.pet.ui.ShakeActivity$10 -> com.aidigame.hisun.pet.ui.fv:
    com.aidigame.hisun.pet.ui.ShakeActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.ShakeActivity$2 -> com.aidigame.hisun.pet.ui.fw:
    com.aidigame.hisun.pet.ui.ShakeActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.ShakeActivity$3 -> com.aidigame.hisun.pet.ui.fx:
    com.aidigame.hisun.pet.ui.ShakeActivity this$0 -> a
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.aidigame.hisun.pet.ui.ShakeActivity$4 -> com.aidigame.hisun.pet.ui.ShakeActivity$4:
    com.aidigame.hisun.pet.ui.ShakeActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.ShakeActivity access$0(com.aidigame.hisun.pet.ui.ShakeActivity$4) -> access$0
com.aidigame.hisun.pet.ui.ShakeActivity$4$1 -> com.aidigame.hisun.pet.ui.ShakeActivity$4$1:
    com.aidigame.hisun.pet.ui.ShakeActivity$4 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.ShakeActivity$5 -> com.aidigame.hisun.pet.ui.fy:
    com.aidigame.hisun.pet.ui.ShakeActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.aidigame.hisun.pet.ui.ShakeActivity$6 -> com.aidigame.hisun.pet.ui.fz:
    com.aidigame.hisun.pet.ui.ShakeActivity this$0 -> a
    void onShake() -> a
    com.aidigame.hisun.pet.ui.ShakeActivity access$0(com.aidigame.hisun.pet.ui.ShakeActivity$6) -> a
com.aidigame.hisun.pet.ui.ShakeActivity$6$1 -> com.aidigame.hisun.pet.ui.ShakeActivity$6$1:
    com.aidigame.hisun.pet.ui.ShakeActivity$6 this$1 -> this$1
    void run() -> run
    com.aidigame.hisun.pet.ui.ShakeActivity$6 access$0(com.aidigame.hisun.pet.ui.ShakeActivity$6$1) -> access$0
com.aidigame.hisun.pet.ui.ShakeActivity$6$1$1 -> com.aidigame.hisun.pet.ui.ShakeActivity$6$1$1:
    com.aidigame.hisun.pet.ui.ShakeActivity$6$1 this$2 -> this$2
    void run() -> run
    com.aidigame.hisun.pet.ui.ShakeActivity$6$1 access$0(com.aidigame.hisun.pet.ui.ShakeActivity$6$1$1) -> access$0
com.aidigame.hisun.pet.ui.ShakeActivity$6$1$1$1 -> com.aidigame.hisun.pet.ui.ShakeActivity$6$1$1$1:
    com.aidigame.hisun.pet.ui.ShakeActivity$6$1$1 this$3 -> this$3
    void run() -> run
com.aidigame.hisun.pet.ui.ShakeActivity$7 -> com.aidigame.hisun.pet.ui.ShakeActivity$7:
    com.aidigame.hisun.pet.ui.ShakeActivity this$0 -> this$0
    com.aidigame.hisun.pet.bean.Gift val$gift -> val$gift
    void run() -> run
com.aidigame.hisun.pet.ui.ShakeActivity$8 -> com.aidigame.hisun.pet.ui.ga:
    com.aidigame.hisun.pet.ui.ShakeActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.ShakeActivity$9 -> com.aidigame.hisun.pet.ui.gb:
    com.aidigame.hisun.pet.ui.ShakeActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.ShowPictureActivity -> com.aidigame.hisun.pet.ui.ShowPictureActivity:
    com.nostra13.universalimageloader.core.DisplayImageOptions displayImageOptions -> a
    android.widget.ImageView imageView -> b
    android.view.GestureDetector detector -> c
    void onCreate(android.os.Bundle) -> onCreate
com.aidigame.hisun.pet.ui.ShowPictureActivity$1 -> com.aidigame.hisun.pet.ui.gc:
    com.aidigame.hisun.pet.ui.ShowPictureActivity this$0 -> a
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onDown(android.view.MotionEvent) -> onDown
com.aidigame.hisun.pet.ui.ShowPictureActivity$2 -> com.aidigame.hisun.pet.ui.gd:
    com.aidigame.hisun.pet.ui.ShowPictureActivity this$0 -> a
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.aidigame.hisun.pet.ui.ShowPictureActivity$3 -> com.aidigame.hisun.pet.ui.ge:
    com.aidigame.hisun.pet.ui.ShowPictureActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.aidigame.hisun.pet.ui.ShowTopicActivity -> com.aidigame.hisun.pet.ui.ShowTopicActivity:
    android.view.View popupParent -> a
    android.view.View paddingView -> b
    com.nostra13.universalimageloader.core.DisplayImageOptions displayImageOptions -> c
    android.widget.FrameLayout frameLayout -> d
    com.aidigame.hisun.pet.view.RoundImageView bt2 -> e
    android.widget.ImageView imageView -> f
    android.widget.TextView tv1 -> g
    android.widget.TextView tv2 -> h
    android.widget.TextView tv3 -> i
    android.widget.TextView tv4 -> j
    android.widget.TextView tv31 -> k
    android.widget.TextView giftNumTV -> l
    android.widget.TextView commentNumTV -> m
    android.widget.TextView shareNumTV -> n
    android.widget.TextView ageTV -> o
    android.widget.TextView topicName_tv -> p
    android.widget.TextView atUserTv -> q
    android.widget.ImageView bt4 -> r
    android.widget.ImageView bt1 -> s
    android.widget.ImageView bt3 -> t
    android.widget.ImageView add_comment -> u
    android.widget.ImageView sendGiftIV -> v
    android.widget.ImageView sexIV -> w
    android.widget.ImageView addFocusTV -> x
    android.widget.LinearLayout addcommentLayout -> y
    com.aidigame.hisun.pet.ui.ShowTopicActivity showTopicActivity -> z
    com.aidigame.hisun.pet.view.LinearLayoutForListView linearLayoutForListView -> A
    android.widget.LinearLayout progressLayout -> B
    com.aidigame.hisun.pet.widget.ShowProgress showProgress -> C
    com.aidigame.hisun.pet.adapter.CommentListViewAdapter commentAdapter -> D
    android.widget.EditText commentET -> E
    android.widget.TextView send_comment_tv -> F
    boolean show_add_comment -> G
    boolean show_shareLayout -> H
    com.aidigame.hisun.pet.view.HorizontalListView2 horizontialListView -> I
    com.aidigame.hisun.pet.adapter.ShowTopicHorizontalAdapter adapter -> J
    android.widget.LinearLayout linearLayout1 -> K
    android.widget.LinearLayout linearLayout2 -> L
    android.widget.ScrollView scrollview -> M
    android.widget.LinearLayout scrollParentLayout -> N
    boolean relativelayout1gone -> O
    int touchSlop -> P
    android.widget.RelativeLayout relativeLayout1 -> Q
    android.widget.RelativeLayout linearLayout33 -> R
    android.widget.RelativeLayout click33 -> S
    android.widget.RelativeLayout imageDesRelativelayout -> T
    android.widget.RelativeLayout black_layout -> U
    boolean judgeFlag -> V
    boolean hiden -> W
    int from_w -> X
    android.widget.LinearLayout shareLayout -> Y
    android.widget.RelativeLayout clawFunctionLayout -> Z
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction clawStyleFunction -> aa
    android.widget.TextView tv5 -> ab
    android.widget.LinearLayout imageView2 -> ac
    android.widget.LinearLayout imageView3 -> ad
    android.widget.LinearLayout imageView4 -> ae
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> af
    com.aidigame.hisun.pet.bean.PetPicture petPicture -> ag
    java.util.ArrayList petPictures -> ah
    com.aidigame.hisun.pet.widget.ShowWaterFull1 showWaterFull1 -> ai
    int currentPosition -> aj
    int mode -> ak
    android.os.Handler handler -> al
    boolean sendingComment -> am
    boolean replySb -> an
    com.aidigame.hisun.pet.bean.PetPicture$Comments cmt -> ao
    boolean onMore -> ap
    boolean onRefresh -> aq
    android.view.GestureDetector detector -> ar
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> h
    void initListener() -> i
    void setBlurImageBackground() -> j
    void setViews() -> a
    void onClick(android.view.View) -> onClick
    void sendComment(com.aidigame.hisun.pet.bean.PetPicture$Comments) -> a
    void sendGift() -> k
    void addOrRemoveFocus() -> l
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void getFrom() -> b
    void showProgress() -> c
    void loadBitmap(android.graphics.Bitmap) -> a
    void downLoadUserInfo() -> d
    void onDestroy() -> onDestroy
    void displayImage() -> e
    void loadImageInfo() -> f
    void shareNumChange() -> g
    java.lang.String judgeTime(long) -> a
    void access$0(com.aidigame.hisun.pet.ui.ShowTopicActivity) -> a
com.aidigame.hisun.pet.ui.ShowTopicActivity$1 -> com.aidigame.hisun.pet.ui.gf:
    com.aidigame.hisun.pet.ui.ShowTopicActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.aidigame.hisun.pet.ui.ShowTopicActivity$10 -> com.aidigame.hisun.pet.ui.gg:
    com.aidigame.hisun.pet.ui.ShowTopicActivity this$0 -> a
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.aidigame.hisun.pet.ui.ShowTopicActivity$11 -> com.aidigame.hisun.pet.ui.ShowTopicActivity$11:
    com.aidigame.hisun.pet.ui.ShowTopicActivity this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.ui.ShowTopicActivity$12 -> com.aidigame.hisun.pet.ui.ShowTopicActivity$12:
    com.aidigame.hisun.pet.ui.ShowTopicActivity this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.ui.ShowTopicActivity$13 -> com.aidigame.hisun.pet.ui.ShowTopicActivity$13:
    com.aidigame.hisun.pet.ui.ShowTopicActivity this$0 -> this$0
    java.lang.String val$comment -> val$comment
    void run() -> run
    com.aidigame.hisun.pet.ui.ShowTopicActivity access$0(com.aidigame.hisun.pet.ui.ShowTopicActivity$13) -> access$0
com.aidigame.hisun.pet.ui.ShowTopicActivity$13$1 -> com.aidigame.hisun.pet.ui.ShowTopicActivity$13$1:
    com.aidigame.hisun.pet.ui.ShowTopicActivity$13 this$1 -> this$1
    com.aidigame.hisun.pet.bean.User val$user -> val$user
    java.lang.String val$comment -> val$comment
    void run() -> run
    com.aidigame.hisun.pet.ui.ShowTopicActivity$13 access$0(com.aidigame.hisun.pet.ui.ShowTopicActivity$13$1) -> access$0
com.aidigame.hisun.pet.ui.ShowTopicActivity$13$1$1 -> com.aidigame.hisun.pet.ui.gh:
    com.aidigame.hisun.pet.ui.ShowTopicActivity$13$1 this$2 -> a
    void clickUserName(com.aidigame.hisun.pet.bean.PetPicture$Comments) -> a
com.aidigame.hisun.pet.ui.ShowTopicActivity$14 -> com.aidigame.hisun.pet.ui.ShowTopicActivity$14:
    com.aidigame.hisun.pet.ui.ShowTopicActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.ShowTopicActivity access$0(com.aidigame.hisun.pet.ui.ShowTopicActivity$14) -> access$0
com.aidigame.hisun.pet.ui.ShowTopicActivity$14$1 -> com.aidigame.hisun.pet.ui.ShowTopicActivity$14$1:
    com.aidigame.hisun.pet.ui.ShowTopicActivity$14 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.ShowTopicActivity$15 -> com.aidigame.hisun.pet.ui.ShowTopicActivity$15:
    com.aidigame.hisun.pet.ui.ShowTopicActivity this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.ui.ShowTopicActivity$16 -> com.aidigame.hisun.pet.ui.gi:
    com.aidigame.hisun.pet.ui.ShowTopicActivity this$0 -> a
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.aidigame.hisun.pet.ui.ShowTopicActivity$17 -> com.aidigame.hisun.pet.ui.ShowTopicActivity$17:
    com.aidigame.hisun.pet.ui.ShowTopicActivity this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.ui.ShowTopicActivity$18 -> com.aidigame.hisun.pet.ui.gj:
    com.aidigame.hisun.pet.ui.ShowTopicActivity this$0 -> a
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.aidigame.hisun.pet.ui.ShowTopicActivity$19 -> com.aidigame.hisun.pet.ui.ShowTopicActivity$19:
    com.aidigame.hisun.pet.ui.ShowTopicActivity this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.ui.ShowTopicActivity$2 -> com.aidigame.hisun.pet.ui.gk:
    android.widget.Toast toast -> a
    android.widget.Toast toast1 -> b
    com.aidigame.hisun.pet.ui.ShowTopicActivity this$0 -> c
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onDown(android.view.MotionEvent) -> onDown
com.aidigame.hisun.pet.ui.ShowTopicActivity$20 -> com.aidigame.hisun.pet.ui.gl:
    com.aidigame.hisun.pet.ui.ShowTopicActivity this$0 -> a
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
    com.aidigame.hisun.pet.ui.ShowTopicActivity access$0(com.aidigame.hisun.pet.ui.ShowTopicActivity$20) -> a
com.aidigame.hisun.pet.ui.ShowTopicActivity$20$1 -> com.aidigame.hisun.pet.ui.gm:
    com.aidigame.hisun.pet.ui.ShowTopicActivity$20 this$1 -> a
    void resultOk() -> a
com.aidigame.hisun.pet.ui.ShowTopicActivity$21 -> com.aidigame.hisun.pet.ui.ShowTopicActivity$21:
    com.aidigame.hisun.pet.ui.ShowTopicActivity this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.ui.ShowTopicActivity$22 -> com.aidigame.hisun.pet.ui.gn:
    com.aidigame.hisun.pet.ui.ShowTopicActivity this$0 -> a
    void toDo() -> a
    void closeDialog() -> b
    void lastResult(boolean) -> a
    void unRegister() -> c
    com.aidigame.hisun.pet.ui.ShowTopicActivity access$0(com.aidigame.hisun.pet.ui.ShowTopicActivity$22) -> a
com.aidigame.hisun.pet.ui.ShowTopicActivity$22$1 -> com.aidigame.hisun.pet.ui.ShowTopicActivity$22$1:
    com.aidigame.hisun.pet.ui.ShowTopicActivity$22 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.ShowTopicActivity$23 -> com.aidigame.hisun.pet.ui.ShowTopicActivity$23:
    com.aidigame.hisun.pet.ui.ShowTopicActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.ShowTopicActivity access$0(com.aidigame.hisun.pet.ui.ShowTopicActivity$23) -> access$0
com.aidigame.hisun.pet.ui.ShowTopicActivity$23$1 -> com.aidigame.hisun.pet.ui.ShowTopicActivity$23$1:
    com.aidigame.hisun.pet.ui.ShowTopicActivity$23 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.ShowTopicActivity$23$2 -> com.aidigame.hisun.pet.ui.ShowTopicActivity$23$2:
    com.aidigame.hisun.pet.ui.ShowTopicActivity$23 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.ShowTopicActivity$24 -> com.aidigame.hisun.pet.ui.ShowTopicActivity$24:
    com.aidigame.hisun.pet.ui.ShowTopicActivity this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.ui.ShowTopicActivity$25 -> com.aidigame.hisun.pet.ui.go:
    com.aidigame.hisun.pet.ui.ShowTopicActivity this$0 -> a
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.aidigame.hisun.pet.ui.ShowTopicActivity$26 -> com.aidigame.hisun.pet.ui.ShowTopicActivity$26:
    com.aidigame.hisun.pet.ui.ShowTopicActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.ShowTopicActivity access$0(com.aidigame.hisun.pet.ui.ShowTopicActivity$26) -> access$0
com.aidigame.hisun.pet.ui.ShowTopicActivity$26$1 -> com.aidigame.hisun.pet.ui.ShowTopicActivity$26$1:
    com.aidigame.hisun.pet.ui.ShowTopicActivity$26 this$1 -> this$1
    boolean val$flag -> val$flag
    void run() -> run
com.aidigame.hisun.pet.ui.ShowTopicActivity$27 -> com.aidigame.hisun.pet.ui.ShowTopicActivity$27:
    com.aidigame.hisun.pet.ui.ShowTopicActivity this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.ui.ShowTopicActivity$3 -> com.aidigame.hisun.pet.ui.ShowTopicActivity$3:
    com.aidigame.hisun.pet.ui.ShowTopicActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.ShowTopicActivity access$0(com.aidigame.hisun.pet.ui.ShowTopicActivity$3) -> access$0
com.aidigame.hisun.pet.ui.ShowTopicActivity$3$1 -> com.aidigame.hisun.pet.ui.ShowTopicActivity$3$1:
    com.aidigame.hisun.pet.ui.ShowTopicActivity$3 this$1 -> this$1
    boolean val$flag -> val$flag
    void run() -> run
com.aidigame.hisun.pet.ui.ShowTopicActivity$4 -> com.aidigame.hisun.pet.ui.gp:
    com.aidigame.hisun.pet.ui.ShowTopicActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.aidigame.hisun.pet.ui.ShowTopicActivity$5 -> com.aidigame.hisun.pet.ui.gq:
    com.aidigame.hisun.pet.ui.ShowTopicActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.aidigame.hisun.pet.ui.ShowTopicActivity$6 -> com.aidigame.hisun.pet.ui.gr:
    float distance -> a
    boolean isRecord -> b
    float ydown -> c
    com.aidigame.hisun.pet.ui.ShowTopicActivity this$0 -> d
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    com.aidigame.hisun.pet.ui.ShowTopicActivity access$0(com.aidigame.hisun.pet.ui.ShowTopicActivity$6) -> a
com.aidigame.hisun.pet.ui.ShowTopicActivity$6$1 -> com.aidigame.hisun.pet.ui.gs:
    com.aidigame.hisun.pet.ui.ShowTopicActivity$6 this$1 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.aidigame.hisun.pet.ui.ShowTopicActivity$7 -> com.aidigame.hisun.pet.ui.ShowTopicActivity$7:
    com.aidigame.hisun.pet.ui.ShowTopicActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.ShowTopicActivity access$0(com.aidigame.hisun.pet.ui.ShowTopicActivity$7) -> access$0
com.aidigame.hisun.pet.ui.ShowTopicActivity$7$1 -> com.aidigame.hisun.pet.ui.ShowTopicActivity$7$1:
    com.aidigame.hisun.pet.ui.ShowTopicActivity$7 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.ShowTopicActivity$8 -> com.aidigame.hisun.pet.ui.gt:
    com.aidigame.hisun.pet.ui.ShowTopicActivity this$0 -> a
    void clickItem4() -> j
    void clickItem3() -> i
    void clickItem2() -> h
    void clickItem1() -> g
com.aidigame.hisun.pet.ui.ShowTopicActivity$9 -> com.aidigame.hisun.pet.ui.gu:
    com.aidigame.hisun.pet.ui.ShowTopicActivity this$0 -> a
    void clickUserName(com.aidigame.hisun.pet.bean.PetPicture$Comments) -> a
com.aidigame.hisun.pet.ui.SubmitPictureActivity -> com.aidigame.hisun.pet.ui.SubmitPictureActivity:
    android.widget.Button submitBt -> a
    android.widget.Button closeBt -> b
    boolean sendPicture -> c
    android.widget.ImageView imageView -> d
    android.widget.ImageView backBt -> e
    android.widget.ImageView weixin -> f
    android.widget.ImageView xinlang -> g
    android.widget.ImageView box1 -> h
    android.widget.ImageView box2 -> i
    boolean sendToXinlang -> j
    boolean sendToWeixin -> k
    android.widget.EditText editText -> l
    android.widget.TextView textView -> m
    android.widget.TextView topicTV -> n
    android.widget.TextView atTV -> o
    android.widget.TextView sendToTv -> p
    android.widget.LinearLayout progressLayout -> q
    com.aidigame.hisun.pet.widget.ShowProgress showProgress -> r
    android.widget.LinearLayout weixinLayout -> s
    android.widget.LinearLayout xinlangLayout -> t
    com.aidigame.hisun.pet.ui.SubmitPictureActivity submitPictureActivity -> u
    android.net.Uri uri -> v
    java.lang.String path -> w
    java.lang.String finalPath -> x
    java.lang.String info -> y
    java.lang.String lastInfo -> z
    java.lang.String activityName -> A
    com.aidigame.hisun.pet.bean.PetPicture petPicture -> B
    java.lang.String topic_name -> C
    int topic_id -> D
    java.lang.String relatesId -> E
    java.lang.String relateString -> F
    com.aidigame.hisun.pet.bean.Animal animal -> G
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> H
    android.os.Handler handler -> I
    boolean isShow -> J
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> b
    void initListener() -> c
    void onClick(android.view.View) -> onClick
    void setTopic(com.aidigame.hisun.pet.bean.Topic) -> a
    void setAtUser(java.lang.String,java.lang.String) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void loadBitmap(android.net.Uri) -> a
    void xinlangAuth(android.app.Activity,com.aidigame.hisun.pet.http.json.UserImagesJson$Data,com.aidigame.hisun.pet.bean.PetPicture) -> a
    void addShares(boolean) -> a
    void over() -> a
com.aidigame.hisun.pet.ui.SubmitPictureActivity$1 -> com.aidigame.hisun.pet.ui.gv:
    com.aidigame.hisun.pet.ui.SubmitPictureActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.aidigame.hisun.pet.ui.SubmitPictureActivity$2 -> com.aidigame.hisun.pet.ui.SubmitPictureActivity$2:
    com.aidigame.hisun.pet.ui.SubmitPictureActivity this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.ui.SubmitPictureActivity$3 -> com.aidigame.hisun.pet.ui.gw:
    java.lang.String temp -> a
    android.widget.Toast toast -> b
    com.aidigame.hisun.pet.ui.SubmitPictureActivity this$0 -> c
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.aidigame.hisun.pet.ui.SubmitPictureActivity$4 -> com.aidigame.hisun.pet.ui.gx:
    com.aidigame.hisun.pet.ui.SubmitPictureActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.SubmitPictureActivity$5 -> com.aidigame.hisun.pet.ui.gy:
    com.aidigame.hisun.pet.ui.SubmitPictureActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.SubmitPictureActivity$6 -> com.aidigame.hisun.pet.ui.SubmitPictureActivity$6:
    com.aidigame.hisun.pet.ui.SubmitPictureActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.SubmitPictureActivity access$0(com.aidigame.hisun.pet.ui.SubmitPictureActivity$6) -> access$0
com.aidigame.hisun.pet.ui.SubmitPictureActivity$6$1 -> com.aidigame.hisun.pet.ui.SubmitPictureActivity$6$1:
    com.aidigame.hisun.pet.ui.SubmitPictureActivity$6 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.SubmitPictureActivity$7 -> com.aidigame.hisun.pet.ui.SubmitPictureActivity$7:
    com.aidigame.hisun.pet.ui.SubmitPictureActivity this$0 -> this$0
    android.app.Activity val$context -> val$context
    com.aidigame.hisun.pet.http.json.UserImagesJson$Data val$data -> val$data
    void run() -> run
    com.aidigame.hisun.pet.ui.SubmitPictureActivity access$0(com.aidigame.hisun.pet.ui.SubmitPictureActivity$7) -> access$0
com.aidigame.hisun.pet.ui.SubmitPictureActivity$7$1 -> com.aidigame.hisun.pet.ui.gz:
    com.aidigame.hisun.pet.ui.SubmitPictureActivity$7 this$1 -> a
    com.aidigame.hisun.pet.http.json.UserImagesJson$Data val$data -> b
    android.app.Activity val$context -> c
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> onWeiboException
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
    com.aidigame.hisun.pet.ui.SubmitPictureActivity$7 access$0(com.aidigame.hisun.pet.ui.SubmitPictureActivity$7$1) -> a
com.aidigame.hisun.pet.ui.SubmitPictureActivity$7$1$1 -> com.aidigame.hisun.pet.ui.ha:
    com.aidigame.hisun.pet.ui.SubmitPictureActivity$7$1 this$2 -> a
    android.app.Activity val$context -> b
    com.aidigame.hisun.pet.http.json.UserImagesJson$Data val$data -> c
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> onWeiboException
    void onComplete(java.lang.String) -> onComplete
com.aidigame.hisun.pet.ui.SubmitPictureActivity$8 -> com.aidigame.hisun.pet.ui.SubmitPictureActivity$8:
    com.aidigame.hisun.pet.ui.SubmitPictureActivity this$0 -> this$0
    boolean val$over -> val$over
    void run() -> run
    com.aidigame.hisun.pet.ui.SubmitPictureActivity access$0(com.aidigame.hisun.pet.ui.SubmitPictureActivity$8) -> access$0
com.aidigame.hisun.pet.ui.SubmitPictureActivity$8$1 -> com.aidigame.hisun.pet.ui.SubmitPictureActivity$8$1:
    com.aidigame.hisun.pet.ui.SubmitPictureActivity$8 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.TakePictureBackground -> com.aidigame.hisun.pet.ui.TakePictureBackground:
    int mode -> a
    java.lang.String filename -> b
    java.lang.String activityName -> c
    com.aidigame.hisun.pet.bean.Animal animal -> d
    android.os.Handler handler -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
com.aidigame.hisun.pet.ui.TakePictureBackground$1 -> com.aidigame.hisun.pet.ui.hb:
    com.aidigame.hisun.pet.ui.TakePictureBackground this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.aidigame.hisun.pet.ui.TakePictureBackground$2 -> com.aidigame.hisun.pet.ui.TakePictureBackground$2:
    com.aidigame.hisun.pet.ui.TakePictureBackground this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.ui.TakePictureBackground$3 -> com.aidigame.hisun.pet.ui.TakePictureBackground$3:
    com.aidigame.hisun.pet.ui.TakePictureBackground this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.ui.TopicListActivity -> com.aidigame.hisun.pet.ui.TopicListActivity:
    android.widget.FrameLayout frameLayout -> a
    android.view.View viewTopWhite -> b
    android.widget.ImageView back -> c
    android.widget.TextView sureTV -> d
    android.widget.EditText inputET -> e
    com.aidigame.hisun.pet.view.PullToRefreshAndMoreView pullToRefreshAndMoreView -> f
    android.widget.ListView listView -> g
    java.util.ArrayList topicList -> h
    com.aidigame.hisun.pet.adapter.TopicListAdapter adapter -> i
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> j
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> c
    void loadData() -> d
    void setBlurImageBackground() -> e
    void onRefresh() -> a
    void onMore() -> b
com.aidigame.hisun.pet.ui.TopicListActivity$1 -> com.aidigame.hisun.pet.ui.hc:
    com.aidigame.hisun.pet.ui.TopicListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.aidigame.hisun.pet.ui.TopicListActivity$2 -> com.aidigame.hisun.pet.ui.hd:
    com.aidigame.hisun.pet.ui.TopicListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.TopicListActivity$3 -> com.aidigame.hisun.pet.ui.he:
    com.aidigame.hisun.pet.ui.TopicListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.TopicListActivity$4 -> com.aidigame.hisun.pet.ui.hf:
    com.aidigame.hisun.pet.ui.TopicListActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void deleteErrorChar(android.text.Editable) -> a
com.aidigame.hisun.pet.ui.TopicListActivity$5 -> com.aidigame.hisun.pet.ui.TopicListActivity$5:
    com.aidigame.hisun.pet.ui.TopicListActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.TopicListActivity access$0(com.aidigame.hisun.pet.ui.TopicListActivity$5) -> access$0
com.aidigame.hisun.pet.ui.TopicListActivity$5$1 -> com.aidigame.hisun.pet.ui.TopicListActivity$5$1:
    com.aidigame.hisun.pet.ui.TopicListActivity$5 this$1 -> this$1
    java.util.ArrayList val$tempArrayList -> val$tempArrayList
    void run() -> run
com.aidigame.hisun.pet.ui.TopicListActivity$6 -> com.aidigame.hisun.pet.ui.TopicListActivity$6:
    com.aidigame.hisun.pet.ui.TopicListActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.TopicListActivity access$0(com.aidigame.hisun.pet.ui.TopicListActivity$6) -> access$0
com.aidigame.hisun.pet.ui.TopicListActivity$6$1 -> com.aidigame.hisun.pet.ui.TopicListActivity$6$1:
    com.aidigame.hisun.pet.ui.TopicListActivity$6 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.TopicListActivity$7 -> com.aidigame.hisun.pet.ui.hg:
    com.aidigame.hisun.pet.ui.TopicListActivity this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.aidigame.hisun.pet.ui.TouchActivity -> com.aidigame.hisun.pet.ui.TouchActivity:
    com.nostra13.universalimageloader.core.DisplayImageOptions displayImageOptions -> a
    com.aidigame.hisun.pet.widget.AudioRecordAndPlayer andPlayer -> b
    android.support.v4.view.ViewPager viewPager -> c
    android.view.View view1 -> d
    android.view.View view2 -> e
    android.view.View view3 -> f
    com.aidigame.hisun.pet.adapter.HomeViewPagerAdapter adapter -> g
    java.util.ArrayList viewList -> h
    com.aidigame.hisun.pet.bean.Animal animal -> i
    android.widget.RelativeLayout shareBitmapLayout -> j
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> k
    java.lang.String voicePath -> l
    com.aidigame.hisun.pet.view.EraserView_user_drawPath eraserView -> m
    android.widget.RelativeLayout layout -> n
    java.lang.String imagePath -> o
    boolean isTouched -> p
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void initView1(int) -> a
    void loadBitmap(java.lang.String) -> a
    void initView2() -> b
    void initView3() -> c
    void share(android.view.View) -> share
    void access$0(com.aidigame.hisun.pet.ui.TouchActivity) -> a
    void access$1(com.aidigame.hisun.pet.ui.TouchActivity) -> b
com.aidigame.hisun.pet.ui.TouchActivity$1 -> com.aidigame.hisun.pet.ui.TouchActivity$1:
    com.aidigame.hisun.pet.ui.TouchActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.TouchActivity access$0(com.aidigame.hisun.pet.ui.TouchActivity$1) -> access$0
com.aidigame.hisun.pet.ui.TouchActivity$1$1 -> com.aidigame.hisun.pet.ui.TouchActivity$1$1:
    com.aidigame.hisun.pet.ui.TouchActivity$1 this$1 -> this$1
    com.aidigame.hisun.pet.bean.Animal val$animal -> val$animal
    void run() -> run
com.aidigame.hisun.pet.ui.TouchActivity$1$2 -> com.aidigame.hisun.pet.ui.TouchActivity$1$2:
    com.aidigame.hisun.pet.ui.TouchActivity$1 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.TouchActivity$10 -> com.aidigame.hisun.pet.ui.hh:
    com.aidigame.hisun.pet.ui.TouchActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.TouchActivity$11 -> com.aidigame.hisun.pet.ui.hi:
    com.aidigame.hisun.pet.ui.TouchActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.TouchActivity$2 -> com.aidigame.hisun.pet.ui.hj:
    com.aidigame.hisun.pet.ui.TouchActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.TouchActivity$3 -> com.aidigame.hisun.pet.ui.hk:
    com.aidigame.hisun.pet.ui.TouchActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.aidigame.hisun.pet.ui.TouchActivity$4 -> com.aidigame.hisun.pet.ui.hl:
    com.aidigame.hisun.pet.ui.TouchActivity this$0 -> a
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.aidigame.hisun.pet.ui.TouchActivity$5 -> com.aidigame.hisun.pet.ui.hm:
    com.aidigame.hisun.pet.ui.TouchActivity this$0 -> a
    void onEraserOver() -> a
    com.aidigame.hisun.pet.ui.TouchActivity access$0(com.aidigame.hisun.pet.ui.TouchActivity$5) -> a
com.aidigame.hisun.pet.ui.TouchActivity$5$1 -> com.aidigame.hisun.pet.ui.TouchActivity$5$1:
    com.aidigame.hisun.pet.ui.TouchActivity$5 this$1 -> this$1
    void run() -> run
    com.aidigame.hisun.pet.ui.TouchActivity$5 access$0(com.aidigame.hisun.pet.ui.TouchActivity$5$1) -> access$0
com.aidigame.hisun.pet.ui.TouchActivity$5$1$1 -> com.aidigame.hisun.pet.ui.TouchActivity$5$1$1:
    com.aidigame.hisun.pet.ui.TouchActivity$5$1 this$2 -> this$2
    void run() -> run
com.aidigame.hisun.pet.ui.TouchActivity$5$1$2 -> com.aidigame.hisun.pet.ui.TouchActivity$5$1$2:
    com.aidigame.hisun.pet.ui.TouchActivity$5$1 this$2 -> this$2
    void run() -> run
com.aidigame.hisun.pet.ui.TouchActivity$6 -> com.aidigame.hisun.pet.ui.hn:
    com.aidigame.hisun.pet.ui.TouchActivity this$0 -> a
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.aidigame.hisun.pet.ui.TouchActivity$7 -> com.aidigame.hisun.pet.ui.ho:
    com.aidigame.hisun.pet.ui.TouchActivity this$0 -> a
    android.widget.ImageView val$imageIv -> b
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.aidigame.hisun.pet.ui.TouchActivity$8 -> com.aidigame.hisun.pet.ui.hp:
    com.aidigame.hisun.pet.ui.TouchActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.TouchActivity$9 -> com.aidigame.hisun.pet.ui.hq:
    com.aidigame.hisun.pet.ui.TouchActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.UserDossierActivity -> com.aidigame.hisun.pet.ui.UserDossierActivity:
    android.view.View popupParent -> a
    android.widget.RelativeLayout black_layout -> b
    android.widget.ImageView backIV -> c
    android.widget.ImageView moreIv -> d
    android.widget.ImageView changeIconIV -> e
    android.widget.ImageView kingdomsIV -> f
    android.widget.ImageView starsIV -> g
    android.widget.ImageView activityIV -> h
    android.widget.ImageView boxesIV -> i
    android.widget.ImageView userSexIV -> j
    android.widget.TextView titleTV -> k
    android.widget.TextView userLevelTV -> l
    android.widget.TextView userNameTV -> m
    android.widget.TextView provinceTV -> n
    android.widget.TextView cityTV -> o
    android.widget.TextView kingdomNameTV -> p
    android.widget.TextView userJobTV -> q
    android.widget.TextView experienceProgressTV -> r
    android.widget.TextView coinTV -> s
    android.view.View hatLineView -> t
    android.view.View starLineView -> u
    android.view.View activityLineView -> v
    android.view.View boxLineView -> w
    android.view.View experenceProgressView -> x
    android.view.View line1 -> y
    android.view.View line2 -> z
    com.aidigame.hisun.pet.view.RoundImageView userIcon -> A
    com.aidigame.hisun.pet.view.RoundImageView kingdomIcon -> B
    android.widget.RelativeLayout moreParentLayout -> C
    android.widget.RelativeLayout expLayout -> D
    android.widget.FrameLayout framelayout -> E
    com.aidigame.hisun.pet.widget.ShowProgress showProgress -> F
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> G
    com.aidigame.hisun.pet.ui.UserDossierActivity userDossierActivity -> H
    android.widget.LinearLayout bottomLinearLayout2 -> I
    android.widget.LinearLayout moreLayout -> J
    android.widget.LinearLayout animLayout -> K
    android.widget.LinearLayout noteLayout -> L
    android.widget.LinearLayout linearLayout2 -> M
    android.widget.LinearLayout linearLayout3 -> N
    android.widget.LinearLayout listParentLayout -> O
    android.widget.LinearLayout blurLayout -> P
    android.widget.LinearLayout progresslayout -> Q
    android.view.View topWhiteView -> R
    android.view.View infoShadowView -> S
    boolean isShowInfoLayout -> T
    com.aidigame.hisun.pet.widget.fragment.UserKingdomList userKingdomList -> U
    com.aidigame.hisun.pet.widget.fragment.UserFocus userFocus -> V
    com.aidigame.hisun.pet.widget.fragment.UserGiftList userGiftList -> W
    com.aidigame.hisun.pet.widget.fragment.UserActivity userActivity -> X
    android.graphics.Bitmap loadedImage1 -> Y
    com.aidigame.hisun.pet.bean.User user -> Z
    com.nostra13.universalimageloader.core.DisplayImageOptions displayImageOptions -> aa
    android.os.Handler handler -> ab
    boolean hasMeasured -> ac
    boolean isChangingUserIcon -> ad
    int getPictureMode -> ae
    java.lang.String path -> af
    java.lang.String sharePath -> ag
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> i
    void setUserInfo(com.aidigame.hisun.pet.bean.User) -> a
    void initListener() -> j
    void onClick(android.view.View) -> onClick
    void showKingdoms() -> a
    void showUserFocus() -> b
    void showKingdomPeoples() -> c
    void showKingdomGift() -> d
    void changeTabState() -> e
    void changeUserIcon() -> k
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void loadBitmap(android.net.Uri) -> a
    void getSharePetKingdomPicture() -> f
    void shareNumChange() -> g
    void userKingdomsChanged(com.aidigame.hisun.pet.bean.Animal) -> a
    void addNewKingdom() -> h
com.aidigame.hisun.pet.ui.UserDossierActivity$1 -> com.aidigame.hisun.pet.ui.hr:
    com.aidigame.hisun.pet.ui.UserDossierActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.aidigame.hisun.pet.ui.UserDossierActivity$10 -> com.aidigame.hisun.pet.ui.hs:
    com.aidigame.hisun.pet.ui.UserDossierActivity this$0 -> a
    android.view.View val$view -> b
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.ui.UserDossierActivity access$0(com.aidigame.hisun.pet.ui.UserDossierActivity$10) -> a
com.aidigame.hisun.pet.ui.UserDossierActivity$10$1 -> com.aidigame.hisun.pet.ui.UserDossierActivity$10$1:
    com.aidigame.hisun.pet.ui.UserDossierActivity$10 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.UserDossierActivity$11 -> com.aidigame.hisun.pet.ui.UserDossierActivity$11:
    com.aidigame.hisun.pet.ui.UserDossierActivity this$0 -> this$0
    java.lang.String val$path -> val$path
    void run() -> run
com.aidigame.hisun.pet.ui.UserDossierActivity$12 -> com.aidigame.hisun.pet.ui.UserDossierActivity$12:
    com.aidigame.hisun.pet.ui.UserDossierActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.UserDossierActivity access$0(com.aidigame.hisun.pet.ui.UserDossierActivity$12) -> access$0
com.aidigame.hisun.pet.ui.UserDossierActivity$12$1 -> com.aidigame.hisun.pet.ui.UserDossierActivity$12$1:
    com.aidigame.hisun.pet.ui.UserDossierActivity$12 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.UserDossierActivity$13 -> com.aidigame.hisun.pet.ui.UserDossierActivity$13:
    com.aidigame.hisun.pet.ui.UserDossierActivity this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.ui.UserDossierActivity$2 -> com.aidigame.hisun.pet.ui.UserDossierActivity$2:
    com.aidigame.hisun.pet.ui.UserDossierActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.UserDossierActivity access$0(com.aidigame.hisun.pet.ui.UserDossierActivity$2) -> access$0
com.aidigame.hisun.pet.ui.UserDossierActivity$2$1 -> com.aidigame.hisun.pet.ui.UserDossierActivity$2$1:
    com.aidigame.hisun.pet.ui.UserDossierActivity$2 this$1 -> this$1
    com.aidigame.hisun.pet.bean.User val$u -> val$u
    void run() -> run
com.aidigame.hisun.pet.ui.UserDossierActivity$3 -> com.aidigame.hisun.pet.ui.ht:
    com.aidigame.hisun.pet.ui.UserDossierActivity this$0 -> a
    com.aidigame.hisun.pet.bean.User val$user -> b
    boolean onPreDraw() -> onPreDraw
com.aidigame.hisun.pet.ui.UserDossierActivity$4 -> com.aidigame.hisun.pet.ui.hu:
    com.aidigame.hisun.pet.ui.UserDossierActivity this$0 -> a
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
    com.aidigame.hisun.pet.ui.UserDossierActivity access$0(com.aidigame.hisun.pet.ui.UserDossierActivity$4) -> a
com.aidigame.hisun.pet.ui.UserDossierActivity$4$1 -> com.aidigame.hisun.pet.ui.UserDossierActivity$4$1:
    com.aidigame.hisun.pet.ui.UserDossierActivity$4 this$1 -> this$1
    void run() -> run
    com.aidigame.hisun.pet.ui.UserDossierActivity$4 access$0(com.aidigame.hisun.pet.ui.UserDossierActivity$4$1) -> access$0
com.aidigame.hisun.pet.ui.UserDossierActivity$4$1$1 -> com.aidigame.hisun.pet.ui.UserDossierActivity$4$1$1:
    com.aidigame.hisun.pet.ui.UserDossierActivity$4$1 this$2 -> this$2
    void run() -> run
com.aidigame.hisun.pet.ui.UserDossierActivity$5 -> com.aidigame.hisun.pet.ui.UserDossierActivity$5:
    com.aidigame.hisun.pet.ui.UserDossierActivity this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.ui.UserDossierActivity$6 -> com.aidigame.hisun.pet.ui.UserDossierActivity$6:
    com.aidigame.hisun.pet.ui.UserDossierActivity this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.ui.UserDossierActivity$7 -> com.aidigame.hisun.pet.ui.UserDossierActivity$7:
    com.aidigame.hisun.pet.ui.UserDossierActivity this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.ui.UserDossierActivity$8 -> com.aidigame.hisun.pet.ui.hv:
    com.aidigame.hisun.pet.ui.UserDossierActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.UserDossierActivity$9 -> com.aidigame.hisun.pet.ui.hw:
    com.aidigame.hisun.pet.ui.UserDossierActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.UsersListActivity -> com.aidigame.hisun.pet.ui.UsersListActivity:
    android.widget.FrameLayout frameLayout -> a
    android.view.View viewTopWhite -> b
    android.view.View popup_parent -> c
    android.widget.RelativeLayout black_layout -> d
    com.aidigame.hisun.pet.adapter.UsersListAdapter adapter -> e
    java.util.ArrayList list -> f
    android.widget.ListView listView -> g
    java.lang.String likerString -> h
    java.lang.String senderString -> i
    android.widget.ImageView back -> j
    android.widget.TextView title -> k
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> l
    android.os.Handler handler -> m
    void onCreate(android.os.Bundle) -> onCreate
    void setBlurImageBackground() -> a
com.aidigame.hisun.pet.ui.UsersListActivity$1 -> com.aidigame.hisun.pet.ui.hx:
    com.aidigame.hisun.pet.ui.UsersListActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.aidigame.hisun.pet.ui.UsersListActivity$2 -> com.aidigame.hisun.pet.ui.hy:
    com.aidigame.hisun.pet.ui.UsersListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.aidigame.hisun.pet.ui.UsersListActivity$3 -> com.aidigame.hisun.pet.ui.hz:
    com.aidigame.hisun.pet.ui.UsersListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.ui.UsersListActivity$4 -> com.aidigame.hisun.pet.ui.UsersListActivity$4:
    java.util.ArrayList temp -> temp
    java.util.ArrayList temp1 -> temp1
    com.aidigame.hisun.pet.ui.UsersListActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.UsersListActivity access$0(com.aidigame.hisun.pet.ui.UsersListActivity$4) -> access$0
com.aidigame.hisun.pet.ui.UsersListActivity$4$1 -> com.aidigame.hisun.pet.ui.UsersListActivity$4$1:
    com.aidigame.hisun.pet.ui.UsersListActivity$4 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.UsersListActivity$5 -> com.aidigame.hisun.pet.ui.UsersListActivity$5:
    com.aidigame.hisun.pet.ui.UsersListActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.ui.UsersListActivity access$0(com.aidigame.hisun.pet.ui.UsersListActivity$5) -> access$0
com.aidigame.hisun.pet.ui.UsersListActivity$5$1 -> com.aidigame.hisun.pet.ui.UsersListActivity$5$1:
    com.aidigame.hisun.pet.ui.UsersListActivity$5 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.ui.UsersListActivity$6 -> com.aidigame.hisun.pet.ui.ia:
    com.aidigame.hisun.pet.ui.UsersListActivity this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.aidigame.hisun.pet.util.DeviceNetInfoUtil -> com.aidigame.hisun.pet.util.DeviceNetInfoUtil:
com.aidigame.hisun.pet.util.DeviceNetInfoUtil$NetworkStatusChangeReceiver -> com.aidigame.hisun.pet.util.DeviceNetInfoUtil$NetworkStatusChangeReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.aidigame.hisun.pet.util.HandleHttpConnectionException -> com.aidigame.hisun.pet.util.HandleHttpConnectionException:
    int Network_Status_Error -> Network_Status_Error
    int Connect_Error_1XX -> Connect_Error_1XX
    int Connect_Error_2XX -> Connect_Error_2XX
    int Connect_Error_3XX -> Connect_Error_3XX
    int Connect_Error_4XX -> Connect_Error_4XX
    int Connect_Error_5XX -> Connect_Error_5XX
    int Json_Data_Server_Exception -> Json_Data_Server_Exception
    int Json_Data_Parse_Exception -> Json_Data_Parse_Exception
    int CONNECT_OUT_TIME -> CONNECT_OUT_TIME
    int LOGIN_SUCCESS -> LOGIN_SUCCESS
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> handleHttpConnectionException
    android.content.Context context -> context
    android.os.Handler handler -> handler
    com.aidigame.hisun.pet.util.HandleHttpConnectionException getInstance() -> getInstance
    android.os.Handler getHandler(android.content.Context) -> getHandler
com.aidigame.hisun.pet.util.HandleHttpConnectionException$1 -> com.aidigame.hisun.pet.util.a:
    com.aidigame.hisun.pet.util.HandleHttpConnectionException this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.aidigame.hisun.pet.util.ImageUtil -> com.aidigame.hisun.pet.util.b:
    java.lang.String compressImage(android.graphics.Bitmap,int,java.lang.String) -> a
    android.graphics.Bitmap getImageFromView(android.view.View) -> a
    android.graphics.Bitmap getBitmapFromView(android.view.View,android.content.Context) -> a
    java.lang.String compressImage(android.graphics.Bitmap,java.lang.String) -> a
com.aidigame.hisun.pet.util.LogUtil -> com.aidigame.hisun.pet.util.c:
    boolean isDebug -> a
    void i(java.lang.String,java.lang.String) -> a
com.aidigame.hisun.pet.util.StringUtil -> com.aidigame.hisun.pet.util.d:
    java.lang.String timeFormat(long) -> a
    void deleteFile(java.io.File) -> a
    boolean judgeImageExists(java.lang.String) -> a
    boolean isEmpty(java.lang.String) -> b
    java.util.ArrayList getTalkHistory(android.content.Context) -> a
    void saveTalkHistory(java.util.ArrayList,android.content.Context) -> a
    int getNewMessageNum(android.content.Context,android.os.Handler) -> a
    java.util.ArrayList getGiftList(android.content.Context) -> b
    java.lang.String[] getUserJobs() -> a
    int getScaleByDPI(android.app.Activity) -> a
    int topicImageGetScaleByDPI(android.app.Activity) -> b
    int getExpByLevel(int) -> a
    int getContriByJobRank(int) -> b
    void viewStartTransAnim(android.view.View,long,int,int) -> a
    void hideSoftKeybord(android.app.Activity) -> c
    java.lang.String getAPKVersionName(android.content.Context) -> c
com.aidigame.hisun.pet.util.UiUtil -> com.aidigame.hisun.pet.util.e:
    void setScreenInfo(android.content.Context) -> a
    void setWidthAndHeight(android.app.Activity) -> a
com.aidigame.hisun.pet.util.UserStatusUtil -> com.aidigame.hisun.pet.util.f:
    boolean isLoginSuccess(android.app.Activity,android.view.View,android.view.View) -> a
    void downLoadUserInfo(android.app.Activity) -> a
    boolean hasXinlangAuth(android.app.Activity) -> b
    void checkUserExpGoldLvRankChange(com.aidigame.hisun.pet.bean.User,android.app.Activity,android.view.View) -> a
    void setDefaultKingdom() -> a
com.aidigame.hisun.pet.util.UserStatusUtil$1 -> com.aidigame.hisun.pet.util.UserStatusUtil$1:
    android.app.Activity val$context -> val$context
    void run() -> run
com.aidigame.hisun.pet.util.UserStatusUtil$2 -> com.aidigame.hisun.pet.util.UserStatusUtil$2:
    android.app.Activity val$context -> val$context
    android.os.Handler val$handler -> val$handler
    void run() -> run
com.aidigame.hisun.pet.util.UserStatusUtil$2$1 -> com.aidigame.hisun.pet.util.UserStatusUtil$2$1:
    com.aidigame.hisun.pet.util.UserStatusUtil$2 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.util.UserStatusUtil$3 -> com.aidigame.hisun.pet.util.g:
    android.app.Activity val$context -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.aidigame.hisun.pet.util.UserStatusUtil$4 -> com.aidigame.hisun.pet.util.h:
    void onClick(android.content.DialogInterface,int) -> onClick
com.aidigame.hisun.pet.util.UserStatusUtil$5 -> com.aidigame.hisun.pet.util.UserStatusUtil$5:
    com.aidigame.hisun.pet.bean.User val$user -> val$user
    android.app.Activity val$context -> val$context
    android.view.View val$view -> val$view
    void run() -> run
com.aidigame.hisun.pet.view.BallAndLineView -> com.aidigame.hisun.pet.view.BallAndLineView:
    int imageId -> imageId
    android.graphics.Bitmap redLine -> redLine
    android.graphics.Bitmap image -> image
    int clickTop -> clickTop
    int clickLeft -> clickLeft
    com.aidigame.hisun.pet.ui.ChoseStarActivity activity -> activity
    int height -> height
    int maxHeight -> maxHeight
    int speed -> speed
    int currentHeight -> currentHeight
    boolean animStart -> animStart
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    void setImageId(int,com.aidigame.hisun.pet.ui.ChoseStarActivity) -> setImageId
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.aidigame.hisun.pet.view.BallAndLineView$1 -> com.aidigame.hisun.pet.view.BallAndLineView$1:
    com.aidigame.hisun.pet.view.BallAndLineView this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.view.BallProgressView -> com.aidigame.hisun.pet.view.BallProgressView:
    float startAngle -> startAngle
    float sweepAngle -> sweepAngle
    float speed -> speed
    com.aidigame.hisun.pet.view.BallProgressView$OnProgressStopListener onProgressStopListener -> onProgressStopListener
    boolean isStop -> isStop
    int recordTime -> recordTime
    android.app.Activity activity -> activity
    android.graphics.Bitmap pressBmp -> pressBmp
    android.graphics.Bitmap greenBmp -> greenBmp
    boolean ispause -> ispause
    int count -> count
    int time -> time
    java.lang.Thread thread -> thread
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    void setPause(boolean) -> setPause
    void setStop(boolean) -> setStop
    void setOnProgressStopListener(com.aidigame.hisun.pet.view.BallProgressView$OnProgressStopListener) -> setOnProgressStopListener
    void setSpeed(int,android.app.Activity) -> setSpeed
    void newThread() -> newThread
    void reset() -> reset
com.aidigame.hisun.pet.view.BallProgressView$1 -> com.aidigame.hisun.pet.view.BallProgressView$1:
    com.aidigame.hisun.pet.view.BallProgressView this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.view.BallProgressView$OnProgressStopListener -> com.aidigame.hisun.pet.view.a:
    void onStop() -> a
    void onProgress(int) -> a
com.aidigame.hisun.pet.view.CircleView -> com.aidigame.hisun.pet.view.CircleView:
    android.graphics.Bitmap bitmap -> bitmap
    android.graphics.Rect bitmapRect -> bitmapRect
    android.graphics.PaintFlagsDrawFilter pdf -> pdf
    android.graphics.Paint paint -> paint
    android.graphics.Bitmap mDstB -> mDstB
    android.graphics.PorterDuffXfermode xfermode -> xfermode
    void init() -> init
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    android.graphics.Bitmap makeDst(int,int) -> makeDst
    void onDraw(android.graphics.Canvas) -> onDraw
com.aidigame.hisun.pet.view.EraserView_user_drawPath -> com.aidigame.hisun.pet.view.EraserView_user_drawPath:
    int SCREEN_W -> SCREEN_W
    int SCREEN_H -> SCREEN_H
    android.graphics.Bitmap mBitmap -> mBitmap
    android.graphics.Canvas mCanvas -> mCanvas
    android.graphics.Paint mPaint -> mPaint
    android.graphics.Path mPath -> mPath
    float mX -> mX
    float mY -> mY
    float TOUCH_TOLERANCE -> TOUCH_TOLERANCE
    com.aidigame.hisun.pet.view.EraserView_user_drawPath$OnEraserOverListener onEraserOverListener -> onEraserOverListener
    void setBitmap(android.graphics.Bitmap,int,int) -> setBitmap
    void setScreenWH() -> setScreenWH
    android.graphics.Bitmap createBitmapFromSRC() -> createBitmapFromSRC
    android.graphics.Bitmap createBitmapFromARGB(int,int,int) -> createBitmapFromARGB
    android.graphics.Bitmap setBitmapAlpha(android.graphics.Bitmap,int) -> setBitmapAlpha
    android.graphics.Bitmap scaleBitmapFillScreen(android.graphics.Bitmap) -> scaleBitmapFillScreen
    void setBackGround(android.graphics.Bitmap) -> setBackGround
    void setCoverBitmap(android.graphics.Bitmap,int) -> setCoverBitmap
    void onDraw(android.graphics.Canvas) -> onDraw
    void touch_start(float,float) -> touch_start
    void touch_move(float,float) -> touch_move
    void touch_up() -> touch_up
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setOnEraserOverListener(com.aidigame.hisun.pet.view.EraserView_user_drawPath$OnEraserOverListener) -> setOnEraserOverListener
com.aidigame.hisun.pet.view.EraserView_user_drawPath$OnEraserOverListener -> com.aidigame.hisun.pet.view.b:
    void onEraserOver() -> a
com.aidigame.hisun.pet.view.ExpView -> com.aidigame.hisun.pet.view.ExpView:
    float progress -> progress
    int mode -> mode
    void setProgress(int,int,android.app.Activity) -> setProgress
    void onDraw(android.graphics.Canvas) -> onDraw
com.aidigame.hisun.pet.view.ExpView$1 -> com.aidigame.hisun.pet.view.ExpView$1:
    com.aidigame.hisun.pet.view.ExpView this$0 -> this$0
    int val$progress -> val$progress
    int val$max -> val$max
    android.app.Activity val$activity -> val$activity
    void run() -> run
    com.aidigame.hisun.pet.view.ExpView access$0(com.aidigame.hisun.pet.view.ExpView$1) -> access$0
com.aidigame.hisun.pet.view.ExpView$1$1 -> com.aidigame.hisun.pet.view.ExpView$1$1:
    com.aidigame.hisun.pet.view.ExpView$1 this$1 -> this$1
    android.graphics.Bitmap val$temp -> val$temp
    void run() -> run
com.aidigame.hisun.pet.view.HorizontalListView2 -> com.aidigame.hisun.pet.view.HorizontalListView2:
    boolean mAlwaysOverrideTouch -> mAlwaysOverrideTouch
    android.widget.ListAdapter mAdapter -> mAdapter
    int mLeftViewIndex -> mLeftViewIndex
    int mRightViewIndex -> mRightViewIndex
    int mCurrentX -> mCurrentX
    int mNextX -> mNextX
    int mMaxX -> mMaxX
    int mDisplayOffset -> mDisplayOffset
    android.widget.Scroller mScroller -> mScroller
    android.view.GestureDetector mGesture -> mGesture
    java.util.Queue mRemovedViewQueue -> mRemovedViewQueue
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelected -> mOnItemSelected
    android.widget.AdapterView$OnItemClickListener mOnItemClicked -> mOnItemClicked
    android.widget.AdapterView$OnItemLongClickListener mOnItemLongClicked -> mOnItemLongClicked
    boolean mDataChanged -> mDataChanged
    android.database.DataSetObserver mDataObserver -> mDataObserver
    android.view.GestureDetector$OnGestureListener mOnGesture -> mOnGesture
    void initView() -> initView
    void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void setOnItemLongClickListener(android.widget.AdapterView$OnItemLongClickListener) -> setOnItemLongClickListener
    android.widget.ListAdapter getAdapter() -> getAdapter
    android.view.View getSelectedView() -> getSelectedView
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void reset() -> reset
    void setSelection(int) -> setSelection
    void addAndMeasureChild(android.view.View,int) -> addAndMeasureChild
    void onLayout(boolean,int,int,int,int) -> onLayout
    void fillList(int) -> fillList
    void fillListRight(int,int) -> fillListRight
    void fillListLeft(int,int) -> fillListLeft
    void removeNonVisibleItems(int) -> removeNonVisibleItems
    void positionItems(int) -> positionItems
    void scrollTo(int) -> scrollTo
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFilterTouchEventForSecurity(android.view.MotionEvent) -> onFilterTouchEventForSecurity
    void moveToNext(int) -> moveToNext
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.widget.Adapter getAdapter() -> getAdapter
    void access$2(com.aidigame.hisun.pet.view.HorizontalListView2,boolean) -> access$2
    void access$3(com.aidigame.hisun.pet.view.HorizontalListView2) -> access$3
    android.widget.AdapterView$OnItemClickListener access$4(com.aidigame.hisun.pet.view.HorizontalListView2) -> access$4
    int access$5(com.aidigame.hisun.pet.view.HorizontalListView2) -> access$5
    android.widget.AdapterView$OnItemSelectedListener access$6(com.aidigame.hisun.pet.view.HorizontalListView2) -> access$6
    android.widget.AdapterView$OnItemLongClickListener access$7(com.aidigame.hisun.pet.view.HorizontalListView2) -> access$7
com.aidigame.hisun.pet.view.HorizontalListView2$1 -> com.aidigame.hisun.pet.view.c:
    com.aidigame.hisun.pet.view.HorizontalListView2 this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.aidigame.hisun.pet.view.HorizontalListView2$2 -> com.aidigame.hisun.pet.view.d:
    com.aidigame.hisun.pet.view.HorizontalListView2 this$0 -> a
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean isEventWithinView(android.view.MotionEvent,android.view.View) -> a
com.aidigame.hisun.pet.view.HorizontalListView2$3 -> com.aidigame.hisun.pet.view.HorizontalListView2$3:
    com.aidigame.hisun.pet.view.HorizontalListView2 this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.view.HorizontialListView -> com.aidigame.hisun.pet.view.HorizontialListView:
    boolean mAlwaysOverrideTouch -> mAlwaysOverrideTouch
    android.widget.ListAdapter mAdapter -> mAdapter
    int mLeftViewIndex -> mLeftViewIndex
    int mRightViewIndex -> mRightViewIndex
    int mCurrentX -> mCurrentX
    int mNextX -> mNextX
    int mMaxX -> mMaxX
    int mDisplayOffset -> mDisplayOffset
    android.widget.Scroller mScroller -> mScroller
    android.view.GestureDetector mGesture -> mGesture
    java.util.Queue mRemovedViewQueue -> mRemovedViewQueue
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelected -> mOnItemSelected
    android.widget.AdapterView$OnItemClickListener mOnItemClicked -> mOnItemClicked
    boolean mDataChanged -> mDataChanged
    android.database.DataSetObserver mDataObserver -> mDataObserver
    android.view.GestureDetector$OnGestureListener mOnGesture -> mOnGesture
    void initView() -> initView
    void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    android.widget.ListAdapter getAdapter() -> getAdapter
    android.view.View getSelectedView() -> getSelectedView
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void reset() -> reset
    void setSelection(int) -> setSelection
    void addAndMeasureChild(android.view.View,int) -> addAndMeasureChild
    void onLayout(boolean,int,int,int,int) -> onLayout
    void fillList(int) -> fillList
    void fillListRight(int,int) -> fillListRight
    void fillListLeft(int,int) -> fillListLeft
    void removeNonVisibleItems(int) -> removeNonVisibleItems
    void positionItems(int) -> positionItems
    void scrollTo(int) -> scrollTo
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onDown(android.view.MotionEvent) -> onDown
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.widget.Adapter getAdapter() -> getAdapter
    void access$2(com.aidigame.hisun.pet.view.HorizontialListView,boolean) -> access$2
    void access$3(com.aidigame.hisun.pet.view.HorizontialListView) -> access$3
    android.widget.AdapterView$OnItemClickListener access$4(com.aidigame.hisun.pet.view.HorizontialListView) -> access$4
    int access$5(com.aidigame.hisun.pet.view.HorizontialListView) -> access$5
    android.widget.AdapterView$OnItemSelectedListener access$6(com.aidigame.hisun.pet.view.HorizontialListView) -> access$6
com.aidigame.hisun.pet.view.HorizontialListView$1 -> com.aidigame.hisun.pet.view.e:
    com.aidigame.hisun.pet.view.HorizontialListView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.aidigame.hisun.pet.view.HorizontialListView$2 -> com.aidigame.hisun.pet.view.f:
    com.aidigame.hisun.pet.view.HorizontialListView this$0 -> a
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
com.aidigame.hisun.pet.view.HorizontialListView$3 -> com.aidigame.hisun.pet.view.HorizontialListView$3:
    com.aidigame.hisun.pet.view.HorizontialListView this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.view.LinearLayoutForListView -> com.aidigame.hisun.pet.view.LinearLayoutForListView:
    android.widget.BaseAdapter adapter -> adapter
    android.view.View$OnClickListener onClickListener -> onClickListener
    void bindLinearLayout() -> bindLinearLayout
    android.widget.BaseAdapter getAdpater() -> getAdpater
    void setAdapter(android.widget.BaseAdapter) -> setAdapter
    android.view.View$OnClickListener getOnclickListner() -> getOnclickListner
    void setOnclickLinstener(android.view.View$OnClickListener) -> setOnclickLinstener
com.aidigame.hisun.pet.view.MyListView -> com.aidigame.hisun.pet.view.MyListView:
    android.app.Activity activity -> activity
    java.lang.String TAG -> TAG
    int RELEASE_To_REFRESH -> RELEASE_To_REFRESH
    int PULL_To_REFRESH -> PULL_To_REFRESH
    int REFRESHING -> REFRESHING
    int DONE -> DONE
    int LOADING -> LOADING
    int RATIO -> RATIO
    android.view.LayoutInflater inflater -> inflater
    android.widget.LinearLayout headView -> headView
    android.widget.TextView tipsTextview -> tipsTextview
    android.widget.TextView lastUpdatedTextView -> lastUpdatedTextView
    android.widget.ImageView arrowImageView -> arrowImageView
    android.widget.ProgressBar progressBar -> progressBar
    android.view.animation.RotateAnimation animation -> animation
    android.view.animation.RotateAnimation reverseAnimation -> reverseAnimation
    boolean isRecored -> isRecored
    int headContentWidth -> headContentWidth
    int headContentHeight -> headContentHeight
    int startY -> startY
    int firstItemIndex -> firstItemIndex
    int state -> state
    boolean isBack -> isBack
    com.aidigame.hisun.pet.view.MyListView$OnRefreshListener refreshListener -> refreshListener
    boolean isRefreshable -> isRefreshable
    void setActivity(android.app.Activity) -> setActivity
    void init(android.content.Context) -> init
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void setVisibiltyGone() -> setVisibiltyGone
    void setVisibiltyVision() -> setVisibiltyVision
    void homeActivity() -> homeActivity
    void userHomeActivity() -> userHomeActivity
    void otherUserHomeActivity() -> otherUserHomeActivity
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void changeHeaderViewByState() -> changeHeaderViewByState
    void setonRefreshListener(com.aidigame.hisun.pet.view.MyListView$OnRefreshListener) -> setonRefreshListener
    void onRefreshComplete() -> onRefreshComplete
    void onRefresh() -> onRefresh
    void measureView(android.view.View) -> measureView
    void setAdapter(android.widget.BaseAdapter) -> setAdapter
com.aidigame.hisun.pet.view.MyListView$1 -> com.aidigame.hisun.pet.view.MyListView$1:
    com.aidigame.hisun.pet.view.MyListView this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.view.MyListView$OnRefreshListener -> com.aidigame.hisun.pet.view.g:
    void onRefresh() -> a
com.aidigame.hisun.pet.view.MyScrollowView -> com.aidigame.hisun.pet.view.MyScrollowView:
    com.aidigame.hisun.pet.waterfull1.LazyScrollView$OnScrollListener listener -> listener
    void setLasyView(com.aidigame.hisun.pet.waterfull1.LazyScrollView$OnScrollListener) -> setLasyView
    void onScrollChanged(int,int,int,int) -> onScrollChanged
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.aidigame.hisun.pet.view.OneByOneGallery -> com.aidigame.hisun.pet.view.OneByOneGallery:
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.aidigame.hisun.pet.view.PullToRefreshAndMoreView -> com.aidigame.hisun.pet.view.PullToRefreshAndMoreView:
    int STATUS_PULL_DOWN_TO_REFRESH -> STATUS_PULL_DOWN_TO_REFRESH
    int STATUS_PULL_DOWN_RELEASE_TO_REFRESH -> STATUS_PULL_DOWN_RELEASE_TO_REFRESH
    int STATUS_PULL_DOWN_REFRESHING -> STATUS_PULL_DOWN_REFRESHING
    int STATUS_PULL_DOWN_REFRESH_FINISHED -> STATUS_PULL_DOWN_REFRESH_FINISHED
    int STATUS_PULL_UP_TO_MORE -> STATUS_PULL_UP_TO_MORE
    int STATUS_PULL_UP_RELEASE_TO_MORE -> STATUS_PULL_UP_RELEASE_TO_MORE
    int STATUS_PULL_UP_LOADING_MORE -> STATUS_PULL_UP_LOADING_MORE
    int STATUS_PULL_UP_LOADING_FINISHED -> STATUS_PULL_UP_LOADING_FINISHED
    android.view.View header -> header
    android.widget.ImageView header_arrow -> header_arrow
    android.widget.ProgressBar header_progressBar -> header_progressBar
    android.widget.TextView header_description -> header_description
    android.widget.TextView header_update_at -> header_update_at
    android.view.ViewGroup$MarginLayoutParams header_marLayoutParams -> header_marLayoutParams
    android.view.View footer -> footer
    android.widget.ImageView footer_arrow -> footer_arrow
    android.widget.ProgressBar footer_progressBar -> footer_progressBar
    android.widget.TextView footer_description -> footer_description
    android.widget.TextView footer_update_at -> footer_update_at
    android.view.ViewGroup$MarginLayoutParams footer_marLayoutParams -> footer_marLayoutParams
    android.widget.ListView listView -> listView
    int touchSlop -> touchSlop
    int headerScrollSpeed -> headerScrollSpeed
    int footerScrollSpeed -> footerScrollSpeed
    int hideHeaderHeight -> hideHeaderHeight
    int hideFooterHeight -> hideFooterHeight
    long lastUpdateRefreshAtTime -> lastUpdateRefreshAtTime
    long lastUpdateMoreAtTime -> lastUpdateMoreAtTime
    int viewHeight -> viewHeight
    float yDown -> yDown
    float xDown -> xDown
    int footCurrentStatus -> footCurrentStatus
    int currentStatus -> currentStatus
    boolean ableToPullRefresh -> ableToPullRefresh
    boolean ableToPullMore -> ableToPullMore
    com.aidigame.hisun.pet.view.PullToRefreshAndMoreView$PullToRefreshAndMoreListener listener -> listener
    boolean isLoadOnce -> isLoadOnce
    int lastStatus -> lastStatus
    long ONE_MINUTE -> ONE_MINUTE
    long ONE_HOUR -> ONE_HOUR
    long ONE_DAY -> ONE_DAY
    long ONE_MONTH -> ONE_MONTH
    long ONE_YEAR -> ONE_YEAR
    android.view.MotionEvent lastMotionEvent -> lastMotionEvent
    int distance -> distance
    boolean hasChange -> hasChange
    boolean canPullRefresh -> canPullRefresh
    void initView() -> initView
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void judgeIsAbleToPull() -> judgeIsAbleToPull
    void updateHeaderView() -> updateHeaderView
    void changeHeaderArrowDirection() -> changeHeaderArrowDirection
    void updateFooterView() -> updateFooterView
    void changeFooterArrowDirection() -> changeFooterArrowDirection
    long refreshUpdatedAtTime(long,android.widget.TextView) -> refreshUpdatedAtTime
    void sleep(long) -> sleep
    void setListener(com.aidigame.hisun.pet.view.PullToRefreshAndMoreView$PullToRefreshAndMoreListener) -> setListener
    void onRefreshFinish() -> onRefreshFinish
    void onMoreFinish() -> onMoreFinish
    void setHeaderAndFooterInvisible() -> setHeaderAndFooterInvisible
    android.widget.ListView getListView() -> getListView
    android.view.ViewGroup$MarginLayoutParams access$0(com.aidigame.hisun.pet.view.PullToRefreshAndMoreView) -> access$0
    int access$1(com.aidigame.hisun.pet.view.PullToRefreshAndMoreView) -> access$1
    int access$2(com.aidigame.hisun.pet.view.PullToRefreshAndMoreView) -> access$2
    android.view.View access$3(com.aidigame.hisun.pet.view.PullToRefreshAndMoreView) -> access$3
    void access$4(com.aidigame.hisun.pet.view.PullToRefreshAndMoreView,int) -> access$4
    android.widget.ListView access$5(com.aidigame.hisun.pet.view.PullToRefreshAndMoreView) -> access$5
    void access$6(com.aidigame.hisun.pet.view.PullToRefreshAndMoreView,boolean) -> access$6
    com.aidigame.hisun.pet.view.PullToRefreshAndMoreView$PullToRefreshAndMoreListener access$7(com.aidigame.hisun.pet.view.PullToRefreshAndMoreView) -> access$7
    void access$8(com.aidigame.hisun.pet.view.PullToRefreshAndMoreView) -> access$8
    android.view.ViewGroup$MarginLayoutParams access$9(com.aidigame.hisun.pet.view.PullToRefreshAndMoreView) -> access$9
    int access$10(com.aidigame.hisun.pet.view.PullToRefreshAndMoreView) -> access$10
    int access$11(com.aidigame.hisun.pet.view.PullToRefreshAndMoreView) -> access$11
    android.view.View access$12(com.aidigame.hisun.pet.view.PullToRefreshAndMoreView) -> access$12
    void access$13(com.aidigame.hisun.pet.view.PullToRefreshAndMoreView,int) -> access$13
    void access$14(com.aidigame.hisun.pet.view.PullToRefreshAndMoreView,boolean) -> access$14
    void access$15(com.aidigame.hisun.pet.view.PullToRefreshAndMoreView) -> access$15
com.aidigame.hisun.pet.view.PullToRefreshAndMoreView$FooterScrollToBottomTask -> com.aidigame.hisun.pet.view.h:
    com.aidigame.hisun.pet.view.PullToRefreshAndMoreView this$0 -> a
    java.lang.Integer doInBackground(java.lang.Integer[]) -> a
    void onProgressUpdate(java.lang.Integer[]) -> b
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.aidigame.hisun.pet.view.PullToRefreshAndMoreView$HeaderScrollToTopTask -> com.aidigame.hisun.pet.view.i:
    com.aidigame.hisun.pet.view.PullToRefreshAndMoreView this$0 -> a
    java.lang.Integer doInBackground(java.lang.Integer[]) -> a
    void onProgressUpdate(java.lang.Integer[]) -> b
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.aidigame.hisun.pet.view.PullToRefreshAndMoreView$HideFooterTask -> com.aidigame.hisun.pet.view.j:
    com.aidigame.hisun.pet.view.PullToRefreshAndMoreView this$0 -> a
    java.lang.Integer doInBackground(java.lang.Integer[]) -> a
    void onProgressUpdate(java.lang.Integer[]) -> b
    void onPostExecute(java.lang.Integer) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.aidigame.hisun.pet.view.PullToRefreshAndMoreView$HideHeaderTask -> com.aidigame.hisun.pet.view.k:
    com.aidigame.hisun.pet.view.PullToRefreshAndMoreView this$0 -> a
    java.lang.Integer doInBackground(java.lang.Integer[]) -> a
    void onProgressUpdate(java.lang.Integer[]) -> b
    void onPostExecute(java.lang.Integer) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.aidigame.hisun.pet.view.PullToRefreshAndMoreView$PullToRefreshAndMoreListener -> com.aidigame.hisun.pet.view.l:
    void onRefresh() -> a
    void onMore() -> b
com.aidigame.hisun.pet.view.RoundCornerImageView -> com.aidigame.hisun.pet.view.RoundCornerImageView:
    void onDraw(android.graphics.Canvas) -> onDraw
com.aidigame.hisun.pet.view.RoundImageView -> com.aidigame.hisun.pet.view.RoundImageView:
    int mBorderThickness -> mBorderThickness
    android.content.Context mContext -> mContext
    int defaultColor -> defaultColor
    int mBorderOutsideColor -> mBorderOutsideColor
    int mBorderInsideColor -> mBorderInsideColor
    int defaultWidth -> defaultWidth
    int defaultHeight -> defaultHeight
    android.graphics.Bitmap bitmap -> bitmap
    android.os.Handler handler -> handler
    void setCustomAttributes(android.util.AttributeSet) -> setCustomAttributes
    void setCircleImage(android.graphics.Bitmap) -> setCircleImage
    void onDraw(android.graphics.Canvas) -> onDraw
    int getmBorderThickness() -> getmBorderThickness
    void setmBorderThickness(int,int) -> setmBorderThickness
    void clearAtrribute() -> clearAtrribute
    int getmBorderOutsideColor() -> getmBorderOutsideColor
    int getmBorderInsideColor() -> getmBorderInsideColor
    void setmBorderInsideColor(int) -> setmBorderInsideColor
    android.graphics.Bitmap getCroppedRoundBitmap(android.graphics.Bitmap,int) -> getCroppedRoundBitmap
    void drawCircleBorder(android.graphics.Canvas,int,int) -> drawCircleBorder
com.aidigame.hisun.pet.view.RoundImageView$1 -> com.aidigame.hisun.pet.view.m:
    com.aidigame.hisun.pet.view.RoundImageView this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.aidigame.hisun.pet.view.ScrollOverListView -> com.aidigame.hisun.pet.view.ScrollOverListView:
    int mLastY -> mLastY
    int mTopPosition -> mTopPosition
    int mBottomPosition -> mBottomPosition
    boolean hasShow -> hasShow
    long time -> time
    com.aidigame.hisun.pet.view.ScrollOverListView$OnScrollOverListener mOnScrollOverListener -> mOnScrollOverListener
    void init() -> init
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setTopPosition(int) -> setTopPosition
    void setBottomPosition(int) -> setBottomPosition
    void setOnScrollOverListener(com.aidigame.hisun.pet.view.ScrollOverListView$OnScrollOverListener) -> setOnScrollOverListener
com.aidigame.hisun.pet.view.ScrollOverListView$1 -> com.aidigame.hisun.pet.view.n:
    com.aidigame.hisun.pet.view.ScrollOverListView this$0 -> a
    boolean onListViewTopAndPullDown(int) -> a
    boolean onListViewBottomAndPullUp(int) -> b
    boolean onMotionDown(android.view.MotionEvent) -> a
    boolean onMotionMove(android.view.MotionEvent,int) -> a
    boolean onMotionUp(android.view.MotionEvent) -> b
com.aidigame.hisun.pet.view.ScrollOverListView$OnScrollOverListener -> com.aidigame.hisun.pet.view.o:
    boolean onListViewTopAndPullDown(int) -> a
    boolean onListViewBottomAndPullUp(int) -> b
    boolean onMotionDown(android.view.MotionEvent) -> a
    boolean onMotionMove(android.view.MotionEvent,int) -> a
    boolean onMotionUp(android.view.MotionEvent) -> b
com.aidigame.hisun.pet.view.StaticViewPager -> com.aidigame.hisun.pet.view.StaticViewPager:
    boolean canScroll -> canScroll
    void setCanScroll(boolean) -> setCanScroll
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
com.aidigame.hisun.pet.view.TopicView -> com.aidigame.hisun.pet.view.TopicView:
    java.lang.String path -> path
    int screen_width -> screen_width
    int screen_height -> screen_height
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
com.aidigame.hisun.pet.view.arcmenu.ArcLayout -> com.aidigame.hisun.pet.view.arcmenu.ArcLayout:
    int mChildSize -> mChildSize
    int mChildPadding -> mChildPadding
    int mLayoutPadding -> mLayoutPadding
    float DEFAULT_FROM_DEGREES -> DEFAULT_FROM_DEGREES
    float DEFAULT_TO_DEGREES -> DEFAULT_TO_DEGREES
    float mFromDegrees -> mFromDegrees
    float mToDegrees -> mToDegrees
    int MIN_RADIUS -> MIN_RADIUS
    int mRadius -> mRadius
    boolean mExpanded -> mExpanded
    int computeRadius(float,int,int,int,int) -> computeRadius
    android.graphics.Rect computeChildFrame(int,int,int,float,int) -> computeChildFrame
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    long computeStartOffset(int,boolean,int,float,long,android.view.animation.Interpolator) -> computeStartOffset
    int getTransformedIndex(boolean,int,int) -> getTransformedIndex
    android.view.animation.Animation createExpandAnimation(float,float,float,float,long,long,android.view.animation.Interpolator) -> createExpandAnimation
    android.view.animation.Animation createShrinkAnimation(float,float,float,float,long,long,android.view.animation.Interpolator) -> createShrinkAnimation
    void bindChildAnimation(android.view.View,int,long) -> bindChildAnimation
    boolean isExpanded() -> isExpanded
    void setArc(float,float) -> setArc
    void setChildSize(int) -> setChildSize
    int getChildSize() -> getChildSize
    void switchState(boolean) -> switchState
    void onAllAnimationsEnd() -> onAllAnimationsEnd
    void access$0(com.aidigame.hisun.pet.view.arcmenu.ArcLayout) -> access$0
com.aidigame.hisun.pet.view.arcmenu.ArcLayout$1 -> com.aidigame.hisun.pet.view.arcmenu.ArcLayout$1:
    com.aidigame.hisun.pet.view.arcmenu.ArcLayout this$0 -> this$0
    boolean val$isLast -> val$isLast
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    com.aidigame.hisun.pet.view.arcmenu.ArcLayout access$0(com.aidigame.hisun.pet.view.arcmenu.ArcLayout$1) -> access$0
com.aidigame.hisun.pet.view.arcmenu.ArcLayout$1$1 -> com.aidigame.hisun.pet.view.arcmenu.ArcLayout$1$1:
    com.aidigame.hisun.pet.view.arcmenu.ArcLayout$1 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.view.arcmenu.ArcMenu -> com.aidigame.hisun.pet.view.arcmenu.ArcMenu:
    com.aidigame.hisun.pet.view.arcmenu.ArcLayout mArcLayout -> mArcLayout
    com.aidigame.hisun.pet.view.CircleView mHintView -> mHintView
    android.view.ViewGroup controlLayout -> controlLayout
    int height -> height
    boolean isRecord -> isRecord
    boolean isInvisible -> isInvisible
    com.aidigame.hisun.pet.view.arcmenu.ArcMenu arcMenu2 -> arcMenu2
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setInvisible(boolean,com.aidigame.hisun.pet.view.arcmenu.ArcMenu) -> setInvisible
    void init(android.content.Context) -> init
    void swichState() -> swichState
    void applyAttrs(android.util.AttributeSet) -> applyAttrs
    void addItem(android.view.View,android.view.View$OnClickListener) -> addItem
    com.aidigame.hisun.pet.view.CircleView getImageView() -> getImageView
    android.view.View$OnClickListener getItemClickListener(android.view.View$OnClickListener) -> getItemClickListener
    android.view.animation.Animation bindItemAnimation(android.view.View,boolean,long) -> bindItemAnimation
    void itemDidDisappear() -> itemDidDisappear
    android.view.animation.Animation createItemDisapperAnimation(long,boolean) -> createItemDisapperAnimation
    android.view.animation.Animation createHintSwitchAnimation(boolean) -> createHintSwitchAnimation
    android.view.animation.Animation access$0(com.aidigame.hisun.pet.view.arcmenu.ArcMenu,android.view.View,boolean,long) -> access$0
    void access$1(com.aidigame.hisun.pet.view.arcmenu.ArcMenu) -> access$1
    com.aidigame.hisun.pet.view.arcmenu.ArcLayout access$2(com.aidigame.hisun.pet.view.arcmenu.ArcMenu) -> access$2
com.aidigame.hisun.pet.view.arcmenu.ArcMenu$1 -> com.aidigame.hisun.pet.view.arcmenu.ArcMenu$1:
    com.aidigame.hisun.pet.view.arcmenu.ArcMenu this$0 -> this$0
    android.view.View$OnClickListener val$listener -> val$listener
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.view.arcmenu.ArcMenu access$0(com.aidigame.hisun.pet.view.arcmenu.ArcMenu$1) -> access$0
com.aidigame.hisun.pet.view.arcmenu.ArcMenu$1$1 -> com.aidigame.hisun.pet.view.arcmenu.ArcMenu$1$1:
    com.aidigame.hisun.pet.view.arcmenu.ArcMenu$1 this$1 -> this$1
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    com.aidigame.hisun.pet.view.arcmenu.ArcMenu$1 access$0(com.aidigame.hisun.pet.view.arcmenu.ArcMenu$1$1) -> access$0
com.aidigame.hisun.pet.view.arcmenu.ArcMenu$1$1$1 -> com.aidigame.hisun.pet.view.arcmenu.ArcMenu$1$1$1:
    com.aidigame.hisun.pet.view.arcmenu.ArcMenu$1$1 this$2 -> this$2
    void run() -> run
com.aidigame.hisun.pet.view.arcmenu.RotateAndTranslateAnimation -> com.aidigame.hisun.pet.view.arcmenu.RotateAndTranslateAnimation:
    int mFromXType -> mFromXType
    int mToXType -> mToXType
    int mFromYType -> mFromYType
    int mToYType -> mToYType
    float mFromXValue -> mFromXValue
    float mToXValue -> mToXValue
    float mFromYValue -> mFromYValue
    float mToYValue -> mToYValue
    float mFromXDelta -> mFromXDelta
    float mToXDelta -> mToXDelta
    float mFromYDelta -> mFromYDelta
    float mToYDelta -> mToYDelta
    float mFromDegrees -> mFromDegrees
    float mToDegrees -> mToDegrees
    int mPivotXType -> mPivotXType
    int mPivotYType -> mPivotYType
    float mPivotXValue -> mPivotXValue
    float mPivotYValue -> mPivotYValue
    float mPivotX -> mPivotX
    float mPivotY -> mPivotY
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
    void initialize(int,int,int,int) -> initialize
com.aidigame.hisun.pet.waterfull1.FlowTag -> com.aidigame.hisun.pet.waterfull1.a:
    int flowId -> d
    boolean halfHeight -> a
    com.aidigame.hisun.pet.bean.PetPicture petPicture -> e
    int what -> b
    int mode -> c
    android.content.res.AssetManager assetManager -> f
    int ItemWidth -> g
    int getFlowId() -> a
    void setFlowId(int) -> a
    com.aidigame.hisun.pet.bean.PetPicture getData() -> b
    void setData(com.aidigame.hisun.pet.bean.PetPicture) -> a
    android.content.res.AssetManager getAssetManager() -> c
    int getItemWidth() -> d
    void setItemWidth(int) -> b
com.aidigame.hisun.pet.waterfull1.FlowView -> com.aidigame.hisun.pet.waterfull1.FlowView:
    boolean isRecord -> isRecord
    boolean isMove -> isMove
    android.graphics.drawable.AnimationDrawable loadingAnimation -> loadingAnimation
    com.aidigame.hisun.pet.waterfull1.FlowTag flowTag -> flowTag
    com.aidigame.hisun.pet.waterfull1.LazyScrollView lazyScrollView -> lazyScrollView
    android.app.Activity context -> context
    com.aidigame.hisun.pet.ui.NewHomeActivity homeActivity -> homeActivity
    com.aidigame.hisun.pet.widget.ShowWaterFull1 showWaterFull1 -> showWaterFull1
    android.graphics.Bitmap bitmap -> bitmap
    com.aidigame.hisun.pet.waterfull1.ImageLoaderTask task -> task
    int columnIndex -> columnIndex
    int rowIndex -> rowIndex
    android.os.Handler viewHandler -> viewHandler
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> imageLoader
    com.nostra13.universalimageloader.core.DisplayImageOptions displayImageOptions -> displayImageOptions
    android.os.Handler handler -> handler
    int downX -> downX
    int downY -> downY
    int upX -> upX
    int upY -> upY
    int yDown -> yDown
    int distance -> distance
    int touchSlop -> touchSlop
    android.view.GestureDetector detector -> detector
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void Init() -> Init
    void setLasyScrollowView(com.aidigame.hisun.pet.waterfull1.LazyScrollView) -> setLasyScrollowView
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void LoadImage() -> LoadImage
    void Reload() -> Reload
    void recycle() -> recycle
    com.aidigame.hisun.pet.waterfull1.FlowTag getFlowTag() -> getFlowTag
    void setFlowTag(com.aidigame.hisun.pet.waterfull1.FlowTag) -> setFlowTag
    int getColumnIndex() -> getColumnIndex
    void setColumnIndex(int) -> setColumnIndex
    int getRowIndex() -> getRowIndex
    void setRowIndex(int) -> setRowIndex
    android.os.Handler getViewHandler() -> getViewHandler
    com.aidigame.hisun.pet.waterfull1.FlowView setViewHandler(android.os.Handler) -> setViewHandler
    void setShowWaterFull(com.aidigame.hisun.pet.widget.ShowWaterFull1) -> setShowWaterFull
    void loadImage(java.lang.String,boolean) -> loadImage
    android.app.Activity access$0(com.aidigame.hisun.pet.waterfull1.FlowView) -> access$0
    com.aidigame.hisun.pet.ui.NewHomeActivity access$1(com.aidigame.hisun.pet.waterfull1.FlowView) -> access$1
    com.aidigame.hisun.pet.waterfull1.FlowTag access$2(com.aidigame.hisun.pet.waterfull1.FlowView) -> access$2
    com.aidigame.hisun.pet.waterfull1.LazyScrollView access$3(com.aidigame.hisun.pet.waterfull1.FlowView) -> access$3
com.aidigame.hisun.pet.waterfull1.FlowView$1 -> com.aidigame.hisun.pet.waterfull1.b:
    com.aidigame.hisun.pet.waterfull1.FlowView this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.aidigame.hisun.pet.waterfull1.FlowView$2 -> com.aidigame.hisun.pet.waterfull1.c:
    boolean hasSend -> a
    boolean stop -> b
    com.aidigame.hisun.pet.waterfull1.FlowView this$0 -> c
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onDown(android.view.MotionEvent) -> onDown
com.aidigame.hisun.pet.waterfull1.FlowView$3 -> com.aidigame.hisun.pet.waterfull1.d:
    com.aidigame.hisun.pet.waterfull1.FlowView this$0 -> a
    boolean val$isReload -> b
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
    com.aidigame.hisun.pet.waterfull1.FlowView access$0(com.aidigame.hisun.pet.waterfull1.FlowView$3) -> a
com.aidigame.hisun.pet.waterfull1.FlowView$3$1 -> com.aidigame.hisun.pet.waterfull1.FlowView$3$1:
    com.aidigame.hisun.pet.waterfull1.FlowView$3 this$1 -> this$1
    android.graphics.drawable.BitmapDrawable val$drawable -> val$drawable
    boolean val$isReload -> val$isReload
    void run() -> run
com.aidigame.hisun.pet.waterfull1.FlowView$LoadImageThread -> com.aidigame.hisun.pet.waterfull1.FlowView$LoadImageThread:
    com.aidigame.hisun.pet.waterfull1.FlowView this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.waterfull1.FlowView access$0(com.aidigame.hisun.pet.waterfull1.FlowView$LoadImageThread) -> access$0
com.aidigame.hisun.pet.waterfull1.FlowView$LoadImageThread$1 -> com.aidigame.hisun.pet.waterfull1.FlowView$LoadImageThread$1:
    com.aidigame.hisun.pet.waterfull1.FlowView$LoadImageThread this$1 -> this$1
    android.graphics.drawable.BitmapDrawable val$drawable -> val$drawable
    void run() -> run
com.aidigame.hisun.pet.waterfull1.FlowView$ReloadImageThread -> com.aidigame.hisun.pet.waterfull1.FlowView$ReloadImageThread:
    com.aidigame.hisun.pet.waterfull1.FlowView this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.waterfull1.FlowView access$0(com.aidigame.hisun.pet.waterfull1.FlowView$ReloadImageThread) -> access$0
com.aidigame.hisun.pet.waterfull1.FlowView$ReloadImageThread$1 -> com.aidigame.hisun.pet.waterfull1.FlowView$ReloadImageThread$1:
    com.aidigame.hisun.pet.waterfull1.FlowView$ReloadImageThread this$1 -> this$1
    android.graphics.drawable.BitmapDrawable val$drawable -> val$drawable
    void run() -> run
com.aidigame.hisun.pet.waterfull1.ImageLoaderTask -> com.aidigame.hisun.pet.waterfull1.e:
    com.aidigame.hisun.pet.waterfull1.FlowTag param -> a
    java.lang.ref.WeakReference imageViewReference -> b
    android.graphics.Bitmap doInBackground(com.aidigame.hisun.pet.waterfull1.FlowTag[]) -> a
    android.graphics.Bitmap loadImageFile(java.lang.String,android.content.res.AssetManager) -> a
    void onPostExecute(android.graphics.Bitmap) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.aidigame.hisun.pet.waterfull1.LazyScrollView -> com.aidigame.hisun.pet.waterfull1.LazyScrollView:
    com.aidigame.hisun.pet.ui.NewHomeActivity homeActivity -> homeActivity
    java.lang.String tag -> tag
    android.os.Handler handler -> handler
    android.view.View view -> view
    int touchSlop -> touchSlop
    float yDown -> yDown
    boolean isRecord -> isRecord
    boolean hasShow -> hasShow
    android.view.View$OnTouchListener onTouchListener -> onTouchListener
    com.aidigame.hisun.pet.waterfull1.LazyScrollView$OnScrollListener onScrollListener -> onScrollListener
    boolean isMove -> isMove
    boolean issingleTab -> issingleTab
    void onScrollChanged(int,int,int,int) -> onScrollChanged
    void onChanged(int,int,int,int) -> onChanged
    int computeVerticalScrollRange() -> computeVerticalScrollRange
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    void setHomeActivityHandler(com.aidigame.hisun.pet.ui.NewHomeActivity) -> setHomeActivityHandler
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void init() -> init
    void getView() -> getView
    void setOnScrollListener(com.aidigame.hisun.pet.waterfull1.LazyScrollView$OnScrollListener) -> setOnScrollListener
    android.view.View access$0(com.aidigame.hisun.pet.waterfull1.LazyScrollView) -> access$0
    com.aidigame.hisun.pet.waterfull1.LazyScrollView$OnScrollListener access$1(com.aidigame.hisun.pet.waterfull1.LazyScrollView) -> access$1
    android.os.Handler access$2(com.aidigame.hisun.pet.waterfull1.LazyScrollView) -> access$2
com.aidigame.hisun.pet.waterfull1.LazyScrollView$1 -> com.aidigame.hisun.pet.waterfull1.f:
    boolean isRecord -> a
    int distance -> b
    com.aidigame.hisun.pet.waterfull1.LazyScrollView this$0 -> c
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.aidigame.hisun.pet.waterfull1.LazyScrollView$2 -> com.aidigame.hisun.pet.waterfull1.g:
    com.aidigame.hisun.pet.waterfull1.LazyScrollView this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.aidigame.hisun.pet.waterfull1.LazyScrollView$OnScrollListener -> com.aidigame.hisun.pet.waterfull1.h:
    void onBottom(int) -> a
    void onTop(int) -> b
    void onScroll() -> a
    void onAutoScroll(int,int,int,int) -> a
com.aidigame.hisun.pet.widget.AudioRecordAndPlayer -> com.aidigame.hisun.pet.widget.a:
    android.media.MediaRecorder mediaRecorder -> a
    boolean isRecording -> b
    java.lang.String recordFileName -> c
    android.media.MediaPlayer mediaPlayer -> i
    boolean isPlaying -> d
    android.media.AudioRecord mRecorder -> e
    short[] mBuffer -> f
    android.content.Context context -> g
    boolean isPause -> h
    java.lang.String stopRecord() -> a
    boolean playAudio(java.lang.String) -> a
    void pauseAudio() -> b
    void stopAudio() -> c
    void initRecorder() -> d
com.aidigame.hisun.pet.widget.AudioRecordAndPlayer$3 -> com.aidigame.hisun.pet.widget.AudioRecordAndPlayer$3:
    com.aidigame.hisun.pet.widget.AudioRecordAndPlayer this$0 -> this$0
    java.io.File val$file -> val$file
    void run() -> run
com.aidigame.hisun.pet.widget.ShakeSensor -> com.aidigame.hisun.pet.widget.b:
    android.hardware.SensorManager sensorManager -> f
    android.hardware.Sensor sensor -> g
    com.aidigame.hisun.pet.widget.ShakeSensor$OnShakeLisener onShakeLisener -> h
    android.content.Context context -> a
    float lastX -> b
    float lastY -> c
    float lastZ -> d
    long lastTime -> e
    void start() -> a
    void stop() -> b
    void setOnShakeListener(com.aidigame.hisun.pet.widget.ShakeSensor$OnShakeLisener) -> a
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
com.aidigame.hisun.pet.widget.ShakeSensor$OnShakeLisener -> com.aidigame.hisun.pet.widget.c:
    void onShake() -> a
com.aidigame.hisun.pet.widget.ShowDialog -> com.aidigame.hisun.pet.widget.d:
    int count -> a
    void show(java.lang.String,android.app.Activity) -> a
com.aidigame.hisun.pet.widget.ShowDialog$1 -> com.aidigame.hisun.pet.widget.ShowDialog$1:
    android.app.Activity val$context -> val$context
    java.lang.String val$msg -> val$msg
    void run() -> run
com.aidigame.hisun.pet.widget.ShowMore -> com.aidigame.hisun.pet.widget.e:
    android.widget.LinearLayout parent -> a
    android.view.View view -> b
    android.view.View rootParent -> c
    android.app.Activity activity -> d
    android.widget.LinearLayout oneLayout -> e
    android.widget.LinearLayout twoLayout -> f
    android.widget.LinearLayout twoLayout2 -> g
    android.widget.ImageView weixinIv -> h
    android.widget.ImageView friendIv -> i
    android.widget.ImageView xinlangIv -> j
    android.widget.TextView joinTv -> k
    android.widget.TextView focusTv -> l
    android.widget.TextView pictureOrMailTv -> m
    android.widget.TextView cancelTv -> n
    android.widget.TextView pictrueTv -> o
    android.widget.TextView modifyTv -> p
    com.aidigame.hisun.pet.bean.Animal animal -> q
    com.aidigame.hisun.pet.bean.User user -> r
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> s
    java.lang.String sharePath -> t
    boolean rootCanTouch -> u
    boolean justShare -> v
    void initView() -> b
    void initListener() -> c
    void kindomShowMore(com.aidigame.hisun.pet.bean.Animal) -> a
    void userDossier(com.aidigame.hisun.pet.bean.User) -> a
    void onClick(android.view.View) -> onClick
    void focusKingdom() -> d
    void joinkingdom() -> e
    void share() -> a
com.aidigame.hisun.pet.widget.ShowMore$1 -> com.aidigame.hisun.pet.widget.f:
    com.aidigame.hisun.pet.widget.ShowMore this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.aidigame.hisun.pet.widget.ShowMore$2 -> com.aidigame.hisun.pet.widget.g:
    com.aidigame.hisun.pet.widget.ShowMore this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.widget.ShowMore$3 -> com.aidigame.hisun.pet.widget.h:
    com.aidigame.hisun.pet.widget.ShowMore this$0 -> a
    com.aidigame.hisun.pet.bean.User val$user -> b
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.widget.ShowMore$4 -> com.aidigame.hisun.pet.widget.ShowMore$4:
    com.aidigame.hisun.pet.widget.ShowMore this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.widget.ShowMore access$0(com.aidigame.hisun.pet.widget.ShowMore$4) -> access$0
com.aidigame.hisun.pet.widget.ShowMore$4$1 -> com.aidigame.hisun.pet.widget.ShowMore$4$1:
    com.aidigame.hisun.pet.widget.ShowMore$4 this$1 -> this$1
    void run() -> run
    com.aidigame.hisun.pet.widget.ShowMore$4 access$0(com.aidigame.hisun.pet.widget.ShowMore$4$1) -> access$0
com.aidigame.hisun.pet.widget.ShowMore$4$1$1 -> com.aidigame.hisun.pet.widget.i:
    com.aidigame.hisun.pet.widget.ShowMore$4$1 this$2 -> a
    com.aidigame.hisun.pet.ui.PetKingdomActivity val$p -> b
    void getResult(boolean) -> a
com.aidigame.hisun.pet.widget.ShowMore$4$2 -> com.aidigame.hisun.pet.widget.ShowMore$4$2:
    com.aidigame.hisun.pet.widget.ShowMore$4 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.ShowMore$5 -> com.aidigame.hisun.pet.widget.j:
    com.aidigame.hisun.pet.widget.ShowMore this$0 -> a
    com.aidigame.hisun.pet.ui.PetKingdomActivity val$p -> b
    void getResult(boolean) -> a
com.aidigame.hisun.pet.widget.ShowMore$6 -> com.aidigame.hisun.pet.widget.k:
    com.aidigame.hisun.pet.widget.ShowMore this$0 -> a
    com.aidigame.hisun.pet.ui.PetKingdomActivity val$p -> b
    void getResult(boolean) -> a
com.aidigame.hisun.pet.widget.ShowMore$7 -> com.aidigame.hisun.pet.widget.l:
    com.aidigame.hisun.pet.widget.ShowMore this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.widget.ShowMore$8 -> com.aidigame.hisun.pet.widget.m:
    com.aidigame.hisun.pet.widget.ShowMore this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.widget.ShowMore$9 -> com.aidigame.hisun.pet.widget.n:
    com.aidigame.hisun.pet.widget.ShowMore this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.widget.ShowProgress -> com.aidigame.hisun.pet.widget.o:
    android.content.Context context -> a
    java.lang.String info -> b
    android.widget.LinearLayout parent -> c
    android.view.View view -> d
    android.widget.RelativeLayout allRelativeLayout -> e
    android.widget.ImageView cicleIV -> f
    void initView() -> d
    void progressCancel() -> a
    void showProgress() -> b
    void startAnimation() -> c
com.aidigame.hisun.pet.widget.ShowProgress$1 -> com.aidigame.hisun.pet.widget.p:
    com.aidigame.hisun.pet.widget.ShowProgress this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.widget.ShowWaterFull1 -> com.aidigame.hisun.pet.widget.q:
    com.aidigame.hisun.pet.widget.ShowWaterFull1$DataLoadingCompleteListener dataLoadingCompleteListener -> a
    android.app.Activity activity -> b
    android.widget.LinearLayout parent -> c
    android.view.View waterfullView -> d
    boolean isShow -> e
    com.aidigame.hisun.pet.ui.NewHomeActivity homeActivity -> f
    com.aidigame.hisun.pet.ui.DetailActivity detailActivity -> g
    int mode -> h
    com.aidigame.hisun.pet.http.json.ActivityJson$Data activityData -> i
    java.util.ArrayList petPictures -> j
    int real_download_num -> k
    int last_id -> l
    boolean halfHeight -> m
    boolean dismissProgress -> n
    com.aidigame.hisun.pet.waterfull1.LazyScrollView waterfall_scroll -> t
    com.aidigame.hisun.pet.waterfull1.LazyScrollView$OnScrollListener listener -> o
    android.widget.LinearLayout waterfall_container -> u
    java.util.ArrayList waterfall_items -> v
    android.view.Display display -> w
    java.lang.String image_path -> x
    android.os.Handler handler -> y
    int item_width -> z
    int column_count -> A
    int page_count -> B
    int current_page -> C
    int[] topIndex -> D
    int[] bottomIndex -> E
    int[] lineIndex -> F
    int[] column_height -> G
    java.util.HashMap pins -> H
    int loaded_count -> I
    java.util.HashMap[] pin_mark -> J
    java.util.HashMap iviews -> K
    int range -> L
    int scroll_height -> p
    boolean hasUpdate -> q
    boolean hasMore -> r
    boolean isRefreshing -> s
    void setMode(int) -> a
    com.aidigame.hisun.pet.waterfull1.LazyScrollView$OnScrollListener getScrollView() -> a
    void InitLayout() -> c
    void AddItemToContainer(int,int) -> a
    void AddImage(com.aidigame.hisun.pet.bean.PetPicture,int,int) -> a
    int GetMinValue(int[]) -> a
    void onMore() -> b
    android.os.Handler access$0(com.aidigame.hisun.pet.widget.ShowWaterFull1) -> a
    int access$1(com.aidigame.hisun.pet.widget.ShowWaterFull1) -> b
    void access$2(com.aidigame.hisun.pet.widget.ShowWaterFull1,int) -> a
    int access$3(com.aidigame.hisun.pet.widget.ShowWaterFull1) -> c
    void access$4(com.aidigame.hisun.pet.widget.ShowWaterFull1,int,int) -> a
    com.aidigame.hisun.pet.waterfull1.LazyScrollView access$5(com.aidigame.hisun.pet.widget.ShowWaterFull1) -> d
    int access$6(com.aidigame.hisun.pet.widget.ShowWaterFull1) -> e
    java.util.ArrayList access$7(com.aidigame.hisun.pet.widget.ShowWaterFull1) -> f
    java.util.HashMap[] access$8(com.aidigame.hisun.pet.widget.ShowWaterFull1) -> g
    int[] access$9(com.aidigame.hisun.pet.widget.ShowWaterFull1) -> h
    int[] access$10(com.aidigame.hisun.pet.widget.ShowWaterFull1) -> i
    int[] access$11(com.aidigame.hisun.pet.widget.ShowWaterFull1) -> j
    int[] access$12(com.aidigame.hisun.pet.widget.ShowWaterFull1) -> k
    int access$13(com.aidigame.hisun.pet.widget.ShowWaterFull1,int[]) -> a
    java.util.HashMap access$14(com.aidigame.hisun.pet.widget.ShowWaterFull1) -> l
    java.util.HashMap access$15(com.aidigame.hisun.pet.widget.ShowWaterFull1) -> m
com.aidigame.hisun.pet.widget.ShowWaterFull1$1 -> com.aidigame.hisun.pet.widget.ShowWaterFull1$1:
    com.aidigame.hisun.pet.widget.ShowWaterFull1 this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.widget.ShowWaterFull1$2 -> com.aidigame.hisun.pet.widget.r:
    com.aidigame.hisun.pet.widget.ShowWaterFull1 this$0 -> a
    void onTop(int) -> b
    void onScroll() -> a
    void onBottom(int) -> a
    void onAutoScroll(int,int,int,int) -> a
    com.aidigame.hisun.pet.widget.ShowWaterFull1 access$0(com.aidigame.hisun.pet.widget.ShowWaterFull1$2) -> a
com.aidigame.hisun.pet.widget.ShowWaterFull1$2$1 -> com.aidigame.hisun.pet.widget.ShowWaterFull1$2$1:
    com.aidigame.hisun.pet.widget.ShowWaterFull1$2 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.ShowWaterFull1$3 -> com.aidigame.hisun.pet.widget.s:
    com.aidigame.hisun.pet.widget.ShowWaterFull1 this$0 -> a
    void dispatchMessage(android.os.Message) -> dispatchMessage
    void handleMessage(android.os.Message) -> handleMessage
    boolean sendMessageAtTime(android.os.Message,long) -> sendMessageAtTime
com.aidigame.hisun.pet.widget.ShowWaterFull1$4 -> com.aidigame.hisun.pet.widget.ShowWaterFull1$4:
    com.aidigame.hisun.pet.widget.ShowWaterFull1 this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.widget.ShowWaterFull1$DataLoadingCompleteListener -> com.aidigame.hisun.pet.widget.t:
    void onComplete() -> a
com.aidigame.hisun.pet.widget.WeixinShare -> com.aidigame.hisun.pet.widget.u:
    boolean regToWeiXin(android.content.Context) -> a
    boolean shareBitmap(com.aidigame.hisun.pet.http.json.UserImagesJson$Data,int) -> a
    java.lang.String buildTransaction(java.lang.String) -> b
    byte[] scaleSize(java.lang.String) -> a
com.aidigame.hisun.pet.widget.XinlangShare -> com.aidigame.hisun.pet.widget.v:
    com.aidigame.hisun.pet.widget.XinlangShare$ShareXinlangResultListener listener -> a
    void xinlangAuth(android.app.Activity) -> a
    void sharePicture(com.aidigame.hisun.pet.http.json.UserImagesJson$Data,android.content.Context) -> a
    void getXinLangInfo(android.content.Context) -> a
com.aidigame.hisun.pet.widget.XinlangShare$1 -> com.aidigame.hisun.pet.widget.w:
    android.app.Activity val$context -> a
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> onWeiboException
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
com.aidigame.hisun.pet.widget.XinlangShare$1$1 -> com.aidigame.hisun.pet.widget.x:
    com.aidigame.hisun.pet.widget.XinlangShare$1 this$1 -> a
    android.app.Activity val$context -> b
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> onWeiboException
    void onComplete(java.lang.String) -> onComplete
com.aidigame.hisun.pet.widget.XinlangShare$2 -> com.aidigame.hisun.pet.widget.y:
    android.content.Context val$context -> a
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> onWeiboException
    void onComplete(java.lang.String) -> onComplete
com.aidigame.hisun.pet.widget.XinlangShare$3 -> com.aidigame.hisun.pet.widget.z:
    android.content.SharedPreferences val$sp -> a
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> onWeiboException
    void onComplete(java.lang.String) -> onComplete
com.aidigame.hisun.pet.widget.XinlangShare$3$1 -> com.aidigame.hisun.pet.widget.XinlangShare$3$1:
    com.aidigame.hisun.pet.widget.XinlangShare$3 this$1 -> this$1
    java.lang.String val$temp -> val$temp
    android.content.SharedPreferences val$sp -> val$sp
    void run() -> run
com.aidigame.hisun.pet.widget.XinlangShare$ShareXinlangResultListener -> com.aidigame.hisun.pet.widget.aa:
    void resultOk() -> a
com.aidigame.hisun.pet.widget.fragment.ActivityFragment -> com.aidigame.hisun.pet.widget.fragment.a:
    android.view.View menuView -> a
    com.aidigame.hisun.pet.ui.NewHomeActivity homeActivity -> b
    android.widget.FrameLayout frameLayout -> c
    android.view.View viewTopWhite -> d
    android.widget.LinearLayout linearLayout -> e
    com.aidigame.hisun.pet.view.PullToRefreshAndMoreView pullDownView -> f
    android.widget.ListView listView -> g
    com.aidigame.hisun.pet.adapter.ActivityListAdapter adapter -> h
    com.aidigame.hisun.pet.http.json.ActivityJson json -> i
    java.util.ArrayList list -> j
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> k
    int last_id -> l
    android.os.Handler mUIHandler -> m
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void setHomeActivity(com.aidigame.hisun.pet.ui.NewHomeActivity) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void initView() -> a
    void setBlurImageBackground() -> b
    void loadData() -> c
com.aidigame.hisun.pet.widget.fragment.ActivityFragment$1 -> com.aidigame.hisun.pet.widget.fragment.b:
    com.aidigame.hisun.pet.widget.fragment.ActivityFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.aidigame.hisun.pet.widget.fragment.ActivityFragment$2 -> com.aidigame.hisun.pet.widget.fragment.c:
    com.aidigame.hisun.pet.widget.fragment.ActivityFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.widget.fragment.ActivityFragment$3 -> com.aidigame.hisun.pet.widget.fragment.d:
    java.util.ArrayList temp -> a
    com.aidigame.hisun.pet.widget.fragment.ActivityFragment this$0 -> b
    void onRefresh() -> a
    void onMore() -> b
    com.aidigame.hisun.pet.widget.fragment.ActivityFragment access$0(com.aidigame.hisun.pet.widget.fragment.ActivityFragment$3) -> a
com.aidigame.hisun.pet.widget.fragment.ActivityFragment$3$1 -> com.aidigame.hisun.pet.widget.fragment.ActivityFragment$3$1:
    com.aidigame.hisun.pet.widget.fragment.ActivityFragment$3 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.ActivityFragment$3$2 -> com.aidigame.hisun.pet.widget.fragment.ActivityFragment$3$2:
    com.aidigame.hisun.pet.widget.fragment.ActivityFragment$3 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.ActivityFragment$4 -> com.aidigame.hisun.pet.widget.fragment.e:
    com.aidigame.hisun.pet.widget.fragment.ActivityFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.aidigame.hisun.pet.widget.fragment.ActivityFragment$5 -> com.aidigame.hisun.pet.widget.fragment.ActivityFragment$5:
    com.aidigame.hisun.pet.widget.fragment.ActivityFragment this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.ActivityFragment access$0(com.aidigame.hisun.pet.widget.fragment.ActivityFragment$5) -> access$0
com.aidigame.hisun.pet.widget.fragment.ActivityFragment$5$1 -> com.aidigame.hisun.pet.widget.fragment.ActivityFragment$5$1:
    com.aidigame.hisun.pet.widget.fragment.ActivityFragment$5 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.ActivityFragment$6 -> com.aidigame.hisun.pet.widget.fragment.f:
    com.aidigame.hisun.pet.widget.fragment.ActivityFragment this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.aidigame.hisun.pet.widget.fragment.ActivityFragment$7 -> com.aidigame.hisun.pet.widget.fragment.ActivityFragment$7:
    java.util.ArrayList temp -> temp
    com.aidigame.hisun.pet.widget.fragment.ActivityFragment this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.ActivityFragment access$0(com.aidigame.hisun.pet.widget.fragment.ActivityFragment$7) -> access$0
com.aidigame.hisun.pet.widget.fragment.ActivityFragment$7$1 -> com.aidigame.hisun.pet.widget.fragment.ActivityFragment$7$1:
    com.aidigame.hisun.pet.widget.fragment.ActivityFragment$7 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.AddressDialog -> com.aidigame.hisun.pet.widget.fragment.g:
    net.simonvt.numberpicker.NumberPicker provicePicker -> a
    net.simonvt.numberpicker.NumberPicker cityPicker -> b
    java.util.ArrayList provincesList -> c
    java.util.ArrayList cityList -> d
    int provinceValue -> e
    int cityValue -> f
    java.lang.String province -> g
    java.lang.String city -> h
    android.widget.TextView provinceTV -> i
    android.content.Context context -> j
    android.view.View view -> k
    android.view.View getView() -> a
    java.lang.String getAddress() -> b
    java.lang.String getAddressCode() -> c
com.aidigame.hisun.pet.widget.fragment.AddressDialog$1 -> com.aidigame.hisun.pet.widget.fragment.h:
    com.aidigame.hisun.pet.widget.fragment.AddressDialog this$0 -> a
    void onValueChange(net.simonvt.numberpicker.NumberPicker,int,int) -> onValueChange
com.aidigame.hisun.pet.widget.fragment.AddressDialog$2 -> com.aidigame.hisun.pet.widget.fragment.i:
    com.aidigame.hisun.pet.widget.fragment.AddressDialog this$0 -> a
    void onValueChange(net.simonvt.numberpicker.NumberPicker,int,int) -> onValueChange
com.aidigame.hisun.pet.widget.fragment.AgeDialog -> com.aidigame.hisun.pet.widget.fragment.j:
    net.simonvt.numberpicker.NumberPicker yearPicker -> a
    net.simonvt.numberpicker.NumberPicker monthPicker -> b
    int yearValue -> c
    int monthValue -> d
    java.lang.String y -> e
    java.lang.String m -> f
    android.widget.TextView yearTV -> g
    java.lang.String[] year -> h
    java.lang.String[] month -> i
    android.content.Context context -> j
    android.view.View view -> k
    android.view.View getView() -> a
    java.lang.String getAge() -> b
    int getAgeByMonth() -> c
com.aidigame.hisun.pet.widget.fragment.AgeDialog$1 -> com.aidigame.hisun.pet.widget.fragment.k:
    com.aidigame.hisun.pet.widget.fragment.AgeDialog this$0 -> a
    void onValueChange(net.simonvt.numberpicker.NumberPicker,int,int) -> onValueChange
com.aidigame.hisun.pet.widget.fragment.AgeDialog$2 -> com.aidigame.hisun.pet.widget.fragment.l:
    com.aidigame.hisun.pet.widget.fragment.AgeDialog this$0 -> a
    void onValueChange(net.simonvt.numberpicker.NumberPicker,int,int) -> onValueChange
com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction -> com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction:
    int[] ITEM_DRAWABLES -> ITEM_DRAWABLES
    android.view.View view -> view
    android.app.Activity context -> context
    com.aidigame.hisun.pet.view.arcmenu.ArcMenu arcMenu1 -> arcMenu1
    com.aidigame.hisun.pet.view.arcmenu.ArcMenu arcMenu2 -> arcMenu2
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$ClawFunctionChoseListener clawFunctionChoseListener -> clawFunctionChoseListener
    com.nostra13.universalimageloader.core.DisplayImageOptions displayImageOptions -> displayImageOptions
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> handleHttpConnectionException
    boolean isBite -> isBite
    boolean isShake -> isShake
    android.widget.RelativeLayout parent -> parent
    android.widget.RelativeLayout clickLayout -> clickLayout
    android.os.Handler handler -> handler
    boolean isJumping -> isJumping
    boolean isShow -> isShow
    void initListener() -> initListener
    void initView() -> initView
    android.view.View getView() -> getView
    android.widget.ImageView getImageView1() -> getImageView1
    android.widget.ImageView getImageView2() -> getImageView2
    void initArcMenu() -> initArcMenu
    void setClawFunctionChoseListener(com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$ClawFunctionChoseListener) -> setClawFunctionChoseListener
com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$1 -> com.aidigame.hisun.pet.widget.fragment.m:
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$10 -> com.aidigame.hisun.pet.widget.fragment.n:
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction this$0 -> a
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction access$0(com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$10) -> a
com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$10$1 -> com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$10$1:
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$10 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$11 -> com.aidigame.hisun.pet.widget.fragment.o:
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction this$0 -> a
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction access$0(com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$11) -> a
com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$11$1 -> com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$11$1:
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$11 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$12 -> com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$12:
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction access$0(com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$12) -> access$0
com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$12$1 -> com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$12$1:
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$12 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$2 -> com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$2:
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$3 -> com.aidigame.hisun.pet.widget.fragment.p:
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction this$0 -> a
    com.nostra13.universalimageloader.core.ImageLoader val$imageLoader -> b
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$4 -> com.aidigame.hisun.pet.widget.fragment.q:
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction this$0 -> a
    com.nostra13.universalimageloader.core.ImageLoader val$imageLoader -> b
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$5 -> com.aidigame.hisun.pet.widget.fragment.r:
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction access$0(com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$5) -> a
com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$5$1 -> com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$5$1:
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$5 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$6 -> com.aidigame.hisun.pet.widget.fragment.s:
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction access$0(com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$6) -> a
com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$6$1 -> com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$6$1:
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$6 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$7 -> com.aidigame.hisun.pet.widget.fragment.t:
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction access$0(com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$7) -> a
com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$7$1 -> com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$7$1:
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$7 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$7$2 -> com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$7$2:
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$7 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$7$3 -> com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$7$3:
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$7 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$7$4 -> com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$7$4:
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$7 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$8 -> com.aidigame.hisun.pet.widget.fragment.u:
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction this$0 -> a
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction access$0(com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$8) -> a
com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$8$1 -> com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$8$1:
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$8 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$9 -> com.aidigame.hisun.pet.widget.fragment.v:
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction this$0 -> a
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction access$0(com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$9) -> a
com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$9$1 -> com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$9$1:
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$9 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction$ClawFunctionChoseListener -> com.aidigame.hisun.pet.widget.fragment.w:
    void clickItem1() -> g
    void clickItem2() -> h
    void clickItem3() -> i
    void clickItem4() -> j
com.aidigame.hisun.pet.widget.fragment.DialogExpGoldConAdd -> com.aidigame.hisun.pet.widget.fragment.x:
    android.content.Context context -> a
    int mode -> b
    int num -> c
    android.widget.PopupWindow popupWindow -> d
    android.view.View view -> e
    android.view.View parent -> f
    android.widget.Toast toast -> g
    android.os.Handler handler -> h
    void initView() -> a
com.aidigame.hisun.pet.widget.fragment.DialogExpGoldConAdd$1 -> com.aidigame.hisun.pet.widget.fragment.y:
    com.aidigame.hisun.pet.widget.fragment.DialogExpGoldConAdd this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    com.aidigame.hisun.pet.widget.fragment.DialogExpGoldConAdd access$0(com.aidigame.hisun.pet.widget.fragment.DialogExpGoldConAdd$1) -> a
com.aidigame.hisun.pet.widget.fragment.DialogExpGoldConAdd$1$1 -> com.aidigame.hisun.pet.widget.fragment.z:
    com.aidigame.hisun.pet.widget.fragment.DialogExpGoldConAdd$1 this$1 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.aidigame.hisun.pet.widget.fragment.DialogExpGoldConAdd$2 -> com.aidigame.hisun.pet.widget.fragment.aa:
    com.aidigame.hisun.pet.widget.fragment.DialogExpGoldConAdd this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.aidigame.hisun.pet.widget.fragment.DialogGoRegister -> com.aidigame.hisun.pet.widget.fragment.ab:
    android.view.View parent -> a
    android.view.View view -> b
    android.app.Activity context -> c
    android.widget.PopupWindow popupWindow -> d
    android.view.View blackView -> e
    int mode -> f
    android.widget.TextView tv1 -> g
    android.widget.TextView tv2 -> h
    android.widget.TextView tv3 -> i
    android.widget.TextView tv4 -> j
    com.aidigame.hisun.pet.bean.Animal animal -> k
    com.aidigame.hisun.pet.widget.fragment.DialogGoRegister$ResultListener listener -> l
    void initView() -> b
    void closePopupTodo() -> a
    void setAnimal(com.aidigame.hisun.pet.bean.Animal) -> a
    void joinKingdomNote() -> c
    void cancelFocus() -> d
    void deleteFocus() -> e
    void setListener(com.aidigame.hisun.pet.widget.fragment.DialogGoRegister$ResultListener) -> a
    void access$0(com.aidigame.hisun.pet.widget.fragment.DialogGoRegister) -> a
com.aidigame.hisun.pet.widget.fragment.DialogGoRegister$1 -> com.aidigame.hisun.pet.widget.fragment.ac:
    com.aidigame.hisun.pet.widget.fragment.DialogGoRegister this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.widget.fragment.DialogGoRegister$2 -> com.aidigame.hisun.pet.widget.fragment.ad:
    com.aidigame.hisun.pet.widget.fragment.DialogGoRegister this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.widget.fragment.DialogGoRegister$3 -> com.aidigame.hisun.pet.widget.fragment.ae:
    com.aidigame.hisun.pet.widget.fragment.DialogGoRegister this$0 -> a
    void onDismiss() -> onDismiss
com.aidigame.hisun.pet.widget.fragment.DialogGoRegister$4 -> com.aidigame.hisun.pet.widget.fragment.DialogGoRegister$4:
    com.aidigame.hisun.pet.widget.fragment.DialogGoRegister this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.DialogGoRegister access$0(com.aidigame.hisun.pet.widget.fragment.DialogGoRegister$4) -> access$0
com.aidigame.hisun.pet.widget.fragment.DialogGoRegister$4$1 -> com.aidigame.hisun.pet.widget.fragment.DialogGoRegister$4$1:
    com.aidigame.hisun.pet.widget.fragment.DialogGoRegister$4 this$1 -> this$1
    boolean val$flag -> val$flag
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.DialogGoRegister$ResultListener -> com.aidigame.hisun.pet.widget.fragment.af:
    void getResult(boolean) -> a
com.aidigame.hisun.pet.widget.fragment.DialogJoinKingdom -> com.aidigame.hisun.pet.widget.fragment.ag:
    android.view.View parent -> a
    android.view.View view -> b
    android.content.Context context -> c
    android.widget.PopupWindow popupWindow -> d
    android.view.View blackView -> e
    com.aidigame.hisun.pet.bean.Animal animal -> f
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> g
    com.aidigame.hisun.pet.widget.fragment.DialogJoinKingdom$ResultListener listener -> h
    void initView() -> b
    void closePopupTodo() -> a
    void setResultListener(com.aidigame.hisun.pet.widget.fragment.DialogJoinKingdom$ResultListener) -> a
com.aidigame.hisun.pet.widget.fragment.DialogJoinKingdom$1 -> com.aidigame.hisun.pet.widget.fragment.ah:
    com.aidigame.hisun.pet.widget.fragment.DialogJoinKingdom this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.widget.fragment.DialogJoinKingdom$2 -> com.aidigame.hisun.pet.widget.fragment.ai:
    com.aidigame.hisun.pet.widget.fragment.DialogJoinKingdom this$0 -> a
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.widget.fragment.DialogJoinKingdom access$0(com.aidigame.hisun.pet.widget.fragment.DialogJoinKingdom$2) -> a
com.aidigame.hisun.pet.widget.fragment.DialogJoinKingdom$2$1 -> com.aidigame.hisun.pet.widget.fragment.DialogJoinKingdom$2$1:
    com.aidigame.hisun.pet.widget.fragment.DialogJoinKingdom$2 this$1 -> this$1
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.DialogJoinKingdom$2 access$0(com.aidigame.hisun.pet.widget.fragment.DialogJoinKingdom$2$1) -> access$0
com.aidigame.hisun.pet.widget.fragment.DialogJoinKingdom$2$1$1 -> com.aidigame.hisun.pet.widget.fragment.DialogJoinKingdom$2$1$1:
    com.aidigame.hisun.pet.widget.fragment.DialogJoinKingdom$2$1 this$2 -> this$2
    boolean val$flag -> val$flag
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.DialogJoinKingdom$3 -> com.aidigame.hisun.pet.widget.fragment.aj:
    com.aidigame.hisun.pet.widget.fragment.DialogJoinKingdom this$0 -> a
    void onDismiss() -> onDismiss
com.aidigame.hisun.pet.widget.fragment.DialogJoinKingdom$ResultListener -> com.aidigame.hisun.pet.widget.fragment.ak:
    void getResult(boolean) -> a
com.aidigame.hisun.pet.widget.fragment.DialogQuitKingdom -> com.aidigame.hisun.pet.widget.fragment.al:
    android.view.View parent -> a
    android.view.View view -> b
    android.content.Context context -> c
    android.widget.PopupWindow popupWindow -> d
    android.view.View blackView -> e
    com.aidigame.hisun.pet.bean.Animal animal -> f
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> g
    com.aidigame.hisun.pet.widget.fragment.DialogQuitKingdom$ResultListener listener -> h
    void initView() -> b
    void closePopupTodo() -> a
    void setResultListener(com.aidigame.hisun.pet.widget.fragment.DialogQuitKingdom$ResultListener) -> a
com.aidigame.hisun.pet.widget.fragment.DialogQuitKingdom$1 -> com.aidigame.hisun.pet.widget.fragment.am:
    com.aidigame.hisun.pet.widget.fragment.DialogQuitKingdom this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.widget.fragment.DialogQuitKingdom$2 -> com.aidigame.hisun.pet.widget.fragment.an:
    com.aidigame.hisun.pet.widget.fragment.DialogQuitKingdom this$0 -> a
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.widget.fragment.DialogQuitKingdom access$0(com.aidigame.hisun.pet.widget.fragment.DialogQuitKingdom$2) -> a
com.aidigame.hisun.pet.widget.fragment.DialogQuitKingdom$2$1 -> com.aidigame.hisun.pet.widget.fragment.DialogQuitKingdom$2$1:
    com.aidigame.hisun.pet.widget.fragment.DialogQuitKingdom$2 this$1 -> this$1
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.DialogQuitKingdom$2 access$0(com.aidigame.hisun.pet.widget.fragment.DialogQuitKingdom$2$1) -> access$0
com.aidigame.hisun.pet.widget.fragment.DialogQuitKingdom$2$1$1 -> com.aidigame.hisun.pet.widget.fragment.DialogQuitKingdom$2$1$1:
    com.aidigame.hisun.pet.widget.fragment.DialogQuitKingdom$2$1 this$2 -> this$2
    boolean val$flag -> val$flag
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.DialogQuitKingdom$3 -> com.aidigame.hisun.pet.widget.fragment.ao:
    com.aidigame.hisun.pet.widget.fragment.DialogQuitKingdom this$0 -> a
    void onDismiss() -> onDismiss
com.aidigame.hisun.pet.widget.fragment.DialogQuitKingdom$ResultListener -> com.aidigame.hisun.pet.widget.fragment.ap:
    void getResult(boolean) -> a
com.aidigame.hisun.pet.widget.fragment.HomeFragment -> com.aidigame.hisun.pet.widget.fragment.aq:
    android.view.View menuView -> a
    android.view.View popupParent -> b
    com.aidigame.hisun.pet.ui.NewHomeActivity homeActivity -> c
    android.graphics.Bitmap blurBitmap -> d
    com.aidigame.hisun.pet.widget.fragment.HomeFragment homeFragment -> e
    android.widget.Button cameraBt -> f
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> g
    android.widget.TextView randomTv -> h
    android.widget.TextView favoriteTv -> i
    android.widget.TextView squareTv -> j
    android.support.v4.view.ViewPager viewPager -> k
    java.util.ArrayList viewList -> l
    com.aidigame.hisun.pet.adapter.HomeViewPagerAdapter homeViewPagerAdapter -> m
    android.widget.Button hostBt -> n
    android.widget.RelativeLayout waterFullParent -> o
    com.aidigame.hisun.pet.view.PullToRefreshAndMoreView focusListView -> p
    android.widget.LinearLayout camera_album -> q
    android.widget.LinearLayout progressLayout -> r
    com.aidigame.hisun.pet.widget.ShowProgress showProgress -> s
    java.lang.String head_last_str -> t
    java.lang.String foot_last_str -> u
    android.widget.RelativeLayout relativeLayout2 -> v
    android.widget.RelativeLayout relativeLayout_control1 -> w
    android.widget.RelativeLayout black_layout -> x
    android.widget.RelativeLayout homeRelativeLayout -> y
    int currentPosition -> z
    android.widget.LinearLayout linearLayout1 -> A
    android.widget.LinearLayout linearLayout2 -> B
    android.widget.TextView head_last_update_time -> C
    android.widget.TextView foot_last_update_time -> D
    android.widget.LinearLayout blur_view -> E
    boolean showFooter -> F
    boolean showHeader -> G
    boolean createShowFocusTopics -> H
    boolean isOnRefresh -> I
    int COMPLETE -> J
    java.util.ArrayList petPictures -> K
    java.util.ArrayList animals -> L
    android.widget.LinearLayout view3 -> M
    android.widget.LinearLayout view1 -> N
    com.aidigame.hisun.pet.view.PullToRefreshAndMoreView view2 -> O
    android.widget.ListView listView -> P
    int last_id -> Q
    com.aidigame.hisun.pet.adapter.ShowTopicsAdapter showTopicsAdapter -> R
    android.os.Handler handler -> S
    boolean isFirstClaw -> T
    com.aidigame.hisun.pet.widget.fragment.ClawStyleFunction csf -> U
    boolean creatingBlurImage -> V
    boolean isFirst -> W
    boolean isShowingCameraAlbum -> X
    void setHomeActivity(com.aidigame.hisun.pet.ui.NewHomeActivity) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onResume() -> onResume
    void setBlureViewInvisible() -> a
    void initView() -> e
    void initArcView() -> b
    void onClick(android.view.View) -> onClick
    void refreshTopics() -> c
    void refreshFocusTopics() -> d
    void showFocusTopics() -> f
    void showCameraAlbum() -> g
    void changeColors(int) -> a
com.aidigame.hisun.pet.widget.fragment.HomeFragment$1 -> com.aidigame.hisun.pet.widget.fragment.ar:
    com.aidigame.hisun.pet.widget.fragment.HomeFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.aidigame.hisun.pet.widget.fragment.HomeFragment$10 -> com.aidigame.hisun.pet.widget.fragment.as:
    com.aidigame.hisun.pet.widget.fragment.HomeFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.widget.fragment.HomeFragment$11 -> com.aidigame.hisun.pet.widget.fragment.HomeFragment$11:
    java.util.ArrayList temp -> temp
    com.aidigame.hisun.pet.widget.fragment.HomeFragment this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.HomeFragment access$0(com.aidigame.hisun.pet.widget.fragment.HomeFragment$11) -> access$0
com.aidigame.hisun.pet.widget.fragment.HomeFragment$11$1 -> com.aidigame.hisun.pet.widget.fragment.HomeFragment$11$1:
    com.aidigame.hisun.pet.widget.fragment.HomeFragment$11 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.HomeFragment$12 -> com.aidigame.hisun.pet.widget.fragment.at:
    java.util.ArrayList temp -> a
    com.aidigame.hisun.pet.widget.fragment.HomeFragment this$0 -> b
    void onRefresh() -> a
    void onMore() -> b
    com.aidigame.hisun.pet.widget.fragment.HomeFragment access$0(com.aidigame.hisun.pet.widget.fragment.HomeFragment$12) -> a
com.aidigame.hisun.pet.widget.fragment.HomeFragment$12$1 -> com.aidigame.hisun.pet.widget.fragment.HomeFragment$12$1:
    com.aidigame.hisun.pet.widget.fragment.HomeFragment$12 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.HomeFragment$13 -> com.aidigame.hisun.pet.widget.fragment.au:
    com.aidigame.hisun.pet.widget.fragment.HomeFragment this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.aidigame.hisun.pet.widget.fragment.HomeFragment$14 -> com.aidigame.hisun.pet.widget.fragment.av:
    com.aidigame.hisun.pet.widget.fragment.HomeFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.widget.fragment.HomeFragment$15 -> com.aidigame.hisun.pet.widget.fragment.aw:
    com.aidigame.hisun.pet.widget.fragment.HomeFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.widget.fragment.HomeFragment$16 -> com.aidigame.hisun.pet.widget.fragment.ax:
    com.aidigame.hisun.pet.widget.fragment.HomeFragment this$0 -> a
    android.view.View val$view -> b
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.widget.fragment.HomeFragment access$0(com.aidigame.hisun.pet.widget.fragment.HomeFragment$16) -> a
com.aidigame.hisun.pet.widget.fragment.HomeFragment$16$1 -> com.aidigame.hisun.pet.widget.fragment.HomeFragment$16$1:
    com.aidigame.hisun.pet.widget.fragment.HomeFragment$16 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.HomeFragment$17 -> com.aidigame.hisun.pet.widget.fragment.HomeFragment$17:
    com.aidigame.hisun.pet.widget.fragment.HomeFragment this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.HomeFragment access$0(com.aidigame.hisun.pet.widget.fragment.HomeFragment$17) -> access$0
com.aidigame.hisun.pet.widget.fragment.HomeFragment$17$1 -> com.aidigame.hisun.pet.widget.fragment.HomeFragment$17$1:
    com.aidigame.hisun.pet.widget.fragment.HomeFragment$17 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.HomeFragment$2 -> com.aidigame.hisun.pet.widget.fragment.ay:
    com.aidigame.hisun.pet.widget.fragment.HomeFragment this$0 -> a
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.aidigame.hisun.pet.widget.fragment.HomeFragment$3 -> com.aidigame.hisun.pet.widget.fragment.HomeFragment$3:
    com.aidigame.hisun.pet.widget.fragment.HomeFragment this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.HomeFragment access$0(com.aidigame.hisun.pet.widget.fragment.HomeFragment$3) -> access$0
com.aidigame.hisun.pet.widget.fragment.HomeFragment$3$1 -> com.aidigame.hisun.pet.widget.fragment.HomeFragment$3$1:
    com.aidigame.hisun.pet.widget.fragment.HomeFragment$3 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.HomeFragment$4 -> com.aidigame.hisun.pet.widget.fragment.az:
    com.aidigame.hisun.pet.widget.fragment.HomeFragment this$0 -> a
    void clickItem4() -> j
    void clickItem3() -> i
    void clickItem2() -> h
    void clickItem1() -> g
    com.aidigame.hisun.pet.widget.fragment.HomeFragment access$0(com.aidigame.hisun.pet.widget.fragment.HomeFragment$4) -> a
com.aidigame.hisun.pet.widget.fragment.HomeFragment$4$1 -> com.aidigame.hisun.pet.widget.fragment.ba:
    com.aidigame.hisun.pet.widget.fragment.HomeFragment$4 this$1 -> a
    void toDo() -> a
    void closeDialog() -> b
    void lastResult(boolean) -> a
    void unRegister() -> c
com.aidigame.hisun.pet.widget.fragment.HomeFragment$5 -> com.aidigame.hisun.pet.widget.fragment.bb:
    com.aidigame.hisun.pet.widget.fragment.HomeFragment this$0 -> a
    void clickItem4() -> j
    void clickItem3() -> i
    void clickItem2() -> h
    void clickItem1() -> g
    com.aidigame.hisun.pet.widget.fragment.HomeFragment access$0(com.aidigame.hisun.pet.widget.fragment.HomeFragment$5) -> a
com.aidigame.hisun.pet.widget.fragment.HomeFragment$5$1 -> com.aidigame.hisun.pet.widget.fragment.bc:
    com.aidigame.hisun.pet.widget.fragment.HomeFragment$5 this$1 -> a
    void toDo() -> a
    void closeDialog() -> b
    void lastResult(boolean) -> a
    void unRegister() -> c
com.aidigame.hisun.pet.widget.fragment.HomeFragment$6 -> com.aidigame.hisun.pet.widget.fragment.HomeFragment$6:
    com.aidigame.hisun.pet.widget.fragment.HomeFragment this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.HomeFragment$7 -> com.aidigame.hisun.pet.widget.fragment.HomeFragment$7:
    com.aidigame.hisun.pet.widget.fragment.HomeFragment this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.HomeFragment$8 -> com.aidigame.hisun.pet.widget.fragment.HomeFragment$8:
    com.aidigame.hisun.pet.widget.fragment.HomeFragment this$0 -> this$0
    java.util.ArrayList val$temp -> val$temp
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.HomeFragment$9 -> com.aidigame.hisun.pet.widget.fragment.HomeFragment$9:
    com.aidigame.hisun.pet.widget.fragment.HomeFragment this$0 -> this$0
    java.util.ArrayList val$temp -> val$temp
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.KingdomImages -> com.aidigame.hisun.pet.widget.fragment.bd:
    com.costum.android.widget.PullAndLoadListView ptram -> a
    android.view.View view -> b
    com.aidigame.hisun.pet.ui.PetKingdomActivity context -> c
    java.util.ArrayList datas -> d
    com.aidigame.hisun.pet.adapter.ShowTopicsAdapter2 showTopicsAdapter -> e
    int lastImage_id -> f
    com.aidigame.hisun.pet.bean.Animal data -> g
    boolean isShow -> h
    float infoYTop -> i
    float infoYBottom -> j
    boolean isRecord -> k
    void initView() -> f
    void refresh() -> c
    void onRefresh() -> a
    void onMore() -> b
    android.view.View getView() -> d
    void initListener() -> g
    void animationOut() -> e
com.aidigame.hisun.pet.widget.fragment.KingdomImages$1 -> com.aidigame.hisun.pet.widget.fragment.KingdomImages$1:
    java.util.ArrayList temp -> temp
    com.aidigame.hisun.pet.widget.fragment.KingdomImages this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.KingdomImages access$0(com.aidigame.hisun.pet.widget.fragment.KingdomImages$1) -> access$0
com.aidigame.hisun.pet.widget.fragment.KingdomImages$1$1 -> com.aidigame.hisun.pet.widget.fragment.KingdomImages$1$1:
    com.aidigame.hisun.pet.widget.fragment.KingdomImages$1 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.KingdomImages$2 -> com.aidigame.hisun.pet.widget.fragment.be:
    com.aidigame.hisun.pet.widget.fragment.KingdomImages this$0 -> a
    void onRefresh() -> onRefresh
    com.aidigame.hisun.pet.widget.fragment.KingdomImages access$0(com.aidigame.hisun.pet.widget.fragment.KingdomImages$2) -> a
com.aidigame.hisun.pet.widget.fragment.KingdomImages$2$1 -> com.aidigame.hisun.pet.widget.fragment.KingdomImages$2$1:
    com.aidigame.hisun.pet.widget.fragment.KingdomImages$2 this$1 -> this$1
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.KingdomImages$2 access$0(com.aidigame.hisun.pet.widget.fragment.KingdomImages$2$1) -> access$0
com.aidigame.hisun.pet.widget.fragment.KingdomImages$2$1$1 -> com.aidigame.hisun.pet.widget.fragment.KingdomImages$2$1$1:
    com.aidigame.hisun.pet.widget.fragment.KingdomImages$2$1 this$2 -> this$2
    java.util.ArrayList val$temp -> val$temp
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.KingdomImages$3 -> com.aidigame.hisun.pet.widget.fragment.bf:
    com.aidigame.hisun.pet.widget.fragment.KingdomImages this$0 -> a
    void onLoadMore() -> onLoadMore
    com.aidigame.hisun.pet.widget.fragment.KingdomImages access$0(com.aidigame.hisun.pet.widget.fragment.KingdomImages$3) -> a
com.aidigame.hisun.pet.widget.fragment.KingdomImages$3$1 -> com.aidigame.hisun.pet.widget.fragment.KingdomImages$3$1:
    com.aidigame.hisun.pet.widget.fragment.KingdomImages$3 this$1 -> this$1
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.KingdomImages$3 access$0(com.aidigame.hisun.pet.widget.fragment.KingdomImages$3$1) -> access$0
com.aidigame.hisun.pet.widget.fragment.KingdomImages$3$1$1 -> com.aidigame.hisun.pet.widget.fragment.KingdomImages$3$1$1:
    com.aidigame.hisun.pet.widget.fragment.KingdomImages$3$1 this$2 -> this$2
    java.util.ArrayList val$temp -> val$temp
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.KingdomImages$4 -> com.aidigame.hisun.pet.widget.fragment.KingdomImages$4:
    com.aidigame.hisun.pet.widget.fragment.KingdomImages this$0 -> this$0
    java.util.ArrayList val$temp -> val$temp
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.KingdomImages$5 -> com.aidigame.hisun.pet.widget.fragment.KingdomImages$5:
    com.aidigame.hisun.pet.widget.fragment.KingdomImages this$0 -> this$0
    java.util.ArrayList val$temp -> val$temp
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.KingdomImages$6 -> com.aidigame.hisun.pet.widget.fragment.KingdomImages$6:
    com.aidigame.hisun.pet.widget.fragment.KingdomImages this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.KingdomImages$7 -> com.aidigame.hisun.pet.widget.fragment.bg:
    com.aidigame.hisun.pet.widget.fragment.KingdomImages this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.aidigame.hisun.pet.widget.fragment.KingdomImages$8 -> com.aidigame.hisun.pet.widget.fragment.bh:
    com.aidigame.hisun.pet.widget.fragment.KingdomImages this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.aidigame.hisun.pet.widget.fragment.KingdomPeoples -> com.aidigame.hisun.pet.widget.fragment.bi:
    com.costum.android.widget.PullAndLoadListView ptram -> a
    android.view.View view -> b
    com.aidigame.hisun.pet.ui.PetKingdomActivity context -> c
    com.aidigame.hisun.pet.adapter.KingdomPeoplesAdapter adapter -> d
    java.util.ArrayList datas -> e
    int last_id -> f
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> g
    com.aidigame.hisun.pet.bean.Animal data -> h
    boolean isShow -> i
    float infoYTop -> j
    float infoYBottom -> k
    boolean isRecord -> l
    void initView() -> g
    void loadData() -> c
    void refresh() -> d
    void onRefresh() -> a
    void onMore() -> b
    android.view.View getView() -> e
    void initListener() -> h
    void animationOut() -> f
com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$1 -> com.aidigame.hisun.pet.widget.fragment.bj:
    com.aidigame.hisun.pet.widget.fragment.KingdomPeoples this$0 -> a
    void onRefresh() -> onRefresh
    com.aidigame.hisun.pet.widget.fragment.KingdomPeoples access$0(com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$1) -> a
com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$1$1 -> com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$1$1:
    java.util.ArrayList temp -> temp
    com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$1 this$1 -> this$1
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$1 access$0(com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$1$1) -> access$0
com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$1$1$1 -> com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$1$1$1:
    com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$1$1 this$2 -> this$2
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$2 -> com.aidigame.hisun.pet.widget.fragment.bk:
    com.aidigame.hisun.pet.widget.fragment.KingdomPeoples this$0 -> a
    void onLoadMore() -> onLoadMore
    com.aidigame.hisun.pet.widget.fragment.KingdomPeoples access$0(com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$2) -> a
com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$2$1 -> com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$2$1:
    java.util.ArrayList temp -> temp
    com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$2 this$1 -> this$1
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$2 access$0(com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$2$1) -> access$0
com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$2$1$1 -> com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$2$1$1:
    com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$2$1 this$2 -> this$2
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$3 -> com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$3:
    java.util.ArrayList temp -> temp
    com.aidigame.hisun.pet.widget.fragment.KingdomPeoples this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.KingdomPeoples access$0(com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$3) -> access$0
com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$3$1 -> com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$3$1:
    com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$3 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$4 -> com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$4:
    java.util.ArrayList temp -> temp
    com.aidigame.hisun.pet.widget.fragment.KingdomPeoples this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.KingdomPeoples access$0(com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$4) -> access$0
com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$4$1 -> com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$4$1:
    com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$4 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$5 -> com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$5:
    java.util.ArrayList temp -> temp
    com.aidigame.hisun.pet.widget.fragment.KingdomPeoples this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$6 -> com.aidigame.hisun.pet.widget.fragment.bl:
    com.aidigame.hisun.pet.widget.fragment.KingdomPeoples this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$7 -> com.aidigame.hisun.pet.widget.fragment.bm:
    com.aidigame.hisun.pet.widget.fragment.KingdomPeoples this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$8 -> com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$8:
    com.aidigame.hisun.pet.widget.fragment.KingdomPeoples this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.KingdomPeoples access$0(com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$8) -> access$0
com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$8$1 -> com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$8$1:
    com.aidigame.hisun.pet.widget.fragment.KingdomPeoples$8 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.KingdomTrends -> com.aidigame.hisun.pet.widget.fragment.bn:
    com.aidigame.hisun.pet.view.PullToRefreshAndMoreView pullView -> a
    android.view.View view -> b
    com.aidigame.hisun.pet.ui.PetKingdomActivity context -> c
    android.widget.ListView listView -> d
    java.util.ArrayList petNewsList -> e
    com.aidigame.hisun.pet.adapter.KingdomTrendsListAdapter adapter -> f
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> g
    int nid -> h
    com.aidigame.hisun.pet.bean.Animal animal -> i
    boolean isShow -> j
    float infoYTop -> k
    float infoYBottom -> l
    boolean isRecord -> m
    void initView() -> f
    void refresh() -> c
    void onRefresh() -> a
    void onMore() -> b
    android.view.View getView() -> d
    void initListener() -> g
    void animationOut() -> e
com.aidigame.hisun.pet.widget.fragment.KingdomTrends$1 -> com.aidigame.hisun.pet.widget.fragment.KingdomTrends$1:
    com.aidigame.hisun.pet.widget.fragment.KingdomTrends this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.KingdomTrends access$0(com.aidigame.hisun.pet.widget.fragment.KingdomTrends$1) -> access$0
com.aidigame.hisun.pet.widget.fragment.KingdomTrends$1$1 -> com.aidigame.hisun.pet.widget.fragment.KingdomTrends$1$1:
    com.aidigame.hisun.pet.widget.fragment.KingdomTrends$1 this$1 -> this$1
    java.util.ArrayList val$temp -> val$temp
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.KingdomTrends$2 -> com.aidigame.hisun.pet.widget.fragment.KingdomTrends$2:
    com.aidigame.hisun.pet.widget.fragment.KingdomTrends this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.KingdomTrends access$0(com.aidigame.hisun.pet.widget.fragment.KingdomTrends$2) -> access$0
com.aidigame.hisun.pet.widget.fragment.KingdomTrends$2$1 -> com.aidigame.hisun.pet.widget.fragment.KingdomTrends$2$1:
    com.aidigame.hisun.pet.widget.fragment.KingdomTrends$2 this$1 -> this$1
    java.util.ArrayList val$temp -> val$temp
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.KingdomTrends$3 -> com.aidigame.hisun.pet.widget.fragment.KingdomTrends$3:
    com.aidigame.hisun.pet.widget.fragment.KingdomTrends this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.KingdomTrends access$0(com.aidigame.hisun.pet.widget.fragment.KingdomTrends$3) -> access$0
com.aidigame.hisun.pet.widget.fragment.KingdomTrends$3$1 -> com.aidigame.hisun.pet.widget.fragment.KingdomTrends$3$1:
    com.aidigame.hisun.pet.widget.fragment.KingdomTrends$3 this$1 -> this$1
    java.util.ArrayList val$temp -> val$temp
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.KingdomTrends$4 -> com.aidigame.hisun.pet.widget.fragment.KingdomTrends$4:
    com.aidigame.hisun.pet.widget.fragment.KingdomTrends this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.KingdomTrends access$0(com.aidigame.hisun.pet.widget.fragment.KingdomTrends$4) -> access$0
com.aidigame.hisun.pet.widget.fragment.KingdomTrends$4$1 -> com.aidigame.hisun.pet.widget.fragment.KingdomTrends$4$1:
    com.aidigame.hisun.pet.widget.fragment.KingdomTrends$4 this$1 -> this$1
    java.util.ArrayList val$temp -> val$temp
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.KingdomTrends$5 -> com.aidigame.hisun.pet.widget.fragment.bo:
    com.aidigame.hisun.pet.widget.fragment.KingdomTrends this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.aidigame.hisun.pet.widget.fragment.KingdomTrends$6 -> com.aidigame.hisun.pet.widget.fragment.bp:
    com.aidigame.hisun.pet.widget.fragment.KingdomTrends this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.aidigame.hisun.pet.widget.fragment.KingdomTrends$7 -> com.aidigame.hisun.pet.widget.fragment.KingdomTrends$7:
    com.aidigame.hisun.pet.widget.fragment.KingdomTrends this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.KingdomTrends access$0(com.aidigame.hisun.pet.widget.fragment.KingdomTrends$7) -> access$0
com.aidigame.hisun.pet.widget.fragment.KingdomTrends$7$1 -> com.aidigame.hisun.pet.widget.fragment.KingdomTrends$7$1:
    com.aidigame.hisun.pet.widget.fragment.KingdomTrends$7 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.MarketFragment -> com.aidigame.hisun.pet.widget.fragment.bq:
    int from -> a
    android.view.View view -> b
    com.aidigame.hisun.pet.ui.NewHomeActivity homeActivity -> c
    android.widget.FrameLayout frameLayout -> d
    android.view.View viewTopWhite -> e
    android.view.View popup_parent -> f
    android.widget.ImageView back -> g
    android.widget.ImageView giftBox -> h
    android.widget.TextView boxNumTV -> i
    android.widget.TextView spinnerTV1 -> j
    android.widget.TextView spinnerTV2 -> k
    android.widget.TextView spinnerTV3 -> l
    android.widget.TextView coinNumTV -> m
    android.widget.TextView moreCoinTV -> n
    android.widget.PopupWindow popupWindow1 -> o
    android.widget.PopupWindow popupWindow2 -> p
    android.widget.PopupWindow popupWindow3 -> q
    android.widget.GridView gridView -> r
    android.widget.GridView realGridView -> s
    com.aidigame.hisun.pet.adapter.MarketGridViewAdapter adapter -> t
    com.aidigame.hisun.pet.adapter.MarketRealGridViewAdapter realAdapter -> u
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> v
    android.widget.RelativeLayout black_layout -> w
    java.util.List giftList -> x
    int newGift -> y
    boolean isBuying -> z
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void setHomeActivity(com.aidigame.hisun.pet.ui.NewHomeActivity) -> a
    void initView() -> c
    void setBlurImageBackground() -> d
    void loadData() -> e
    void onRefresh() -> a
    void onMore() -> b
    void onClick(android.view.View) -> onClick
    void showPopupWindow1() -> f
    void showPopupWindow2() -> g
    void showPopupWindow3() -> h
    void access$0(com.aidigame.hisun.pet.widget.fragment.MarketFragment) -> a
com.aidigame.hisun.pet.widget.fragment.MarketFragment$1 -> com.aidigame.hisun.pet.widget.fragment.br:
    com.aidigame.hisun.pet.widget.fragment.MarketFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    com.aidigame.hisun.pet.widget.fragment.MarketFragment access$0(com.aidigame.hisun.pet.widget.fragment.MarketFragment$1) -> a
com.aidigame.hisun.pet.widget.fragment.MarketFragment$1$1 -> com.aidigame.hisun.pet.widget.fragment.MarketFragment$1$1:
    com.aidigame.hisun.pet.widget.fragment.MarketFragment$1 this$1 -> this$1
    int val$arg2 -> val$arg2
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.MarketFragment$1 access$0(com.aidigame.hisun.pet.widget.fragment.MarketFragment$1$1) -> access$0
com.aidigame.hisun.pet.widget.fragment.MarketFragment$1$1$1 -> com.aidigame.hisun.pet.widget.fragment.MarketFragment$1$1$1:
    com.aidigame.hisun.pet.widget.fragment.MarketFragment$1$1 this$2 -> this$2
    com.aidigame.hisun.pet.bean.User val$user -> val$user
    int val$arg2 -> val$arg2
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.MarketFragment$10 -> com.aidigame.hisun.pet.widget.fragment.bs:
    com.aidigame.hisun.pet.widget.fragment.MarketFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.widget.fragment.MarketFragment$11 -> com.aidigame.hisun.pet.widget.fragment.bt:
    com.aidigame.hisun.pet.widget.fragment.MarketFragment this$0 -> a
    void onDismiss() -> onDismiss
com.aidigame.hisun.pet.widget.fragment.MarketFragment$12 -> com.aidigame.hisun.pet.widget.fragment.bu:
    com.aidigame.hisun.pet.widget.fragment.MarketFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.widget.fragment.MarketFragment$13 -> com.aidigame.hisun.pet.widget.fragment.bv:
    com.aidigame.hisun.pet.widget.fragment.MarketFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.widget.fragment.MarketFragment$14 -> com.aidigame.hisun.pet.widget.fragment.bw:
    com.aidigame.hisun.pet.widget.fragment.MarketFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.widget.fragment.MarketFragment$15 -> com.aidigame.hisun.pet.widget.fragment.bx:
    com.aidigame.hisun.pet.widget.fragment.MarketFragment this$0 -> a
    void onDismiss() -> onDismiss
com.aidigame.hisun.pet.widget.fragment.MarketFragment$16 -> com.aidigame.hisun.pet.widget.fragment.by:
    com.aidigame.hisun.pet.widget.fragment.MarketFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.widget.fragment.MarketFragment$17 -> com.aidigame.hisun.pet.widget.fragment.bz:
    com.aidigame.hisun.pet.widget.fragment.MarketFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.widget.fragment.MarketFragment$2 -> com.aidigame.hisun.pet.widget.fragment.ca:
    com.aidigame.hisun.pet.widget.fragment.MarketFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.aidigame.hisun.pet.widget.fragment.MarketFragment$3 -> com.aidigame.hisun.pet.widget.fragment.MarketFragment$3:
    com.aidigame.hisun.pet.widget.fragment.MarketFragment this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.MarketFragment access$0(com.aidigame.hisun.pet.widget.fragment.MarketFragment$3) -> access$0
com.aidigame.hisun.pet.widget.fragment.MarketFragment$3$1 -> com.aidigame.hisun.pet.widget.fragment.MarketFragment$3$1:
    com.aidigame.hisun.pet.widget.fragment.MarketFragment$3 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.MarketFragment$4 -> com.aidigame.hisun.pet.widget.fragment.cb:
    com.aidigame.hisun.pet.widget.fragment.MarketFragment this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.aidigame.hisun.pet.widget.fragment.MarketFragment$5 -> com.aidigame.hisun.pet.widget.fragment.cc:
    com.aidigame.hisun.pet.widget.fragment.MarketFragment this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.aidigame.hisun.pet.widget.fragment.MarketFragment$6 -> com.aidigame.hisun.pet.widget.fragment.cd:
    com.aidigame.hisun.pet.widget.fragment.MarketFragment this$0 -> a
    void onDismiss() -> onDismiss
com.aidigame.hisun.pet.widget.fragment.MarketFragment$7 -> com.aidigame.hisun.pet.widget.fragment.ce:
    com.aidigame.hisun.pet.widget.fragment.MarketFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.widget.fragment.MarketFragment$8 -> com.aidigame.hisun.pet.widget.fragment.cf:
    com.aidigame.hisun.pet.widget.fragment.MarketFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.widget.fragment.MarketFragment$9 -> com.aidigame.hisun.pet.widget.fragment.cg:
    com.aidigame.hisun.pet.widget.fragment.MarketFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.widget.fragment.MenuFragment -> com.aidigame.hisun.pet.widget.fragment.ch:
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> a
    com.nostra13.universalimageloader.core.DisplayImageOptions displayImageOptions -> b
    android.widget.ScrollView scrollView -> c
    com.aidigame.hisun.pet.widget.fragment.MenuFragment menuFragment -> d
    com.aidigame.hisun.pet.view.RoundImageView round1 -> e
    com.aidigame.hisun.pet.view.RoundImageView round2 -> f
    com.aidigame.hisun.pet.view.RoundImageView round3 -> g
    android.widget.ImageView hat_king1 -> h
    android.widget.ImageView hat_king2 -> i
    android.widget.ImageView hat_king3 -> j
    android.widget.EditText searchET -> k
    android.widget.TextView cancelSearchTV -> l
    android.widget.ListView searchListView -> m
    java.util.ArrayList searchAnimalList -> n
    com.aidigame.hisun.pet.adapter.SearchPetListAdapter searchPetListAdapter -> o
    android.widget.LinearLayout infoLayout -> p
    android.view.View popup_parent -> q
    android.widget.RelativeLayout black_layout -> r
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> s
    android.view.View menuView -> t
    com.aidigame.hisun.pet.ui.NewHomeActivity homeActivity -> u
    com.aidigame.hisun.pet.view.RoundImageView userIcon -> v
    android.widget.TextView userNameTve -> w
    android.widget.TextView mailText -> x
    android.widget.TextView activityText -> y
    android.widget.TextView jobTv -> z
    android.widget.TextView levelTv -> A
    android.widget.RelativeLayout homeLayout -> B
    android.widget.RelativeLayout marketLayout -> C
    android.widget.RelativeLayout messageLayout -> D
    android.widget.RelativeLayout activityLayout -> E
    android.widget.RelativeLayout no_pet_layout -> F
    android.widget.TextView goldTv -> G
    android.widget.LinearLayout setupLayout -> H
    com.aidigame.hisun.pet.view.HorizontalListView2 gallery -> I
    android.widget.ImageView preIv -> J
    android.widget.ImageView nextIv -> K
    android.widget.ImageView messageIv -> L
    android.widget.ImageView sexIv -> M
    android.widget.ImageView clearInputIv -> N
    android.widget.BaseAdapter galleryAdapter -> O
    java.util.ArrayList viewList -> P
    java.util.ArrayList animalList -> Q
    android.os.Handler handler -> R
    boolean hasShow -> S
    boolean isSearching -> T
    int count -> U
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onResume() -> onResume
    void onPause() -> onPause
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    void setHomeActivity(com.aidigame.hisun.pet.ui.NewHomeActivity) -> a
    void onStart() -> onStart
    void initView() -> c
    void setViews() -> a
    void searchPet(java.lang.String) -> a
    void setBlurImageBackground() -> d
    void onClick(android.view.View) -> onClick
    void hideSearch() -> b
com.aidigame.hisun.pet.widget.fragment.MenuFragment$1 -> com.aidigame.hisun.pet.widget.fragment.ci:
    com.aidigame.hisun.pet.widget.fragment.MenuFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.aidigame.hisun.pet.widget.fragment.MenuFragment$10 -> com.aidigame.hisun.pet.widget.fragment.MenuFragment$10:
    com.aidigame.hisun.pet.widget.fragment.MenuFragment this$0 -> this$0
    java.lang.String val$name -> val$name
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.MenuFragment access$0(com.aidigame.hisun.pet.widget.fragment.MenuFragment$10) -> access$0
com.aidigame.hisun.pet.widget.fragment.MenuFragment$10$1 -> com.aidigame.hisun.pet.widget.fragment.MenuFragment$10$1:
    com.aidigame.hisun.pet.widget.fragment.MenuFragment$10 this$1 -> this$1
    java.util.ArrayList val$animals -> val$animals
    java.lang.String val$name -> val$name
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.MenuFragment$11 -> com.aidigame.hisun.pet.widget.fragment.MenuFragment$11:
    com.aidigame.hisun.pet.widget.fragment.MenuFragment this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.MenuFragment access$0(com.aidigame.hisun.pet.widget.fragment.MenuFragment$11) -> access$0
com.aidigame.hisun.pet.widget.fragment.MenuFragment$11$1 -> com.aidigame.hisun.pet.widget.fragment.MenuFragment$11$1:
    com.aidigame.hisun.pet.widget.fragment.MenuFragment$11 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.MenuFragment$2 -> com.aidigame.hisun.pet.widget.fragment.MenuFragment$2:
    com.aidigame.hisun.pet.widget.fragment.MenuFragment this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.MenuFragment access$0(com.aidigame.hisun.pet.widget.fragment.MenuFragment$2) -> access$0
com.aidigame.hisun.pet.widget.fragment.MenuFragment$2$1 -> com.aidigame.hisun.pet.widget.fragment.MenuFragment$2$1:
    com.aidigame.hisun.pet.widget.fragment.MenuFragment$2 this$1 -> this$1
    java.util.ArrayList val$temp -> val$temp
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.MenuFragment$3 -> com.aidigame.hisun.pet.widget.fragment.cj:
    com.aidigame.hisun.pet.widget.fragment.MenuFragment this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    long getItemId(int) -> getItemId
    java.lang.Object getItem(int) -> getItem
    int getCount() -> getCount
com.aidigame.hisun.pet.widget.fragment.MenuFragment$3$1 -> com.aidigame.hisun.pet.widget.fragment.ck:
    com.aidigame.hisun.pet.widget.fragment.MenuFragment$3 this$1 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.widget.fragment.MenuFragment$3$Holder -> com.aidigame.hisun.pet.widget.fragment.cl:
    com.aidigame.hisun.pet.view.RoundImageView roundImageView -> a
    android.widget.ImageView hat_king -> b
    com.aidigame.hisun.pet.widget.fragment.MenuFragment$3 this$1 -> c
com.aidigame.hisun.pet.widget.fragment.MenuFragment$4 -> com.aidigame.hisun.pet.widget.fragment.cm:
    com.aidigame.hisun.pet.widget.fragment.MenuFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.aidigame.hisun.pet.widget.fragment.MenuFragment$5 -> com.aidigame.hisun.pet.widget.fragment.cn:
    com.aidigame.hisun.pet.widget.fragment.MenuFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.aidigame.hisun.pet.widget.fragment.MenuFragment$6 -> com.aidigame.hisun.pet.widget.fragment.co:
    com.aidigame.hisun.pet.widget.fragment.MenuFragment this$0 -> a
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.aidigame.hisun.pet.widget.fragment.MenuFragment$7 -> com.aidigame.hisun.pet.widget.fragment.cp:
    com.aidigame.hisun.pet.widget.fragment.MenuFragment this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.aidigame.hisun.pet.widget.fragment.MenuFragment$8 -> com.aidigame.hisun.pet.widget.fragment.cq:
    com.aidigame.hisun.pet.widget.fragment.MenuFragment this$0 -> a
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.aidigame.hisun.pet.widget.fragment.MenuFragment$9 -> com.aidigame.hisun.pet.widget.fragment.MenuFragment$9:
    com.aidigame.hisun.pet.widget.fragment.MenuFragment this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.MenuFragment access$0(com.aidigame.hisun.pet.widget.fragment.MenuFragment$9) -> access$0
com.aidigame.hisun.pet.widget.fragment.MenuFragment$9$1 -> com.aidigame.hisun.pet.widget.fragment.MenuFragment$9$1:
    com.aidigame.hisun.pet.widget.fragment.MenuFragment$9 this$1 -> this$1
    int val$mail_count -> val$mail_count
    com.aidigame.hisun.pet.http.json.LoginJson$Data val$data -> val$data
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.MenuFragment$MyOnClickListener -> com.aidigame.hisun.pet.widget.fragment.cr:
    com.aidigame.hisun.pet.widget.fragment.MenuFragment this$0 -> a
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.widget.fragment.MenuFragment access$0(com.aidigame.hisun.pet.widget.fragment.MenuFragment$MyOnClickListener) -> a
com.aidigame.hisun.pet.widget.fragment.MenuFragment$MyOnClickListener$1 -> com.aidigame.hisun.pet.widget.fragment.MenuFragment$MyOnClickListener$1:
    com.aidigame.hisun.pet.widget.fragment.MenuFragment$MyOnClickListener this$1 -> this$1
    com.aidigame.hisun.pet.bean.Animal val$animal -> val$animal
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.MenuFragment$MyOnImageLoader -> com.aidigame.hisun.pet.widget.fragment.cs:
    com.aidigame.hisun.pet.widget.fragment.MenuFragment this$0 -> a
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.aidigame.hisun.pet.widget.fragment.MessageFragment -> com.aidigame.hisun.pet.widget.fragment.ct:
    android.view.View menuView -> a
    com.aidigame.hisun.pet.ui.NewHomeActivity homeActivity -> b
    android.widget.FrameLayout frameLayout -> c
    android.view.View viewTopWhite -> d
    com.costum.android.widget.PullAndLoadListView listView -> e
    boolean showSystem_Mail -> f
    java.util.ArrayList datasMail -> g
    com.aidigame.hisun.pet.adapter.MessageListAdapter mailAdapter -> h
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> i
    android.widget.TextView tv1 -> j
    android.widget.TextView tv2 -> k
    int position -> l
    boolean isDeleting -> m
    int last_id -> n
    com.aidigame.hisun.pet.service.BlurImageBroadcastReceiver broadcastReceiver -> o
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroy() -> onDestroy
    void setHomeActivity(com.aidigame.hisun.pet.ui.NewHomeActivity) -> a
    void initView() -> c
    void loadMailData() -> a
    void updateData() -> b
    void onDestroyView() -> onDestroyView
    void loadSystemMailData() -> d
    void access$0(com.aidigame.hisun.pet.widget.fragment.MessageFragment) -> a
com.aidigame.hisun.pet.widget.fragment.MessageFragment$1 -> com.aidigame.hisun.pet.widget.fragment.MessageFragment$1:
    com.aidigame.hisun.pet.widget.fragment.MessageFragment this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.MessageFragment access$0(com.aidigame.hisun.pet.widget.fragment.MessageFragment$1) -> access$0
com.aidigame.hisun.pet.widget.fragment.MessageFragment$1$1 -> com.aidigame.hisun.pet.widget.fragment.MessageFragment$1$1:
    com.aidigame.hisun.pet.widget.fragment.MessageFragment$1 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.MessageFragment$2 -> com.aidigame.hisun.pet.widget.fragment.cu:
    com.aidigame.hisun.pet.widget.fragment.MessageFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.widget.fragment.MessageFragment$3 -> com.aidigame.hisun.pet.widget.fragment.cv:
    com.aidigame.hisun.pet.widget.fragment.MessageFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.widget.fragment.MessageFragment$4 -> com.aidigame.hisun.pet.widget.fragment.cw:
    com.aidigame.hisun.pet.widget.fragment.MessageFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.widget.fragment.MessageFragment$5 -> com.aidigame.hisun.pet.widget.fragment.cx:
    com.aidigame.hisun.pet.widget.fragment.MessageFragment this$0 -> a
    void onRefresh() -> onRefresh
    com.aidigame.hisun.pet.widget.fragment.MessageFragment access$0(com.aidigame.hisun.pet.widget.fragment.MessageFragment$5) -> a
com.aidigame.hisun.pet.widget.fragment.MessageFragment$5$1 -> com.aidigame.hisun.pet.widget.fragment.MessageFragment$5$1:
    com.aidigame.hisun.pet.widget.fragment.MessageFragment$5 this$1 -> this$1
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.MessageFragment$5 access$0(com.aidigame.hisun.pet.widget.fragment.MessageFragment$5$1) -> access$0
com.aidigame.hisun.pet.widget.fragment.MessageFragment$5$1$1 -> com.aidigame.hisun.pet.widget.fragment.MessageFragment$5$1$1:
    com.aidigame.hisun.pet.widget.fragment.MessageFragment$5$1 this$2 -> this$2
    java.util.ArrayList val$system -> val$system
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.MessageFragment$6 -> com.aidigame.hisun.pet.widget.fragment.cy:
    com.aidigame.hisun.pet.widget.fragment.MessageFragment this$0 -> a
    void onLoadMore() -> onLoadMore
com.aidigame.hisun.pet.widget.fragment.MessageFragment$7 -> com.aidigame.hisun.pet.widget.fragment.MessageFragment$7:
    com.aidigame.hisun.pet.widget.fragment.MessageFragment this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.MessageFragment access$0(com.aidigame.hisun.pet.widget.fragment.MessageFragment$7) -> access$0
com.aidigame.hisun.pet.widget.fragment.MessageFragment$7$1 -> com.aidigame.hisun.pet.widget.fragment.MessageFragment$7$1:
    com.aidigame.hisun.pet.widget.fragment.MessageFragment$7 this$1 -> this$1
    java.util.ArrayList val$system -> val$system
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.MessageFragment$8 -> com.aidigame.hisun.pet.widget.fragment.cz:
    com.aidigame.hisun.pet.widget.fragment.MessageFragment this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.aidigame.hisun.pet.widget.fragment.MessageFragment$9 -> com.aidigame.hisun.pet.widget.fragment.MessageFragment$9:
    com.aidigame.hisun.pet.widget.fragment.MessageFragment this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.MessageFragment access$0(com.aidigame.hisun.pet.widget.fragment.MessageFragment$9) -> access$0
com.aidigame.hisun.pet.widget.fragment.MessageFragment$9$1 -> com.aidigame.hisun.pet.widget.fragment.MessageFragment$9$1:
    com.aidigame.hisun.pet.widget.fragment.MessageFragment$9 this$1 -> this$1
    java.util.ArrayList val$system -> val$system
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.NineGiftBox -> com.aidigame.hisun.pet.widget.fragment.da:
    android.view.View view -> a
    android.content.Context context -> b
    java.util.ArrayList giftList -> c
    android.widget.LinearLayout[] layouts -> d
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> e
    boolean isSendingGift -> f
    com.aidigame.hisun.pet.widget.fragment.NineGiftBox$SendGiftResultListener listener -> g
    android.view.View progress -> h
    void initView() -> b
    android.view.View getBoughtView(com.aidigame.hisun.pet.bean.Gift,int) -> a
    android.view.View getMarketView(com.aidigame.hisun.pet.bean.Gift,int) -> b
    void changeView(android.view.View,com.aidigame.hisun.pet.bean.Gift) -> a
    android.view.View getView() -> a
    void setSendGiftResultListener(com.aidigame.hisun.pet.widget.fragment.NineGiftBox$SendGiftResultListener) -> a
com.aidigame.hisun.pet.widget.fragment.NineGiftBox$GiftClickListener -> com.aidigame.hisun.pet.widget.fragment.db:
    com.aidigame.hisun.pet.bean.Gift gift -> a
    com.aidigame.hisun.pet.widget.fragment.NineGiftBox this$0 -> b
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.widget.fragment.NineGiftBox access$0(com.aidigame.hisun.pet.widget.fragment.NineGiftBox$GiftClickListener) -> a
com.aidigame.hisun.pet.widget.fragment.NineGiftBox$GiftClickListener$1 -> com.aidigame.hisun.pet.widget.fragment.NineGiftBox$GiftClickListener$1:
    com.aidigame.hisun.pet.widget.fragment.NineGiftBox$GiftClickListener this$1 -> this$1
    android.view.View val$v -> val$v
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.NineGiftBox$GiftClickListener access$0(com.aidigame.hisun.pet.widget.fragment.NineGiftBox$GiftClickListener$1) -> access$0
com.aidigame.hisun.pet.widget.fragment.NineGiftBox$GiftClickListener$1$1 -> com.aidigame.hisun.pet.widget.fragment.NineGiftBox$GiftClickListener$1$1:
    com.aidigame.hisun.pet.widget.fragment.NineGiftBox$GiftClickListener$1 this$2 -> this$2
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.NineGiftBox$GiftClickListener$1$2 -> com.aidigame.hisun.pet.widget.fragment.NineGiftBox$GiftClickListener$1$2:
    com.aidigame.hisun.pet.widget.fragment.NineGiftBox$GiftClickListener$1 this$2 -> this$2
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.NineGiftBox$GiftClickListener$1$3 -> com.aidigame.hisun.pet.widget.fragment.NineGiftBox$GiftClickListener$1$3:
    com.aidigame.hisun.pet.widget.fragment.NineGiftBox$GiftClickListener$1 this$2 -> this$2
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.NineGiftBox$GiftClickListener$1$4 -> com.aidigame.hisun.pet.widget.fragment.NineGiftBox$GiftClickListener$1$4:
    com.aidigame.hisun.pet.widget.fragment.NineGiftBox$GiftClickListener$1 this$2 -> this$2
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.NineGiftBox$GiftClickListener$1$5 -> com.aidigame.hisun.pet.widget.fragment.NineGiftBox$GiftClickListener$1$5:
    com.aidigame.hisun.pet.widget.fragment.NineGiftBox$GiftClickListener$1 this$2 -> this$2
    android.view.View val$v -> val$v
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.NineGiftBox$GiftClickListener$1$6 -> com.aidigame.hisun.pet.widget.fragment.NineGiftBox$GiftClickListener$1$6:
    com.aidigame.hisun.pet.widget.fragment.NineGiftBox$GiftClickListener$1 this$2 -> this$2
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.NineGiftBox$SendGiftResultListener -> com.aidigame.hisun.pet.widget.fragment.dc:
    void lastResult(boolean,com.aidigame.hisun.pet.bean.Gift) -> a
    void unRegister() -> a
com.aidigame.hisun.pet.widget.fragment.PetGiftList -> com.aidigame.hisun.pet.widget.fragment.dd:
    android.view.View view -> a
    com.aidigame.hisun.pet.ui.PetKingdomActivity context -> b
    android.widget.GridView gridView -> c
    com.aidigame.hisun.pet.adapter.UserGiftGridViewAdapter adapter -> d
    java.util.ArrayList list -> e
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> f
    android.widget.LinearLayout layout -> g
    com.aidigame.hisun.pet.bean.Animal animal -> h
    boolean isShow -> i
    float infoYTop -> j
    float infoYBottom -> k
    boolean isRecord -> l
    void initView() -> f
    void refresh() -> c
    void onRefresh() -> a
    void onMore() -> b
    android.view.View getView() -> d
    void initListener() -> g
    void animationOut() -> e
com.aidigame.hisun.pet.widget.fragment.PetGiftList$1 -> com.aidigame.hisun.pet.widget.fragment.PetGiftList$1:
    com.aidigame.hisun.pet.widget.fragment.PetGiftList this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.PetGiftList access$0(com.aidigame.hisun.pet.widget.fragment.PetGiftList$1) -> access$0
com.aidigame.hisun.pet.widget.fragment.PetGiftList$1$1 -> com.aidigame.hisun.pet.widget.fragment.PetGiftList$1$1:
    com.aidigame.hisun.pet.widget.fragment.PetGiftList$1 this$1 -> this$1
    java.util.ArrayList val$temp -> val$temp
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.PetGiftList$2 -> com.aidigame.hisun.pet.widget.fragment.PetGiftList$2:
    com.aidigame.hisun.pet.widget.fragment.PetGiftList this$0 -> this$0
    java.util.ArrayList val$temp -> val$temp
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.PetGiftList$3 -> com.aidigame.hisun.pet.widget.fragment.PetGiftList$3:
    com.aidigame.hisun.pet.widget.fragment.PetGiftList this$0 -> this$0
    java.util.ArrayList val$temp -> val$temp
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.PetGiftList$4 -> com.aidigame.hisun.pet.widget.fragment.de:
    com.aidigame.hisun.pet.widget.fragment.PetGiftList this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.aidigame.hisun.pet.widget.fragment.PetGiftList$5 -> com.aidigame.hisun.pet.widget.fragment.df:
    com.aidigame.hisun.pet.widget.fragment.PetGiftList this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.aidigame.hisun.pet.widget.fragment.PetGiftList$6 -> com.aidigame.hisun.pet.widget.fragment.PetGiftList$6:
    com.aidigame.hisun.pet.widget.fragment.PetGiftList this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.PetGiftList access$0(com.aidigame.hisun.pet.widget.fragment.PetGiftList$6) -> access$0
com.aidigame.hisun.pet.widget.fragment.PetGiftList$6$1 -> com.aidigame.hisun.pet.widget.fragment.PetGiftList$6$1:
    com.aidigame.hisun.pet.widget.fragment.PetGiftList$6 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.RaceDialog -> com.aidigame.hisun.pet.widget.fragment.dg:
    net.simonvt.numberpicker.NumberPicker starsPicker -> a
    net.simonvt.numberpicker.NumberPicker racePicker -> b
    java.util.ArrayList starsList -> c
    java.util.ArrayList raceList -> d
    int starValue -> e
    int raceValue -> f
    java.lang.String stars -> g
    java.lang.String race -> h
    android.widget.TextView provinceTV -> i
    android.content.Context context -> j
    android.view.View view -> k
    android.view.View getView() -> a
    java.lang.String getRace() -> b
    java.lang.String getRaceCode() -> c
com.aidigame.hisun.pet.widget.fragment.RaceDialog$1 -> com.aidigame.hisun.pet.widget.fragment.dh:
    com.aidigame.hisun.pet.widget.fragment.RaceDialog this$0 -> a
    void onValueChange(net.simonvt.numberpicker.NumberPicker,int,int) -> onValueChange
com.aidigame.hisun.pet.widget.fragment.RaceDialog$2 -> com.aidigame.hisun.pet.widget.fragment.di:
    com.aidigame.hisun.pet.widget.fragment.RaceDialog this$0 -> a
    void onValueChange(net.simonvt.numberpicker.NumberPicker,int,int) -> onValueChange
com.aidigame.hisun.pet.widget.fragment.SetupFragment -> com.aidigame.hisun.pet.widget.fragment.dj:
    android.widget.FrameLayout frameLayout -> a
    android.view.View viewTopWhite -> b
    android.widget.ScrollView scrollView -> c
    android.widget.TextView fileSizeTV -> d
    android.widget.TextView tv1 -> e
    android.widget.TextView tv2 -> f
    android.widget.TextView tv3 -> g
    android.widget.TextView tv4 -> h
    android.widget.TextView tv5 -> i
    android.widget.TextView tv6 -> j
    android.view.View menuView -> k
    com.aidigame.hisun.pet.ui.NewHomeActivity homeActivity -> l
    android.widget.LinearLayout linearLayout1 -> m
    android.widget.LinearLayout linearLayout2 -> n
    android.widget.LinearLayout linearLayout3 -> o
    android.widget.LinearLayout linearLayout6 -> p
    android.widget.LinearLayout linearLayout7 -> q
    android.widget.LinearLayout linearLayout8 -> r
    android.widget.LinearLayout linearLayout9 -> s
    android.widget.LinearLayout linearLayout10 -> t
    android.widget.LinearLayout linearLayout11 -> u
    android.widget.LinearLayout chosePetLayout -> v
    android.widget.RelativeLayout linearLayout4 -> w
    android.widget.RelativeLayout linearLayout5 -> x
    android.widget.ImageView back -> y
    android.widget.ImageView setup_image1 -> z
    android.widget.ImageView iv3 -> A
    android.widget.ImageView iv4 -> B
    android.widget.ImageView iv5 -> C
    android.widget.ImageView setup_image3 -> D
    android.widget.ImageView setup_image4 -> E
    boolean getXinlangAuth -> F
    int acount -> G
    int touchSlop -> H
    int distance -> I
    boolean isRecord -> J
    int yDown -> K
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void setHomeActivity(com.aidigame.hisun.pet.ui.NewHomeActivity) -> a
    void onResume() -> onResume
    void initView() -> a
    void setFileSize() -> b
    int getFileSize(java.io.File,int) -> a
    void setBlurImageBackground() -> c
    void initListener() -> d
    void onClick(android.view.View) -> onClick
    void getXinlangToken(boolean) -> a
com.aidigame.hisun.pet.widget.fragment.SetupFragment$1 -> com.aidigame.hisun.pet.widget.fragment.SetupFragment$1:
    com.aidigame.hisun.pet.widget.fragment.SetupFragment this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.SetupFragment access$0(com.aidigame.hisun.pet.widget.fragment.SetupFragment$1) -> access$0
com.aidigame.hisun.pet.widget.fragment.SetupFragment$1$1 -> com.aidigame.hisun.pet.widget.fragment.SetupFragment$1$1:
    com.aidigame.hisun.pet.widget.fragment.SetupFragment$1 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.SetupFragment$2 -> com.aidigame.hisun.pet.widget.fragment.dk:
    com.aidigame.hisun.pet.widget.fragment.SetupFragment this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.aidigame.hisun.pet.widget.fragment.UserActivity -> com.aidigame.hisun.pet.widget.fragment.dl:
    com.aidigame.hisun.pet.view.PullToRefreshAndMoreView ptram -> a
    android.view.View view -> b
    com.aidigame.hisun.pet.ui.UserDossierActivity context -> c
    android.widget.ListView focusListView -> d
    com.aidigame.hisun.pet.adapter.UserActivityAdapter2 focusAdapter -> e
    java.util.ArrayList userDatas -> f
    int last_focus_id -> g
    com.aidigame.hisun.pet.bean.User user -> h
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> i
    boolean isShow -> j
    float infoYTop -> k
    float infoYBottom -> l
    boolean isRecord -> m
    void initView() -> d
    void onRefresh() -> a
    void onMore() -> b
    void initListener() -> e
    void animationOut() -> c
com.aidigame.hisun.pet.widget.fragment.UserActivity$1 -> com.aidigame.hisun.pet.widget.fragment.UserActivity$1:
    java.util.ArrayList temp -> temp
    com.aidigame.hisun.pet.widget.fragment.UserActivity this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.UserActivity access$0(com.aidigame.hisun.pet.widget.fragment.UserActivity$1) -> access$0
com.aidigame.hisun.pet.widget.fragment.UserActivity$1$1 -> com.aidigame.hisun.pet.widget.fragment.UserActivity$1$1:
    com.aidigame.hisun.pet.widget.fragment.UserActivity$1 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.UserActivity$2 -> com.aidigame.hisun.pet.widget.fragment.UserActivity$2:
    com.aidigame.hisun.pet.widget.fragment.UserActivity this$0 -> this$0
    java.util.ArrayList val$temp -> val$temp
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.UserActivity$3 -> com.aidigame.hisun.pet.widget.fragment.UserActivity$3:
    com.aidigame.hisun.pet.widget.fragment.UserActivity this$0 -> this$0
    java.util.ArrayList val$temp -> val$temp
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.UserActivity$4 -> com.aidigame.hisun.pet.widget.fragment.dm:
    com.aidigame.hisun.pet.widget.fragment.UserActivity this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.aidigame.hisun.pet.widget.fragment.UserActivity$5 -> com.aidigame.hisun.pet.widget.fragment.dn:
    com.aidigame.hisun.pet.widget.fragment.UserActivity this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.aidigame.hisun.pet.widget.fragment.UserActivity$6 -> com.aidigame.hisun.pet.widget.fragment.do:
    com.aidigame.hisun.pet.widget.fragment.UserActivity this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.aidigame.hisun.pet.widget.fragment.UserFocus -> com.aidigame.hisun.pet.widget.fragment.dp:
    android.view.View view -> a
    com.aidigame.hisun.pet.ui.UserDossierActivity context -> b
    android.widget.ListView focusListView -> c
    com.aidigame.hisun.pet.adapter.UserFocusAdapter focusAdapter -> d
    java.util.ArrayList userDatas -> e
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> f
    long last_focus_id -> g
    com.aidigame.hisun.pet.bean.User user -> h
    boolean isShow -> i
    float infoYTop -> j
    float infoYBottom -> k
    boolean isRecord -> l
    boolean isShowingButton -> m
    void initView() -> e
    void onRefresh() -> a
    void onMore() -> b
    void initListener() -> f
    void animationOut() -> c
    android.view.View getView() -> d
    void showButtons(com.aidigame.hisun.pet.bean.Animal) -> a
    void access$0(com.aidigame.hisun.pet.widget.fragment.UserFocus,com.aidigame.hisun.pet.bean.Animal) -> a
com.aidigame.hisun.pet.widget.fragment.UserFocus$1 -> com.aidigame.hisun.pet.widget.fragment.UserFocus$1:
    java.util.ArrayList temp -> temp
    com.aidigame.hisun.pet.widget.fragment.UserFocus this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.UserFocus access$0(com.aidigame.hisun.pet.widget.fragment.UserFocus$1) -> access$0
com.aidigame.hisun.pet.widget.fragment.UserFocus$1$1 -> com.aidigame.hisun.pet.widget.fragment.UserFocus$1$1:
    com.aidigame.hisun.pet.widget.fragment.UserFocus$1 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.UserFocus$10 -> com.aidigame.hisun.pet.widget.fragment.dq:
    com.aidigame.hisun.pet.widget.fragment.UserFocus this$0 -> a
    android.view.View val$view -> b
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    com.aidigame.hisun.pet.widget.fragment.UserFocus access$0(com.aidigame.hisun.pet.widget.fragment.UserFocus$10) -> a
com.aidigame.hisun.pet.widget.fragment.UserFocus$10$1 -> com.aidigame.hisun.pet.widget.fragment.UserFocus$10$1:
    com.aidigame.hisun.pet.widget.fragment.UserFocus$10 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.UserFocus$2 -> com.aidigame.hisun.pet.widget.fragment.UserFocus$2:
    com.aidigame.hisun.pet.widget.fragment.UserFocus this$0 -> this$0
    java.util.ArrayList val$temp -> val$temp
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.UserFocus$3 -> com.aidigame.hisun.pet.widget.fragment.UserFocus$3:
    com.aidigame.hisun.pet.widget.fragment.UserFocus this$0 -> this$0
    java.util.ArrayList val$temp -> val$temp
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.UserFocus$4 -> com.aidigame.hisun.pet.widget.fragment.dr:
    com.aidigame.hisun.pet.widget.fragment.UserFocus this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.aidigame.hisun.pet.widget.fragment.UserFocus$5 -> com.aidigame.hisun.pet.widget.fragment.ds:
    com.aidigame.hisun.pet.widget.fragment.UserFocus this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.aidigame.hisun.pet.widget.fragment.UserFocus$6 -> com.aidigame.hisun.pet.widget.fragment.dt:
    com.aidigame.hisun.pet.widget.fragment.UserFocus this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.aidigame.hisun.pet.widget.fragment.UserFocus$7 -> com.aidigame.hisun.pet.widget.fragment.UserFocus$7:
    com.aidigame.hisun.pet.widget.fragment.UserFocus this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.UserFocus$7$1 -> com.aidigame.hisun.pet.widget.fragment.UserFocus$7$1:
    com.aidigame.hisun.pet.widget.fragment.UserFocus$7 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.UserFocus$8 -> com.aidigame.hisun.pet.widget.fragment.du:
    com.aidigame.hisun.pet.widget.fragment.UserFocus this$0 -> a
    com.aidigame.hisun.pet.bean.Animal val$animal -> b
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.widget.fragment.UserFocus$9 -> com.aidigame.hisun.pet.widget.fragment.dv:
    com.aidigame.hisun.pet.widget.fragment.UserFocus this$0 -> a
    com.aidigame.hisun.pet.bean.Animal val$animal -> b
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.widget.fragment.UserFocus access$0(com.aidigame.hisun.pet.widget.fragment.UserFocus$9) -> a
com.aidigame.hisun.pet.widget.fragment.UserFocus$9$1 -> com.aidigame.hisun.pet.widget.fragment.dw:
    com.aidigame.hisun.pet.widget.fragment.UserFocus$9 this$1 -> a
    com.aidigame.hisun.pet.ui.UserDossierActivity val$p -> b
    void getResult(boolean) -> a
com.aidigame.hisun.pet.widget.fragment.UserFocus$9$1$1 -> com.aidigame.hisun.pet.widget.fragment.UserFocus$9$1$1:
    com.aidigame.hisun.pet.widget.fragment.UserFocus$9$1 this$2 -> this$2
    com.aidigame.hisun.pet.ui.UserDossierActivity val$p -> val$p
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.UserGiftList -> com.aidigame.hisun.pet.widget.fragment.dx:
    android.view.View view -> a
    com.aidigame.hisun.pet.ui.UserDossierActivity context -> b
    android.widget.GridView gridView -> c
    com.aidigame.hisun.pet.adapter.UserGiftGridViewAdapter adapter -> d
    com.aidigame.hisun.pet.bean.User user -> e
    android.widget.LinearLayout layout -> f
    java.util.ArrayList list -> g
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> h
    boolean isShow -> i
    float infoYTop -> j
    float infoYBottom -> k
    boolean isRecord -> l
    void initView() -> e
    void onRefresh() -> a
    void onMore() -> b
    android.view.View getView() -> c
    void initListener() -> f
    void animationOut() -> d
com.aidigame.hisun.pet.widget.fragment.UserGiftList$1 -> com.aidigame.hisun.pet.widget.fragment.UserGiftList$1:
    com.aidigame.hisun.pet.widget.fragment.UserGiftList this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.UserGiftList access$0(com.aidigame.hisun.pet.widget.fragment.UserGiftList$1) -> access$0
com.aidigame.hisun.pet.widget.fragment.UserGiftList$1$1 -> com.aidigame.hisun.pet.widget.fragment.UserGiftList$1$1:
    com.aidigame.hisun.pet.widget.fragment.UserGiftList$1 this$1 -> this$1
    java.util.ArrayList val$temp -> val$temp
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.UserGiftList$2 -> com.aidigame.hisun.pet.widget.fragment.UserGiftList$2:
    com.aidigame.hisun.pet.widget.fragment.UserGiftList this$0 -> this$0
    java.util.ArrayList val$temp -> val$temp
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.UserGiftList$3 -> com.aidigame.hisun.pet.widget.fragment.dy:
    com.aidigame.hisun.pet.widget.fragment.UserGiftList this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.aidigame.hisun.pet.widget.fragment.UserGiftList$4 -> com.aidigame.hisun.pet.widget.fragment.dz:
    com.aidigame.hisun.pet.widget.fragment.UserGiftList this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.aidigame.hisun.pet.widget.fragment.UserGiftList$5 -> com.aidigame.hisun.pet.widget.fragment.UserGiftList$5:
    com.aidigame.hisun.pet.widget.fragment.UserGiftList this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.UserGiftList access$0(com.aidigame.hisun.pet.widget.fragment.UserGiftList$5) -> access$0
com.aidigame.hisun.pet.widget.fragment.UserGiftList$5$1 -> com.aidigame.hisun.pet.widget.fragment.UserGiftList$5$1:
    com.aidigame.hisun.pet.widget.fragment.UserGiftList$5 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.UserKingdomList -> com.aidigame.hisun.pet.widget.fragment.ea:
    android.view.View view -> a
    com.aidigame.hisun.pet.ui.UserDossierActivity context -> b
    android.widget.ListView listView -> c
    com.aidigame.hisun.pet.adapter.UserKingdomListAdapter adapter -> d
    com.aidigame.hisun.pet.bean.User user -> e
    java.util.ArrayList animalList -> f
    com.aidigame.hisun.pet.util.HandleHttpConnectionException handleHttpConnectionException -> g
    boolean isShow -> h
    float infoYTop -> i
    float infoYBottom -> j
    boolean isRecord -> k
    boolean isShowingButton -> l
    void initView() -> e
    void onRefresh() -> a
    void onMore() -> b
    android.view.View getView() -> c
    void initListener() -> f
    void animationOut() -> d
    void showButtons(com.aidigame.hisun.pet.bean.Animal) -> a
    void access$0(com.aidigame.hisun.pet.widget.fragment.UserKingdomList,com.aidigame.hisun.pet.bean.Animal) -> a
com.aidigame.hisun.pet.widget.fragment.UserKingdomList$1 -> com.aidigame.hisun.pet.widget.fragment.UserKingdomList$1:
    com.aidigame.hisun.pet.widget.fragment.UserKingdomList this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.UserKingdomList access$0(com.aidigame.hisun.pet.widget.fragment.UserKingdomList$1) -> access$0
com.aidigame.hisun.pet.widget.fragment.UserKingdomList$1$1 -> com.aidigame.hisun.pet.widget.fragment.UserKingdomList$1$1:
    com.aidigame.hisun.pet.widget.fragment.UserKingdomList$1 this$1 -> this$1
    java.util.ArrayList val$temp -> val$temp
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.UserKingdomList$10 -> com.aidigame.hisun.pet.widget.fragment.eb:
    com.aidigame.hisun.pet.widget.fragment.UserKingdomList this$0 -> a
    android.view.View val$view -> b
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    com.aidigame.hisun.pet.widget.fragment.UserKingdomList access$0(com.aidigame.hisun.pet.widget.fragment.UserKingdomList$10) -> a
com.aidigame.hisun.pet.widget.fragment.UserKingdomList$10$1 -> com.aidigame.hisun.pet.widget.fragment.UserKingdomList$10$1:
    com.aidigame.hisun.pet.widget.fragment.UserKingdomList$10 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.UserKingdomList$2 -> com.aidigame.hisun.pet.widget.fragment.UserKingdomList$2:
    com.aidigame.hisun.pet.widget.fragment.UserKingdomList this$0 -> this$0
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.UserKingdomList access$0(com.aidigame.hisun.pet.widget.fragment.UserKingdomList$2) -> access$0
com.aidigame.hisun.pet.widget.fragment.UserKingdomList$2$1 -> com.aidigame.hisun.pet.widget.fragment.UserKingdomList$2$1:
    com.aidigame.hisun.pet.widget.fragment.UserKingdomList$2 this$1 -> this$1
    java.util.ArrayList val$temp -> val$temp
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.UserKingdomList$3 -> com.aidigame.hisun.pet.widget.fragment.ec:
    com.aidigame.hisun.pet.widget.fragment.UserKingdomList this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.aidigame.hisun.pet.widget.fragment.UserKingdomList$4 -> com.aidigame.hisun.pet.widget.fragment.ed:
    com.aidigame.hisun.pet.widget.fragment.UserKingdomList this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.aidigame.hisun.pet.widget.fragment.UserKingdomList$5 -> com.aidigame.hisun.pet.widget.fragment.ee:
    com.aidigame.hisun.pet.widget.fragment.UserKingdomList this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.aidigame.hisun.pet.widget.fragment.UserKingdomList$6 -> com.aidigame.hisun.pet.widget.fragment.UserKingdomList$6:
    com.aidigame.hisun.pet.widget.fragment.UserKingdomList this$0 -> this$0
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.UserKingdomList$6$1 -> com.aidigame.hisun.pet.widget.fragment.UserKingdomList$6$1:
    com.aidigame.hisun.pet.widget.fragment.UserKingdomList$6 this$1 -> this$1
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.UserKingdomList$7 -> com.aidigame.hisun.pet.widget.fragment.ef:
    com.aidigame.hisun.pet.widget.fragment.UserKingdomList this$0 -> a
    com.aidigame.hisun.pet.bean.Animal val$animal -> b
    void onClick(android.view.View) -> onClick
com.aidigame.hisun.pet.widget.fragment.UserKingdomList$8 -> com.aidigame.hisun.pet.widget.fragment.eg:
    com.aidigame.hisun.pet.widget.fragment.UserKingdomList this$0 -> a
    com.aidigame.hisun.pet.bean.Animal val$animal -> b
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.widget.fragment.UserKingdomList access$0(com.aidigame.hisun.pet.widget.fragment.UserKingdomList$8) -> a
com.aidigame.hisun.pet.widget.fragment.UserKingdomList$8$1 -> com.aidigame.hisun.pet.widget.fragment.UserKingdomList$8$1:
    com.aidigame.hisun.pet.widget.fragment.UserKingdomList$8 this$1 -> this$1
    com.aidigame.hisun.pet.bean.Animal val$animal -> val$animal
    void run() -> run
    com.aidigame.hisun.pet.widget.fragment.UserKingdomList$8 access$0(com.aidigame.hisun.pet.widget.fragment.UserKingdomList$8$1) -> access$0
com.aidigame.hisun.pet.widget.fragment.UserKingdomList$8$1$1 -> com.aidigame.hisun.pet.widget.fragment.UserKingdomList$8$1$1:
    com.aidigame.hisun.pet.widget.fragment.UserKingdomList$8$1 this$2 -> this$2
    com.aidigame.hisun.pet.bean.Animal val$animal -> val$animal
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.UserKingdomList$8$1$2 -> com.aidigame.hisun.pet.widget.fragment.UserKingdomList$8$1$2:
    com.aidigame.hisun.pet.widget.fragment.UserKingdomList$8$1 this$2 -> this$2
    void run() -> run
com.aidigame.hisun.pet.widget.fragment.UserKingdomList$9 -> com.aidigame.hisun.pet.widget.fragment.eh:
    com.aidigame.hisun.pet.widget.fragment.UserKingdomList this$0 -> a
    com.aidigame.hisun.pet.bean.Animal val$animal -> b
    void onClick(android.view.View) -> onClick
    com.aidigame.hisun.pet.widget.fragment.UserKingdomList access$0(com.aidigame.hisun.pet.widget.fragment.UserKingdomList$9) -> a
com.aidigame.hisun.pet.widget.fragment.UserKingdomList$9$1 -> com.aidigame.hisun.pet.widget.fragment.ei:
    com.aidigame.hisun.pet.widget.fragment.UserKingdomList$9 this$1 -> a
    com.aidigame.hisun.pet.bean.Animal val$animal -> b
    void getResult(boolean) -> a
com.aidigame.hisun.pet.wxapi.WXEntryActivity -> com.aidigame.hisun.pet.wxapi.WXEntryActivity:
    com.tencent.mm.sdk.openapi.IWXAPI api -> api
    void onCreate(android.os.Bundle) -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onReq(com.tencent.mm.sdk.openapi.BaseReq) -> onReq
    void onResp(com.tencent.mm.sdk.openapi.BaseResp) -> onResp
    java.lang.String buildTransaction(java.lang.String) -> buildTransaction
com.android.vending.billing.IInAppBillingService -> com.a.a.a.a:
    int isBillingSupported(int,java.lang.String,java.lang.String) -> a
    android.os.Bundle getSkuDetails(int,java.lang.String,java.lang.String,android.os.Bundle) -> a
    android.os.Bundle getBuyIntent(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    android.os.Bundle getPurchases(int,java.lang.String,java.lang.String,java.lang.String) -> a
    int consumePurchase(int,java.lang.String,java.lang.String) -> b
com.android.vending.billing.IInAppBillingService$Stub -> com.a.a.a.b:
    com.android.vending.billing.IInAppBillingService asInterface(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.android.vending.billing.IInAppBillingService$Stub$Proxy -> com.a.a.a.c:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    int isBillingSupported(int,java.lang.String,java.lang.String) -> a
    android.os.Bundle getSkuDetails(int,java.lang.String,java.lang.String,android.os.Bundle) -> a
    android.os.Bundle getBuyIntent(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    android.os.Bundle getPurchases(int,java.lang.String,java.lang.String,java.lang.String) -> a
    int consumePurchase(int,java.lang.String,java.lang.String) -> b
com.android.widget.R -> com.a.b.a:
com.android.widget.R$drawable -> com.a.b.b:
    int costum_progress_bar -> costum_progress_bar
    int ic_launcher -> ic_launcher
    int ic_pulltorefresh_arrow -> ic_pulltorefresh_arrow
com.android.widget.R$id -> com.a.b.c:
    int load_more_footer -> load_more_footer
    int load_more_progressBar -> load_more_progressBar
    int pull_to_refresh_header -> pull_to_refresh_header
    int pull_to_refresh_image -> pull_to_refresh_image
    int pull_to_refresh_progress -> pull_to_refresh_progress
    int pull_to_refresh_text -> pull_to_refresh_text
    int pull_to_refresh_updated_at -> pull_to_refresh_updated_at
    int top_line -> top_line
com.android.widget.R$layout -> com.a.b.d:
    int load_more_footer -> load_more_footer
    int pull_to_refresh_header -> pull_to_refresh_header
com.android.widget.R$string -> com.a.b.e:
    int app_name -> app_name
    int hello -> hello
    int pull_to_refresh_pull_label -> pull_to_refresh_pull_label
    int pull_to_refresh_refreshing_label -> pull_to_refresh_refreshing_label
    int pull_to_refresh_release_label -> pull_to_refresh_release_label
    int pull_to_refresh_tap_label -> pull_to_refresh_tap_label
com.aviary.android.feather.AlertActivity -> com.aviary.android.feather.AlertActivity:
    com.aviary.android.feather.common.log.LoggerFactory$Logger logger -> logger
    void onCreate(android.os.Bundle) -> onCreate
    boolean handleIntent(android.content.Intent) -> handleIntent
    android.app.AlertDialog handleAlertMessage(android.os.Bundle) -> handleAlertMessage
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.aviary.android.feather.AlertActivity$1 -> com.aviary.android.feather.AlertActivity$1:
    com.aviary.android.feather.AlertActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.aviary.android.feather.AviaryMainController -> com.aviary.android.feather.AviaryMainController:
    int STATE_OPENING -> STATE_OPENING
    int STATE_OPENED -> STATE_OPENED
    int STATE_CLOSING -> STATE_CLOSING
    int STATE_CLOSED -> STATE_CLOSED
    int STATE_DISABLED -> STATE_DISABLED
    int STATE_CONTENT_READY -> STATE_CONTENT_READY
    int STATE_READY -> STATE_READY
    int TOOLBAR_TITLE -> TOOLBAR_TITLE
    int TOOLBAR_TITLE_INT -> TOOLBAR_TITLE_INT
    int TOOLBAR_APPLY_VISIBILITY -> TOOLBAR_APPLY_VISIBILITY
    android.graphics.Bitmap mBitmap -> mBitmap
    android.graphics.Bitmap mOriginalBitmap -> mOriginalBitmap
    com.aviary.android.feather.AviaryMainController$FeatherContext mContext -> mContext
    com.aviary.android.feather.effects.AbstractPanel mCurrentEffect -> mCurrentEffect
    com.aviary.android.feather.library.content.ToolEntry mCurrentEntry -> mCurrentEntry
    com.aviary.android.feather.AviaryMainController$STATE mCurrentState -> mCurrentState
    com.aviary.android.feather.AviaryMainController$OnToolListener mToolListener -> mToolListener
    com.aviary.android.feather.AviaryMainController$OnBitmapChangeListener mBitmapChangeListener -> mBitmapChangeListener
    android.os.Handler mHandler -> mHandler
    com.aviary.android.feather.library.services.ServiceLoader mServiceLoader -> mServiceLoader
    com.aviary.android.feather.effects.AbstractPanelLoaderService mPanelCreatorService -> mPanelCreatorService
    com.aviary.android.feather.common.log.LoggerFactory$Logger logger -> logger
    boolean mChanged -> mChanged
    android.content.res.Configuration mConfiguration -> mConfiguration
    java.lang.String mSessionId -> mSessionId
    boolean mHiResEnabled -> mHiResEnabled
    com.aviary.android.feather.AviaryMainController$OnHiResListener mHiResListener -> mHiResListener
    com.aviary.android.feather.library.services.drag.DragLayer mDragLayer -> mDragLayer
    java.lang.Boolean mAppIsUpdated -> mAppIsUpdated
    int[] $SWITCH_TABLE$com$aviary$android$feather$AviaryMainController$STATE -> $SWITCH_TABLE$com$aviary$android$feather$AviaryMainController$STATE
    boolean getAppIsUpdated() -> getAppIsUpdated
    void setDragLayer(com.aviary.android.feather.library.services.drag.DragLayer) -> setDragLayer
    void initServices(com.aviary.android.feather.AviaryMainController$FeatherContext) -> initServices
    void setOnHiResListener(com.aviary.android.feather.AviaryMainController$OnHiResListener) -> setOnHiResListener
    void initHiResService() -> initHiResService
    void activateTool(com.aviary.android.feather.library.content.ToolEntry) -> activateTool
    void activateTool(com.aviary.android.feather.library.content.ToolEntry,android.os.Bundle) -> activateTool
    void dispose() -> dispose
    android.content.Context getBaseContext() -> getBaseContext
    android.app.Activity getBaseActivity() -> getBaseActivity
    android.graphics.Bitmap getBitmap() -> getBitmap
    android.graphics.Bitmap getOriginalBitmap() -> getOriginalBitmap
    boolean getBitmapIsChanged() -> getBitmapIsChanged
    boolean getBitmapIsChangedOrChanging() -> getBitmapIsChangedOrChanging
    boolean getPanelIsRendering() -> getPanelIsRendering
    com.aviary.android.feather.library.content.ToolEntry getActiveTool() -> getActiveTool
    com.aviary.android.feather.effects.AbstractPanel getActiveToolPanel() -> getActiveToolPanel
    android.graphics.Matrix getCurrentImageViewMatrix() -> getCurrentImageViewMatrix
    boolean getEnabled() -> getEnabled
    java.lang.Object getService(java.lang.Class) -> getService
    void registerService(java.lang.Class) -> registerService
    void removeService(java.lang.Class) -> removeService
    boolean isClosed() -> isClosed
    boolean isOpened() -> isOpened
    void onActivate(android.graphics.Bitmap,int[]) -> onActivate
    boolean onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onApply() -> onApply
    boolean onBackPressed() -> onBackPressed
    void onCancel() -> onCancel
    void cancel() -> cancel
    void onClose(boolean) -> onClose
    void onComplete(android.graphics.Bitmap,com.aviary.android.feather.headless.moa.MoaActionList,java.util.HashMap) -> onComplete
    void setNextBitmap(android.graphics.Bitmap) -> setNextBitmap
    void setNextBitmap(android.graphics.Bitmap,boolean) -> setNextBitmap
    void setNextBitmap(android.graphics.Bitmap,boolean,android.graphics.Matrix) -> setNextBitmap
    void onError(java.lang.CharSequence,int,android.content.DialogInterface$OnClickListener) -> onError
    void onError(java.lang.CharSequence,int,android.content.DialogInterface$OnClickListener,int,android.content.DialogInterface$OnClickListener) -> onError
    void onMessage(java.lang.CharSequence,java.lang.CharSequence,int,android.content.DialogInterface$OnClickListener) -> onMessage
    void onMessage(java.lang.CharSequence,java.lang.CharSequence,int,android.content.DialogInterface$OnClickListener,int,android.content.DialogInterface$OnClickListener) -> onMessage
    void onPreviewChange(android.graphics.Bitmap,boolean) -> onPreviewChange
    void onPreviewUpdated() -> onPreviewUpdated
    void onReady(com.aviary.android.feather.effects.AbstractPanel) -> onReady
    void onRestoreOriginal() -> onRestoreOriginal
    void onSave() -> onSave
    void prepareToolPanel(com.aviary.android.feather.effects.AbstractPanel,com.aviary.android.feather.library.content.ToolEntry,android.os.Bundle) -> prepareToolPanel
    void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    void setCurrentState(com.aviary.android.feather.AviaryMainController$STATE) -> setCurrentState
    void setEnabled(boolean) -> setEnabled
    void setOnToolListener(com.aviary.android.feather.AviaryMainController$OnToolListener) -> setOnToolListener
    void setOnBitmapChangeListener(com.aviary.android.feather.AviaryMainController$OnBitmapChangeListener) -> setOnBitmapChangeListener
    boolean onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onProgressStart() -> onProgressStart
    void onProgressEnd() -> onProgressEnd
    void onProgressModalStart() -> onProgressModalStart
    void onProgressModalEnd() -> onProgressModalEnd
    void setToolbarTitle(int) -> setToolbarTitle
    void setToolbarTitle(java.lang.CharSequence) -> setToolbarTitle
    void restoreToolbarTitle() -> restoreToolbarTitle
    void setPanelApplyStatusEnabled(boolean) -> setPanelApplyStatusEnabled
    com.aviary.android.feather.library.services.drag.DragLayer getDragLayer() -> getDragLayer
    com.aviary.android.feather.effects.AbstractPanel access$0(com.aviary.android.feather.AviaryMainController) -> access$0
    void access$1(com.aviary.android.feather.AviaryMainController,com.aviary.android.feather.AviaryMainController$STATE) -> access$1
    com.aviary.android.feather.AviaryMainController$FeatherContext access$2(com.aviary.android.feather.AviaryMainController) -> access$2
    int[] $SWITCH_TABLE$com$aviary$android$feather$AviaryMainController$STATE() -> $SWITCH_TABLE$com$aviary$android$feather$AviaryMainController$STATE
com.aviary.android.feather.AviaryMainController$1 -> com.aviary.android.feather.AviaryMainController$1:
    com.aviary.android.feather.AviaryMainController this$0 -> this$0
    void OnOpenStart() -> OnOpenStart
    void OnOpenEnd() -> OnOpenEnd
    void OnCloseStart() -> OnCloseStart
    void OnCloseEnd() -> OnCloseEnd
com.aviary.android.feather.AviaryMainController$2 -> com.aviary.android.feather.AviaryMainController$2:
    com.aviary.android.feather.AviaryMainController this$0 -> this$0
    boolean val$isConfirmed -> val$isConfirmed
    void OnOpenStart() -> OnOpenStart
    void OnOpenEnd() -> OnOpenEnd
    void OnCloseStart() -> OnCloseStart
    void OnCloseEnd() -> OnCloseEnd
com.aviary.android.feather.AviaryMainController$3 -> com.aviary.android.feather.AviaryMainController$3:
    com.aviary.android.feather.AviaryMainController this$0 -> this$0
    void run() -> run
com.aviary.android.feather.AviaryMainController$FeatherContext -> com.aviary.android.feather.AviaryMainController$FeatherContext:
    it.sephiroth.android.library.imagezoom.ImageViewTouchBase getMainImage() -> getMainImage
    com.aviary.android.feather.widget.AviaryBottomBarViewFlipper getBottomBar() -> getBottomBar
    android.view.ViewGroup getOptionsPanelContainer() -> getOptionsPanelContainer
    android.view.ViewGroup getDrawingImageContainer() -> getDrawingImageContainer
    android.view.ViewGroup activatePopupContainer() -> activatePopupContainer
    void deactivatePopupContainer() -> deactivatePopupContainer
    void showToolProgress() -> showToolProgress
    void hideToolProgress() -> hideToolProgress
    void showModalProgress() -> showModalProgress
    void hideModalProgress() -> hideModalProgress
com.aviary.android.feather.AviaryMainController$OnBitmapChangeListener -> com.aviary.android.feather.AviaryMainController$OnBitmapChangeListener:
    void onBitmapChange(android.graphics.Bitmap,boolean,android.graphics.Matrix) -> onBitmapChange
    void onPreviewChange(android.graphics.Bitmap,boolean) -> onPreviewChange
    void onInvalidateBitmap() -> onInvalidateBitmap
com.aviary.android.feather.AviaryMainController$OnHiResListener -> com.aviary.android.feather.AviaryMainController$OnHiResListener:
    void OnLoad(android.net.Uri) -> OnLoad
    void OnApplyActions(com.aviary.android.feather.headless.moa.MoaActionList) -> OnApplyActions
com.aviary.android.feather.AviaryMainController$OnToolListener -> com.aviary.android.feather.AviaryMainController$OnToolListener:
    void onToolCompleted() -> onToolCompleted
com.aviary.android.feather.AviaryMainController$STATE -> com.aviary.android.feather.AviaryMainController$STATE:
    com.aviary.android.feather.AviaryMainController$STATE CLOSED_CANCEL -> CLOSED_CANCEL
    com.aviary.android.feather.AviaryMainController$STATE CLOSED_CONFIRMED -> CLOSED_CONFIRMED
    com.aviary.android.feather.AviaryMainController$STATE CLOSING -> CLOSING
    com.aviary.android.feather.AviaryMainController$STATE DISABLED -> DISABLED
    com.aviary.android.feather.AviaryMainController$STATE OPENED -> OPENED
    com.aviary.android.feather.AviaryMainController$STATE OPENING -> OPENING
    com.aviary.android.feather.AviaryMainController$STATE[] ENUM$VALUES -> ENUM$VALUES
    com.aviary.android.feather.AviaryMainController$STATE[] values() -> values
    com.aviary.android.feather.AviaryMainController$STATE valueOf(java.lang.String) -> valueOf
com.aviary.android.feather.FeatherActivity -> com.aviary.android.feather.FeatherActivity:
    android.widget.ImageView back -> back
    int ALERT_CONFIRM_EXIT -> ALERT_CONFIRM_EXIT
    int ALERT_DOWNLOAD_ERROR -> ALERT_DOWNLOAD_ERROR
    int ALERT_REVERT_IMAGE -> ALERT_REVERT_IMAGE
    int ALERT_FEEDBACK -> ALERT_FEEDBACK
    int ALERT_ABOUT -> ALERT_ABOUT
    int ALERT_CONFIRM_EXIT_WITH_NO_CHANGES -> ALERT_CONFIRM_EXIT_WITH_NO_CHANGES
    java.lang.String ID -> ID
    int TOOLS_OPEN_DELAY_TIME -> TOOLS_OPEN_DELAY_TIME
    int pResultCode -> pResultCode
    com.aviary.android.feather.widget.AviaryNavBarViewFlipper mToolbar -> mToolbar
    it.sephiroth.android.library.widget.HListView mToolsList -> mToolsList
    com.aviary.android.feather.widget.AviaryToast mToastLoader -> mToastLoader
    android.view.ViewGroup mDrawingViewContainer -> mDrawingViewContainer
    android.view.View mInlineProgressLoader -> mInlineProgressLoader
    com.aviary.android.feather.AviaryMainController mMainController -> mMainController
    java.util.List mToolList -> mToolList
    boolean mSaving -> mSaving
    int mOrientation -> mOrientation
    com.aviary.android.feather.widget.AviaryBottomBarViewFlipper mBottomBarFlipper -> mBottomBarFlipper
    com.aviary.android.feather.common.log.LoggerFactory$Logger logger -> logger
    android.os.Handler mHandler -> mHandler
    boolean mHideExitAlertConfirmation -> mHideExitAlertConfirmation
    java.util.List mListEntries -> mListEntries
    android.view.ViewGroup mPopupContainer -> mPopupContainer
    com.aviary.android.feather.library.services.drag.DragLayer mDragLayer -> mDragLayer
    com.aviary.android.feather.async_tasks.DownloadImageAsyncTask mDownloadTask -> mDownloadTask
    boolean mIsRunning -> mIsRunning
    android.os.Handler mUIHandler -> mUIHandler
    com.aviary.android.feather.widget.AviaryImageRestoreSwitcher mImageRestore -> mImageRestore
    void onStateChanged(int,int,java.lang.Object) -> onStateChanged
    void onSetResult(int,android.content.Intent) -> onSetResult
    void onCreate(android.os.Bundle) -> onCreate
    void initializeController() -> initializeController
    void onControllerLoaded(com.aviary.android.feather.AviaryMainController) -> onControllerLoaded
    void onPostCreate() -> onPostCreate
    void onPreCreate() -> onPreCreate
    void onInitializeUtils() -> onInitializeUtils
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void onDestroy() -> onDestroy
    void onInitializeUI() -> onInitializeUI
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    android.app.Dialog createBaseDialog(int,java.lang.String,android.view.View$OnClickListener) -> createBaseDialog
    android.app.Dialog createAboutDialog() -> createAboutDialog
    android.app.Dialog createFeedbackDialog() -> createFeedbackDialog
    void onRevert() -> onRevert
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onBottomBarItemClick(int) -> onBottomBarItemClick
    void loadImage(android.net.Uri) -> loadImage
    void onContentChanged() -> onContentChanged
    void onBackPressed() -> onBackPressed
    boolean handleBackPressedOnUnchangedImage() -> handleBackPressedOnUnchangedImage
    void onBackPressed(boolean) -> onBackPressed
    android.net.Uri handleIntent(android.content.Intent) -> handleIntent
    void delayedInitializeTools() -> delayedInitializeTools
    java.util.List loadStandaloneTools() -> loadStandaloneTools
    java.util.List loadTools() -> loadTools
    void onToolsLoaded(java.util.List,java.util.List) -> onToolsLoaded
    android.view.ViewGroup getOptionsPanelContainer() -> getOptionsPanelContainer
    com.aviary.android.feather.widget.AviaryBottomBarViewFlipper getBottomBar() -> getBottomBar
    it.sephiroth.android.library.imagezoom.ImageViewTouch getMainImage() -> getMainImage
    android.view.ViewGroup getDrawingImageContainer() -> getDrawingImageContainer
    android.view.ViewGroup activatePopupContainer() -> activatePopupContainer
    void deactivatePopupContainer() -> deactivatePopupContainer
    void onRestoreClick() -> onRestoreClick
    void onDoneClick() -> onDoneClick
    void exitWithNoModifications() -> exitWithNoModifications
    void onApplyClick() -> onApplyClick
    void loadExif() -> loadExif
    void computeOriginalFilePath() -> computeOriginalFilePath
    void onDownloadComplete(android.graphics.Bitmap,com.aviary.android.feather.library.utils.ImageSizes) -> onDownloadComplete
    void onDownloadError(java.lang.String) -> onDownloadError
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void hideProgressLoader() -> hideProgressLoader
    void onDownloadStart() -> onDownloadStart
    void onPreviewChange(android.graphics.Bitmap,boolean) -> onPreviewChange
    void onInvalidateBitmap() -> onInvalidateBitmap
    void onBitmapChange(android.graphics.Bitmap,boolean,android.graphics.Matrix) -> onBitmapChange
    void performSave(android.graphics.Bitmap,boolean) -> performSave
    void doSave(android.graphics.Bitmap,boolean) -> doSave
    void saveExif(android.net.Uri) -> saveExif
    void saveExif(java.lang.String) -> saveExif
    void onSaveCustomTags(it.sephiroth.android.library.media.ExifInterfaceExtended) -> onSaveCustomTags
    void onToolCompleted() -> onToolCompleted
    void showToolProgress() -> showToolProgress
    void hideToolProgress() -> hideToolProgress
    void showModalProgress() -> showModalProgress
    void hideModalProgress() -> hideModalProgress
    android.os.Handler getUIHandler() -> getUIHandler
    void onStart() -> onStart
    void onStop() -> onStop
    void onRestart() -> onRestart
    void onResume() -> onResume
    void onPause() -> onPause
    boolean isActive() -> isActive
    void onImageSize(java.lang.String,java.lang.String,java.lang.String) -> onImageSize
    com.aviary.android.feather.AviaryMainController getMainController() -> getMainController
    void onItemClick(it.sephiroth.android.library.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onRestoreBegin() -> onRestoreBegin
    void onRestoreChanged() -> onRestoreChanged
    void onRestoreEnd() -> onRestoreEnd
    it.sephiroth.android.library.imagezoom.ImageViewTouchBase getMainImage() -> getMainImage
    it.sephiroth.android.library.widget.HListView access$1(com.aviary.android.feather.FeatherActivity) -> access$1
    void access$2(com.aviary.android.feather.FeatherActivity) -> access$2
    java.util.List access$3(com.aviary.android.feather.FeatherActivity) -> access$3
    android.view.View access$4(com.aviary.android.feather.FeatherActivity) -> access$4
    com.aviary.android.feather.widget.AviaryImageRestoreSwitcher access$5(com.aviary.android.feather.FeatherActivity) -> access$5
com.aviary.android.feather.FeatherActivity$1 -> com.aviary.android.feather.FeatherActivity$1:
    com.aviary.android.feather.FeatherActivity this$0 -> this$0
    boolean handleMessage(android.os.Message) -> handleMessage
com.aviary.android.feather.FeatherActivity$10 -> com.aviary.android.feather.FeatherActivity$10:
    com.aviary.android.feather.FeatherActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.aviary.android.feather.FeatherActivity$11 -> com.aviary.android.feather.FeatherActivity$11:
    com.aviary.android.feather.FeatherActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.aviary.android.feather.FeatherActivity$12 -> com.aviary.android.feather.FeatherActivity$12:
    com.aviary.android.feather.FeatherActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.aviary.android.feather.FeatherActivity$13 -> com.aviary.android.feather.FeatherActivity$13:
    com.aviary.android.feather.FeatherActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.aviary.android.feather.FeatherActivity$14 -> com.aviary.android.feather.FeatherActivity$14:
    com.aviary.android.feather.FeatherActivity this$0 -> this$0
    void run() -> run
    com.aviary.android.feather.FeatherActivity access$0(com.aviary.android.feather.FeatherActivity$14) -> access$0
com.aviary.android.feather.FeatherActivity$14$1 -> com.aviary.android.feather.FeatherActivity$14$1:
    com.aviary.android.feather.FeatherActivity$14 this$1 -> this$1
    java.util.List val$listEntries -> val$listEntries
    java.util.List val$permissions -> val$permissions
    void run() -> run
com.aviary.android.feather.FeatherActivity$15 -> com.aviary.android.feather.FeatherActivity$15:
    com.aviary.android.feather.FeatherActivity this$0 -> this$0
    com.aviary.android.feather.library.services.LocalDataService val$data -> val$data
    void onFutureDone(com.aviary.android.feather.common.threading.Future) -> onFutureDone
com.aviary.android.feather.FeatherActivity$16 -> com.aviary.android.feather.FeatherActivity$16:
    com.aviary.android.feather.FeatherActivity this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.aviary.android.feather.FeatherActivity$17 -> com.aviary.android.feather.FeatherActivity$17:
    com.aviary.android.feather.FeatherActivity this$0 -> this$0
    android.graphics.Bitmap val$bitmap -> val$bitmap
    boolean val$changed -> val$changed
    void run() -> run
com.aviary.android.feather.FeatherActivity$18 -> com.aviary.android.feather.FeatherActivity$18:
    com.aviary.android.feather.FeatherActivity this$0 -> this$0
    android.graphics.Bitmap val$b -> val$b
    void run() -> run
com.aviary.android.feather.FeatherActivity$19 -> com.aviary.android.feather.FeatherActivity$19:
    com.aviary.android.feather.FeatherActivity this$0 -> this$0
    java.lang.Object val$tag -> val$tag
    void run() -> run
com.aviary.android.feather.FeatherActivity$2 -> com.aviary.android.feather.FeatherActivity$2:
    com.aviary.android.feather.FeatherActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.aviary.android.feather.FeatherActivity$3 -> com.aviary.android.feather.FeatherActivity$3:
    com.aviary.android.feather.FeatherActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.aviary.android.feather.FeatherActivity$4 -> com.aviary.android.feather.FeatherActivity$4:
    com.aviary.android.feather.FeatherActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.aviary.android.feather.FeatherActivity$5 -> com.aviary.android.feather.FeatherActivity$5:
    com.aviary.android.feather.FeatherActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.aviary.android.feather.FeatherActivity$6 -> com.aviary.android.feather.FeatherActivity$6:
    com.aviary.android.feather.FeatherActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.aviary.android.feather.FeatherActivity$7 -> com.aviary.android.feather.FeatherActivity$7:
    com.aviary.android.feather.FeatherActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.aviary.android.feather.FeatherActivity$8 -> com.aviary.android.feather.FeatherActivity$8:
    com.aviary.android.feather.FeatherActivity this$0 -> this$0
    android.view.View$OnClickListener val$button1Listener -> val$button1Listener
    android.app.Dialog val$dialog -> val$dialog
    void onClick(android.view.View) -> onClick
com.aviary.android.feather.FeatherActivity$9 -> com.aviary.android.feather.FeatherActivity$9:
    com.aviary.android.feather.FeatherActivity this$0 -> this$0
    android.app.Dialog val$dialog -> val$dialog
    void onClick(android.view.View) -> onClick
com.aviary.android.feather.FeatherActivity$ListAdapter -> com.aviary.android.feather.FeatherActivity$ListAdapter:
    int TYPE_TOOL -> TYPE_TOOL
    int TYPE_FEDDBACK -> TYPE_FEDDBACK
    java.lang.Object mLock -> mLock
    android.view.LayoutInflater mInflater -> mInflater
    java.util.List mObjects -> mObjects
    int mViewWidth -> mViewWidth
    int mToolViewWidth -> mToolViewWidth
    boolean mWhiteLabel -> mWhiteLabel
    com.aviary.android.feather.FeatherActivity this$0 -> this$0
    int getViewTypeCount() -> getViewTypeCount
    int getItemViewType(int) -> getItemViewType
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.aviary.android.feather.library.content.ToolEntry getItem(int) -> getItem
    int getCount() -> getCount
    long getItemId(int) -> getItemId
    java.lang.Object getItem(int) -> getItem
com.aviary.android.feather.R -> com.aviary.android.feather.R:
com.aviary.android.feather.R$anim -> com.aviary.android.feather.R$anim:
    int aviary_bottobar_in_animation -> aviary_bottobar_in_animation
    int aviary_bottobar_out_animation -> aviary_bottobar_out_animation
    int aviary_fadein_layout_animation -> aviary_fadein_layout_animation
    int aviary_iap_close_animation -> aviary_iap_close_animation
    int aviary_iap_layout_animation -> aviary_iap_layout_animation
    int aviary_push_up_in -> aviary_push_up_in
    int aviary_push_up_out -> aviary_push_up_out
    int aviary_slide_in_left -> aviary_slide_in_left
    int aviary_slide_in_right -> aviary_slide_in_right
    int aviary_slide_in_top -> aviary_slide_in_top
    int aviary_slide_out_bottom -> aviary_slide_out_bottom
    int aviary_slide_out_left -> aviary_slide_out_left
    int aviary_slide_out_right -> aviary_slide_out_right
    int aviary_toast_exit -> aviary_toast_exit
com.aviary.android.feather.R$array -> com.aviary.android.feather.R$array:
    int aviary_crop_labels -> aviary_crop_labels
    int aviary_crop_values -> aviary_crop_values
    int aviary_draw_brush_sizes -> aviary_draw_brush_sizes
    int aviary_draw_fill_colors -> aviary_draw_fill_colors
    int aviary_spot_brush_sizes -> aviary_spot_brush_sizes
    int aviary_text_fill_colors -> aviary_text_fill_colors
    int borders_list -> borders_list
com.aviary.android.feather.R$attr -> com.aviary.android.feather.R$attr:
    int aviaryAdjustDividerWeight -> aviaryAdjustDividerWeight
    int aviaryAdjustImageViewStyle -> aviaryAdjustImageViewStyle
    int aviaryAdjustItemWeight -> aviaryAdjustItemWeight
    int aviaryAdjustOptionPanelToggleButtonStyle -> aviaryAdjustOptionPanelToggleButtonStyle
    int aviaryAdjustOptionPanelToggleCenterButtonStyle -> aviaryAdjustOptionPanelToggleCenterButtonStyle
    int aviaryAdjustOptionPanelToggleLeftButtonStyle -> aviaryAdjustOptionPanelToggleLeftButtonStyle
    int aviaryAdjustOptionPanelToggleRightButtonStyle -> aviaryAdjustOptionPanelToggleRightButtonStyle
    int aviaryBackgroundColor -> aviaryBackgroundColor
    int aviaryBottomBarHeight -> aviaryBottomBarHeight
    int aviaryBottomBarHorizontalViewStyle -> aviaryBottomBarHorizontalViewStyle
    int aviaryBottomBarLogoContainerStyle -> aviaryBottomBarLogoContainerStyle
    int aviaryBottomBarLogoImageStyle -> aviaryBottomBarLogoImageStyle
    int aviaryBottomBarOptionPanelContainerStyle -> aviaryBottomBarOptionPanelContainerStyle
    int aviaryBottomBarOptionPanelContainerStyleNoMargin -> aviaryBottomBarOptionPanelContainerStyleNoMargin
    int aviaryBottomBarOptionPanelStyle -> aviaryBottomBarOptionPanelStyle
    int aviaryBottomBarToolFeedBackStyle -> aviaryBottomBarToolFeedBackStyle
    int aviaryBottomBarToolImageStyle -> aviaryBottomBarToolImageStyle
    int aviaryBottomBarToolStyle -> aviaryBottomBarToolStyle
    int aviaryBottomBarToolTextStyle -> aviaryBottomBarToolTextStyle
    int aviaryBottomBarViewFlipperStyle -> aviaryBottomBarViewFlipperStyle
    int aviaryColorSplashOptionPanelToggleButtonStyle -> aviaryColorSplashOptionPanelToggleButtonStyle
    int aviaryColorSplashOptionPanelToggleLeftButtonStyle -> aviaryColorSplashOptionPanelToggleLeftButtonStyle
    int aviaryColorSplashOptionPanelToggleRightButtonStyle -> aviaryColorSplashOptionPanelToggleRightButtonStyle
    int aviaryCropHighlightStyle -> aviaryCropHighlightStyle
    int aviaryCropImageViewStyle -> aviaryCropImageViewStyle
    int aviaryCrosshair_enabled -> aviaryCrosshair_enabled
    int aviaryCustomDialogButtonSecondaryStyle -> aviaryCustomDialogButtonSecondaryStyle
    int aviaryCustomDialogButtonStyle -> aviaryCustomDialogButtonStyle
    int aviaryDefaultTextStyle -> aviaryDefaultTextStyle
    int aviaryEdgeEffectDefaultStyle -> aviaryEdgeEffectDefaultStyle
    int aviaryEffectThumbDividerLeftContainerStyle -> aviaryEffectThumbDividerLeftContainerStyle
    int aviaryEffectThumbDividerLeftStyle -> aviaryEffectThumbDividerLeftStyle
    int aviaryEffectThumbDividerRightContainerStyle -> aviaryEffectThumbDividerRightContainerStyle
    int aviaryEffectThumbDividerRightStyle -> aviaryEffectThumbDividerRightStyle
    int aviaryEffectThumbDividerStyle -> aviaryEffectThumbDividerStyle
    int aviaryEffectThumbDividerTextStyle -> aviaryEffectThumbDividerTextStyle
    int aviaryEffectThumbHiddenSelector -> aviaryEffectThumbHiddenSelector
    int aviaryEffectThumbLayoutExternalStyle -> aviaryEffectThumbLayoutExternalStyle
    int aviaryEffectThumbLayoutStyle -> aviaryEffectThumbLayoutStyle
    int aviaryEffectThumbTextStyle -> aviaryEffectThumbTextStyle
    int aviaryEffectsHorizontalViewStyle -> aviaryEffectsHorizontalViewStyle
    int aviaryEnhanceItemWeight -> aviaryEnhanceItemWeight
    int aviaryEnhanceOptionPanelToggleCenterButtonStyle -> aviaryEnhanceOptionPanelToggleCenterButtonStyle
    int aviaryEnhanceOptionPanelToggleLeftButtonStyle -> aviaryEnhanceOptionPanelToggleLeftButtonStyle
    int aviaryEnhanceOptionPanelToggleRightButtonStyle -> aviaryEnhanceOptionPanelToggleRightButtonStyle
    int aviaryFeedbackDialogDividerStyle -> aviaryFeedbackDialogDividerStyle
    int aviaryFeedbackDialogStyle -> aviaryFeedbackDialogStyle
    int aviaryFeedbackDialogTextMessageStyle -> aviaryFeedbackDialogTextMessageStyle
    int aviaryFeedbackDialogTextVersionStyle -> aviaryFeedbackDialogTextVersionStyle
    int aviaryFocusOptionPanelToggleLeftButtonStyle -> aviaryFocusOptionPanelToggleLeftButtonStyle
    int aviaryFocusOptionPanelToggleRightButtonStyle -> aviaryFocusOptionPanelToggleRightButtonStyle
    int aviaryFontLight -> aviaryFontLight
    int aviaryFontRegular -> aviaryFontRegular
    int aviaryGalleryBottomIndicatorStyle -> aviaryGalleryBottomIndicatorStyle
    int aviaryGalleryItemContainerStyle -> aviaryGalleryItemContainerStyle
    int aviaryGalleryItemCropImageViewStyle -> aviaryGalleryItemCropImageViewStyle
    int aviaryGalleryItemCropTextCustomStyle -> aviaryGalleryItemCropTextCustomStyle
    int aviaryGalleryItemCropTextNormalStyle -> aviaryGalleryItemCropTextNormalStyle
    int aviaryGalleryItemDividerStyle -> aviaryGalleryItemDividerStyle
    int aviaryGalleryItemHighlightImageStyle -> aviaryGalleryItemHighlightImageStyle
    int aviaryGalleryStyle -> aviaryGalleryStyle
    int aviaryGalleryTopIndicatorStyle -> aviaryGalleryTopIndicatorStyle
    int aviaryHiddenEditTextStyle -> aviaryHiddenEditTextStyle
    int aviaryHiddenEditTextStyleMultiline -> aviaryHiddenEditTextStyleMultiline
    int aviaryHighlightImageButtonStyle -> aviaryHighlightImageButtonStyle
    int aviaryIAPBannerTextStyle -> aviaryIAPBannerTextStyle
    int aviaryIAPDialogButtonErrorStyle -> aviaryIAPDialogButtonErrorStyle
    int aviaryIAPDialogContainerStyle -> aviaryIAPDialogContainerStyle
    int aviaryIAPDialogDownloadButtonStyle -> aviaryIAPDialogDownloadButtonStyle
    int aviaryIAPDialogDownloadButtonTextStyle -> aviaryIAPDialogDownloadButtonTextStyle
    int aviaryIAPDialogGridBackground -> aviaryIAPDialogGridBackground
    int aviaryIAPDialogGridTopStyle -> aviaryIAPDialogGridTopStyle
    int aviaryIAPDialogHeightWeight -> aviaryIAPDialogHeightWeight
    int aviaryIAPDialogIcon -> aviaryIAPDialogIcon
    int aviaryIAPDialogListItemTextStyle -> aviaryIAPDialogListItemTextStyle
    int aviaryIAPDialogListItemTitleStyle -> aviaryIAPDialogListItemTitleStyle
    int aviaryIAPDialogMainLayout -> aviaryIAPDialogMainLayout
    int aviaryIAPDialogMarginTopWeight -> aviaryIAPDialogMarginTopWeight
    int aviaryIAPDialogRestoreAllButtonStyle -> aviaryIAPDialogRestoreAllButtonStyle
    int aviaryIAPDialogRestoreDialogTextStyle -> aviaryIAPDialogRestoreDialogTextStyle
    int aviaryIAPDialogShadowBottom -> aviaryIAPDialogShadowBottom
    int aviaryIAPDialogShadowTop -> aviaryIAPDialogShadowTop
    int aviaryIAPDialogTextErrorStyle -> aviaryIAPDialogTextErrorStyle
    int aviaryIAPDialogTextStyle -> aviaryIAPDialogTextStyle
    int aviaryIAPDialogTitleStyle -> aviaryIAPDialogTitleStyle
    int aviaryIAPDialogWidthWeight -> aviaryIAPDialogWidthWeight
    int aviaryIAPDialogWorkspaceCellEffects -> aviaryIAPDialogWorkspaceCellEffects
    int aviaryIAPDialogWorkspaceCellStickers -> aviaryIAPDialogWorkspaceCellStickers
    int aviaryIAPDialogWorkspaceIndicatorStyle -> aviaryIAPDialogWorkspaceIndicatorStyle
    int aviaryIAPDialogWorkspaceStyle -> aviaryIAPDialogWorkspaceStyle
    int aviaryImageRestoreViewStyle -> aviaryImageRestoreViewStyle
    int aviaryImageViewDrawableOverlaySticker -> aviaryImageViewDrawableOverlaySticker
    int aviaryImageViewDrawableOverlayStickerHighlightStyle -> aviaryImageViewDrawableOverlayStickerHighlightStyle
    int aviaryImageViewDrawableOverlayText -> aviaryImageViewDrawableOverlayText
    int aviaryImageViewDrawableOverlayTextHighlightStyle -> aviaryImageViewDrawableOverlayTextHighlightStyle
    int aviaryLensViewStyle -> aviaryLensViewStyle
    int aviaryLightGrayButtonStyle -> aviaryLightGrayButtonStyle
    int aviaryLoaderToastStyle -> aviaryLoaderToastStyle
    int aviaryMainImagePadding -> aviaryMainImagePadding
    int aviaryMemeButtonStyle -> aviaryMemeButtonStyle
    int aviaryMemeClearButtonStyle -> aviaryMemeClearButtonStyle
    int aviaryNavBarHeight -> aviaryNavBarHeight
    int aviaryNavBarRestoreButtonStyle -> aviaryNavBarRestoreButtonStyle
    int aviaryNavBarStyle -> aviaryNavBarStyle
    int aviaryNavButtonApplyStyle -> aviaryNavButtonApplyStyle
    int aviaryNavButtonStyle -> aviaryNavButtonStyle
    int aviaryNavDividerStyle -> aviaryNavDividerStyle
    int aviaryNavTitleStyle -> aviaryNavTitleStyle
    int aviaryOptionPanelBottomIndicatorStyle -> aviaryOptionPanelBottomIndicatorStyle
    int aviaryOptionPanelBottomLineStyle -> aviaryOptionPanelBottomLineStyle
    int aviaryOptionPanelDefaultButtonStyle -> aviaryOptionPanelDefaultButtonStyle
    int aviaryOptionPanelToggleButtonStyle -> aviaryOptionPanelToggleButtonStyle
    int aviaryOptionPanelToggleCenterButtonStyle -> aviaryOptionPanelToggleCenterButtonStyle
    int aviaryOptionPanelToggleLeftButtonStyle -> aviaryOptionPanelToggleLeftButtonStyle
    int aviaryOptionPanelToggleRightButtonStyle -> aviaryOptionPanelToggleRightButtonStyle
    int aviaryOptionPanelTopIndicatorStyle -> aviaryOptionPanelTopIndicatorStyle
    int aviaryPanelDisabledStatusBackground -> aviaryPanelDisabledStatusBackground
    int aviaryPreviewFillDrawableStyle -> aviaryPreviewFillDrawableStyle
    int aviaryPreviewSpotDrawableStyle -> aviaryPreviewSpotDrawableStyle
    int aviaryPreviewSpotViewStyle -> aviaryPreviewSpotViewStyle
    int aviaryPrimaryButtonStyle -> aviaryPrimaryButtonStyle
    int aviaryProgressBarActionBar -> aviaryProgressBarActionBar
    int aviaryProgressBarActionBarHeight -> aviaryProgressBarActionBarHeight
    int aviaryProgressBarActionBarWidth -> aviaryProgressBarActionBarWidth
    int aviaryProgressBarLarge -> aviaryProgressBarLarge
    int aviaryProgressBarLargeInverse -> aviaryProgressBarLargeInverse
    int aviaryProgressBarMedium -> aviaryProgressBarMedium
    int aviaryProgressBarMediumInverse -> aviaryProgressBarMediumInverse
    int aviaryProgressBarSmall -> aviaryProgressBarSmall
    int aviaryProgressBarSmallInverse -> aviaryProgressBarSmallInverse
    int aviarySecondaryButtonStyle -> aviarySecondaryButtonStyle
    int aviarySeekBarSecondary -> aviarySeekBarSecondary
    int aviarySeekBarSecondaryCenter -> aviarySeekBarSecondaryCenter
    int aviarySeekBarSecondaryInverted -> aviarySeekBarSecondaryInverted
    int aviarySeekBarStyle -> aviarySeekBarStyle
    int aviarySeekBarThumb -> aviarySeekBarThumb
    int aviarySeekBarThumbOffset -> aviarySeekBarThumbOffset
    int aviarySplashDividerWeight -> aviarySplashDividerWeight
    int aviarySplashItemWeight -> aviarySplashItemWeight
    int aviarySymbolMinusStyle -> aviarySymbolMinusStyle
    int aviarySymbolPlusStyle -> aviarySymbolPlusStyle
    int aviaryTextAppearance -> aviaryTextAppearance
    int aviaryTextAppearanceInverted -> aviaryTextAppearanceInverted
    int aviaryTextAppearanceLarge -> aviaryTextAppearanceLarge
    int aviaryTextAppearanceLargeInverted -> aviaryTextAppearanceLargeInverted
    int aviaryTextAppearanceLargeNoSelection -> aviaryTextAppearanceLargeNoSelection
    int aviaryTextAppearanceMedium -> aviaryTextAppearanceMedium
    int aviaryTextAppearanceMediumInverted -> aviaryTextAppearanceMediumInverted
    int aviaryTextAppearanceMediumNoSelection -> aviaryTextAppearanceMediumNoSelection
    int aviaryTextAppearanceSmall -> aviaryTextAppearanceSmall
    int aviaryTextAppearanceSmallInverted -> aviaryTextAppearanceSmallInverted
    int aviaryTextAppearanceSmallNoSelection -> aviaryTextAppearanceSmallNoSelection
    int aviaryTiltShiftViewStyle -> aviaryTiltShiftViewStyle
    int aviaryToastExitAnimation -> aviaryToastExitAnimation
    int aviaryToggleButtonStyle -> aviaryToggleButtonStyle
    int aviaryWave_animationDuration -> aviaryWave_animationDuration
    int aviaryWave_innerRadius -> aviaryWave_innerRadius
    int aviaryWave_outerRadius -> aviaryWave_outerRadius
    int aviaryWave_pointDrawable -> aviaryWave_pointDrawable
    int aviaryWheelIndicator -> aviaryWheelIndicator
    int aviaryWheelLine -> aviaryWheelLine
    int aviaryWheelShadowTop -> aviaryWheelShadowTop
    int aviaryWheelStyle -> aviaryWheelStyle
    int aviary_animationDuration -> aviary_animationDuration
    int aviary_animationDuration2 -> aviary_animationDuration2
    int aviary_bg_color1 -> aviary_bg_color1
    int aviary_bg_color2 -> aviary_bg_color2
    int aviary_blendMode -> aviary_blendMode
    int aviary_cellBottomPadding -> aviary_cellBottomPadding
    int aviary_cellEndPadding -> aviary_cellEndPadding
    int aviary_cellStartPadding -> aviary_cellStartPadding
    int aviary_cellTopPadding -> aviary_cellTopPadding
    int aviary_cells -> aviary_cells
    int aviary_checked -> aviary_checked
    int aviary_color1 -> aviary_color1
    int aviary_color2 -> aviary_color2
    int aviary_color3 -> aviary_color3
    int aviary_color4 -> aviary_color4
    int aviary_crosshair_edge -> aviary_crosshair_edge
    int aviary_crosshair_radius -> aviary_crosshair_radius
    int aviary_crosshair_strokeWidth -> aviary_crosshair_strokeWidth
    int aviary_defaultScreen -> aviary_defaultScreen
    int aviary_deleteDrawable -> aviary_deleteDrawable
    int aviary_direction -> aviary_direction
    int aviary_drawableStyle -> aviary_drawableStyle
    int aviary_edgeColor -> aviary_edgeColor
    int aviary_edgeDrawable -> aviary_edgeDrawable
    int aviary_edgeStyle -> aviary_edgeStyle
    int aviary_enable3d -> aviary_enable3d
    int aviary_freeRotate -> aviary_freeRotate
    int aviary_glowDrawable -> aviary_glowDrawable
    int aviary_glowMode -> aviary_glowMode
    int aviary_glowSize -> aviary_glowSize
    int aviary_handle -> aviary_handle
    int aviary_highlightColorChecked -> aviary_highlightColorChecked
    int aviary_highlightColorPressed -> aviary_highlightColorPressed
    int aviary_highlightColorSelected -> aviary_highlightColorSelected
    int aviary_highlightMode -> aviary_highlightMode
    int aviary_highlightStyle -> aviary_highlightStyle
    int aviary_horizontalPadding -> aviary_horizontalPadding
    int aviary_indicatorId -> aviary_indicatorId
    int aviary_indicatorSize -> aviary_indicatorSize
    int aviary_layout_direction -> aviary_layout_direction
    int aviary_minCropSize -> aviary_minCropSize
    int aviary_minSize -> aviary_minSize
    int aviary_moveEnabled -> aviary_moveEnabled
    int aviary_offsety -> aviary_offsety
    int aviary_orientation -> aviary_orientation
    int aviary_overscroll -> aviary_overscroll
    int aviary_radius -> aviary_radius
    int aviary_resizeEdgeMode -> aviary_resizeEdgeMode
    int aviary_resizeEnabled -> aviary_resizeEnabled
    int aviary_restoreTimeout -> aviary_restoreTimeout
    int aviary_rotateDrawable -> aviary_rotateDrawable
    int aviary_rotateEnabled -> aviary_rotateEnabled
    int aviary_rows -> aviary_rows
    int aviary_shape_defaultsize -> aviary_shape_defaultsize
    int aviary_shape_maxsize -> aviary_shape_maxsize
    int aviary_shape_minsize -> aviary_shape_minsize
    int aviary_strokeColor -> aviary_strokeColor
    int aviary_strokeColor2 -> aviary_strokeColor2
    int aviary_strokeColor3 -> aviary_strokeColor3
    int aviary_strokeColor4 -> aviary_strokeColor4
    int aviary_strokeWidth -> aviary_strokeWidth
    int aviary_strokeWidth2 -> aviary_strokeWidth2
    int aviary_textPerc -> aviary_textPerc
    int aviary_timeout -> aviary_timeout
    int aviary_toggleable -> aviary_toggleable
    int aviary_typeface -> aviary_typeface
    int aviary_untoggleable -> aviary_untoggleable
    int aviary_verticalPadding -> aviary_verticalPadding
    int dividerWidth -> dividerWidth
    int footerDividersEnabled -> footerDividersEnabled
    int headerDividersEnabled -> headerDividersEnabled
    int measureWithChild -> measureWithChild
    int overScrollFooter -> overScrollFooter
    int overScrollHeader -> overScrollHeader
    int sephiroth_absHListViewStyle -> sephiroth_absHListViewStyle
    int sephiroth_listPreferredItemWidth -> sephiroth_listPreferredItemWidth
    int sephiroth_listViewStyle -> sephiroth_listViewStyle
    int stackFromRight -> stackFromRight
    int transcriptMode -> transcriptMode
com.aviary.android.feather.R$color -> com.aviary.android.feather.R$color:
    int aviary_adjust_fill_color -> aviary_adjust_fill_color
    int aviary_adjust_internal_stroke_color -> aviary_adjust_internal_stroke_color
    int aviary_adjust_stroke_color -> aviary_adjust_stroke_color
    int aviary_background_color -> aviary_background_color
    int aviary_bottom_primary_color_inverse_dark -> aviary_bottom_primary_color_inverse_dark
    int aviary_bottom_primary_color_inverse_light -> aviary_bottom_primary_color_inverse_light
    int aviary_circle_background_normal -> aviary_circle_background_normal
    int aviary_circle_background_selected -> aviary_circle_background_selected
    int aviary_circle_dark -> aviary_circle_dark
    int aviary_circle_light -> aviary_circle_light
    int aviary_circle_selected_dark -> aviary_circle_selected_dark
    int aviary_circle_selected_light -> aviary_circle_selected_light
    int aviary_crop_fill_color -> aviary_crop_fill_color
    int aviary_crop_fill_color_pressed -> aviary_crop_fill_color_pressed
    int aviary_crop_stroke_color -> aviary_crop_stroke_color
    int aviary_crop_stroke_color_pressed -> aviary_crop_stroke_color_pressed
    int aviary_crop_stroke_internal_color -> aviary_crop_stroke_internal_color
    int aviary_crop_stroke_internal_color_pressed -> aviary_crop_stroke_internal_color_pressed
    int aviary_effect_thumb_stroke_color -> aviary_effect_thumb_stroke_color
    int aviary_gallery_item_background_color2 -> aviary_gallery_item_background_color2
    int aviary_highlighted_text_light -> aviary_highlighted_text_light
    int aviary_highlighted_text_light_inverted -> aviary_highlighted_text_light_inverted
    int aviary_hint_foreground_light -> aviary_hint_foreground_light
    int aviary_hint_foreground_light_inverted -> aviary_hint_foreground_light_inverted
    int aviary_iap_background -> aviary_iap_background
    int aviary_iap_buy_button_text_color -> aviary_iap_buy_button_text_color
    int aviary_iap_cell_layout_background -> aviary_iap_cell_layout_background
    int aviary_iap_link_color_normal -> aviary_iap_link_color_normal
    int aviary_iap_link_color_pressed -> aviary_iap_link_color_pressed
    int aviary_iap_link_color_selected -> aviary_iap_link_color_selected
    int aviary_iap_link_text_color -> aviary_iap_link_text_color
    int aviary_iap_list_divider -> aviary_iap_list_divider
    int aviary_iap_restore_all_button_color -> aviary_iap_restore_all_button_color
    int aviary_iap_workspace_background -> aviary_iap_workspace_background
    int aviary_link_text_light -> aviary_link_text_light
    int aviary_link_text_light_inverted -> aviary_link_text_light_inverted
    int aviary_logo_primary_color -> aviary_logo_primary_color
    int aviary_logo_secondary_color -> aviary_logo_secondary_color
    int aviary_main_loader_background -> aviary_main_loader_background
    int aviary_meme_stroke_color -> aviary_meme_stroke_color
    int aviary_meme_text_color -> aviary_meme_text_color
    int aviary_nav_divider_dark -> aviary_nav_divider_dark
    int aviary_nav_divider_light -> aviary_nav_divider_light
    int aviary_nav_primary_color -> aviary_nav_primary_color
    int aviary_nav_secondary_color -> aviary_nav_secondary_color
    int aviary_panel_disabled_status -> aviary_panel_disabled_status
    int aviary_primary_color -> aviary_primary_color
    int aviary_primary_color_disabled_inverted -> aviary_primary_color_disabled_inverted
    int aviary_primary_color_inverted -> aviary_primary_color_inverted
    int aviary_primary_color_pressed -> aviary_primary_color_pressed
    int aviary_primary_color_pressed_inverted -> aviary_primary_color_pressed_inverted
    int aviary_primary_highlight_color -> aviary_primary_highlight_color
    int aviary_primary_highlight_color_inverted -> aviary_primary_highlight_color_inverted
    int aviary_primary_highlight_color_muted -> aviary_primary_highlight_color_muted
    int aviary_text_highlight_background_inner_pressed -> aviary_text_highlight_background_inner_pressed
    int aviary_text_highlight_background_normal -> aviary_text_highlight_background_normal
    int aviary_tool_text_color -> aviary_tool_text_color
    int aviary_tool_text_color_inverted -> aviary_tool_text_color_inverted
    int aviary_tool_text_color_no_selected -> aviary_tool_text_color_no_selected
    int aviary_workspace_indicator_normal_endColor -> aviary_workspace_indicator_normal_endColor
    int aviary_workspace_indicator_normal_startColor -> aviary_workspace_indicator_normal_startColor
    int aviary_workspace_indicator_selected_endColor -> aviary_workspace_indicator_selected_endColor
    int aviary_workspace_indicator_selected_startColor -> aviary_workspace_indicator_selected_startColor
com.aviary.android.feather.R$dimen -> com.aviary.android.feather.R$dimen:
    int aviary_adjust_button_padding_left -> aviary_adjust_button_padding_left
    int aviary_adjust_button_padding_right -> aviary_adjust_button_padding_right
    int aviary_adjust_strokeWidth -> aviary_adjust_strokeWidth
    int aviary_adjust_strokeWidth2 -> aviary_adjust_strokeWidth2
    int aviary_bottombar_height -> aviary_bottombar_height
    int aviary_color_splash_brush_size -> aviary_color_splash_brush_size
    int aviary_color_splash_button_padding_left -> aviary_color_splash_button_padding_left
    int aviary_color_splash_button_padding_right -> aviary_color_splash_button_padding_right
    int aviary_crop_min_size -> aviary_crop_min_size
    int aviary_crop_stroke_internal_width -> aviary_crop_stroke_internal_width
    int aviary_crop_stroke_width -> aviary_crop_stroke_width
    int aviary_effect_thumb_margin_bottom -> aviary_effect_thumb_margin_bottom
    int aviary_effect_thumb_padding -> aviary_effect_thumb_padding
    int aviary_effect_thumb_radius -> aviary_effect_thumb_radius
    int aviary_effect_thumb_stroke -> aviary_effect_thumb_stroke
    int aviary_enhance_button_padding_left -> aviary_enhance_button_padding_left
    int aviary_enhance_button_padding_right -> aviary_enhance_button_padding_right
    int aviary_focus_button_padding_left -> aviary_focus_button_padding_left
    int aviary_focus_button_padding_right -> aviary_focus_button_padding_right
    int aviary_frame_item_image_width -> aviary_frame_item_image_width
    int aviary_frame_item_width -> aviary_frame_item_width
    int aviary_gallery_bottom_indicator_height -> aviary_gallery_bottom_indicator_height
    int aviary_gallery_item_width -> aviary_gallery_item_width
    int aviary_gallery_margin_bottom -> aviary_gallery_margin_bottom
    int aviary_gallery_margin_top -> aviary_gallery_margin_top
    int aviary_gallery_mid_indicator_height -> aviary_gallery_mid_indicator_height
    int aviary_gallery_top_indicator_height -> aviary_gallery_top_indicator_height
    int aviary_iap_buy_button_width -> aviary_iap_buy_button_width
    int aviary_iap_detail_icon_maxsize -> aviary_iap_detail_icon_maxsize
    int aviary_iap_list_divider_height -> aviary_iap_list_divider_height
    int aviary_iap_list_item_image_size -> aviary_iap_list_item_image_size
    int aviary_iap_list_item_padding_bottom -> aviary_iap_list_item_padding_bottom
    int aviary_iap_list_item_padding_left -> aviary_iap_list_item_padding_left
    int aviary_iap_list_item_padding_right -> aviary_iap_list_item_padding_right
    int aviary_iap_list_item_padding_top -> aviary_iap_list_item_padding_top
    int aviary_main_image_padding -> aviary_main_image_padding
    int aviary_main_loader_padding -> aviary_main_loader_padding
    int aviary_main_loader_radius -> aviary_main_loader_radius
    int aviary_nav_divider -> aviary_nav_divider
    int aviary_nav_divider_double -> aviary_nav_divider_double
    int aviary_nav_height -> aviary_nav_height
    int aviary_navbar_height -> aviary_navbar_height
    int aviary_navbar_progress_height -> aviary_navbar_progress_height
    int aviary_navbar_progress_width -> aviary_navbar_progress_width
    int aviary_optionpanel_button_padding_bottom -> aviary_optionpanel_button_padding_bottom
    int aviary_optionpanel_button_padding_left -> aviary_optionpanel_button_padding_left
    int aviary_optionpanel_button_padding_right -> aviary_optionpanel_button_padding_right
    int aviary_optionpanel_button_padding_top -> aviary_optionpanel_button_padding_top
    int aviary_spot_toast_height -> aviary_spot_toast_height
    int aviary_spot_toast_width -> aviary_spot_toast_width
    int aviary_sticker_overlay_min_size -> aviary_sticker_overlay_min_size
    int aviary_sticker_overlay_padding -> aviary_sticker_overlay_padding
    int aviary_sticker_pack_image_width -> aviary_sticker_pack_image_width
    int aviary_sticker_pack_width -> aviary_sticker_pack_width
    int aviary_sticker_single_item_image_width -> aviary_sticker_single_item_image_width
    int aviary_sticker_single_item_width -> aviary_sticker_single_item_width
    int aviary_textSizeIAPTitle -> aviary_textSizeIAPTitle
    int aviary_textSizeLarge -> aviary_textSizeLarge
    int aviary_textSizeMedium -> aviary_textSizeMedium
    int aviary_textSizeSmall -> aviary_textSizeSmall
    int aviary_textSizeTools -> aviary_textSizeTools
    int aviary_text_highlight_background_inner_stroke_width -> aviary_text_highlight_background_inner_stroke_width
    int aviary_text_highlight_background_radius -> aviary_text_highlight_background_radius
    int aviary_text_highlight_background_stroke_width -> aviary_text_highlight_background_stroke_width
    int aviary_text_overlay_default_size -> aviary_text_overlay_default_size
    int aviary_text_overlay_min_size -> aviary_text_overlay_min_size
    int aviary_text_overlay_padding -> aviary_text_overlay_padding
    int aviary_tool_margin -> aviary_tool_margin
    int aviary_wheel_margin_horizontal -> aviary_wheel_margin_horizontal
com.aviary.android.feather.R$drawable -> com.aviary.android.feather.R$drawable:
    int aviary_adjust_knob -> aviary_adjust_knob
    int aviary_badge_icon -> aviary_badge_icon
    int aviary_blue_button_background -> aviary_blue_button_background
    int aviary_blue_button_background_normal -> aviary_blue_button_background_normal
    int aviary_blue_button_background_pressed -> aviary_blue_button_background_pressed
    int aviary_bottombar_hline -> aviary_bottombar_hline
    int aviary_bottombar_logo_background -> aviary_bottombar_logo_background
    int aviary_bottombar_thumb_divider_left -> aviary_bottombar_thumb_divider_left
    int aviary_bottombar_thumb_divider_right -> aviary_bottombar_thumb_divider_right
    int aviary_bottombar_thumb_external_background -> aviary_bottombar_thumb_external_background
    int aviary_bottombar_tools_background -> aviary_bottombar_tools_background
    int aviary_bottombar_vline -> aviary_bottombar_vline
    int aviary_bottombar_vline_inverted -> aviary_bottombar_vline_inverted
    int aviary_bottombar_vline_selector -> aviary_bottombar_vline_selector
    int aviary_crop_invert_indicator -> aviary_crop_invert_indicator
    int aviary_crop_invert_indicator_inverted -> aviary_crop_invert_indicator_inverted
    int aviary_crop_invert_indicator_selector -> aviary_crop_invert_indicator_selector
    int aviary_crop_invert_indicator_transparent -> aviary_crop_invert_indicator_transparent
    int aviary_delete_knob -> aviary_delete_knob
    int aviary_effect_item_getmore -> aviary_effect_item_getmore
    int aviary_effects_pack_background -> aviary_effects_pack_background
    int aviary_external_packs_download_icon -> aviary_external_packs_download_icon
    int aviary_frame_divider_background -> aviary_frame_divider_background
    int aviary_frame_item_getmore -> aviary_frame_item_getmore
    int aviary_frame_item_selected_image -> aviary_frame_item_selected_image
    int aviary_frames_pack_background -> aviary_frames_pack_background
    int aviary_gallery_default_background_selector -> aviary_gallery_default_background_selector
    int aviary_gallery_middle_divider -> aviary_gallery_middle_divider
    int aviary_gray_button_background -> aviary_gray_button_background
    int aviary_gray_button_background_normal -> aviary_gray_button_background_normal
    int aviary_gray_button_background_pressed -> aviary_gray_button_background_pressed
    int aviary_green_button_background -> aviary_green_button_background
    int aviary_green_button_background_disabled -> aviary_green_button_background_disabled
    int aviary_green_button_background_normal -> aviary_green_button_background_normal
    int aviary_green_button_background_pressed -> aviary_green_button_background_pressed
    int aviary_hidden_edittext_background -> aviary_hidden_edittext_background
    int aviary_hidden_textfield_normal -> aviary_hidden_textfield_normal
    int aviary_home_dialog_background -> aviary_home_dialog_background
    int aviary_iap_grid_background -> aviary_iap_grid_background
    int aviary_iap_grid_background_inverted -> aviary_iap_grid_background_inverted
    int aviary_iap_notification_group -> aviary_iap_notification_group
    int aviary_iap_notification_ok -> aviary_iap_notification_ok
    int aviary_iap_workspace_indicator_normal -> aviary_iap_workspace_indicator_normal
    int aviary_iap_workspace_indicator_selected -> aviary_iap_workspace_indicator_selected
    int aviary_iap_workspace_indicator_selector -> aviary_iap_workspace_indicator_selector
    int aviary_iap_workspace_shadow_bottom -> aviary_iap_workspace_shadow_bottom
    int aviary_iap_workspace_shadow_top -> aviary_iap_workspace_shadow_top
    int aviary_ic_alert_small -> aviary_ic_alert_small
    int aviary_ic_circle -> aviary_ic_circle
    int aviary_ic_enhance_brighten -> aviary_ic_enhance_brighten
    int aviary_ic_enhance_colorfix -> aviary_ic_enhance_colorfix
    int aviary_ic_enhance_hd -> aviary_ic_enhance_hd
    int aviary_ic_eraser -> aviary_ic_eraser
    int aviary_ic_eraser_small -> aviary_ic_eraser_small
    int aviary_ic_flip_horizontal -> aviary_ic_flip_horizontal
    int aviary_ic_flip_vertical -> aviary_ic_flip_vertical
    int aviary_ic_free -> aviary_ic_free
    int aviary_ic_na -> aviary_ic_na
    int aviary_ic_na_gold -> aviary_ic_na_gold
    int aviary_ic_rectangle -> aviary_ic_rectangle
    int aviary_ic_rotate_left -> aviary_ic_rotate_left
    int aviary_ic_rotate_right -> aviary_ic_rotate_right
    int aviary_ic_smart -> aviary_ic_smart
    int aviary_knob -> aviary_knob
    int aviary_lens_image -> aviary_lens_image
    int aviary_light_gray_button_background -> aviary_light_gray_button_background
    int aviary_light_gray_button_background_disabled -> aviary_light_gray_button_background_disabled
    int aviary_light_gray_button_background_normal -> aviary_light_gray_button_background_normal
    int aviary_light_gray_button_background_pressed -> aviary_light_gray_button_background_pressed
    int aviary_link_color_selector -> aviary_link_color_selector
    int aviary_link_normal -> aviary_link_normal
    int aviary_link_pressed -> aviary_link_pressed
    int aviary_link_selected -> aviary_link_selected
    int aviary_logo_big -> aviary_logo_big
    int aviary_main_loader_background -> aviary_main_loader_background
    int aviary_meme_button_background -> aviary_meme_button_background
    int aviary_meme_clear_button -> aviary_meme_clear_button
    int aviary_nav_background -> aviary_nav_background
    int aviary_nav_button_background -> aviary_nav_button_background
    int aviary_nav_button_pressed -> aviary_nav_button_pressed
    int aviary_nav_check -> aviary_nav_check
    int aviary_nav_divider -> aviary_nav_divider
    int aviary_overscroll_edge -> aviary_overscroll_edge
    int aviary_overscroll_glow -> aviary_overscroll_glow
    int aviary_powered -> aviary_powered
    int aviary_resize_knob -> aviary_resize_knob
    int aviary_seekbar_background -> aviary_seekbar_background
    int aviary_seekbar_background_image -> aviary_seekbar_background_image
    int aviary_seekbar_secondary_center_selector -> aviary_seekbar_secondary_center_selector
    int aviary_seekbar_secondary_inverted_normal -> aviary_seekbar_secondary_inverted_normal
    int aviary_seekbar_secondary_inverted_pressed -> aviary_seekbar_secondary_inverted_pressed
    int aviary_seekbar_secondary_inverted_selector -> aviary_seekbar_secondary_inverted_selector
    int aviary_seekbar_secondary_normal -> aviary_seekbar_secondary_normal
    int aviary_seekbar_secondary_pressed -> aviary_seekbar_secondary_pressed
    int aviary_seekbar_secondary_selector -> aviary_seekbar_secondary_selector
    int aviary_seekbar_thumb -> aviary_seekbar_thumb
    int aviary_seekbar_thumb_focused -> aviary_seekbar_thumb_focused
    int aviary_seekbar_thumb_normal -> aviary_seekbar_thumb_normal
    int aviary_seekbar_thumb_pressed -> aviary_seekbar_thumb_pressed
    int aviary_seekbar_thumb_zero_normal -> aviary_seekbar_thumb_zero_normal
    int aviary_seekbar_thumb_zero_pressed -> aviary_seekbar_thumb_zero_pressed
    int aviary_shadow_bottom -> aviary_shadow_bottom
    int aviary_shadow_top -> aviary_shadow_top
    int aviary_sticker_highlight_background_selector -> aviary_sticker_highlight_background_selector
    int aviary_sticker_item_getmore -> aviary_sticker_item_getmore
    int aviary_sticker_pack_background -> aviary_sticker_pack_background
    int aviary_symbol_minus_normal -> aviary_symbol_minus_normal
    int aviary_symbol_plus_normal -> aviary_symbol_plus_normal
    int aviary_text_highlight_background -> aviary_text_highlight_background
    int aviary_text_highlight_bg_normal -> aviary_text_highlight_bg_normal
    int aviary_text_highlight_bg_pressed -> aviary_text_highlight_bg_pressed
    int aviary_toast_background -> aviary_toast_background
    int aviary_tool_button_background -> aviary_tool_button_background
    int aviary_tool_button_center_normal -> aviary_tool_button_center_normal
    int aviary_tool_button_center_pressed -> aviary_tool_button_center_pressed
    int aviary_tool_button_left_normal -> aviary_tool_button_left_normal
    int aviary_tool_button_left_pressed -> aviary_tool_button_left_pressed
    int aviary_tool_button_normal -> aviary_tool_button_normal
    int aviary_tool_button_pressed -> aviary_tool_button_pressed
    int aviary_tool_button_right_normal -> aviary_tool_button_right_normal
    int aviary_tool_button_right_pressed -> aviary_tool_button_right_pressed
    int aviary_tool_center_button_background -> aviary_tool_center_button_background
    int aviary_tool_ic_blemish -> aviary_tool_ic_blemish
    int aviary_tool_ic_brightness -> aviary_tool_ic_brightness
    int aviary_tool_ic_colorsplash -> aviary_tool_ic_colorsplash
    int aviary_tool_ic_contrast -> aviary_tool_ic_contrast
    int aviary_tool_ic_crop -> aviary_tool_ic_crop
    int aviary_tool_ic_draw -> aviary_tool_ic_draw
    int aviary_tool_ic_effects -> aviary_tool_ic_effects
    int aviary_tool_ic_enhance -> aviary_tool_ic_enhance
    int aviary_tool_ic_feedback -> aviary_tool_ic_feedback
    int aviary_tool_ic_focus -> aviary_tool_ic_focus
    int aviary_tool_ic_frames -> aviary_tool_ic_frames
    int aviary_tool_ic_meme -> aviary_tool_ic_meme
    int aviary_tool_ic_orientation -> aviary_tool_ic_orientation
    int aviary_tool_ic_redeye -> aviary_tool_ic_redeye
    int aviary_tool_ic_saturation -> aviary_tool_ic_saturation
    int aviary_tool_ic_sharpen -> aviary_tool_ic_sharpen
    int aviary_tool_ic_stickers -> aviary_tool_ic_stickers
    int aviary_tool_ic_text -> aviary_tool_ic_text
    int aviary_tool_ic_warmth -> aviary_tool_ic_warmth
    int aviary_tool_ic_whiten -> aviary_tool_ic_whiten
    int aviary_tool_left_button_background -> aviary_tool_left_button_background
    int aviary_tool_right_button_background -> aviary_tool_right_button_background
    int aviary_tools_divider -> aviary_tools_divider
    int aviary_wave_dot -> aviary_wave_dot
    int aviary_wheel_background -> aviary_wheel_background
    int aviary_wheel_container -> aviary_wheel_container
    int aviary_wheel_indicator -> aviary_wheel_indicator
    int aviary_wheel_line -> aviary_wheel_line
    int aviary_wheel_shadow -> aviary_wheel_shadow
    int aviary_wheel_shadow_bottom -> aviary_wheel_shadow_bottom
    int back -> back
    int back_white -> back_white
    int hlv_overscroll_edge -> hlv_overscroll_edge
    int hlv_overscroll_glow -> hlv_overscroll_glow
    int ic_stickers -> ic_stickers
com.aviary.android.feather.R$id -> com.aviary.android.feather.R$id:
    int alwaysScroll -> alwaysScroll
    int aviary_badge -> aviary_badge
    int aviary_banner_text -> aviary_banner_text
    int aviary_banner_view -> aviary_banner_view
    int aviary_bottom_line -> aviary_bottom_line
    int aviary_bottombar -> aviary_bottombar
    int aviary_button -> aviary_button
    int aviary_button1 -> aviary_button1
    int aviary_button2 -> aviary_button2
    int aviary_button3 -> aviary_button3
    int aviary_button4 -> aviary_button4
    int aviary_button_circle -> aviary_button_circle
    int aviary_button_minus -> aviary_button_minus
    int aviary_button_plus -> aviary_button_plus
    int aviary_button_rectangle -> aviary_button_rectangle
    int aviary_buy_button -> aviary_buy_button
    int aviary_buy_button_loader -> aviary_buy_button_loader
    int aviary_buy_button_text -> aviary_buy_button_text
    int aviary_clear_button1 -> aviary_clear_button1
    int aviary_clear_button2 -> aviary_clear_button2
    int aviary_content_view -> aviary_content_view
    int aviary_crop_image -> aviary_crop_image
    int aviary_description -> aviary_description
    int aviary_disable_status -> aviary_disable_status
    int aviary_divider_left -> aviary_divider_left
    int aviary_divider_right -> aviary_divider_right
    int aviary_error_message -> aviary_error_message
    int aviary_flipper -> aviary_flipper
    int aviary_gallery -> aviary_gallery
    int aviary_gallery2 -> aviary_gallery2
    int aviary_head -> aviary_head
    int aviary_hidden -> aviary_hidden
    int aviary_iap_detail -> aviary_iap_detail
    int aviary_iap_list -> aviary_iap_list
    int aviary_iap_list_progress -> aviary_iap_list_progress
    int aviary_icon -> aviary_icon
    int aviary_image -> aviary_image
    int aviary_image2 -> aviary_image2
    int aviary_invisible_text_1 -> aviary_invisible_text_1
    int aviary_invisible_text_2 -> aviary_invisible_text_2
    int aviary_lens_button -> aviary_lens_button
    int aviary_list -> aviary_list
    int aviary_list_packs -> aviary_list_packs
    int aviary_list_stickers -> aviary_list_stickers
    int aviary_loader -> aviary_loader
    int aviary_main_iap_dialog -> aviary_main_iap_dialog
    int aviary_main_iap_dialog_container -> aviary_main_iap_dialog_container
    int aviary_meme_dumb -> aviary_meme_dumb
    int aviary_navbar -> aviary_navbar
    int aviary_overlay -> aviary_overlay
    int aviary_panel -> aviary_panel
    int aviary_progress -> aviary_progress
    int aviary_restore -> aviary_restore
    int aviary_retry_button -> aviary_retry_button
    int aviary_retry_text -> aviary_retry_text
    int aviary_seekbar -> aviary_seekbar
    int aviary_summary -> aviary_summary
    int aviary_switcher -> aviary_switcher
    int aviary_text -> aviary_text
    int aviary_title -> aviary_title
    int aviary_tool_view -> aviary_tool_view
    int aviary_tools_listview -> aviary_tools_listview
    int aviary_top_line -> aviary_top_line
    int aviary_version -> aviary_version
    int aviary_view_animator -> aviary_view_animator
    int aviary_wheel -> aviary_wheel
    int aviary_white_logo -> aviary_white_logo
    int aviary_workspace -> aviary_workspace
    int aviary_workspace_container -> aviary_workspace_container
    int aviary_workspace_indicator -> aviary_workspace_indicator
    int button1 -> button1
    int button2 -> button2
    int button3 -> button3
    int checked -> checked
    int disabled -> disabled
    int divider -> divider
    int down_top -> down_top
    int dragLayer -> dragLayer
    int drawing_view_container -> drawing_view_container
    int edge_bottom -> edge_bottom
    int edge_left -> edge_left
    int edge_right -> edge_right
    int edge_top -> edge_top
    int feather_dialogs_container -> feather_dialogs_container
    int horizontal -> horizontal
    int image -> image
    int image_loading_view -> image_loading_view
    int image_original -> image_original
    int imagegl -> imagegl
    int imageview_back -> imageview_back
    int imageview_back2 -> imageview_back2
    int main_content -> main_content
    int navbar_button1 -> navbar_button1
    int navbar_button2 -> navbar_button2
    int navbar_button3 -> navbar_button3
    int navbar_divider1 -> navbar_divider1
    int navbar_divider2 -> navbar_divider2
    int navbar_progress1 -> navbar_progress1
    int navbar_progress2 -> navbar_progress2
    int navbar_text2 -> navbar_text2
    int nonblank -> nonblank
    int normal -> normal
    int pressed -> pressed
    int selected -> selected
    int shadow -> shadow
    int size_preview -> size_preview
    int text -> text
    int text1 -> text1
    int text2 -> text2
    int text3 -> text3
    int top_down -> top_down
    int vertical -> vertical
com.aviary.android.feather.R$integer -> com.aviary.android.feather.R$integer:
    int aviary_adjust_animationDuration -> aviary_adjust_animationDuration
    int aviary_adjust_animationDuration2 -> aviary_adjust_animationDuration2
    int aviary_adjust_divider_weight -> aviary_adjust_divider_weight
    int aviary_adjust_flip3d -> aviary_adjust_flip3d
    int aviary_adjust_free_rotate -> aviary_adjust_free_rotate
    int aviary_adjust_item_weight -> aviary_adjust_item_weight
    int aviary_asyncimagemanager_tag -> aviary_asyncimagemanager_tag
    int aviary_button_highlight_glow_size -> aviary_button_highlight_glow_size
    int aviary_color_splash_divider_weight -> aviary_color_splash_divider_weight
    int aviary_color_splash_item_weight -> aviary_color_splash_item_weight
    int aviary_crop_invert_policy -> aviary_crop_invert_policy
    int aviary_crop_selected_index -> aviary_crop_selected_index
    int aviary_draw_brush_index -> aviary_draw_brush_index
    int aviary_draw_brush_softValue -> aviary_draw_brush_softValue
    int aviary_draw_fill_color_index -> aviary_draw_fill_color_index
    int aviary_enhance_item_weight -> aviary_enhance_item_weight
    int aviary_featured_packs_count -> aviary_featured_packs_count
    int aviary_iap_dialog_cols_effects -> aviary_iap_dialog_cols_effects
    int aviary_iap_dialog_cols_stickers -> aviary_iap_dialog_cols_stickers
    int aviary_iap_dialog_height_weight -> aviary_iap_dialog_height_weight
    int aviary_iap_dialog_margin_top_weight -> aviary_iap_dialog_margin_top_weight
    int aviary_iap_dialog_rows_effects -> aviary_iap_dialog_rows_effects
    int aviary_iap_dialog_rows_stickers -> aviary_iap_dialog_rows_stickers
    int aviary_iap_dialog_width_weight -> aviary_iap_dialog_width_weight
    int aviary_image_restore_timeout -> aviary_image_restore_timeout
    int aviary_mediumAnimTime -> aviary_mediumAnimTime
    int aviary_meme_max_length -> aviary_meme_max_length
    int aviary_meme_stroke_enabled -> aviary_meme_stroke_enabled
    int aviary_seekbar_weight -> aviary_seekbar_weight
    int aviary_shortAnimTime -> aviary_shortAnimTime
    int aviary_spot_brush_index -> aviary_spot_brush_index
    int aviary_spot_gallery_item_max_size -> aviary_spot_gallery_item_max_size
    int aviary_spot_gallery_item_min_size -> aviary_spot_gallery_item_min_size
    int aviary_text_fill_color_index -> aviary_text_fill_color_index
    int aviary_text_gallery_drawable_radius -> aviary_text_gallery_drawable_radius
    int aviary_text_max_length -> aviary_text_max_length
    int aviary_text_stroke_enabled -> aviary_text_stroke_enabled
    int aviary_wheel_weight -> aviary_wheel_weight
    int border_version -> border_version
    int is_border -> is_border
    int is_filter -> is_filter
    int is_sticker -> is_sticker
    int is_tool -> is_tool
com.aviary.android.feather.R$layout -> com.aviary.android.feather.R$layout:
    int aviary_bottombar -> aviary_bottombar
    int aviary_content_adjust -> aviary_content_adjust
    int aviary_content_crop -> aviary_content_crop
    int aviary_content_draw -> aviary_content_draw
    int aviary_content_effects -> aviary_content_effects
    int aviary_content_effects_gl -> aviary_content_effects_gl
    int aviary_content_focus -> aviary_content_focus
    int aviary_content_meme -> aviary_content_meme
    int aviary_content_spot_draw -> aviary_content_spot_draw
    int aviary_content_stickers -> aviary_content_stickers
    int aviary_content_text -> aviary_content_text
    int aviary_effect_item_more -> aviary_effect_item_more
    int aviary_feedback_dialog_view -> aviary_feedback_dialog_view
    int aviary_frame_item -> aviary_frame_item
    int aviary_frame_item_divider -> aviary_frame_item_divider
    int aviary_frame_item_external -> aviary_frame_item_external
    int aviary_frame_item_more -> aviary_frame_item_more
    int aviary_gallery_crop_item_view -> aviary_gallery_crop_item_view
    int aviary_gallery_crop_item_view_custom -> aviary_gallery_crop_item_view_custom
    int aviary_gallery_item_divider -> aviary_gallery_item_divider
    int aviary_gallery_item_highlight_view -> aviary_gallery_item_highlight_view
    int aviary_gallery_item_view -> aviary_gallery_item_view
    int aviary_iap_buy_button -> aviary_iap_buy_button
    int aviary_iap_cell_item_effects -> aviary_iap_cell_item_effects
    int aviary_iap_cell_item_stickers -> aviary_iap_cell_item_stickers
    int aviary_iap_dialog_container -> aviary_iap_dialog_container
    int aviary_iap_dialog_detail -> aviary_iap_dialog_detail
    int aviary_iap_dialog_list -> aviary_iap_dialog_list
    int aviary_iap_download_error_message -> aviary_iap_download_error_message
    int aviary_iap_list_item -> aviary_iap_list_item
    int aviary_iap_workspace_screen_effects -> aviary_iap_workspace_screen_effects
    int aviary_iap_workspace_screen_stickers -> aviary_iap_workspace_screen_stickers
    int aviary_main_loader -> aviary_main_loader
    int aviary_main_view -> aviary_main_view
    int aviary_modal_progress_view -> aviary_modal_progress_view
    int aviary_navbar -> aviary_navbar
    int aviary_navbar_text -> aviary_navbar_text
    int aviary_pack_information_preview_grid_effects -> aviary_pack_information_preview_grid_effects
    int aviary_panel_adjust -> aviary_panel_adjust
    int aviary_panel_colorsplash -> aviary_panel_colorsplash
    int aviary_panel_crop -> aviary_panel_crop
    int aviary_panel_draw -> aviary_panel_draw
    int aviary_panel_enhance -> aviary_panel_enhance
    int aviary_panel_focus -> aviary_panel_focus
    int aviary_panel_frames -> aviary_panel_frames
    int aviary_panel_meme -> aviary_panel_meme
    int aviary_panel_seekbar -> aviary_panel_seekbar
    int aviary_panel_spot -> aviary_panel_spot
    int aviary_panel_stickers -> aviary_panel_stickers
    int aviary_panel_wheel -> aviary_panel_wheel
    int aviary_progress_medium -> aviary_progress_medium
    int aviary_progress_medium_inverse -> aviary_progress_medium_inverse
    int aviary_progress_small -> aviary_progress_small
    int aviary_sticker_item -> aviary_sticker_item
    int aviary_sticker_item_more -> aviary_sticker_item_more
    int aviary_sticker_item_single -> aviary_sticker_item_single
    int aviary_thumb_divider_left -> aviary_thumb_divider_left
    int aviary_thumb_divider_right -> aviary_thumb_divider_right
    int aviary_toast_layout -> aviary_toast_layout
    int aviary_tool_feedback_layout -> aviary_tool_feedback_layout
    int aviary_tool_layout -> aviary_tool_layout
com.aviary.android.feather.R$raw -> com.aviary.android.feather.R$raw:
    int com_aviary_effectpack_04_content -> com_aviary_effectpack_04_content
    int com_aviary_effectpack_04_icon -> com_aviary_effectpack_04_icon
    int com_aviary_framepack_00_icon -> com_aviary_framepack_00_icon
    int com_aviary_stickerpack_00_icon -> com_aviary_stickerpack_00_icon
com.aviary.android.feather.R$string -> com.aviary.android.feather.R$string:
    int aviary_meme_font -> aviary_meme_font
    int border_name -> border_name
    int confirm_quit_message -> confirm_quit_message
    int feather_about_dialog_message -> feather_about_dialog_message
    int feather_acc_a_sticker -> feather_acc_a_sticker
    int feather_acc_color -> feather_acc_color
    int feather_acc_decrease_value -> feather_acc_decrease_value
    int feather_acc_flip_h -> feather_acc_flip_h
    int feather_acc_flip_v -> feather_acc_flip_v
    int feather_acc_increase_value -> feather_acc_increase_value
    int feather_acc_lens_toggle -> feather_acc_lens_toggle
    int feather_acc_rotate_ccw -> feather_acc_rotate_ccw
    int feather_acc_rotate_cw -> feather_acc_rotate_cw
    int feather_acc_size -> feather_acc_size
    int feather_activity_not_found -> feather_activity_not_found
    int feather_adjust -> feather_adjust
    int feather_apply -> feather_apply
    int feather_attention -> feather_attention
    int feather_auto_enhance_label -> feather_auto_enhance_label
    int feather_back_enhance_label -> feather_back_enhance_label
    int feather_balance_enhance_label -> feather_balance_enhance_label
    int feather_blemish -> feather_blemish
    int feather_borders -> feather_borders
    int feather_borders_dialog_first_time -> feather_borders_dialog_first_time
    int feather_brightness -> feather_brightness
    int feather_cancel -> feather_cancel
    int feather_circle -> feather_circle
    int feather_close -> feather_close
    int feather_colorfix -> feather_colorfix
    int feather_colorsplash_eraser -> feather_colorsplash_eraser
    int feather_colorsplash_free -> feather_colorsplash_free
    int feather_colorsplash_smart -> feather_colorsplash_smart
    int feather_confirm -> feather_confirm
    int feather_contrast -> feather_contrast
    int feather_crash_toast_text -> feather_crash_toast_text
    int feather_crop -> feather_crop
    int feather_custom -> feather_custom
    int feather_delete -> feather_delete
    int feather_details -> feather_details
    int feather_download -> feather_download
    int feather_download_start_failed -> feather_download_start_failed
    int feather_draw -> feather_draw
    int feather_edit_bottom_text -> feather_edit_bottom_text
    int feather_edit_top_text -> feather_edit_top_text
    int feather_edit_your_photo -> feather_edit_your_photo
    int feather_effect_loading_message -> feather_effect_loading_message
    int feather_effects -> feather_effects
    int feather_effects_beginning_of_list -> feather_effects_beginning_of_list
    int feather_effects_end_of_list -> feather_effects_end_of_list
    int feather_effects_error_loading_pack -> feather_effects_error_loading_pack
    int feather_effects_error_loading_packs -> feather_effects_error_loading_packs
    int feather_effects_error_update_editor -> feather_effects_error_update_editor
    int feather_effects_error_update_editors -> feather_effects_error_update_editors
    int feather_effects_error_update_multiple -> feather_effects_error_update_multiple
    int feather_effects_error_update_pack -> feather_effects_error_update_pack
    int feather_effects_error_update_packs -> feather_effects_error_update_packs
    int feather_effects_unknown_error -> feather_effects_unknown_error
    int feather_effects_unknown_errors -> feather_effects_unknown_errors
    int feather_enhance -> feather_enhance
    int feather_enter_text_here -> feather_enter_text_here
    int feather_error_download_image_message -> feather_error_download_image_message
    int feather_error_saving_aviary_folder -> feather_error_saving_aviary_folder
    int feather_error_saving_image -> feather_error_saving_image
    int feather_featured -> feather_featured
    int feather_feedback -> feather_feedback
    int feather_feedback_dialog_message -> feather_feedback_dialog_message
    int feather_filter_pack_updated -> feather_filter_pack_updated
    int feather_flip -> feather_flip
    int feather_generic_error_title -> feather_generic_error_title
    int feather_get_more -> feather_get_more
    int feather_hidef -> feather_hidef
    int feather_iap_banner_text -> feather_iap_banner_text
    int feather_iap_download -> feather_iap_download
    int feather_iap_download_failed -> feather_iap_download_failed
    int feather_iap_error -> feather_iap_error
    int feather_iap_failed_download_informations -> feather_iap_failed_download_informations
    int feather_iap_failed_download_previews -> feather_iap_failed_download_previews
    int feather_iap_installing -> feather_iap_installing
    int feather_iap_list_empty_message -> feather_iap_list_empty_message
    int feather_iap_notification_installed_summary -> feather_iap_notification_installed_summary
    int feather_iap_owned -> feather_iap_owned
    int feather_iap_pack_installed -> feather_iap_pack_installed
    int feather_iap_restore -> feather_iap_restore
    int feather_iap_restore_all -> feather_iap_restore_all
    int feather_iap_restore_all_failed -> feather_iap_restore_all_failed
    int feather_iap_restore_all_in_progress -> feather_iap_restore_all_in_progress
    int feather_iap_restore_all_summary -> feather_iap_restore_all_summary
    int feather_iap_retry -> feather_iap_retry
    int feather_iap_unavailable -> feather_iap_unavailable
    int feather_illuminate -> feather_illuminate
    int feather_image_saved -> feather_image_saved
    int feather_image_saved_in -> feather_image_saved_in
    int feather_infoscreen_bottom_button -> feather_infoscreen_bottom_button
    int feather_infoscreen_text -> feather_infoscreen_text
    int feather_item_not_found -> feather_item_not_found
    int feather_keep_editing -> feather_keep_editing
    int feather_loading_image -> feather_loading_image
    int feather_loading_title -> feather_loading_title
    int feather_meme -> feather_meme
    int feather_menu_reset -> feather_menu_reset
    int feather_message_button_no -> feather_message_button_no
    int feather_message_button_yes -> feather_message_button_yes
    int feather_message_text -> feather_message_text
    int feather_message_title -> feather_message_title
    int feather_mirror -> feather_mirror
    int feather_new_effects -> feather_new_effects
    int feather_new_frames -> feather_new_frames
    int feather_new_stickers -> feather_new_stickers
    int feather_no_purchase_made -> feather_no_purchase_made
    int feather_notification_n_items_cant_be_restored -> feather_notification_n_items_cant_be_restored
    int feather_notification_no_items_to_restore -> feather_notification_no_items_to_restore
    int feather_notification_plugins_installed_count -> feather_notification_plugins_installed_count
    int feather_notification_plus_more -> feather_notification_plus_more
    int feather_notification_restore_all_completed -> feather_notification_restore_all_completed
    int feather_notification_some_items_cant_be_restored -> feather_notification_some_items_cant_be_restored
    int feather_original -> feather_original
    int feather_please_try_again_later -> feather_please_try_again_later
    int feather_plugin_error_corrupted -> feather_plugin_error_corrupted
    int feather_plugin_error_download -> feather_plugin_error_download
    int feather_plugin_error_storage_not_available -> feather_plugin_error_storage_not_available
    int feather_plugin_filter_undefined_name -> feather_plugin_filter_undefined_name
    int feather_powered_by_aviary -> feather_powered_by_aviary
    int feather_purchase_failed -> feather_purchase_failed
    int feather_rectangle -> feather_rectangle
    int feather_red_eye -> feather_red_eye
    int feather_remove -> feather_remove
    int feather_restore_all_request_sent -> feather_restore_all_request_sent
    int feather_revert_dialog_message -> feather_revert_dialog_message
    int feather_revert_dialog_title -> feather_revert_dialog_title
    int feather_rotate -> feather_rotate
    int feather_saturation -> feather_saturation
    int feather_save -> feather_save
    int feather_save_progress -> feather_save_progress
    int feather_send_feedback -> feather_send_feedback
    int feather_shapes -> feather_shapes
    int feather_share -> feather_share
    int feather_sharpen -> feather_sharpen
    int feather_square -> feather_square
    int feather_sticker_delete_message -> feather_sticker_delete_message
    int feather_sticker_name -> feather_sticker_name
    int feather_sticker_pack_updated_1 -> feather_sticker_pack_updated_1
    int feather_sticker_pack_updated_2 -> feather_sticker_pack_updated_2
    int feather_sticker_pack_updated_3 -> feather_sticker_pack_updated_3
    int feather_stickers -> feather_stickers
    int feather_stickers_dialog_first_time -> feather_stickers_dialog_first_time
    int feather_supply_shop -> feather_supply_shop
    int feather_text -> feather_text
    int feather_tool -> feather_tool
    int feather_tool_colorsplash -> feather_tool_colorsplash
    int feather_tool_leave_question -> feather_tool_leave_question
    int feather_tool_name -> feather_tool_name
    int feather_tool_temperature -> feather_tool_temperature
    int feather_tool_tiltshift -> feather_tool_tiltshift
    int feather_try_again -> feather_try_again
    int feather_unsaved_from_camera -> feather_unsaved_from_camera
    int feather_update -> feather_update
    int feather_version -> feather_version
    int feather_view_file -> feather_view_file
    int feather_whiten -> feather_whiten
    int feather_yes_leave -> feather_yes_leave
    int feather_zoom_mode -> feather_zoom_mode
    int filter_name -> filter_name
    int menu_premium -> menu_premium
com.aviary.android.feather.R$style -> com.aviary.android.feather.R$style:
    int AviaryAnimations -> AviaryAnimations
    int AviaryAnimations_AviaryToast -> AviaryAnimations_AviaryToast
    int AviaryBaseTheme -> AviaryBaseTheme
    int AviaryBaseTheme_Dialog -> AviaryBaseTheme_Dialog
    int AviaryDialog -> AviaryDialog
    int AviaryDialog_Divider -> AviaryDialog_Divider
    int AviaryDialog_Feedback -> AviaryDialog_Feedback
    int AviaryDialog_Feedback_Text -> AviaryDialog_Feedback_Text
    int AviaryDialog_MainLayout -> AviaryDialog_MainLayout
    int AviaryGraphics -> AviaryGraphics
    int AviaryGraphics_CropHighlightView -> AviaryGraphics_CropHighlightView
    int AviaryGraphics_GalleryBottomLine -> AviaryGraphics_GalleryBottomLine
    int AviaryGraphics_GalleryTopIndicator -> AviaryGraphics_GalleryTopIndicator
    int AviaryGraphics_GalleryTopIndicator_Inverse -> AviaryGraphics_GalleryTopIndicator_Inverse
    int AviaryGraphics_PluginDividerText -> AviaryGraphics_PluginDividerText
    int AviaryGraphics_PreviewFill -> AviaryGraphics_PreviewFill
    int AviaryGraphics_PreviewSpot -> AviaryGraphics_PreviewSpot
    int AviaryGraphics_StickerHighlightView -> AviaryGraphics_StickerHighlightView
    int AviaryGraphics_TextHighlightView -> AviaryGraphics_TextHighlightView
    int AviaryTextAppearance -> AviaryTextAppearance
    int AviaryTextAppearance_Inverted -> AviaryTextAppearance_Inverted
    int AviaryTextAppearance_Inverted_Large -> AviaryTextAppearance_Inverted_Large
    int AviaryTextAppearance_Inverted_Medium -> AviaryTextAppearance_Inverted_Medium
    int AviaryTextAppearance_Inverted_Small -> AviaryTextAppearance_Inverted_Small
    int AviaryTextAppearance_Large -> AviaryTextAppearance_Large
    int AviaryTextAppearance_Large_NoSelected -> AviaryTextAppearance_Large_NoSelected
    int AviaryTextAppearance_Medium -> AviaryTextAppearance_Medium
    int AviaryTextAppearance_Medium_NoSelected -> AviaryTextAppearance_Medium_NoSelected
    int AviaryTextAppearance_Small -> AviaryTextAppearance_Small
    int AviaryTextAppearance_Small_NoSelected -> AviaryTextAppearance_Small_NoSelected
    int AviaryTheme -> AviaryTheme
    int AviaryTheme_Dialog -> AviaryTheme_Dialog
    int AviaryTheme_Dialog_Custom -> AviaryTheme_Dialog_Custom
    int AviaryWidget -> AviaryWidget
    int AviaryWidget_AdjustImageView -> AviaryWidget_AdjustImageView
    int AviaryWidget_AviaryGallery -> AviaryWidget_AviaryGallery
    int AviaryWidget_AviarySeekBar -> AviaryWidget_AviarySeekBar
    int AviaryWidget_AviaryWheel -> AviaryWidget_AviaryWheel
    int AviaryWidget_BottomBar -> AviaryWidget_BottomBar
    int AviaryWidget_BottomBar_GalleryItem -> AviaryWidget_BottomBar_GalleryItem
    int AviaryWidget_BottomBar_GalleryItem_Container -> AviaryWidget_BottomBar_GalleryItem_Container
    int AviaryWidget_BottomBar_GalleryItem_Crop -> AviaryWidget_BottomBar_GalleryItem_Crop
    int AviaryWidget_BottomBar_GalleryItem_Crop_HighlightImageView -> AviaryWidget_BottomBar_GalleryItem_Crop_HighlightImageView
    int AviaryWidget_BottomBar_GalleryItem_Crop_TextView -> AviaryWidget_BottomBar_GalleryItem_Crop_TextView
    int AviaryWidget_BottomBar_GalleryItem_Crop_TextView_Custom -> AviaryWidget_BottomBar_GalleryItem_Crop_TextView_Custom
    int AviaryWidget_BottomBar_GalleryItem_Divider -> AviaryWidget_BottomBar_GalleryItem_Divider
    int AviaryWidget_BottomBar_GalleryItem_HighlightImageView -> AviaryWidget_BottomBar_GalleryItem_HighlightImageView
    int AviaryWidget_BottomBar_GalleryTopIndicatorView -> AviaryWidget_BottomBar_GalleryTopIndicatorView
    int AviaryWidget_BottomBar_GalleryTopIndicatorView_Inverse -> AviaryWidget_BottomBar_GalleryTopIndicatorView_Inverse
    int AviaryWidget_BottomBar_HorizontalScrollView -> AviaryWidget_BottomBar_HorizontalScrollView
    int AviaryWidget_BottomBar_Logo -> AviaryWidget_BottomBar_Logo
    int AviaryWidget_BottomBar_Logo_Container -> AviaryWidget_BottomBar_Logo_Container
    int AviaryWidget_BottomBar_Logo_Image -> AviaryWidget_BottomBar_Logo_Image
    int AviaryWidget_BottomBar_OptionPanel -> AviaryWidget_BottomBar_OptionPanel
    int AviaryWidget_BottomBar_OptionPanelContainer -> AviaryWidget_BottomBar_OptionPanelContainer
    int AviaryWidget_BottomBar_OptionPanelContainer_BorderLess -> AviaryWidget_BottomBar_OptionPanelContainer_BorderLess
    int AviaryWidget_BottomBar_Tool -> AviaryWidget_BottomBar_Tool
    int AviaryWidget_BottomBar_Tool_FeedBack -> AviaryWidget_BottomBar_Tool_FeedBack
    int AviaryWidget_BottomBar_ViewFlipper -> AviaryWidget_BottomBar_ViewFlipper
    int AviaryWidget_Button -> AviaryWidget_Button
    int AviaryWidget_Button_LightGray -> AviaryWidget_Button_LightGray
    int AviaryWidget_Button_Meme -> AviaryWidget_Button_Meme
    int AviaryWidget_Button_NavButton -> AviaryWidget_Button_NavButton
    int AviaryWidget_Button_NavButton_Apply -> AviaryWidget_Button_NavButton_Apply
    int AviaryWidget_Button_Secondary -> AviaryWidget_Button_Secondary
    int AviaryWidget_Button_Secondary_NavBarRestore -> AviaryWidget_Button_Secondary_NavBarRestore
    int AviaryWidget_Button_Secondary_Toggle -> AviaryWidget_Button_Secondary_Toggle
    int AviaryWidget_CropImageView -> AviaryWidget_CropImageView
    int AviaryWidget_EdgeEffect -> AviaryWidget_EdgeEffect
    int AviaryWidget_EffectThumb -> AviaryWidget_EffectThumb
    int AviaryWidget_EffectThumb_Divider -> AviaryWidget_EffectThumb_Divider
    int AviaryWidget_EffectThumb_DividerContainer -> AviaryWidget_EffectThumb_DividerContainer
    int AviaryWidget_EffectThumb_DividerContainer_Left -> AviaryWidget_EffectThumb_DividerContainer_Left
    int AviaryWidget_EffectThumb_Divider_Left -> AviaryWidget_EffectThumb_Divider_Left
    int AviaryWidget_EffectThumb_HiddenSelector -> AviaryWidget_EffectThumb_HiddenSelector
    int AviaryWidget_EffectThumb_Layout -> AviaryWidget_EffectThumb_Layout
    int AviaryWidget_EffectThumb_Layout_External -> AviaryWidget_EffectThumb_Layout_External
    int AviaryWidget_EffectThumb_PacksDivider -> AviaryWidget_EffectThumb_PacksDivider
    int AviaryWidget_EffectThumb_Text -> AviaryWidget_EffectThumb_Text
    int AviaryWidget_EffectsHorizontalScrollView -> AviaryWidget_EffectsHorizontalScrollView
    int AviaryWidget_HiddenText -> AviaryWidget_HiddenText
    int AviaryWidget_HiddenText_TextTool -> AviaryWidget_HiddenText_TextTool
    int AviaryWidget_HighlightImageView -> AviaryWidget_HighlightImageView
    int AviaryWidget_HighlightImageView_Clear -> AviaryWidget_HighlightImageView_Clear
    int AviaryWidget_HighlightImageView_Lens -> AviaryWidget_HighlightImageView_Lens
    int AviaryWidget_HighlightImageView_OptionPanelButton -> AviaryWidget_HighlightImageView_OptionPanelButton
    int AviaryWidget_HighlightImageView_OptionPanelButton_Toggle -> AviaryWidget_HighlightImageView_OptionPanelButton_Toggle
    int AviaryWidget_HighlightImageView_OptionPanelButton_Toggle_Center -> AviaryWidget_HighlightImageView_OptionPanelButton_Toggle_Center
    int AviaryWidget_HighlightImageView_OptionPanelButton_Toggle_Center_Enhance -> AviaryWidget_HighlightImageView_OptionPanelButton_Toggle_Center_Enhance
    int AviaryWidget_HighlightImageView_OptionPanelButton_Toggle_Enhance -> AviaryWidget_HighlightImageView_OptionPanelButton_Toggle_Enhance
    int AviaryWidget_HighlightImageView_OptionPanelButton_Toggle_Left -> AviaryWidget_HighlightImageView_OptionPanelButton_Toggle_Left
    int AviaryWidget_HighlightImageView_OptionPanelButton_Toggle_Left_Adjust -> AviaryWidget_HighlightImageView_OptionPanelButton_Toggle_Left_Adjust
    int AviaryWidget_HighlightImageView_OptionPanelButton_Toggle_Left_Enhance -> AviaryWidget_HighlightImageView_OptionPanelButton_Toggle_Left_Enhance
    int AviaryWidget_HighlightImageView_OptionPanelButton_Toggle_Left_Focus -> AviaryWidget_HighlightImageView_OptionPanelButton_Toggle_Left_Focus
    int AviaryWidget_HighlightImageView_OptionPanelButton_Toggle_Left_TiltShift -> AviaryWidget_HighlightImageView_OptionPanelButton_Toggle_Left_TiltShift
    int AviaryWidget_HighlightImageView_OptionPanelButton_Toggle_Right -> AviaryWidget_HighlightImageView_OptionPanelButton_Toggle_Right
    int AviaryWidget_HighlightImageView_OptionPanelButton_Toggle_Right_Adjust -> AviaryWidget_HighlightImageView_OptionPanelButton_Toggle_Right_Adjust
    int AviaryWidget_HighlightImageView_OptionPanelButton_Toggle_Right_Enhance -> AviaryWidget_HighlightImageView_OptionPanelButton_Toggle_Right_Enhance
    int AviaryWidget_HighlightImageView_OptionPanelButton_Toggle_Right_Focus -> AviaryWidget_HighlightImageView_OptionPanelButton_Toggle_Right_Focus
    int AviaryWidget_HighlightImageView_OptionPanelButton_Toggle_Right_TiltShift -> AviaryWidget_HighlightImageView_OptionPanelButton_Toggle_Right_TiltShift
    int AviaryWidget_HighlightImageView_OptionPanelButton_Toggle_TiltShift -> AviaryWidget_HighlightImageView_OptionPanelButton_Toggle_TiltShift
    int AviaryWidget_HighlightImageView_Tool -> AviaryWidget_HighlightImageView_Tool
    int AviaryWidget_IAPDialog -> AviaryWidget_IAPDialog
    int AviaryWidget_IAPDialog_CellLayoutEffects -> AviaryWidget_IAPDialog_CellLayoutEffects
    int AviaryWidget_IAPDialog_CellLayoutStickers -> AviaryWidget_IAPDialog_CellLayoutStickers
    int AviaryWidget_IAPDialog_Container -> AviaryWidget_IAPDialog_Container
    int AviaryWidget_IAPDialog_DownloadButton -> AviaryWidget_IAPDialog_DownloadButton
    int AviaryWidget_IAPDialog_DownloadButtonText -> AviaryWidget_IAPDialog_DownloadButtonText
    int AviaryWidget_IAPDialog_Icon -> AviaryWidget_IAPDialog_Icon
    int AviaryWidget_IAPDialog_Main -> AviaryWidget_IAPDialog_Main
    int AviaryWidget_IAPDialog_PackInfoPreviewCellLayout -> AviaryWidget_IAPDialog_PackInfoPreviewCellLayout
    int AviaryWidget_IAPDialog_RestoreAllButton -> AviaryWidget_IAPDialog_RestoreAllButton
    int AviaryWidget_IAPDialog_RestoreDialog -> AviaryWidget_IAPDialog_RestoreDialog
    int AviaryWidget_IAPDialog_ShadowBottom -> AviaryWidget_IAPDialog_ShadowBottom
    int AviaryWidget_IAPDialog_ShadowTop -> AviaryWidget_IAPDialog_ShadowTop
    int AviaryWidget_IAPDialog_SingleCell -> AviaryWidget_IAPDialog_SingleCell
    int AviaryWidget_IAPDialog_SingleCell_Stickers -> AviaryWidget_IAPDialog_SingleCell_Stickers
    int AviaryWidget_IAPDialog_Text -> AviaryWidget_IAPDialog_Text
    int AviaryWidget_IAPDialog_TextButton_Error -> AviaryWidget_IAPDialog_TextButton_Error
    int AviaryWidget_IAPDialog_Text_Banner -> AviaryWidget_IAPDialog_Text_Banner
    int AviaryWidget_IAPDialog_Text_Description -> AviaryWidget_IAPDialog_Text_Description
    int AviaryWidget_IAPDialog_Text_Error -> AviaryWidget_IAPDialog_Text_Error
    int AviaryWidget_IAPDialog_Text_ListViewItemDescription -> AviaryWidget_IAPDialog_Text_ListViewItemDescription
    int AviaryWidget_IAPDialog_Text_ListViewItemTitle -> AviaryWidget_IAPDialog_Text_ListViewItemTitle
    int AviaryWidget_IAPDialog_Text_Title -> AviaryWidget_IAPDialog_Text_Title
    int AviaryWidget_IAPDialog_TopGrid -> AviaryWidget_IAPDialog_TopGrid
    int AviaryWidget_IAPDialog_Workspace -> AviaryWidget_IAPDialog_Workspace
    int AviaryWidget_IAPDialog_WorkspaceIndicator -> AviaryWidget_IAPDialog_WorkspaceIndicator
    int AviaryWidget_ImageRestoreSwitcher -> AviaryWidget_ImageRestoreSwitcher
    int AviaryWidget_ModalToastLoader -> AviaryWidget_ModalToastLoader
    int AviaryWidget_ModalToastLoader_MainView -> AviaryWidget_ModalToastLoader_MainView
    int AviaryWidget_NavBar -> AviaryWidget_NavBar
    int AviaryWidget_NavBar_Divider -> AviaryWidget_NavBar_Divider
    int AviaryWidget_NavBar_Main -> AviaryWidget_NavBar_Main
    int AviaryWidget_PreviewSpot -> AviaryWidget_PreviewSpot
    int AviaryWidget_StickerImageView -> AviaryWidget_StickerImageView
    int AviaryWidget_SymbolMinus -> AviaryWidget_SymbolMinus
    int AviaryWidget_SymbolPlus -> AviaryWidget_SymbolPlus
    int AviaryWidget_TextImageView -> AviaryWidget_TextImageView
    int AviaryWidget_TextView -> AviaryWidget_TextView
    int AviaryWidget_TextView_NavTitle -> AviaryWidget_TextView_NavTitle
    int AviaryWidget_TextView_Tool -> AviaryWidget_TextView_Tool
    int AviaryWidget_TiltShiftView -> AviaryWidget_TiltShiftView
com.aviary.android.feather.R$styleable -> com.aviary.android.feather.R$styleable:
    int[] AbsHListView -> AbsHListView
    int AbsHListView_android_cacheColorHint -> AbsHListView_android_cacheColorHint
    int AbsHListView_android_choiceMode -> AbsHListView_android_choiceMode
    int AbsHListView_android_drawSelectorOnTop -> AbsHListView_android_drawSelectorOnTop
    int AbsHListView_android_listSelector -> AbsHListView_android_listSelector
    int AbsHListView_android_scrollingCache -> AbsHListView_android_scrollingCache
    int AbsHListView_android_smoothScrollbar -> AbsHListView_android_smoothScrollbar
    int AbsHListView_stackFromRight -> AbsHListView_stackFromRight
    int AbsHListView_transcriptMode -> AbsHListView_transcriptMode
    int[] AviaryAdjustImageView -> AviaryAdjustImageView
    int AviaryAdjustImageView_android_padding -> AviaryAdjustImageView_android_padding
    int AviaryAdjustImageView_aviary_animationDuration -> AviaryAdjustImageView_aviary_animationDuration
    int AviaryAdjustImageView_aviary_animationDuration2 -> AviaryAdjustImageView_aviary_animationDuration2
    int AviaryAdjustImageView_aviary_color1 -> AviaryAdjustImageView_aviary_color1
    int AviaryAdjustImageView_aviary_enable3d -> AviaryAdjustImageView_aviary_enable3d
    int AviaryAdjustImageView_aviary_freeRotate -> AviaryAdjustImageView_aviary_freeRotate
    int AviaryAdjustImageView_aviary_handle -> AviaryAdjustImageView_aviary_handle
    int AviaryAdjustImageView_aviary_strokeColor -> AviaryAdjustImageView_aviary_strokeColor
    int AviaryAdjustImageView_aviary_strokeColor2 -> AviaryAdjustImageView_aviary_strokeColor2
    int AviaryAdjustImageView_aviary_strokeWidth -> AviaryAdjustImageView_aviary_strokeWidth
    int AviaryAdjustImageView_aviary_strokeWidth2 -> AviaryAdjustImageView_aviary_strokeWidth2
    int[] AviaryCellLayout -> AviaryCellLayout
    int AviaryCellLayout_aviary_cellBottomPadding -> AviaryCellLayout_aviary_cellBottomPadding
    int AviaryCellLayout_aviary_cellEndPadding -> AviaryCellLayout_aviary_cellEndPadding
    int AviaryCellLayout_aviary_cellStartPadding -> AviaryCellLayout_aviary_cellStartPadding
    int AviaryCellLayout_aviary_cellTopPadding -> AviaryCellLayout_aviary_cellTopPadding
    int AviaryCellLayout_aviary_cells -> AviaryCellLayout_aviary_cells
    int AviaryCellLayout_aviary_horizontalPadding -> AviaryCellLayout_aviary_horizontalPadding
    int AviaryCellLayout_aviary_layout_direction -> AviaryCellLayout_aviary_layout_direction
    int AviaryCellLayout_aviary_rows -> AviaryCellLayout_aviary_rows
    int AviaryCellLayout_aviary_verticalPadding -> AviaryCellLayout_aviary_verticalPadding
    int[] AviaryCropHighlightView -> AviaryCropHighlightView
    int AviaryCropHighlightView_android_src -> AviaryCropHighlightView_android_src
    int AviaryCropHighlightView_aviary_color1 -> AviaryCropHighlightView_aviary_color1
    int AviaryCropHighlightView_aviary_color2 -> AviaryCropHighlightView_aviary_color2
    int AviaryCropHighlightView_aviary_strokeColor -> AviaryCropHighlightView_aviary_strokeColor
    int AviaryCropHighlightView_aviary_strokeColor2 -> AviaryCropHighlightView_aviary_strokeColor2
    int AviaryCropHighlightView_aviary_strokeColor3 -> AviaryCropHighlightView_aviary_strokeColor3
    int AviaryCropHighlightView_aviary_strokeColor4 -> AviaryCropHighlightView_aviary_strokeColor4
    int AviaryCropHighlightView_aviary_strokeWidth -> AviaryCropHighlightView_aviary_strokeWidth
    int AviaryCropHighlightView_aviary_strokeWidth2 -> AviaryCropHighlightView_aviary_strokeWidth2
    int[] AviaryCropImageView -> AviaryCropImageView
    int AviaryCropImageView_aviary_highlightStyle -> AviaryCropImageView_aviary_highlightStyle
    int AviaryCropImageView_aviary_minCropSize -> AviaryCropImageView_aviary_minCropSize
    int[] AviaryDrawableHighlightView -> AviaryDrawableHighlightView
    int AviaryDrawableHighlightView_android_background -> AviaryDrawableHighlightView_android_background
    int AviaryDrawableHighlightView_android_padding -> AviaryDrawableHighlightView_android_padding
    int AviaryDrawableHighlightView_aviary_deleteDrawable -> AviaryDrawableHighlightView_aviary_deleteDrawable
    int AviaryDrawableHighlightView_aviary_minSize -> AviaryDrawableHighlightView_aviary_minSize
    int AviaryDrawableHighlightView_aviary_moveEnabled -> AviaryDrawableHighlightView_aviary_moveEnabled
    int AviaryDrawableHighlightView_aviary_resizeEdgeMode -> AviaryDrawableHighlightView_aviary_resizeEdgeMode
    int AviaryDrawableHighlightView_aviary_resizeEnabled -> AviaryDrawableHighlightView_aviary_resizeEnabled
    int AviaryDrawableHighlightView_aviary_rotateDrawable -> AviaryDrawableHighlightView_aviary_rotateDrawable
    int AviaryDrawableHighlightView_aviary_rotateEnabled -> AviaryDrawableHighlightView_aviary_rotateEnabled
    int[] AviaryEdgeEffect -> AviaryEdgeEffect
    int AviaryEdgeEffect_aviary_blendMode -> AviaryEdgeEffect_aviary_blendMode
    int AviaryEdgeEffect_aviary_edgeColor -> AviaryEdgeEffect_aviary_edgeColor
    int AviaryEdgeEffect_aviary_edgeDrawable -> AviaryEdgeEffect_aviary_edgeDrawable
    int AviaryEdgeEffect_aviary_glowDrawable -> AviaryEdgeEffect_aviary_glowDrawable
    int[] AviaryEffectThumbLayout -> AviaryEffectThumbLayout
    int AviaryEffectThumbLayout_aviary_animationDuration -> AviaryEffectThumbLayout_aviary_animationDuration
    int[] AviaryGallery -> AviaryGallery
    int[] AviaryGalleryIndicatorView -> AviaryGalleryIndicatorView
    int AviaryGalleryIndicatorView_aviary_drawableStyle -> AviaryGalleryIndicatorView_aviary_drawableStyle
    int[] AviaryGalleryTopIndicator -> AviaryGalleryTopIndicator
    int AviaryGalleryTopIndicator_android_minHeight -> AviaryGalleryTopIndicator_android_minHeight
    int AviaryGalleryTopIndicator_android_shadowColor -> AviaryGalleryTopIndicator_android_shadowColor
    int AviaryGalleryTopIndicator_android_shadowDy -> AviaryGalleryTopIndicator_android_shadowDy
    int AviaryGalleryTopIndicator_aviary_color1 -> AviaryGalleryTopIndicator_aviary_color1
    int AviaryGalleryTopIndicator_aviary_direction -> AviaryGalleryTopIndicator_aviary_direction
    int AviaryGalleryTopIndicator_aviary_indicatorSize -> AviaryGalleryTopIndicator_aviary_indicatorSize
    int AviaryGalleryTopIndicator_aviary_offsety -> AviaryGalleryTopIndicator_aviary_offsety
    int AviaryGalleryTopIndicator_aviary_strokeColor -> AviaryGalleryTopIndicator_aviary_strokeColor
    int AviaryGalleryTopIndicator_aviary_strokeColor2 -> AviaryGalleryTopIndicator_aviary_strokeColor2
    int AviaryGalleryTopIndicator_aviary_strokeWidth -> AviaryGalleryTopIndicator_aviary_strokeWidth
    int AviaryGallery_android_animationDuration -> AviaryGallery_android_animationDuration
    int[] AviaryHighlightImageButton -> AviaryHighlightImageButton
    int AviaryHighlightImageButton_android_focusable -> AviaryHighlightImageButton_android_focusable
    int AviaryHighlightImageButton_aviary_blendMode -> AviaryHighlightImageButton_aviary_blendMode
    int AviaryHighlightImageButton_aviary_checked -> AviaryHighlightImageButton_aviary_checked
    int AviaryHighlightImageButton_aviary_glowMode -> AviaryHighlightImageButton_aviary_glowMode
    int AviaryHighlightImageButton_aviary_glowSize -> AviaryHighlightImageButton_aviary_glowSize
    int AviaryHighlightImageButton_aviary_highlightColorChecked -> AviaryHighlightImageButton_aviary_highlightColorChecked
    int AviaryHighlightImageButton_aviary_highlightColorPressed -> AviaryHighlightImageButton_aviary_highlightColorPressed
    int AviaryHighlightImageButton_aviary_highlightColorSelected -> AviaryHighlightImageButton_aviary_highlightColorSelected
    int AviaryHighlightImageButton_aviary_highlightMode -> AviaryHighlightImageButton_aviary_highlightMode
    int AviaryHighlightImageButton_aviary_toggleable -> AviaryHighlightImageButton_aviary_toggleable
    int AviaryHighlightImageButton_aviary_untoggleable -> AviaryHighlightImageButton_aviary_untoggleable
    int[] AviaryImageRestoreSwitcher -> AviaryImageRestoreSwitcher
    int AviaryImageRestoreSwitcher_aviary_restoreTimeout -> AviaryImageRestoreSwitcher_aviary_restoreTimeout
    int[] AviaryImageViewDrawableOverlay -> AviaryImageViewDrawableOverlay
    int AviaryImageViewDrawableOverlay_aviary_highlightStyle -> AviaryImageViewDrawableOverlay_aviary_highlightStyle
    int[] AviaryPluginDividerDrawable -> AviaryPluginDividerDrawable
    int AviaryPluginDividerDrawable_android_textColor -> AviaryPluginDividerDrawable_android_textColor
    int AviaryPluginDividerDrawable_aviary_strokeColor -> AviaryPluginDividerDrawable_aviary_strokeColor
    int AviaryPluginDividerDrawable_aviary_strokeWidth -> AviaryPluginDividerDrawable_aviary_strokeWidth
    int AviaryPluginDividerDrawable_aviary_textPerc -> AviaryPluginDividerDrawable_aviary_textPerc
    int AviaryPluginDividerDrawable_aviary_typeface -> AviaryPluginDividerDrawable_aviary_typeface
    int[] AviaryPreviewFillDrawable -> AviaryPreviewFillDrawable
    int AviaryPreviewFillDrawable_aviary_radius -> AviaryPreviewFillDrawable_aviary_radius
    int AviaryPreviewFillDrawable_aviary_strokeColor -> AviaryPreviewFillDrawable_aviary_strokeColor
    int AviaryPreviewFillDrawable_aviary_strokeWidth -> AviaryPreviewFillDrawable_aviary_strokeWidth
    int[] AviaryPreviewSpotDrawable -> AviaryPreviewSpotDrawable
    int AviaryPreviewSpotDrawable_aviary_bg_color1 -> AviaryPreviewSpotDrawable_aviary_bg_color1
    int AviaryPreviewSpotDrawable_aviary_bg_color2 -> AviaryPreviewSpotDrawable_aviary_bg_color2
    int AviaryPreviewSpotDrawable_aviary_color1 -> AviaryPreviewSpotDrawable_aviary_color1
    int AviaryPreviewSpotDrawable_aviary_color2 -> AviaryPreviewSpotDrawable_aviary_color2
    int AviaryPreviewSpotDrawable_aviary_color3 -> AviaryPreviewSpotDrawable_aviary_color3
    int AviaryPreviewSpotDrawable_aviary_color4 -> AviaryPreviewSpotDrawable_aviary_color4
    int AviaryPreviewSpotDrawable_aviary_glowSize -> AviaryPreviewSpotDrawable_aviary_glowSize
    int AviaryPreviewSpotDrawable_aviary_highlightColorChecked -> AviaryPreviewSpotDrawable_aviary_highlightColorChecked
    int AviaryPreviewSpotDrawable_aviary_strokeColor -> AviaryPreviewSpotDrawable_aviary_strokeColor
    int AviaryPreviewSpotDrawable_aviary_strokeWidth -> AviaryPreviewSpotDrawable_aviary_strokeWidth
    int[] AviarySeekBar -> AviarySeekBar
    int AviarySeekBar_aviarySeekBarSecondary -> AviarySeekBar_aviarySeekBarSecondary
    int AviarySeekBar_aviarySeekBarSecondaryCenter -> AviarySeekBar_aviarySeekBarSecondaryCenter
    int AviarySeekBar_aviarySeekBarSecondaryInverted -> AviarySeekBar_aviarySeekBarSecondaryInverted
    int AviarySeekBar_aviarySeekBarThumb -> AviarySeekBar_aviarySeekBarThumb
    int AviarySeekBar_aviarySeekBarThumbOffset -> AviarySeekBar_aviarySeekBarThumbOffset
    int[] AviaryTextView -> AviaryTextView
    int AviaryTextView_android_clickable -> AviaryTextView_android_clickable
    int AviaryTextView_android_focusable -> AviaryTextView_android_focusable
    int AviaryTextView_aviary_typeface -> AviaryTextView_aviary_typeface
    int[] AviaryTiltShiftImageView -> AviaryTiltShiftImageView
    int AviaryTiltShiftImageView_aviaryCrosshair_enabled -> AviaryTiltShiftImageView_aviaryCrosshair_enabled
    int AviaryTiltShiftImageView_aviaryWave_animationDuration -> AviaryTiltShiftImageView_aviaryWave_animationDuration
    int AviaryTiltShiftImageView_aviaryWave_innerRadius -> AviaryTiltShiftImageView_aviaryWave_innerRadius
    int AviaryTiltShiftImageView_aviaryWave_outerRadius -> AviaryTiltShiftImageView_aviaryWave_outerRadius
    int AviaryTiltShiftImageView_aviaryWave_pointDrawable -> AviaryTiltShiftImageView_aviaryWave_pointDrawable
    int AviaryTiltShiftImageView_aviary_animationDuration -> AviaryTiltShiftImageView_aviary_animationDuration
    int AviaryTiltShiftImageView_aviary_crosshair_edge -> AviaryTiltShiftImageView_aviary_crosshair_edge
    int AviaryTiltShiftImageView_aviary_crosshair_radius -> AviaryTiltShiftImageView_aviary_crosshair_radius
    int AviaryTiltShiftImageView_aviary_crosshair_strokeWidth -> AviaryTiltShiftImageView_aviary_crosshair_strokeWidth
    int AviaryTiltShiftImageView_aviary_shape_defaultsize -> AviaryTiltShiftImageView_aviary_shape_defaultsize
    int AviaryTiltShiftImageView_aviary_shape_maxsize -> AviaryTiltShiftImageView_aviary_shape_maxsize
    int AviaryTiltShiftImageView_aviary_shape_minsize -> AviaryTiltShiftImageView_aviary_shape_minsize
    int AviaryTiltShiftImageView_aviary_strokeColor -> AviaryTiltShiftImageView_aviary_strokeColor
    int AviaryTiltShiftImageView_aviary_strokeColor2 -> AviaryTiltShiftImageView_aviary_strokeColor2
    int AviaryTiltShiftImageView_aviary_strokeWidth -> AviaryTiltShiftImageView_aviary_strokeWidth
    int AviaryTiltShiftImageView_aviary_timeout -> AviaryTiltShiftImageView_aviary_timeout
    int[] AviaryWheel -> AviaryWheel
    int AviaryWheel_aviaryWheelIndicator -> AviaryWheel_aviaryWheelIndicator
    int AviaryWheel_aviaryWheelLine -> AviaryWheel_aviaryWheelLine
    int AviaryWheel_aviaryWheelShadowTop -> AviaryWheel_aviaryWheelShadowTop
    int AviaryWheel_aviary_edgeStyle -> AviaryWheel_aviary_edgeStyle
    int[] AviaryWorkspace -> AviaryWorkspace
    int[] AviaryWorkspaceIndicator -> AviaryWorkspaceIndicator
    int AviaryWorkspaceIndicator_aviary_indicatorId -> AviaryWorkspaceIndicator_aviary_indicatorId
    int AviaryWorkspace_aviary_defaultScreen -> AviaryWorkspace_aviary_defaultScreen
    int AviaryWorkspace_aviary_overscroll -> AviaryWorkspace_aviary_overscroll
    int[] HListView -> HListView
    int HListView_android_divider -> HListView_android_divider
    int HListView_android_entries -> HListView_android_entries
    int HListView_dividerWidth -> HListView_dividerWidth
    int HListView_footerDividersEnabled -> HListView_footerDividersEnabled
    int HListView_headerDividersEnabled -> HListView_headerDividersEnabled
    int HListView_measureWithChild -> HListView_measureWithChild
    int HListView_overScrollFooter -> HListView_overScrollFooter
    int HListView_overScrollHeader -> HListView_overScrollHeader
    int[] Theme -> Theme
    int Theme_aviaryAdjustDividerWeight -> Theme_aviaryAdjustDividerWeight
    int Theme_aviaryAdjustImageViewStyle -> Theme_aviaryAdjustImageViewStyle
    int Theme_aviaryAdjustItemWeight -> Theme_aviaryAdjustItemWeight
    int Theme_aviaryAdjustOptionPanelToggleButtonStyle -> Theme_aviaryAdjustOptionPanelToggleButtonStyle
    int Theme_aviaryAdjustOptionPanelToggleCenterButtonStyle -> Theme_aviaryAdjustOptionPanelToggleCenterButtonStyle
    int Theme_aviaryAdjustOptionPanelToggleLeftButtonStyle -> Theme_aviaryAdjustOptionPanelToggleLeftButtonStyle
    int Theme_aviaryAdjustOptionPanelToggleRightButtonStyle -> Theme_aviaryAdjustOptionPanelToggleRightButtonStyle
    int Theme_aviaryBackgroundColor -> Theme_aviaryBackgroundColor
    int Theme_aviaryBottomBarHeight -> Theme_aviaryBottomBarHeight
    int Theme_aviaryBottomBarHorizontalViewStyle -> Theme_aviaryBottomBarHorizontalViewStyle
    int Theme_aviaryBottomBarLogoContainerStyle -> Theme_aviaryBottomBarLogoContainerStyle
    int Theme_aviaryBottomBarLogoImageStyle -> Theme_aviaryBottomBarLogoImageStyle
    int Theme_aviaryBottomBarOptionPanelContainerStyle -> Theme_aviaryBottomBarOptionPanelContainerStyle
    int Theme_aviaryBottomBarOptionPanelContainerStyleNoMargin -> Theme_aviaryBottomBarOptionPanelContainerStyleNoMargin
    int Theme_aviaryBottomBarOptionPanelStyle -> Theme_aviaryBottomBarOptionPanelStyle
    int Theme_aviaryBottomBarToolFeedBackStyle -> Theme_aviaryBottomBarToolFeedBackStyle
    int Theme_aviaryBottomBarToolImageStyle -> Theme_aviaryBottomBarToolImageStyle
    int Theme_aviaryBottomBarToolStyle -> Theme_aviaryBottomBarToolStyle
    int Theme_aviaryBottomBarToolTextStyle -> Theme_aviaryBottomBarToolTextStyle
    int Theme_aviaryBottomBarViewFlipperStyle -> Theme_aviaryBottomBarViewFlipperStyle
    int Theme_aviaryColorSplashOptionPanelToggleButtonStyle -> Theme_aviaryColorSplashOptionPanelToggleButtonStyle
    int Theme_aviaryColorSplashOptionPanelToggleLeftButtonStyle -> Theme_aviaryColorSplashOptionPanelToggleLeftButtonStyle
    int Theme_aviaryColorSplashOptionPanelToggleRightButtonStyle -> Theme_aviaryColorSplashOptionPanelToggleRightButtonStyle
    int Theme_aviaryCropHighlightStyle -> Theme_aviaryCropHighlightStyle
    int Theme_aviaryCropImageViewStyle -> Theme_aviaryCropImageViewStyle
    int Theme_aviaryCustomDialogButtonSecondaryStyle -> Theme_aviaryCustomDialogButtonSecondaryStyle
    int Theme_aviaryCustomDialogButtonStyle -> Theme_aviaryCustomDialogButtonStyle
    int Theme_aviaryDefaultTextStyle -> Theme_aviaryDefaultTextStyle
    int Theme_aviaryEdgeEffectDefaultStyle -> Theme_aviaryEdgeEffectDefaultStyle
    int Theme_aviaryEffectThumbDividerLeftContainerStyle -> Theme_aviaryEffectThumbDividerLeftContainerStyle
    int Theme_aviaryEffectThumbDividerLeftStyle -> Theme_aviaryEffectThumbDividerLeftStyle
    int Theme_aviaryEffectThumbDividerRightContainerStyle -> Theme_aviaryEffectThumbDividerRightContainerStyle
    int Theme_aviaryEffectThumbDividerRightStyle -> Theme_aviaryEffectThumbDividerRightStyle
    int Theme_aviaryEffectThumbDividerStyle -> Theme_aviaryEffectThumbDividerStyle
    int Theme_aviaryEffectThumbDividerTextStyle -> Theme_aviaryEffectThumbDividerTextStyle
    int Theme_aviaryEffectThumbHiddenSelector -> Theme_aviaryEffectThumbHiddenSelector
    int Theme_aviaryEffectThumbLayoutExternalStyle -> Theme_aviaryEffectThumbLayoutExternalStyle
    int Theme_aviaryEffectThumbLayoutStyle -> Theme_aviaryEffectThumbLayoutStyle
    int Theme_aviaryEffectThumbTextStyle -> Theme_aviaryEffectThumbTextStyle
    int Theme_aviaryEffectsHorizontalViewStyle -> Theme_aviaryEffectsHorizontalViewStyle
    int Theme_aviaryEnhanceItemWeight -> Theme_aviaryEnhanceItemWeight
    int Theme_aviaryEnhanceOptionPanelToggleCenterButtonStyle -> Theme_aviaryEnhanceOptionPanelToggleCenterButtonStyle
    int Theme_aviaryEnhanceOptionPanelToggleLeftButtonStyle -> Theme_aviaryEnhanceOptionPanelToggleLeftButtonStyle
    int Theme_aviaryEnhanceOptionPanelToggleRightButtonStyle -> Theme_aviaryEnhanceOptionPanelToggleRightButtonStyle
    int Theme_aviaryFeedbackDialogDividerStyle -> Theme_aviaryFeedbackDialogDividerStyle
    int Theme_aviaryFeedbackDialogStyle -> Theme_aviaryFeedbackDialogStyle
    int Theme_aviaryFeedbackDialogTextMessageStyle -> Theme_aviaryFeedbackDialogTextMessageStyle
    int Theme_aviaryFeedbackDialogTextVersionStyle -> Theme_aviaryFeedbackDialogTextVersionStyle
    int Theme_aviaryFocusOptionPanelToggleLeftButtonStyle -> Theme_aviaryFocusOptionPanelToggleLeftButtonStyle
    int Theme_aviaryFocusOptionPanelToggleRightButtonStyle -> Theme_aviaryFocusOptionPanelToggleRightButtonStyle
    int Theme_aviaryFontLight -> Theme_aviaryFontLight
    int Theme_aviaryFontRegular -> Theme_aviaryFontRegular
    int Theme_aviaryGalleryBottomIndicatorStyle -> Theme_aviaryGalleryBottomIndicatorStyle
    int Theme_aviaryGalleryItemContainerStyle -> Theme_aviaryGalleryItemContainerStyle
    int Theme_aviaryGalleryItemCropImageViewStyle -> Theme_aviaryGalleryItemCropImageViewStyle
    int Theme_aviaryGalleryItemCropTextCustomStyle -> Theme_aviaryGalleryItemCropTextCustomStyle
    int Theme_aviaryGalleryItemCropTextNormalStyle -> Theme_aviaryGalleryItemCropTextNormalStyle
    int Theme_aviaryGalleryItemDividerStyle -> Theme_aviaryGalleryItemDividerStyle
    int Theme_aviaryGalleryItemHighlightImageStyle -> Theme_aviaryGalleryItemHighlightImageStyle
    int Theme_aviaryGalleryStyle -> Theme_aviaryGalleryStyle
    int Theme_aviaryGalleryTopIndicatorStyle -> Theme_aviaryGalleryTopIndicatorStyle
    int Theme_aviaryHiddenEditTextStyle -> Theme_aviaryHiddenEditTextStyle
    int Theme_aviaryHiddenEditTextStyleMultiline -> Theme_aviaryHiddenEditTextStyleMultiline
    int Theme_aviaryHighlightImageButtonStyle -> Theme_aviaryHighlightImageButtonStyle
    int Theme_aviaryIAPBannerTextStyle -> Theme_aviaryIAPBannerTextStyle
    int Theme_aviaryIAPDialogButtonErrorStyle -> Theme_aviaryIAPDialogButtonErrorStyle
    int Theme_aviaryIAPDialogContainerStyle -> Theme_aviaryIAPDialogContainerStyle
    int Theme_aviaryIAPDialogDownloadButtonStyle -> Theme_aviaryIAPDialogDownloadButtonStyle
    int Theme_aviaryIAPDialogDownloadButtonTextStyle -> Theme_aviaryIAPDialogDownloadButtonTextStyle
    int Theme_aviaryIAPDialogGridBackground -> Theme_aviaryIAPDialogGridBackground
    int Theme_aviaryIAPDialogGridTopStyle -> Theme_aviaryIAPDialogGridTopStyle
    int Theme_aviaryIAPDialogHeightWeight -> Theme_aviaryIAPDialogHeightWeight
    int Theme_aviaryIAPDialogIcon -> Theme_aviaryIAPDialogIcon
    int Theme_aviaryIAPDialogListItemTextStyle -> Theme_aviaryIAPDialogListItemTextStyle
    int Theme_aviaryIAPDialogListItemTitleStyle -> Theme_aviaryIAPDialogListItemTitleStyle
    int Theme_aviaryIAPDialogMainLayout -> Theme_aviaryIAPDialogMainLayout
    int Theme_aviaryIAPDialogMarginTopWeight -> Theme_aviaryIAPDialogMarginTopWeight
    int Theme_aviaryIAPDialogRestoreAllButtonStyle -> Theme_aviaryIAPDialogRestoreAllButtonStyle
    int Theme_aviaryIAPDialogRestoreDialogTextStyle -> Theme_aviaryIAPDialogRestoreDialogTextStyle
    int Theme_aviaryIAPDialogShadowBottom -> Theme_aviaryIAPDialogShadowBottom
    int Theme_aviaryIAPDialogShadowTop -> Theme_aviaryIAPDialogShadowTop
    int Theme_aviaryIAPDialogTextErrorStyle -> Theme_aviaryIAPDialogTextErrorStyle
    int Theme_aviaryIAPDialogTextStyle -> Theme_aviaryIAPDialogTextStyle
    int Theme_aviaryIAPDialogTitleStyle -> Theme_aviaryIAPDialogTitleStyle
    int Theme_aviaryIAPDialogWidthWeight -> Theme_aviaryIAPDialogWidthWeight
    int Theme_aviaryIAPDialogWorkspaceCellEffects -> Theme_aviaryIAPDialogWorkspaceCellEffects
    int Theme_aviaryIAPDialogWorkspaceCellStickers -> Theme_aviaryIAPDialogWorkspaceCellStickers
    int Theme_aviaryIAPDialogWorkspaceIndicatorStyle -> Theme_aviaryIAPDialogWorkspaceIndicatorStyle
    int Theme_aviaryIAPDialogWorkspaceStyle -> Theme_aviaryIAPDialogWorkspaceStyle
    int Theme_aviaryImageRestoreViewStyle -> Theme_aviaryImageRestoreViewStyle
    int Theme_aviaryImageViewDrawableOverlaySticker -> Theme_aviaryImageViewDrawableOverlaySticker
    int Theme_aviaryImageViewDrawableOverlayStickerHighlightStyle -> Theme_aviaryImageViewDrawableOverlayStickerHighlightStyle
    int Theme_aviaryImageViewDrawableOverlayText -> Theme_aviaryImageViewDrawableOverlayText
    int Theme_aviaryImageViewDrawableOverlayTextHighlightStyle -> Theme_aviaryImageViewDrawableOverlayTextHighlightStyle
    int Theme_aviaryLensViewStyle -> Theme_aviaryLensViewStyle
    int Theme_aviaryLightGrayButtonStyle -> Theme_aviaryLightGrayButtonStyle
    int Theme_aviaryLoaderToastStyle -> Theme_aviaryLoaderToastStyle
    int Theme_aviaryMainImagePadding -> Theme_aviaryMainImagePadding
    int Theme_aviaryMemeButtonStyle -> Theme_aviaryMemeButtonStyle
    int Theme_aviaryMemeClearButtonStyle -> Theme_aviaryMemeClearButtonStyle
    int Theme_aviaryNavBarHeight -> Theme_aviaryNavBarHeight
    int Theme_aviaryNavBarRestoreButtonStyle -> Theme_aviaryNavBarRestoreButtonStyle
    int Theme_aviaryNavBarStyle -> Theme_aviaryNavBarStyle
    int Theme_aviaryNavButtonApplyStyle -> Theme_aviaryNavButtonApplyStyle
    int Theme_aviaryNavButtonStyle -> Theme_aviaryNavButtonStyle
    int Theme_aviaryNavDividerStyle -> Theme_aviaryNavDividerStyle
    int Theme_aviaryNavTitleStyle -> Theme_aviaryNavTitleStyle
    int Theme_aviaryOptionPanelBottomIndicatorStyle -> Theme_aviaryOptionPanelBottomIndicatorStyle
    int Theme_aviaryOptionPanelBottomLineStyle -> Theme_aviaryOptionPanelBottomLineStyle
    int Theme_aviaryOptionPanelDefaultButtonStyle -> Theme_aviaryOptionPanelDefaultButtonStyle
    int Theme_aviaryOptionPanelToggleButtonStyle -> Theme_aviaryOptionPanelToggleButtonStyle
    int Theme_aviaryOptionPanelToggleCenterButtonStyle -> Theme_aviaryOptionPanelToggleCenterButtonStyle
    int Theme_aviaryOptionPanelToggleLeftButtonStyle -> Theme_aviaryOptionPanelToggleLeftButtonStyle
    int Theme_aviaryOptionPanelToggleRightButtonStyle -> Theme_aviaryOptionPanelToggleRightButtonStyle
    int Theme_aviaryOptionPanelTopIndicatorStyle -> Theme_aviaryOptionPanelTopIndicatorStyle
    int Theme_aviaryPanelDisabledStatusBackground -> Theme_aviaryPanelDisabledStatusBackground
    int Theme_aviaryPreviewFillDrawableStyle -> Theme_aviaryPreviewFillDrawableStyle
    int Theme_aviaryPreviewSpotDrawableStyle -> Theme_aviaryPreviewSpotDrawableStyle
    int Theme_aviaryPreviewSpotViewStyle -> Theme_aviaryPreviewSpotViewStyle
    int Theme_aviaryPrimaryButtonStyle -> Theme_aviaryPrimaryButtonStyle
    int Theme_aviaryProgressBarActionBar -> Theme_aviaryProgressBarActionBar
    int Theme_aviaryProgressBarActionBarHeight -> Theme_aviaryProgressBarActionBarHeight
    int Theme_aviaryProgressBarActionBarWidth -> Theme_aviaryProgressBarActionBarWidth
    int Theme_aviaryProgressBarLarge -> Theme_aviaryProgressBarLarge
    int Theme_aviaryProgressBarLargeInverse -> Theme_aviaryProgressBarLargeInverse
    int Theme_aviaryProgressBarMedium -> Theme_aviaryProgressBarMedium
    int Theme_aviaryProgressBarMediumInverse -> Theme_aviaryProgressBarMediumInverse
    int Theme_aviaryProgressBarSmall -> Theme_aviaryProgressBarSmall
    int Theme_aviaryProgressBarSmallInverse -> Theme_aviaryProgressBarSmallInverse
    int Theme_aviarySecondaryButtonStyle -> Theme_aviarySecondaryButtonStyle
    int Theme_aviarySeekBarStyle -> Theme_aviarySeekBarStyle
    int Theme_aviarySplashDividerWeight -> Theme_aviarySplashDividerWeight
    int Theme_aviarySplashItemWeight -> Theme_aviarySplashItemWeight
    int Theme_aviarySymbolMinusStyle -> Theme_aviarySymbolMinusStyle
    int Theme_aviarySymbolPlusStyle -> Theme_aviarySymbolPlusStyle
    int Theme_aviaryTextAppearance -> Theme_aviaryTextAppearance
    int Theme_aviaryTextAppearanceInverted -> Theme_aviaryTextAppearanceInverted
    int Theme_aviaryTextAppearanceLarge -> Theme_aviaryTextAppearanceLarge
    int Theme_aviaryTextAppearanceLargeInverted -> Theme_aviaryTextAppearanceLargeInverted
    int Theme_aviaryTextAppearanceLargeNoSelection -> Theme_aviaryTextAppearanceLargeNoSelection
    int Theme_aviaryTextAppearanceMedium -> Theme_aviaryTextAppearanceMedium
    int Theme_aviaryTextAppearanceMediumInverted -> Theme_aviaryTextAppearanceMediumInverted
    int Theme_aviaryTextAppearanceMediumNoSelection -> Theme_aviaryTextAppearanceMediumNoSelection
    int Theme_aviaryTextAppearanceSmall -> Theme_aviaryTextAppearanceSmall
    int Theme_aviaryTextAppearanceSmallInverted -> Theme_aviaryTextAppearanceSmallInverted
    int Theme_aviaryTextAppearanceSmallNoSelection -> Theme_aviaryTextAppearanceSmallNoSelection
    int Theme_aviaryTiltShiftViewStyle -> Theme_aviaryTiltShiftViewStyle
    int Theme_aviaryToastExitAnimation -> Theme_aviaryToastExitAnimation
    int Theme_aviaryToggleButtonStyle -> Theme_aviaryToggleButtonStyle
    int Theme_aviaryWheelStyle -> Theme_aviaryWheelStyle
com.aviary.android.feather.async_tasks.AsyncImageManager -> com.aviary.android.feather.async_tasks.AsyncImageManager:
    int THUMBNAIL_LOADED -> THUMBNAIL_LOADED
    java.util.concurrent.ExecutorService mExecutor1 -> mExecutor1
    java.util.concurrent.ExecutorService mExecutor2 -> mExecutor2
    java.lang.Boolean mStopped -> mStopped
    com.aviary.android.feather.utils.SimpleBitmapCache mBitmapCache -> mBitmapCache
    com.aviary.android.feather.async_tasks.AsyncImageManager$OnImageLoadListener mListener -> mListener
    android.os.Handler mHandler -> mHandler
    com.aviary.android.feather.common.log.LoggerFactory$Logger logger -> logger
    void setOnLoadCompleteListener(com.aviary.android.feather.async_tasks.AsyncImageManager$OnImageLoadListener) -> setOnLoadCompleteListener
    void shutDownNow() -> shutDownNow
    void executeDelayed(java.util.concurrent.Callable,java.lang.String,android.widget.ImageView,int,com.aviary.android.feather.async_tasks.AsyncImageManager$Priority,long) -> executeDelayed
    void execute(java.util.concurrent.Callable,java.lang.String,android.widget.ImageView,int,com.aviary.android.feather.async_tasks.AsyncImageManager$Priority) -> execute
    com.aviary.android.feather.async_tasks.AsyncImageManager$MyRunnable getBitmapTask(android.widget.ImageView) -> getBitmapTask
    void clearCache() -> clearCache
    com.aviary.android.feather.async_tasks.AsyncImageManager$OnImageLoadListener access$0(com.aviary.android.feather.async_tasks.AsyncImageManager) -> access$0
    java.lang.Boolean access$1(com.aviary.android.feather.async_tasks.AsyncImageManager) -> access$1
    com.aviary.android.feather.async_tasks.AsyncImageManager$MyRunnable access$2(android.widget.ImageView) -> access$2
    com.aviary.android.feather.utils.SimpleBitmapCache access$3(com.aviary.android.feather.async_tasks.AsyncImageManager) -> access$3
    com.aviary.android.feather.common.log.LoggerFactory$Logger access$4() -> access$4
    android.os.Handler access$5(com.aviary.android.feather.async_tasks.AsyncImageManager) -> access$5
com.aviary.android.feather.async_tasks.AsyncImageManager$1 -> com.aviary.android.feather.async_tasks.AsyncImageManager$1:
    com.aviary.android.feather.async_tasks.AsyncImageManager this$0 -> this$0
    java.util.concurrent.Callable val$executor -> val$executor
    java.lang.String val$hash -> val$hash
    android.widget.ImageView val$view -> val$view
    int val$tag -> val$tag
    com.aviary.android.feather.async_tasks.AsyncImageManager$Priority val$priority -> val$priority
    void run() -> run
com.aviary.android.feather.async_tasks.AsyncImageManager$2 -> com.aviary.android.feather.async_tasks.AsyncImageManager$2:
    com.aviary.android.feather.async_tasks.AsyncImageManager this$0 -> this$0
    java.lang.String val$hash -> val$hash
    int val$tag -> val$tag
    java.util.concurrent.Callable val$executor -> val$executor
    void run() -> run
com.aviary.android.feather.async_tasks.AsyncImageManager$CustomTag -> com.aviary.android.feather.async_tasks.AsyncImageManager$CustomTag:
    java.lang.ref.WeakReference taskReference -> taskReference
    com.aviary.android.feather.async_tasks.AsyncImageManager$MyRunnable getDownloaderTask() -> getDownloaderTask
com.aviary.android.feather.async_tasks.AsyncImageManager$MyHandler -> com.aviary.android.feather.async_tasks.AsyncImageManager$MyHandler:
    java.lang.ref.WeakReference mParent -> mParent
    void handleMessage(android.os.Message) -> handleMessage
com.aviary.android.feather.async_tasks.AsyncImageManager$MyRunnable -> com.aviary.android.feather.async_tasks.AsyncImageManager$MyRunnable:
    java.lang.ref.SoftReference mView -> mView
com.aviary.android.feather.async_tasks.AsyncImageManager$OnImageLoadListener -> com.aviary.android.feather.async_tasks.AsyncImageManager$OnImageLoadListener:
    void onLoadComplete(android.widget.ImageView,android.graphics.Bitmap,int) -> onLoadComplete
com.aviary.android.feather.async_tasks.AsyncImageManager$Priority -> com.aviary.android.feather.async_tasks.AsyncImageManager$Priority:
    com.aviary.android.feather.async_tasks.AsyncImageManager$Priority HIGH -> HIGH
    com.aviary.android.feather.async_tasks.AsyncImageManager$Priority LOW -> LOW
    com.aviary.android.feather.async_tasks.AsyncImageManager$Priority[] ENUM$VALUES -> ENUM$VALUES
    com.aviary.android.feather.async_tasks.AsyncImageManager$Priority[] values() -> values
    com.aviary.android.feather.async_tasks.AsyncImageManager$Priority valueOf(java.lang.String) -> valueOf
com.aviary.android.feather.async_tasks.AsyncImageManager$Thumb -> com.aviary.android.feather.async_tasks.AsyncImageManager$Thumb:
    android.graphics.Bitmap bitmap -> bitmap
    android.widget.ImageView image -> image
    int tag -> tag
com.aviary.android.feather.async_tasks.DownloadImageAsyncTask -> com.aviary.android.feather.async_tasks.DownloadImageAsyncTask:
    com.aviary.android.feather.async_tasks.DownloadImageAsyncTask$OnImageDownloadListener mListener -> mListener
    android.net.Uri mUri -> mUri
    java.lang.String error -> error
    com.aviary.android.feather.library.utils.ImageSizes mImageSize -> mImageSize
    int mMaxSize -> mMaxSize
    void setOnLoadListener(com.aviary.android.feather.async_tasks.DownloadImageAsyncTask$OnImageDownloadListener) -> setOnLoadListener
    void PreExecute() -> PreExecute
    android.graphics.Bitmap doInBackground(android.content.Context[]) -> doInBackground
    void PostExecute(android.graphics.Bitmap) -> PostExecute
    int getManagedMaxImageSize(android.content.Context) -> getManagedMaxImageSize
    void PostExecute(java.lang.Object) -> PostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.aviary.android.feather.async_tasks.DownloadImageAsyncTask$OnImageDownloadListener -> com.aviary.android.feather.async_tasks.DownloadImageAsyncTask$OnImageDownloadListener:
    void onDownloadStart() -> onDownloadStart
    void onDownloadComplete(android.graphics.Bitmap,com.aviary.android.feather.library.utils.ImageSizes) -> onDownloadComplete
    void onDownloadError(java.lang.String) -> onDownloadError
com.aviary.android.feather.async_tasks.ExifTask -> com.aviary.android.feather.async_tasks.ExifTask:
    android.os.Bundle run(com.aviary.android.feather.common.threading.ThreadPool$Worker,java.lang.String[]) -> run
    java.lang.Object run(com.aviary.android.feather.common.threading.ThreadPool$Worker,java.lang.Object[]) -> run
com.aviary.android.feather.cds.AviaryCds -> com.aviary.android.feather.cds.AviaryCds:
    java.lang.String PACKTYPE_EFFECT -> PACKTYPE_EFFECT
    java.lang.String PACKTYPE_STICKER -> PACKTYPE_STICKER
    java.lang.String PACKTYPE_FRAME -> PACKTYPE_FRAME
    int[] $SWITCH_TABLE$com$aviary$android$feather$cds$AviaryCds$PackType -> $SWITCH_TABLE$com$aviary$android$feather$cds$AviaryCds$PackType
    int[] $SWITCH_TABLE$com$aviary$android$feather$cds$AviaryCds$Size -> $SWITCH_TABLE$com$aviary$android$feather$cds$AviaryCds$Size
    java.lang.String getPreviewItemExt(com.aviary.android.feather.cds.AviaryCds$PackType) -> getPreviewItemExt
    java.lang.String getPackItemFilename(java.lang.String,com.aviary.android.feather.cds.AviaryCds$PackType,com.aviary.android.feather.cds.AviaryCds$Size) -> getPackItemFilename
    java.lang.String getStickerFilename(java.lang.String,com.aviary.android.feather.cds.AviaryCds$Size) -> getStickerFilename
    int[] $SWITCH_TABLE$com$aviary$android$feather$cds$AviaryCds$PackType() -> $SWITCH_TABLE$com$aviary$android$feather$cds$AviaryCds$PackType
    int[] $SWITCH_TABLE$com$aviary$android$feather$cds$AviaryCds$Size() -> $SWITCH_TABLE$com$aviary$android$feather$cds$AviaryCds$Size
com.aviary.android.feather.cds.AviaryCds$ContentType -> com.aviary.android.feather.cds.AviaryCds$ContentType:
    com.aviary.android.feather.cds.AviaryCds$ContentType PREVIEW -> PREVIEW
    com.aviary.android.feather.cds.AviaryCds$ContentType CONTENT -> CONTENT
    com.aviary.android.feather.cds.AviaryCds$ContentType MESSAGE -> MESSAGE
    com.aviary.android.feather.cds.AviaryCds$ContentType[] ENUM$VALUES -> ENUM$VALUES
    com.aviary.android.feather.cds.AviaryCds$ContentType[] values() -> values
    com.aviary.android.feather.cds.AviaryCds$ContentType valueOf(java.lang.String) -> valueOf
com.aviary.android.feather.cds.AviaryCds$MessageType -> com.aviary.android.feather.cds.AviaryCds$MessageType:
    com.aviary.android.feather.cds.AviaryCds$MessageType LAUNCH -> LAUNCH
    com.aviary.android.feather.cds.AviaryCds$MessageType[] ENUM$VALUES -> ENUM$VALUES
    com.aviary.android.feather.cds.AviaryCds$MessageType[] values() -> values
    com.aviary.android.feather.cds.AviaryCds$MessageType valueOf(java.lang.String) -> valueOf
com.aviary.android.feather.cds.AviaryCds$PackType -> com.aviary.android.feather.cds.AviaryCds$PackType:
    com.aviary.android.feather.cds.AviaryCds$PackType FRAME -> FRAME
    com.aviary.android.feather.cds.AviaryCds$PackType EFFECT -> EFFECT
    com.aviary.android.feather.cds.AviaryCds$PackType STICKER -> STICKER
    com.aviary.android.feather.cds.AviaryCds$PackType[] ENUM$VALUES -> ENUM$VALUES
    com.aviary.android.feather.cds.AviaryCds$PackType fromString(java.lang.String) -> fromString
    java.lang.String toCdsString() -> toCdsString
    com.aviary.android.feather.cds.AviaryCds$PackType[] values() -> values
    com.aviary.android.feather.cds.AviaryCds$PackType valueOf(java.lang.String) -> valueOf
com.aviary.android.feather.cds.AviaryCds$Permission -> com.aviary.android.feather.cds.AviaryCds$Permission:
    com.aviary.android.feather.cds.AviaryCds$Permission hires -> hires
    com.aviary.android.feather.cds.AviaryCds$Permission whitelabel -> whitelabel
    com.aviary.android.feather.cds.AviaryCds$Permission kill -> kill
    com.aviary.android.feather.cds.AviaryCds$Permission[] ENUM$VALUES -> ENUM$VALUES
    com.aviary.android.feather.cds.AviaryCds$Permission[] values() -> values
    com.aviary.android.feather.cds.AviaryCds$Permission valueOf(java.lang.String) -> valueOf
com.aviary.android.feather.cds.AviaryCds$Size -> com.aviary.android.feather.cds.AviaryCds$Size:
    com.aviary.android.feather.cds.AviaryCds$Size Small -> Small
    com.aviary.android.feather.cds.AviaryCds$Size Medium -> Medium
    com.aviary.android.feather.cds.AviaryCds$Size Large -> Large
    com.aviary.android.feather.cds.AviaryCds$Size[] ENUM$VALUES -> ENUM$VALUES
    com.aviary.android.feather.cds.AviaryCds$Size[] values() -> values
    com.aviary.android.feather.cds.AviaryCds$Size valueOf(java.lang.String) -> valueOf
com.aviary.android.feather.cds.AviaryCdsContentValidator -> com.aviary.android.feather.cds.AviaryCdsContentValidator:
    com.aviary.android.feather.cds.AviaryCdsContentValidator$ContentValidator mInstance -> mInstance
    int[] $SWITCH_TABLE$com$aviary$android$feather$cds$AviaryCds$PackType -> $SWITCH_TABLE$com$aviary$android$feather$cds$AviaryCds$PackType
    boolean validate(android.content.Context,long,java.io.File,boolean) -> validate
    int[] $SWITCH_TABLE$com$aviary$android$feather$cds$AviaryCds$PackType() -> $SWITCH_TABLE$com$aviary$android$feather$cds$AviaryCds$PackType
com.aviary.android.feather.cds.AviaryCdsContentValidator$ContentValidator -> com.aviary.android.feather.cds.AviaryCdsContentValidator$ContentValidator:
    boolean validateItem(java.lang.String,java.util.zip.ZipFile) -> validateItem
    boolean validateItem(java.lang.String,java.util.List) -> validateItem
com.aviary.android.feather.cds.AviaryCdsContentValidator$EffectValidator -> com.aviary.android.feather.cds.AviaryCdsContentValidator$EffectValidator:
    boolean validateItem(java.lang.String,java.util.zip.ZipFile) -> validateItem
    boolean validateItem(java.lang.String,java.util.List) -> validateItem
com.aviary.android.feather.cds.AviaryCdsContentValidator$FrameValidator -> com.aviary.android.feather.cds.AviaryCdsContentValidator$FrameValidator:
    boolean validateItem(java.lang.String,java.util.zip.ZipFile) -> validateItem
    boolean validateItem(java.lang.String,java.util.List) -> validateItem
com.aviary.android.feather.cds.AviaryCdsContentValidator$StickerValidator -> com.aviary.android.feather.cds.AviaryCdsContentValidator$StickerValidator:
    boolean validateItem(java.lang.String,java.util.zip.ZipFile) -> validateItem
    boolean validateItem(java.lang.String,java.util.List) -> validateItem
com.aviary.android.feather.cds.AviaryCdsDefaultContentLoader -> com.aviary.android.feather.cds.AviaryCdsDefaultContentLoader:
    com.aviary.android.feather.common.log.LoggerFactory$Logger logger -> logger
    java.lang.String DEFAULT_EFFECTS_JSON -> DEFAULT_EFFECTS_JSON
    java.lang.String DEFAULT_STICKERS_JSON -> DEFAULT_STICKERS_JSON
    java.lang.String DEFAULT_FRAMES_JSON -> DEFAULT_FRAMES_JSON
    java.lang.String ASSET_BASE_URL -> ASSET_BASE_URL
    android.content.Context mContext -> mContext
    boolean loadDefaultContent(android.database.sqlite.SQLiteDatabase) -> loadDefaultContent
    void updateManifestVersion(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String) -> updateManifestVersion
    void loadPackContent(android.database.sqlite.SQLiteDatabase,org.json.JSONObject,boolean) -> loadPackContent
    android.database.Cursor getPackByIdentifier(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[]) -> getPackByIdentifier
    long insertNewPackContentAndItems(android.database.sqlite.SQLiteDatabase,android.content.ContentValues[]) -> insertNewPackContentAndItems
    void extractIcon(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,long) -> extractIcon
    int updateIconPath(android.database.sqlite.SQLiteDatabase,long,java.lang.String,int) -> updateIconPath
    void extractContent(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,long,java.lang.String) -> extractContent
    int updateContentPath(android.database.sqlite.SQLiteDatabase,long,java.lang.String) -> updateContentPath
com.aviary.android.feather.cds.AviaryCdsDownloaderFactory -> com.aviary.android.feather.cds.AviaryCdsDownloaderFactory:
    com.aviary.android.feather.common.log.LoggerFactory$Logger logger -> logger
    int[] $SWITCH_TABLE$com$aviary$android$feather$cds$AviaryCds$ContentType -> $SWITCH_TABLE$com$aviary$android$feather$cds$AviaryCds$ContentType
    com.aviary.android.feather.cds.AviaryCdsDownloaderFactory$Downloader create(com.aviary.android.feather.cds.AviaryCds$ContentType) -> create
    int[] $SWITCH_TABLE$com$aviary$android$feather$cds$AviaryCds$ContentType() -> $SWITCH_TABLE$com$aviary$android$feather$cds$AviaryCds$ContentType
com.aviary.android.feather.cds.AviaryCdsDownloaderFactory$ContentDownloader -> com.aviary.android.feather.cds.AviaryCdsDownloaderFactory$ContentDownloader:
    java.lang.String download(android.content.Context,long,boolean) -> download
    java.lang.String createExternalDownloadDirectory() -> createExternalDownloadDirectory
    boolean getExternalStorageAvailable() -> getExternalStorageAvailable
com.aviary.android.feather.cds.AviaryCdsDownloaderFactory$Downloader -> com.aviary.android.feather.cds.AviaryCdsDownloaderFactory$Downloader:
    java.lang.String download(android.content.Context,long) -> download
    java.lang.String download(android.content.Context,long,boolean) -> download
com.aviary.android.feather.cds.AviaryCdsDownloaderFactory$MessageDownloader -> com.aviary.android.feather.cds.AviaryCdsDownloaderFactory$MessageDownloader:
    java.lang.String download(android.content.Context,long,boolean) -> download
com.aviary.android.feather.cds.AviaryCdsDownloaderFactory$PreviewDownloader -> com.aviary.android.feather.cds.AviaryCdsDownloaderFactory$PreviewDownloader:
    java.lang.String download(android.content.Context,long,boolean) -> download
com.aviary.android.feather.cds.AviaryCdsPreviewValidator -> com.aviary.android.feather.cds.AviaryCdsPreviewValidator:
    boolean validate(android.content.Context,long,java.io.File,boolean) -> validate
com.aviary.android.feather.cds.AviaryCdsProvider -> com.aviary.android.feather.cds.AviaryCdsProvider:
    android.content.UriMatcher mUriMatcher -> mUriMatcher
    com.aviary.android.feather.cds.CdsDatabaseHelper mDbHelper -> mDbHelper
    java.lang.String mProviderBaseUri -> mProviderBaseUri
    com.aviary.android.feather.common.log.LoggerFactory$Logger logger -> logger
    int MATCH_MANIFEST_VERSION -> MATCH_MANIFEST_VERSION
    int MATCH_ALL_MESSAGES -> MATCH_ALL_MESSAGES
    int MATCH_MESSAGE_BY_IDENTIFIER -> MATCH_MESSAGE_BY_IDENTIFIER
    int MATCH_MESSAGE_CONTENT_BY_ID -> MATCH_MESSAGE_CONTENT_BY_ID
    int MATCH_PACK_BY_ID -> MATCH_PACK_BY_ID
    int MATCH_PACK_BY_IDENTIFIER -> MATCH_PACK_BY_IDENTIFIER
    int MATCH_PACK_LIST -> MATCH_PACK_LIST
    int MATCH_PACK_CONTENT_BY_ID -> MATCH_PACK_CONTENT_BY_ID
    int MATCH_PACK_CONTENT_BY_IDENTIFIER -> MATCH_PACK_CONTENT_BY_IDENTIFIER
    int MATCH_PACK_ITEM_LIST -> MATCH_PACK_ITEM_LIST
    int MATCH_LIST_CONTENT_AVAILABLE_BY_TYPE -> MATCH_LIST_CONTENT_AVAILABLE_BY_TYPE
    int MATCH_PACK_ITEM_BY_ID -> MATCH_PACK_ITEM_BY_ID
    int MATCH_ACTIVE_MESSAGE -> MATCH_ACTIVE_MESSAGE
    int MATCH_NEXT_MESSAGE -> MATCH_NEXT_MESSAGE
    int MATCH_LIST_CONTENT_AVAILABLE_FOR_RESTORE_BY_TYPE -> MATCH_LIST_CONTENT_AVAILABLE_FOR_RESTORE_BY_TYPE
    int MATCH_LIST_CONTENT_AVAILABLE_NOT_PURCHASED_BY_TYPE -> MATCH_LIST_CONTENT_AVAILABLE_NOT_PURCHASED_BY_TYPE
    int MATCH_PACKS_CONTENT -> MATCH_PACKS_CONTENT
    int PACK_DOWNLOAD_STATUS -> PACK_DOWNLOAD_STATUS
    int DOWNLOAD_PACK_ID -> DOWNLOAD_PACK_ID
    int MATCH_TRAY -> MATCH_TRAY
    int MATCH_GET_PERMISSIONS -> MATCH_GET_PERMISSIONS
    int MATCH_INSERT_MANIFEST_VERSION -> MATCH_INSERT_MANIFEST_VERSION
    int MATCH_INSERT_DOWNLOAD_ENTRY -> MATCH_INSERT_DOWNLOAD_ENTRY
    int MATCH_REPLACE_PERMISSIONS -> MATCH_REPLACE_PERMISSIONS
    int MATCH_UPDATE_MESSAGE -> MATCH_UPDATE_MESSAGE
    int MATCH_UPDATE_CONTENT_MESSAGE -> MATCH_UPDATE_CONTENT_MESSAGE
    int MATCH_UPDATE_CONTENT -> MATCH_UPDATE_CONTENT
    int MATCH_UPDATE_PACK_BY_ID -> MATCH_UPDATE_PACK_BY_ID
    int UPDATE_DOWNLOAD_STATUS -> UPDATE_DOWNLOAD_STATUS
    int MATCH_UPDATE_CONTENT_PURCHASED_STATUS -> MATCH_UPDATE_CONTENT_PURCHASED_STATUS
    int MATCH_UPDATE_CONTENT_REQUEST_DOWNLOAD -> MATCH_UPDATE_CONTENT_REQUEST_DOWNLOAD
    int MATCH_UPDATE_MESSAGE_VISITED -> MATCH_UPDATE_MESSAGE_VISITED
    int MATCH_REMOVE_MESSAGE -> MATCH_REMOVE_MESSAGE
    int DELETE_DOWNLOAD_ENTRY_BY_ID -> DELETE_DOWNLOAD_ENTRY_BY_ID
    int MATCH_REMOVE_PACK_BY_ID -> MATCH_REMOVE_PACK_BY_ID
    int MATCH_BULK_PACK_CONTENT_AND_ITEMS -> MATCH_BULK_PACK_CONTENT_AND_ITEMS
    int MATCH_BULK_MESSAGE_AND_CONTENT -> MATCH_BULK_MESSAGE_AND_CONTENT
    java.lang.String getProviderBaseUri(android.content.Context) -> getProviderBaseUri
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    java.lang.String getType(android.net.Uri) -> getType
    android.os.Bundle clearAll(android.os.Bundle) -> clearAll
    android.os.Bundle dump(android.os.Bundle) -> dump
    android.os.Bundle updateMessageAndContent(android.os.Bundle) -> updateMessageAndContent
    android.os.Bundle updatePackAndContent(android.os.Bundle) -> updatePackAndContent
    android.content.ContentProviderResult[] applyBatch(java.util.ArrayList) -> applyBatch
    int bulkInsert(android.net.Uri,android.content.ContentValues[]) -> bulkInsert
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    boolean onCreate() -> onCreate
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    void setupUriMatcher(android.content.Context) -> setupUriMatcher
com.aviary.android.feather.cds.AviaryCdsReceiver -> com.aviary.android.feather.cds.AviaryCdsReceiver:
    com.aviary.android.feather.common.log.LoggerFactory$Logger logger -> logger
    int INVALID_PACK_ID -> INVALID_PACK_ID
    int NOTIFICATION_SUCCESS_ID -> NOTIFICATION_SUCCESS_ID
    java.lang.String ACTION_DOWNLOAD_PACKS_CONTENT -> ACTION_DOWNLOAD_PACKS_CONTENT
    java.lang.String ACTION_REMOVE_DOWNLOAD_CONTENT -> ACTION_REMOVE_DOWNLOAD_CONTENT
    java.lang.String ACTION_NOTIFICATION_DISMISSED -> ACTION_NOTIFICATION_DISMISSED
    java.lang.String PREF_ACTIVE_INSTALLED_COUNT -> PREF_ACTIVE_INSTALLED_COUNT
    java.lang.String PREF_ACTIVE_INSTALLED_LIST -> PREF_ACTIVE_INSTALLED_LIST
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void handleNotificationDismissed(android.content.Context,android.content.Intent) -> handleNotificationDismissed
    android.content.SharedPreferences getSharedPreferences(android.content.Context) -> getSharedPreferences
    void updatePrefsActiveNotification(android.content.Context,android.content.SharedPreferences,java.lang.String[],int) -> updatePrefsActiveNotification
    void clearPrefsActiveNotifications(android.content.Context,android.content.SharedPreferences) -> clearPrefsActiveNotifications
    java.lang.String[] getPrefsInstalledPacks(android.content.Context,android.content.SharedPreferences,java.lang.String) -> getPrefsInstalledPacks
    void handleActionDownloadPacksContent(android.content.Context,android.content.Intent) -> handleActionDownloadPacksContent
    void handleDeleteDownloadEntry(android.content.Context,android.content.Intent) -> handleDeleteDownloadEntry
    void tryDeleteDownloadedFile(android.app.DownloadManager,long) -> tryDeleteDownloadedFile
    void handleActionDownloadComplete(android.content.Context,long) -> handleActionDownloadComplete
    void handleDownloadSuccessful(android.content.Context,com.aviary.android.feather.cds.PacksColumns$PackCursorWrapper,com.aviary.android.feather.cds.PacksContentColumns$ContentCursorWrapper,java.io.File,long) -> handleDownloadSuccessful
    void setDeleteDownloadAlarm(android.content.Context,long) -> setDeleteDownloadAlarm
    android.app.PendingIntent getDeleteDownloadAlarmPendingIntent(android.content.Context,long) -> getDeleteDownloadAlarmPendingIntent
    long getPackIdFromDownload(android.database.Cursor) -> getPackIdFromDownload
    void setPackDownloadSuccessfulNotification(android.content.Context,long,java.lang.String,java.lang.String,java.lang.String) -> setPackDownloadSuccessfulNotification
    android.app.PendingIntent getNotificationSuccessIntent(android.content.Context) -> getNotificationSuccessIntent
    java.io.File unpackZipFile(java.io.File,android.content.Context,long,long,java.lang.String) -> unpackZipFile
    java.io.File unpackZipFile(java.io.InputStream,android.content.Context,long,long,java.lang.String) -> unpackZipFile
    void setNotificationForRedownloadPackage(android.content.Context,long,java.lang.String) -> setNotificationForRedownloadPackage
    boolean validatePackContentZip(android.content.Context,long,java.lang.String,java.io.File) -> validatePackContentZip
    com.aviary.android.feather.cds.AviaryCds$PackType convertPackType(java.lang.String) -> convertPackType
com.aviary.android.feather.cds.AviaryCdsReceiver$AviaryPackageNeedsRedownloadException -> com.aviary.android.feather.cds.AviaryCdsReceiver$AviaryPackageNeedsRedownloadException:
    long serialVersionUID -> serialVersionUID
    com.aviary.android.feather.cds.AviaryCdsReceiver this$0 -> this$0
com.aviary.android.feather.cds.AviaryCdsService -> com.aviary.android.feather.cds.AviaryCdsService:
    java.lang.String SERVER_ROOT_PRODUCTION -> SERVER_ROOT_PRODUCTION
    java.lang.String SERVER_ROOT_STAGING -> SERVER_ROOT_STAGING
    java.lang.String SERVER_ROOT_TEST -> SERVER_ROOT_TEST
    boolean TEST_SERVER -> TEST_SERVER
    java.lang.String CONTENT_PATH -> CONTENT_PATH
    java.lang.String MANIFEST_PATH -> MANIFEST_PATH
    java.lang.String mServerRoot -> mServerRoot
    boolean mDebugVersion -> mDebugVersion
    java.lang.String KEY_ACTION -> KEY_ACTION
    java.lang.String KEY_DATA -> KEY_DATA
    java.lang.String KEY_IDENTIFIER -> KEY_IDENTIFIER
    java.lang.String KEY_ENTRY_ID -> KEY_ENTRY_ID
    long RETRY_DELAY_TIME -> RETRY_DELAY_TIME
    int mTryAgain -> mTryAgain
    java.lang.String LOG_TAG -> LOG_TAG
    com.aviary.android.feather.common.log.LoggerFactory$Logger logger -> logger
    java.lang.String mApiKey -> mApiKey
    java.lang.String mFormFactor -> mFormFactor
    java.lang.String mResolution -> mResolution
    java.util.Locale mLocale -> mLocale
    java.lang.String mApiKeySecret -> mApiKeySecret
    java.lang.String mBillingPublicKey -> mBillingPublicKey
    long mLastUpdateDateTime -> mLastUpdateDateTime
    com.aviary.android.feather.common.threading.ThreadPool mBackgroundPool -> mBackgroundPool
    com.aviary.android.feather.cds.IAPWrapper mIapWrapper -> mIapWrapper
    java.lang.Object mWriteDiskLock -> mWriteDiskLock
    java.lang.Object mIapObjectLock -> mIapObjectLock
    com.aviary.android.feather.cds.billing.util.IabResult mIabResult -> mIabResult
    java.lang.String getManifestURL() -> getManifestURL
    java.util.List getManifestURLParams(java.lang.String) -> getManifestURLParams
    java.lang.String getContentURL(java.lang.String) -> getContentURL
    java.lang.String getContentURL(java.lang.String,java.lang.String) -> getContentURL
    java.lang.String getApiKey() -> getApiKey
    java.lang.String getFormFactor() -> getFormFactor
    java.lang.String getResolution() -> getResolution
    java.lang.String getLanguage() -> getLanguage
    java.lang.String getCountry() -> getCountry
    void onHandleIntent(android.content.Intent) -> onHandleIntent
    void handleKeys(android.content.Intent) -> handleKeys
    void onVerifyPackage(android.content.Intent) -> onVerifyPackage
    void onRestoreAllUserItems(java.lang.String) -> onRestoreAllUserItems
    void onDownloadStart(android.content.Intent) -> onDownloadStart
    void postponeVerification(android.content.Context) -> postponeVerification
    java.io.InputStream downloadManifest(android.content.Context) -> downloadManifest
    void onParseManifest(android.content.Context,java.io.InputStream) -> onParseManifest
    java.util.List onRestoreOwnedPacks(com.aviary.android.feather.cds.json.CdsManifestParser) -> onRestoreOwnedPacks
    boolean onUpdateVersionKey(com.aviary.android.feather.cds.json.CdsManifestParser) -> onUpdateVersionKey
    void onClearPermissions(android.content.Context) -> onClearPermissions
    void checkProviderExists(android.content.Context) -> checkProviderExists
    void onUpdatePermissions(android.content.Context,java.util.List,java.lang.String) -> onUpdatePermissions
    boolean onParsePacks(com.aviary.android.feather.cds.json.CdsManifestParser) -> onParsePacks
    boolean onParseMessages(com.aviary.android.feather.cds.json.CdsManifestParser) -> onParseMessages
    java.util.List onRestoreMissingPacks(com.aviary.android.feather.cds.json.CdsManifestParser,java.util.Iterator) -> onRestoreMissingPacks
    boolean onRageRemovePacks(com.aviary.android.feather.cds.json.CdsManifestParser) -> onRageRemovePacks
    void onRemoveUnavailableMessages(com.aviary.android.feather.cds.json.CdsManifestParser) -> onRemoveUnavailableMessages
    boolean onHideUnavailablePacks(com.aviary.android.feather.cds.json.CdsManifestParser) -> onHideUnavailablePacks
    boolean onRestorePacksIcons(java.lang.String) -> onRestorePacksIcons
    boolean downloadPackIcon(android.content.Context,java.lang.String,boolean,com.aviary.android.feather.cds.PacksColumns$PackCursorWrapper) -> downloadPackIcon
    int onUpdatePackIcon(long,long,java.io.File,java.lang.String,java.io.InputStream) -> onUpdatePackIcon
    boolean onUpdatePackDisplayOrder(long,int) -> onUpdatePackDisplayOrder
    boolean onChangePackVisibility(long,int) -> onChangePackVisibility
    void onUpdateJsonContent(android.content.Context,java.io.InputStream,com.aviary.android.feather.cds.PacksColumns$PackCursorWrapper,int) -> onUpdateJsonContent
    void onAddNewJsonContent(android.content.Context,java.io.InputStream,int,int) -> onAddNewJsonContent
    void onAddNewJsonContent(android.content.Context,com.aviary.android.feather.cds.json.CdsContentParser,int,int) -> onAddNewJsonContent
    void onUpdateMessageContent(android.content.Context,java.io.InputStream,com.aviary.android.feather.cds.MessageColumns$MessageCursorWrapper,java.lang.String) -> onUpdateMessageContent
    void onAddNewMessageContent(android.content.Context,java.io.InputStream,java.lang.String) -> onAddNewMessageContent
    void cancelAlarms(java.lang.String) -> cancelAlarms
    void addAlarm(android.content.Context,long,android.content.Intent) -> addAlarm
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    com.aviary.android.feather.cds.IAPWrapper getIAPInstance() -> getIAPInstance
    void onIabSetupFinished(com.aviary.android.feather.cds.billing.util.IabResult) -> onIabSetupFinished
    com.aviary.android.feather.common.threading.ThreadPool$Job createDownloadJob() -> createDownloadJob
    void setPackValidationAlarm(android.content.Context,long,java.lang.String,java.lang.String,java.lang.String) -> setPackValidationAlarm
    android.app.PendingIntent getPackValidationAlarmPendingIntent(android.content.Context,long,java.lang.String,java.lang.String,java.lang.String) -> getPackValidationAlarmPendingIntent
    void setIntentRedelivery(boolean) -> setIntentRedelivery
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.Looper getCurrentLooper() -> getCurrentLooper
    void clearServiceQueue() -> clearServiceQueue
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onStart(android.content.Intent,int) -> onStart
    void access$6(com.aviary.android.feather.cds.AviaryCdsService,android.content.Context,java.io.InputStream,int,int) -> access$6
    void access$7(com.aviary.android.feather.cds.AviaryCdsService,android.content.Context,java.io.InputStream,com.aviary.android.feather.cds.PacksColumns$PackCursorWrapper,int) -> access$7
    void access$8(com.aviary.android.feather.cds.AviaryCdsService,android.content.Context,java.io.InputStream,com.aviary.android.feather.cds.MessageColumns$MessageCursorWrapper,java.lang.String) -> access$8
    void access$9(com.aviary.android.feather.cds.AviaryCdsService,android.content.Context,java.io.InputStream,java.lang.String) -> access$9
    void access$10(com.aviary.android.feather.cds.AviaryCdsService,android.content.Context,com.aviary.android.feather.cds.json.CdsContentParser,int,int) -> access$10
    int access$11(com.aviary.android.feather.cds.AviaryCdsService,long,long,java.io.File,java.lang.String,java.io.InputStream) -> access$11
com.aviary.android.feather.cds.AviaryCdsService$1 -> com.aviary.android.feather.cds.AviaryCdsService$1:
    com.aviary.android.feather.cds.AviaryCdsService this$0 -> this$0
    java.util.concurrent.atomic.AtomicBoolean val$hasException -> val$hasException
    int val$order -> val$order
    java.util.concurrent.atomic.AtomicInteger val$files -> val$files
    void onFutureDone(com.aviary.android.feather.common.threading.Future) -> onFutureDone
com.aviary.android.feather.cds.AviaryCdsService$2 -> com.aviary.android.feather.cds.AviaryCdsService$2:
    com.aviary.android.feather.cds.AviaryCdsService this$0 -> this$0
    java.util.concurrent.atomic.AtomicBoolean val$hasException -> val$hasException
    com.aviary.android.feather.cds.PacksColumns$PackCursorWrapper val$currentPack -> val$currentPack
    int val$order -> val$order
    java.util.HashMap val$notificationMap -> val$notificationMap
    java.util.concurrent.atomic.AtomicInteger val$files -> val$files
    void onFutureDone(com.aviary.android.feather.common.threading.Future) -> onFutureDone
com.aviary.android.feather.cds.AviaryCdsService$3 -> com.aviary.android.feather.cds.AviaryCdsService$3:
    com.aviary.android.feather.cds.AviaryCdsService this$0 -> this$0
    java.util.concurrent.atomic.AtomicBoolean val$hasException -> val$hasException
    com.aviary.android.feather.cds.MessageColumns$MessageCursorWrapper val$currentMessage -> val$currentMessage
    java.lang.String val$key -> val$key
    java.util.HashMap val$notificationMap -> val$notificationMap
    java.util.concurrent.atomic.AtomicInteger val$files -> val$files
    void onFutureDone(com.aviary.android.feather.common.threading.Future) -> onFutureDone
com.aviary.android.feather.cds.AviaryCdsService$4 -> com.aviary.android.feather.cds.AviaryCdsService$4:
    com.aviary.android.feather.cds.AviaryCdsService this$0 -> this$0
    java.util.concurrent.atomic.AtomicBoolean val$hasException -> val$hasException
    java.lang.String val$key -> val$key
    java.util.HashMap val$notificationMap -> val$notificationMap
    java.util.concurrent.atomic.AtomicInteger val$files -> val$files
    void onFutureDone(com.aviary.android.feather.common.threading.Future) -> onFutureDone
com.aviary.android.feather.cds.AviaryCdsService$5 -> com.aviary.android.feather.cds.AviaryCdsService$5:
    com.aviary.android.feather.cds.AviaryCdsService this$0 -> this$0
    java.util.List val$exceptions -> val$exceptions
    java.lang.String val$identifier -> val$identifier
    java.util.concurrent.atomic.AtomicInteger val$files -> val$files
    void onFutureDone(com.aviary.android.feather.common.threading.Future) -> onFutureDone
com.aviary.android.feather.cds.AviaryCdsService$6 -> com.aviary.android.feather.cds.AviaryCdsService$6:
    com.aviary.android.feather.cds.AviaryCdsService this$0 -> this$0
    java.util.concurrent.atomic.AtomicBoolean val$hasException -> val$hasException
    com.aviary.android.feather.cds.PacksColumns$PackCursorWrapper val$pack -> val$pack
    android.net.Uri val$iconUri -> val$iconUri
    java.util.concurrent.atomic.AtomicInteger val$files -> val$files
    void onFutureDone(com.aviary.android.feather.common.threading.Future) -> onFutureDone
com.aviary.android.feather.cds.AviaryCdsService$7 -> com.aviary.android.feather.cds.AviaryCdsService$7:
    com.aviary.android.feather.cds.AviaryCdsService this$0 -> this$0
    java.io.InputStream run(com.aviary.android.feather.common.threading.ThreadPool$Worker,java.lang.String[]) -> run
    java.lang.Object run(com.aviary.android.feather.common.threading.ThreadPool$Worker,java.lang.Object[]) -> run
com.aviary.android.feather.cds.AviaryCdsService$RestoreException -> com.aviary.android.feather.cds.AviaryCdsService$RestoreException:
    long serialVersionUID -> serialVersionUID
    int CODE_ERROR_IAB_EXCEPTION -> CODE_ERROR_IAB_EXCEPTION
    int CODE_ERROR_CURSOR_EMPTY -> CODE_ERROR_CURSOR_EMPTY
    int CODE_JSON_EXCEPTION -> CODE_JSON_EXCEPTION
    int CODE_HTTP_EXCEPTION -> CODE_HTTP_EXCEPTION
    int CODE_UNKNOWN_ERROR -> CODE_UNKNOWN_ERROR
    int CODE_RESTORE_OWNED_ERROR -> CODE_RESTORE_OWNED_ERROR
    int CODE_ICON_ERROR -> CODE_ICON_ERROR
    int CODE_DOWNLOAD_REQUEST_ERROR -> CODE_DOWNLOAD_REQUEST_ERROR
    int code -> code
    int getCode() -> getCode
    java.lang.String getLocalizedMessage() -> getLocalizedMessage
com.aviary.android.feather.cds.AviaryCdsValidatorFactory -> com.aviary.android.feather.cds.AviaryCdsValidatorFactory:
    int[] $SWITCH_TABLE$com$aviary$android$feather$cds$AviaryCds$ContentType -> $SWITCH_TABLE$com$aviary$android$feather$cds$AviaryCds$ContentType
    com.aviary.android.feather.cds.AviaryCdsValidatorFactory$Validator create(com.aviary.android.feather.cds.AviaryCds$ContentType,com.aviary.android.feather.cds.AviaryCds$PackType) -> create
    int[] $SWITCH_TABLE$com$aviary$android$feather$cds$AviaryCds$ContentType() -> $SWITCH_TABLE$com$aviary$android$feather$cds$AviaryCds$ContentType
com.aviary.android.feather.cds.AviaryCdsValidatorFactory$Validator -> com.aviary.android.feather.cds.AviaryCdsValidatorFactory$Validator:
    com.aviary.android.feather.common.log.LoggerFactory$Logger logger -> logger
    com.aviary.android.feather.cds.AviaryCds$PackType mPackType -> mPackType
    com.aviary.android.feather.cds.AviaryCds$PackType getPackType() -> getPackType
    boolean validate(android.content.Context,long,java.io.File,boolean) -> validate
com.aviary.android.feather.cds.AviaryIntentService -> com.aviary.android.feather.cds.AviaryIntentService:
    android.os.Looper mServiceLooper -> mServiceLooper
    com.aviary.android.feather.cds.AviaryIntentService$ServiceHandler mServiceHandler -> mServiceHandler
    java.lang.String mName -> mName
    boolean mRedelivery -> mRedelivery
    void setIntentRedelivery(boolean) -> setIntentRedelivery
    void onCreate() -> onCreate
    android.os.Looper getCurrentLooper() -> getCurrentLooper
    void onStart(android.content.Intent,int) -> onStart
    void clearServiceQueue() -> clearServiceQueue
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onHandleIntent(android.content.Intent) -> onHandleIntent
com.aviary.android.feather.cds.AviaryIntentService$ServiceHandler -> com.aviary.android.feather.cds.AviaryIntentService$ServiceHandler:
    com.aviary.android.feather.cds.AviaryIntentService this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.aviary.android.feather.cds.CdsDatabaseHelper -> com.aviary.android.feather.cds.CdsDatabaseHelper:
    java.lang.String DATABASE_NAME -> DATABASE_NAME
    int DATABASE_VERSION -> DATABASE_VERSION
    int INSERT_ERROR -> INSERT_ERROR
    com.aviary.android.feather.common.log.LoggerFactory$Logger logger -> logger
    android.content.Context mContext -> mContext
    com.aviary.android.feather.cds.CdsDatabaseHelper instance -> instance
    com.aviary.android.feather.cds.CdsDatabaseHelper getInstance(android.content.Context) -> getInstance
    android.content.Context getContext() -> getContext
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onConfigure(android.database.sqlite.SQLiteDatabase) -> onConfigure
    boolean dump(java.io.File) -> dump
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    long insertValues(java.lang.String,android.content.ContentValues,android.database.sqlite.SQLiteDatabase) -> insertValues
    long insertValues(java.lang.String,android.content.ContentValues) -> insertValues
    int delete(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String[]) -> delete
    long replacePermissions(android.content.ContentValues) -> replacePermissions
    int getTrayFeaturedCount(java.lang.String,boolean) -> getTrayFeaturedCount
    int getTrayInstalledCount(java.lang.String) -> getTrayInstalledCount
    android.database.Cursor getTray(java.lang.String,int,boolean,boolean) -> getTray
    android.database.Cursor getManifestVersion(java.lang.String[]) -> getManifestVersion
    android.database.Cursor getPackDownloadStatus(java.lang.String,java.lang.String[]) -> getPackDownloadStatus
    android.database.Cursor getPackIdOfDownload(java.lang.String,java.lang.String[]) -> getPackIdOfDownload
    android.database.Cursor getPackContentById(int,java.lang.String[]) -> getPackContentById
    android.database.Cursor getPackContentByIdentifier(java.lang.String,java.lang.String[]) -> getPackContentByIdentifier
    android.database.Cursor getPacksContent(java.lang.String[],java.lang.String,java.lang.String[]) -> getPacksContent
    android.database.Cursor getPacks(java.lang.String[],java.lang.String,java.lang.String[]) -> getPacks
    android.database.Cursor getPackItems(int,java.lang.String[]) -> getPackItems
    android.database.Cursor getPackItemById(long,java.lang.String[]) -> getPackItemById
    android.database.Cursor getPackByIdentifier(java.lang.String,java.lang.String[]) -> getPackByIdentifier
    android.database.Cursor getPackById(long,java.lang.String[]) -> getPackById
    android.database.Cursor getAvailablePacksByType(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> getAvailablePacksByType
    android.database.Cursor getAvailableNotPurchasedPacksByType(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> getAvailableNotPurchasedPacksByType
    android.database.Cursor getAvailableForRestorePacksByType(java.lang.String,java.lang.String[],java.lang.String) -> getAvailableForRestorePacksByType
    android.database.Cursor getMessageByIdentifier(java.lang.String,java.lang.String[]) -> getMessageByIdentifier
    android.database.Cursor getMessageContent(long,java.lang.String[]) -> getMessageContent
    android.database.Cursor getMessages(java.lang.String[],java.lang.String,java.lang.String[]) -> getMessages
    android.database.Cursor getActiveMessage(java.lang.String,java.lang.String[]) -> getActiveMessage
    android.database.Cursor getNextMessage(java.lang.String,java.lang.String[]) -> getNextMessage
    int updateDownloadStatus(long,int) -> updateDownloadStatus
    int updatePack(long,android.content.ContentValues) -> updatePack
    int updatePack(long,android.content.ContentValues,android.database.sqlite.SQLiteDatabase) -> updatePack
    int updatePackContent(long,long,android.content.ContentValues) -> updatePackContent
    int updatePackContent(long,long,android.content.ContentValues,android.database.sqlite.SQLiteDatabase) -> updatePackContent
    int updateMessage(long,android.content.ContentValues,android.database.sqlite.SQLiteDatabase) -> updateMessage
    int updateMessageContent(long,long,android.content.ContentValues,android.database.sqlite.SQLiteDatabase) -> updateMessageContent
    int updatePackContentPurchasedStatus(long,long,int,java.lang.String) -> updatePackContentPurchasedStatus
    int updatePackContentRequestDownloadStatus(long,int) -> updatePackContentRequestDownloadStatus
    int updateMessage(long,android.content.ContentValues) -> updateMessage
    int updateMessageContent(long,long,android.content.ContentValues) -> updateMessageContent
    int setMessageasVisited(long,int) -> setMessageasVisited
    int deletePackDownloadEntry(long) -> deletePackDownloadEntry
    int deletePack(long) -> deletePack
    int deleteMessage(long) -> deleteMessage
    android.database.Cursor getPermissions(java.lang.String[]) -> getPermissions
com.aviary.android.feather.cds.CdsUtils -> com.aviary.android.feather.cds.CdsUtils:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String[] DOWNLOAD_REF_ID_PROJECTION -> DOWNLOAD_REF_ID_PROJECTION
    java.util.HashMap sLegacyPacksMap -> sLegacyPacksMap
    void addSignature(java.util.List,java.lang.String) -> addSignature
    boolean apkInstalled(android.content.Context,java.lang.String) -> apkInstalled
    com.aviary.android.feather.cds.PacksContentColumns$ContentCursorWrapper getContentByIdentifier(android.content.Context,java.lang.String,java.lang.String[]) -> getContentByIdentifier
    android.net.Uri getContentUri(android.content.Context,java.lang.String) -> getContentUri
    java.util.Iterator getLegacyKeysIterator() -> getLegacyKeysIterator
    java.util.Iterator getLegacyEntryIterator() -> getLegacyEntryIterator
    java.util.List getInstalledLegacyPacks(android.content.Context) -> getInstalledLegacyPacks
    java.util.List getInstalledLegacyPacks(android.content.Context,java.util.Iterator) -> getInstalledLegacyPacks
    java.lang.String getLegacyPackageName(java.lang.String) -> getLegacyPackageName
    com.aviary.android.feather.cds.VersionColumns$VersionCursorWrapper getManifestVersion(android.content.Context) -> getManifestVersion
    com.aviary.android.feather.cds.MessageColumns$MessageCursorWrapper getMessageByIdentifier(android.content.Context,java.lang.String,java.lang.String[]) -> getMessageByIdentifier
    java.lang.String getMessageContentPath(java.lang.String) -> getMessageContentPath
    com.aviary.android.feather.cds.PacksColumns$PackCursorWrapper getPackById(android.content.Context,long,java.lang.String[]) -> getPackById
    com.aviary.android.feather.cds.PacksColumns$PackCursorWrapper getPackByIdentifier(android.content.Context,java.lang.String,java.lang.String[]) -> getPackByIdentifier
    com.aviary.android.feather.cds.PacksContentColumns$ContentCursorWrapper getPackContentById(android.content.Context,long,java.lang.String[]) -> getPackContentById
    java.lang.String getPackContentPath(android.content.Context,long) -> getPackContentPath
    android.util.Pair getPackDownloadStatus(android.content.Context,long) -> getPackDownloadStatus
    com.aviary.android.feather.cds.PacksColumns$PackCursorWrapper getPackFullInfoById(android.content.Context,long) -> getPackFullInfoById
    java.lang.String getPackIconPath(java.lang.String) -> getPackIconPath
    java.lang.String getPackItemsContentPath(java.lang.String) -> getPackItemsContentPath
    com.aviary.android.feather.cds.CdsUtils$PackOption getPackOption(android.content.Context,com.aviary.android.feather.cds.PacksColumns$PackCursorWrapper) -> getPackOption
    android.util.Pair getPackOptionDownloadStatus(android.content.Context,long) -> getPackOptionDownloadStatus
    java.lang.String getPackPreviewPath(java.lang.String) -> getPackPreviewPath
    java.lang.String getPackRootContent(java.lang.String) -> getPackRootContent
    android.database.Cursor getPacksList(android.content.Context,java.lang.String[],java.lang.String,java.lang.String[]) -> getPacksList
    java.lang.String getReasonText(int,int) -> getReasonText
    java.lang.String getReasonTextFailed(int) -> getReasonTextFailed
    java.lang.String getReasonTextPaused(int) -> getReasonTextPaused
    com.aviary.android.feather.cds.CdsUtils$Resolution getResolution(android.content.Context) -> getResolution
    java.util.List getPermissions(android.content.Context) -> getPermissions
    boolean isPackBeingDownloaded(android.content.Context,long) -> isPackBeingDownloaded
    void notifyDownloadComplete(android.content.Context) -> notifyDownloadComplete
    void notifyDownloadStatusChange(android.content.Context,long,int) -> notifyDownloadStatusChange
    void notifyMessageContentUpdate(android.content.Context,long) -> notifyMessageContentUpdate
    void notifyMessagesContentUpdated(android.content.Context,java.lang.String) -> notifyMessagesContentUpdated
    void notifyPackContentUpdate(android.content.Context,long) -> notifyPackContentUpdate
    void notifyPackPurchased(android.content.Context,long,int) -> notifyPackPurchased
    void notifyPackRequestDownloadChange(android.content.Context,long) -> notifyPackRequestDownloadChange
    void notifyPacksContentUpdated(android.content.Context,java.lang.String) -> notifyPacksContentUpdated
    void notifyPermissionsUpdated(android.content.Context) -> notifyPermissionsUpdated
    void notifyKill(android.content.Context) -> notifyKill
    void printCursorAndReset(android.database.Cursor) -> printCursorAndReset
    java.lang.String requestPackDownload(android.content.Context,long,boolean) -> requestPackDownload
    com.aviary.android.feather.cds.billing.util.IabResult waitForIAPSetupDone(com.aviary.android.feather.cds.IAPInstance) -> waitForIAPSetupDone
    com.aviary.android.feather.cds.billing.util.IabResult waitForIAPSetupDone(com.aviary.android.feather.cds.IAPInstance,long) -> waitForIAPSetupDone
com.aviary.android.feather.cds.CdsUtils$1 -> com.aviary.android.feather.cds.CdsUtils$1:
    java.lang.Object val$lock -> val$lock
    void onIabSetupFinished(com.aviary.android.feather.cds.billing.util.IabResult) -> onIabSetupFinished
com.aviary.android.feather.cds.CdsUtils$PackOption -> com.aviary.android.feather.cds.CdsUtils$PackOption:
    com.aviary.android.feather.cds.CdsUtils$PackOption PURCHASE -> PURCHASE
    com.aviary.android.feather.cds.CdsUtils$PackOption FREE -> FREE
    com.aviary.android.feather.cds.CdsUtils$PackOption RESTORE -> RESTORE
    com.aviary.android.feather.cds.CdsUtils$PackOption OWNED -> OWNED
    com.aviary.android.feather.cds.CdsUtils$PackOption PACK_OPTION_BEING_DETERMINED -> PACK_OPTION_BEING_DETERMINED
    com.aviary.android.feather.cds.CdsUtils$PackOption ERROR -> ERROR
    com.aviary.android.feather.cds.CdsUtils$PackOption DOWNLOADING -> DOWNLOADING
    com.aviary.android.feather.cds.CdsUtils$PackOption DOWNLOAD_ERROR -> DOWNLOAD_ERROR
    com.aviary.android.feather.cds.CdsUtils$PackOption DOWNLOAD_COMPLETE -> DOWNLOAD_COMPLETE
    int[] $SWITCH_TABLE$com$aviary$android$feather$cds$CdsUtils$PackOption -> $SWITCH_TABLE$com$aviary$android$feather$cds$CdsUtils$PackOption
    com.aviary.android.feather.cds.CdsUtils$PackOption[] ENUM$VALUES -> ENUM$VALUES
    boolean isDetermined(com.aviary.android.feather.cds.CdsUtils$PackOption) -> isDetermined
    com.aviary.android.feather.cds.CdsUtils$PackOption[] values() -> values
    com.aviary.android.feather.cds.CdsUtils$PackOption valueOf(java.lang.String) -> valueOf
    int[] $SWITCH_TABLE$com$aviary$android$feather$cds$CdsUtils$PackOption() -> $SWITCH_TABLE$com$aviary$android$feather$cds$CdsUtils$PackOption
com.aviary.android.feather.cds.CdsUtils$Resolution -> com.aviary.android.feather.cds.CdsUtils$Resolution:
    com.aviary.android.feather.cds.CdsUtils$Resolution HIGH -> HIGH
    com.aviary.android.feather.cds.CdsUtils$Resolution LOW -> LOW
    com.aviary.android.feather.cds.CdsUtils$Resolution[] ENUM$VALUES -> ENUM$VALUES
    com.aviary.android.feather.cds.CdsUtils$Resolution[] values() -> values
    com.aviary.android.feather.cds.CdsUtils$Resolution valueOf(java.lang.String) -> valueOf
com.aviary.android.feather.cds.DownloadPacksColumns -> com.aviary.android.feather.cds.DownloadPacksColumns:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String _ID -> _ID
    java.lang.String DOWNLOAD_REF_ID -> DOWNLOAD_REF_ID
    java.lang.String PACK_ID -> PACK_ID
    java.lang.String DOWNLOAD_STATUS -> DOWNLOAD_STATUS
com.aviary.android.feather.cds.DownloadPacksColumns$DownloadCursorWrapper -> com.aviary.android.feather.cds.DownloadPacksColumns$DownloadCursorWrapper:
    long downloadId -> downloadId
    long packId -> packId
    int downloadStatus -> downloadStatus
    java.lang.Object clone() -> clone
    long getDownloadId() -> getDownloadId
    long getPackId() -> getPackId
    int getDownloadStatus() -> getDownloadStatus
    com.aviary.android.feather.cds.DownloadPacksColumns$DownloadCursorWrapper create(android.database.Cursor) -> create
com.aviary.android.feather.cds.IAPInstance -> com.aviary.android.feather.cds.IAPInstance:
    void startSetup(com.aviary.android.feather.cds.billing.util.IabHelper$OnIabSetupFinishedListener) -> startSetup
    com.aviary.android.feather.cds.billing.util.IabResult getResult() -> getResult
    boolean isSetupDone() -> isSetupDone
    boolean isDisposed() -> isDisposed
    boolean isAvailable() -> isAvailable
    com.aviary.android.feather.cds.billing.util.Inventory queryInventory(boolean,java.util.List) -> queryInventory
com.aviary.android.feather.cds.IAPWrapper -> com.aviary.android.feather.cds.IAPWrapper:
    com.aviary.android.feather.cds.billing.util.IabHelper helper -> helper
    com.aviary.android.feather.cds.billing.util.IabResult mResult -> mResult
    com.aviary.android.feather.common.log.LoggerFactory$Logger logger -> logger
    com.aviary.android.feather.cds.IAPWrapper createNew(android.content.Context,java.lang.String) -> createNew
    com.aviary.android.feather.cds.IAPWrapper createNew(android.content.Context,java.lang.String,com.aviary.android.feather.cds.billing.util.IabHelper$QueryInventoryFinishedListener,java.util.ArrayList) -> createNew
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean isDisposed() -> isDisposed
    boolean isAvailable() -> isAvailable
    boolean isSetupDone() -> isSetupDone
    com.aviary.android.feather.cds.billing.util.IabResult getResult() -> getResult
    void startSetup(com.aviary.android.feather.cds.billing.util.IabHelper$OnIabSetupFinishedListener) -> startSetup
    com.aviary.android.feather.cds.billing.util.Inventory queryInventory(boolean,java.util.List) -> queryInventory
    com.aviary.android.feather.cds.billing.util.Inventory queryInventory(boolean,java.util.List,java.util.List) -> queryInventory
    void queryInventoryAsync(com.aviary.android.feather.cds.billing.util.IabHelper$QueryInventoryFinishedListener,java.util.ArrayList) -> queryInventoryAsync
    void queryInventoryAsync(boolean,com.aviary.android.feather.cds.billing.util.IabHelper$QueryInventoryFinishedListener) -> queryInventoryAsync
    void queryInventoryAsync(boolean,java.util.List,com.aviary.android.feather.cds.billing.util.IabHelper$QueryInventoryFinishedListener) -> queryInventoryAsync
    com.aviary.android.feather.cds.billing.util.Inventory queryPurchases() -> queryPurchases
    void dispose() -> dispose
    java.util.List getPurchasedItems(java.util.List) -> getPurchasedItems
    boolean hasPurchase(java.lang.String) -> hasPurchase
    boolean handleActivityResult(int,int,android.content.Intent) -> handleActivityResult
    void launchPurchaseFlow(android.app.Activity,java.lang.String,int,com.aviary.android.feather.cds.billing.util.IabHelper$OnIabPurchaseFinishedListener,java.lang.String) -> launchPurchaseFlow
    boolean verifyDeveloperPayload(com.aviary.android.feather.cds.billing.util.Purchase) -> verifyDeveloperPayload
    void access$0(com.aviary.android.feather.cds.IAPWrapper,com.aviary.android.feather.cds.billing.util.IabResult) -> access$0
com.aviary.android.feather.cds.IAPWrapper$1 -> com.aviary.android.feather.cds.IAPWrapper$1:
    com.aviary.android.feather.cds.billing.util.IabHelper$QueryInventoryFinishedListener val$listener -> val$listener
    com.aviary.android.feather.cds.IAPWrapper val$wrapper -> val$wrapper
    java.util.ArrayList val$moreSkus -> val$moreSkus
    void onIabSetupFinished(com.aviary.android.feather.cds.billing.util.IabResult) -> onIabSetupFinished
com.aviary.android.feather.cds.IAPWrapper$2 -> com.aviary.android.feather.cds.IAPWrapper$2:
    com.aviary.android.feather.cds.IAPWrapper this$0 -> this$0
    com.aviary.android.feather.cds.billing.util.IabHelper$OnIabSetupFinishedListener val$listener -> val$listener
    void onIabSetupFinished(com.aviary.android.feather.cds.billing.util.IabResult) -> onIabSetupFinished
com.aviary.android.feather.cds.MessageColumns -> com.aviary.android.feather.cds.MessageColumns:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String _ID -> _ID
    java.lang.String MESSAGE_TYPE -> MESSAGE_TYPE
    java.lang.String IDENTIFIER -> IDENTIFIER
    java.lang.String VERSION_KEY -> VERSION_KEY
com.aviary.android.feather.cds.MessageColumns$MessageCursorWrapper -> com.aviary.android.feather.cds.MessageColumns$MessageCursorWrapper:
    java.lang.String messageType -> messageType
    java.lang.String versionKey -> versionKey
    java.lang.String identifier -> identifier
    java.lang.Object clone() -> clone
    java.lang.String getMessageType() -> getMessageType
    java.lang.String getVersionKey() -> getVersionKey
    java.lang.String getIdentifier() -> getIdentifier
    com.aviary.android.feather.cds.MessageColumns$MessageCursorWrapper create(android.database.Cursor) -> create
com.aviary.android.feather.cds.MessageContentColumn -> com.aviary.android.feather.cds.MessageContentColumn:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String _ID -> _ID
    java.lang.String MESSAGE_ID -> MESSAGE_ID
    java.lang.String CONTENT_IDENTIFIER -> CONTENT_IDENTIFIER
    java.lang.String BEGIN_DATE -> BEGIN_DATE
    java.lang.String END_DATE -> END_DATE
    java.lang.String TITLE -> TITLE
    java.lang.String PARAGRAPH -> PARAGRAPH
    java.lang.String DISMISS_BUTTON -> DISMISS_BUTTON
    java.lang.String ACTION_BUTTON -> ACTION_BUTTON
    java.lang.String CONTENT_URL -> CONTENT_URL
    java.lang.String LAYOUT_STYLE -> LAYOUT_STYLE
    java.lang.String SHOW_NEW_BANNER -> SHOW_NEW_BANNER
    java.lang.String CONTENT_PATH -> CONTENT_PATH
    java.lang.String VISITED -> VISITED
com.aviary.android.feather.cds.MessageContentColumn$MessageContentCursorWrapper -> com.aviary.android.feather.cds.MessageContentColumn$MessageContentCursorWrapper:
    long message_id -> message_id
    java.lang.String contentIdentifier -> contentIdentifier
    java.lang.String beginDate -> beginDate
    java.lang.String endDate -> endDate
    java.lang.String title -> title
    java.lang.String paragraph -> paragraph
    java.lang.String dismissButtonText -> dismissButtonText
    java.lang.String actionButtonText -> actionButtonText
    java.lang.String contentURL -> contentURL
    java.lang.String layoutStyle -> layoutStyle
    boolean showNewBanner -> showNewBanner
    java.lang.String contentPath -> contentPath
    boolean visited -> visited
    java.lang.Object clone() -> clone
    long getMessageId() -> getMessageId
    java.lang.String getContentIdentifier() -> getContentIdentifier
    java.lang.String getBeginDate() -> getBeginDate
    java.lang.String getEndDate() -> getEndDate
    java.lang.String getTitle() -> getTitle
    java.lang.String getParagraph() -> getParagraph
    java.lang.String getDismissButtonText() -> getDismissButtonText
    java.lang.String getActionButtonText() -> getActionButtonText
    java.lang.String getContentURL() -> getContentURL
    java.lang.String getLayoutStyle() -> getLayoutStyle
    boolean isShowNewBanner() -> isShowNewBanner
    java.lang.String getContentPath() -> getContentPath
    boolean isVisited() -> isVisited
    com.aviary.android.feather.cds.MessageContentColumn$MessageContentCursorWrapper create(android.database.Cursor) -> create
com.aviary.android.feather.cds.PacksColumns -> com.aviary.android.feather.cds.PacksColumns:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String _ID -> _ID
    java.lang.String FINISHED_DOWNLOADING -> FINISHED_DOWNLOADING
    java.lang.String IDENTIFIER -> IDENTIFIER
    java.lang.String PACK_TYPE -> PACK_TYPE
    java.lang.String VERSION_KEY -> VERSION_KEY
    java.lang.String MARKED_FOR_DELETION -> MARKED_FOR_DELETION
    java.lang.String VISIBLE -> VISIBLE
    java.lang.String DISPLAY_ORDER -> DISPLAY_ORDER
    java.lang.String CREATION_DATE -> CREATION_DATE
com.aviary.android.feather.cds.PacksColumns$PackCursorWrapper -> com.aviary.android.feather.cds.PacksColumns$PackCursorWrapper:
    java.lang.String identifier -> identifier
    java.lang.String packType -> packType
    java.lang.String versionKey -> versionKey
    int displayOrder -> displayOrder
    int visible -> visible
    int markedForDeletion -> markedForDeletion
    java.lang.String creationDate -> creationDate
    com.aviary.android.feather.cds.PacksContentColumns$ContentCursorWrapper content -> content
    java.lang.Object clone() -> clone
    boolean equals(java.lang.Object) -> equals
    java.lang.String getIdentifier() -> getIdentifier
    java.lang.String getCreationDate() -> getCreationDate
    java.lang.String getPackType() -> getPackType
    java.lang.String getVersionKey() -> getVersionKey
    int getMarkedForDeletion() -> getMarkedForDeletion
    int getVisible() -> getVisible
    int getDisplayOrder() -> getDisplayOrder
    void setContent(com.aviary.android.feather.cds.PacksContentColumns$ContentCursorWrapper) -> setContent
    com.aviary.android.feather.cds.PacksContentColumns$ContentCursorWrapper getContent() -> getContent
    com.aviary.android.feather.cds.PacksColumns$PackCursorWrapper create(android.database.Cursor) -> create
    java.lang.String toString() -> toString
com.aviary.android.feather.cds.PacksContentColumns -> com.aviary.android.feather.cds.PacksContentColumns:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String _ID -> _ID
    java.lang.String PACK_ID -> PACK_ID
    java.lang.String PREVIEW_URL -> PREVIEW_URL
    java.lang.String CONTENT_URL -> CONTENT_URL
    java.lang.String ICON_URL -> ICON_URL
    java.lang.String DISPLAY_NAME -> DISPLAY_NAME
    java.lang.String DISPLAY_DESCRIPTION -> DISPLAY_DESCRIPTION
    java.lang.String ICON_PATH -> ICON_PATH
    java.lang.String PREVIEW_PATH -> PREVIEW_PATH
    java.lang.String CONTENT_PATH -> CONTENT_PATH
    java.lang.String CONTENT_VERSION -> CONTENT_VERSION
    java.lang.String PREVIEW_VERSION -> PREVIEW_VERSION
    java.lang.String ICON_VERSION -> ICON_VERSION
    java.lang.String ICON_NEED_DOWNLOAD -> ICON_NEED_DOWNLOAD
    java.lang.String PREVIEW_NEED_DOWNLOAD -> PREVIEW_NEED_DOWNLOAD
    java.lang.String CONTENT_NEED_DOWNLOAD -> CONTENT_NEED_DOWNLOAD
    java.lang.String IS_FREE_PURCHASE -> IS_FREE_PURCHASE
    java.lang.String DOWNLOAD_REQUESTED -> DOWNLOAD_REQUESTED
    java.lang.String PURCHASED -> PURCHASED
    java.lang.String INSTALL_DATE -> INSTALL_DATE
    java.lang.String ITEMS_COUNT -> ITEMS_COUNT
com.aviary.android.feather.cds.PacksContentColumns$ContentCursorWrapper -> com.aviary.android.feather.cds.PacksContentColumns$ContentCursorWrapper:
    long packId -> packId
    java.lang.String iconURL -> iconURL
    java.lang.String previewURL -> previewURL
    java.lang.String contentURL -> contentURL
    java.lang.String displayName -> displayName
    java.lang.String displayDescription -> displayDescription
    java.lang.String previewPath -> previewPath
    java.lang.String contentPath -> contentPath
    java.lang.String iconPath -> iconPath
    java.lang.String contentVersion -> contentVersion
    java.lang.String previewVersion -> previewVersion
    java.lang.String iconVersion -> iconVersion
    int numItems -> numItems
    int iconNeedDownload -> iconNeedDownload
    int contentDownloadStarted -> contentDownloadStarted
    int downloadRequestStatus -> downloadRequestStatus
    int free -> free
    int purchased -> purchased
    java.lang.Object clone() -> clone
    boolean equals(java.lang.Object) -> equals
    int getNumItems() -> getNumItems
    int getIconNeedDownload() -> getIconNeedDownload
    long getPackId() -> getPackId
    java.lang.String getIconURL() -> getIconURL
    java.lang.String getPreviewURL() -> getPreviewURL
    java.lang.String getContentURL() -> getContentURL
    java.lang.String getDisplayName() -> getDisplayName
    java.lang.String getDisplayDescription() -> getDisplayDescription
    java.lang.String getPreviewPath() -> getPreviewPath
    java.lang.String getContentPath() -> getContentPath
    java.lang.String getIconPath() -> getIconPath
    java.lang.String getContentVersion() -> getContentVersion
    java.lang.String getPreviewVersion() -> getPreviewVersion
    java.lang.String getIconVersion() -> getIconVersion
    int getContentDownloadStarted() -> getContentDownloadStarted
    int getFree() -> getFree
    int getPurchased() -> getPurchased
    int getDownloadRequestStatus() -> getDownloadRequestStatus
    java.lang.String toString() -> toString
    com.aviary.android.feather.cds.PacksContentColumns$ContentCursorWrapper create(android.database.Cursor) -> create
com.aviary.android.feather.cds.PacksItemsColumns -> com.aviary.android.feather.cds.PacksItemsColumns:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String _ID -> _ID
    java.lang.String IDENTIFIER -> IDENTIFIER
    java.lang.String DISPLAY_NAME -> DISPLAY_NAME
    java.lang.String CONTENT_PATH -> CONTENT_PATH
    java.lang.String OPTIONS -> OPTIONS
    java.lang.String PACK_ID -> PACK_ID
com.aviary.android.feather.cds.PermissionColumns -> com.aviary.android.feather.cds.PermissionColumns:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String _ID -> _ID
    java.lang.String VALUE -> VALUE
    java.lang.String HASH -> HASH
    void create(android.database.sqlite.SQLiteDatabase) -> create
com.aviary.android.feather.cds.PermissionColumns$CursorWrapper -> com.aviary.android.feather.cds.PermissionColumns$CursorWrapper:
    java.lang.String hashCode -> hashCode
    java.lang.String value -> value
    java.lang.String getHashCode() -> getHashCode
    java.lang.String getValue() -> getValue
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
    com.aviary.android.feather.cds.PermissionColumns$CursorWrapper create(android.database.Cursor) -> create
com.aviary.android.feather.cds.RestoreAllHelper -> com.aviary.android.feather.cds.RestoreAllHelper:
    int NOTIFICATION_ONGOING_ID -> NOTIFICATION_ONGOING_ID
    int NOTIFICATION_COMPLETE_ERROR_ID -> NOTIFICATION_COMPLETE_ERROR_ID
    com.aviary.android.feather.common.log.LoggerFactory$Logger logger -> logger
    com.aviary.android.feather.cds.AviaryCdsService service -> service
    com.aviary.android.feather.cds.AviaryCds$PackType packType -> packType
    android.app.NotificationManager notificationManager -> notificationManager
    android.content.Context context -> context
    android.support.v4.app.NotificationCompat$Builder notificationProgressBuilder -> notificationProgressBuilder
    int[] $SWITCH_TABLE$com$aviary$android$feather$cds$CdsUtils$PackOption -> $SWITCH_TABLE$com$aviary$android$feather$cds$CdsUtils$PackOption
    void dispose() -> dispose
    android.support.v4.app.NotificationCompat$Builder createNotification(android.content.Context) -> createNotification
    void restoreAll() -> restoreAll
    void onComplete(android.content.Context,java.util.ArrayList,java.util.List) -> onComplete
    void onProgress(int,int,boolean) -> onProgress
    void onProgressError(java.lang.CharSequence,com.aviary.android.feather.cds.AviaryCdsService$RestoreException,java.lang.CharSequence,int) -> onProgressError
    void onProgressError(java.lang.CharSequence,java.lang.CharSequence,int,int) -> onProgressError
    void onNotifyCompleteError(android.content.Context,java.util.List) -> onNotifyCompleteError
    void onNotifyComplete(android.content.Context,java.util.ArrayList) -> onNotifyComplete
    java.util.List onDownloadPacks(java.util.List,int,int) -> onDownloadPacks
    java.util.List onDownloadMissingIcons(java.util.ArrayList,java.lang.String,int,int) -> onDownloadMissingIcons
    java.util.ArrayList acquireRestoreList() -> acquireRestoreList
    com.aviary.android.feather.cds.json.CdsManifestParser downloadManifest() -> downloadManifest
    android.app.PendingIntent getNullPendingIntent(android.content.Context) -> getNullPendingIntent
    android.app.PendingIntent getErrorPendingIntent(android.content.Context,java.util.List) -> getErrorPendingIntent
    int[] $SWITCH_TABLE$com$aviary$android$feather$cds$CdsUtils$PackOption() -> $SWITCH_TABLE$com$aviary$android$feather$cds$CdsUtils$PackOption
com.aviary.android.feather.cds.TrayColumns -> com.aviary.android.feather.cds.TrayColumns:
    int ID_COLUMN_INDEX -> ID_COLUMN_INDEX
    int TYPE_COLUMN_INDEX -> TYPE_COLUMN_INDEX
    int TYPE_CONTENT -> TYPE_CONTENT
    int TYPE_PACK_EXTERNAL -> TYPE_PACK_EXTERNAL
    int TYPE_PACK_INTERNAL -> TYPE_PACK_INTERNAL
    int TYPE_LEFT_DIVIDER -> TYPE_LEFT_DIVIDER
    int TYPE_RIGHT_DIVIDER -> TYPE_RIGHT_DIVIDER
    int TYPE_LEFT_GETMORE -> TYPE_LEFT_GETMORE
    int TYPE_RIGHT_GETMORE -> TYPE_RIGHT_GETMORE
    java.lang.String ORDER -> ORDER
    java.lang.String DISPLAY_NAME -> DISPLAY_NAME
    java.lang.String PACKAGE_NAME -> PACKAGE_NAME
    java.lang.String IDENTIFIER -> IDENTIFIER
    java.lang.String TYPE -> TYPE
    java.lang.String PATH -> PATH
    java.lang.String INSTALL_DATE -> INSTALL_DATE
com.aviary.android.feather.cds.TrayColumns$TrayCursorWrapper -> com.aviary.android.feather.cds.TrayColumns$TrayCursorWrapper:
    long id -> id
    java.lang.String identifier -> identifier
    java.lang.String displayName -> displayName
    java.lang.String packageName -> packageName
    int type -> type
    java.lang.String path -> path
    java.lang.String installDate -> installDate
    java.lang.String getDisplayName() -> getDisplayName
    long getId() -> getId
    java.lang.String getIdentifier() -> getIdentifier
    java.lang.String getPath() -> getPath
    int getType() -> getType
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getInstallDate() -> getInstallDate
    com.aviary.android.feather.cds.TrayColumns$TrayCursorWrapper create(android.database.Cursor) -> create
com.aviary.android.feather.cds.VersionColumns -> com.aviary.android.feather.cds.VersionColumns:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String _ID -> _ID
    java.lang.String VERSION_KEY -> VERSION_KEY
    java.lang.String ASSETS_BASE_URL -> ASSETS_BASE_URL
com.aviary.android.feather.cds.VersionColumns$BaseCursorWrapper -> com.aviary.android.feather.cds.VersionColumns$BaseCursorWrapper:
    long id -> id
    long getId() -> getId
    java.lang.Object clone() -> clone
    boolean isValid(android.database.Cursor) -> isValid
com.aviary.android.feather.cds.VersionColumns$VersionCursorWrapper -> com.aviary.android.feather.cds.VersionColumns$VersionCursorWrapper:
    java.lang.String versionKey -> versionKey
    java.lang.String assetsBaseURL -> assetsBaseURL
    java.lang.String getVersionKey() -> getVersionKey
    java.lang.String getAssetsBaseURL() -> getAssetsBaseURL
    java.lang.Object clone() -> clone
    com.aviary.android.feather.cds.VersionColumns$VersionCursorWrapper create(android.database.Cursor) -> create
    java.lang.String toString() -> toString
com.aviary.android.feather.cds.billing.util.Base64 -> com.aviary.android.feather.cds.billing.util.Base64:
    boolean ENCODE -> ENCODE
    boolean DECODE -> DECODE
    byte EQUALS_SIGN -> EQUALS_SIGN
    byte NEW_LINE -> NEW_LINE
    byte[] ALPHABET -> ALPHABET
    byte[] WEBSAFE_ALPHABET -> WEBSAFE_ALPHABET
    byte[] DECODABET -> DECODABET
    byte[] WEBSAFE_DECODABET -> WEBSAFE_DECODABET
    byte WHITE_SPACE_ENC -> WHITE_SPACE_ENC
    byte EQUALS_SIGN_ENC -> EQUALS_SIGN_ENC
    boolean $assertionsDisabled -> $assertionsDisabled
    byte[] encode3to4(byte[],int,int,byte[],int,byte[]) -> encode3to4
    java.lang.String encode(byte[]) -> encode
    java.lang.String encodeWebSafe(byte[],boolean) -> encodeWebSafe
    java.lang.String encode(byte[],int,int,byte[],boolean) -> encode
    byte[] encode(byte[],int,int,byte[],int) -> encode
    int decode4to3(byte[],int,byte[],int,byte[]) -> decode4to3
    byte[] decode(java.lang.String) -> decode
    byte[] decodeWebSafe(java.lang.String) -> decodeWebSafe
    byte[] decode(byte[]) -> decode
    byte[] decodeWebSafe(byte[]) -> decodeWebSafe
    byte[] decode(byte[],int,int) -> decode
    byte[] decodeWebSafe(byte[],int,int) -> decodeWebSafe
    byte[] decode(byte[],int,int,byte[]) -> decode
com.aviary.android.feather.cds.billing.util.Base64DecoderException -> com.aviary.android.feather.cds.billing.util.Base64DecoderException:
    long serialVersionUID -> serialVersionUID
com.aviary.android.feather.cds.billing.util.IabException -> com.aviary.android.feather.cds.billing.util.IabException:
    com.aviary.android.feather.cds.billing.util.IabResult mResult -> mResult
    com.aviary.android.feather.cds.billing.util.IabResult getResult() -> getResult
com.aviary.android.feather.cds.billing.util.IabHelper -> com.aviary.android.feather.cds.billing.util.IabHelper:
    boolean mDebugLog -> mDebugLog
    java.lang.String mDebugTag -> mDebugTag
    boolean mSetupDone -> mSetupDone
    boolean mDisposed -> mDisposed
    boolean mSubscriptionsSupported -> mSubscriptionsSupported
    boolean mAsyncInProgress -> mAsyncInProgress
    java.lang.String mAsyncOperation -> mAsyncOperation
    android.content.Context mContext -> mContext
    com.android.vending.billing.IInAppBillingService mService -> mService
    android.content.ServiceConnection mServiceConn -> mServiceConn
    int mRequestCode -> mRequestCode
    java.lang.String mPurchasingItemType -> mPurchasingItemType
    java.lang.String mSignatureBase64 -> mSignatureBase64
    int BILLING_RESPONSE_RESULT_OK -> BILLING_RESPONSE_RESULT_OK
    int BILLING_RESPONSE_RESULT_USER_CANCELED -> BILLING_RESPONSE_RESULT_USER_CANCELED
    int BILLING_RESPONSE_RESULT_BILLING_UNAVAILABLE -> BILLING_RESPONSE_RESULT_BILLING_UNAVAILABLE
    int BILLING_RESPONSE_RESULT_ITEM_UNAVAILABLE -> BILLING_RESPONSE_RESULT_ITEM_UNAVAILABLE
    int BILLING_RESPONSE_RESULT_DEVELOPER_ERROR -> BILLING_RESPONSE_RESULT_DEVELOPER_ERROR
    int BILLING_RESPONSE_RESULT_ERROR -> BILLING_RESPONSE_RESULT_ERROR
    int BILLING_RESPONSE_RESULT_ITEM_ALREADY_OWNED -> BILLING_RESPONSE_RESULT_ITEM_ALREADY_OWNED
    int BILLING_RESPONSE_RESULT_ITEM_NOT_OWNED -> BILLING_RESPONSE_RESULT_ITEM_NOT_OWNED
    int IABHELPER_ERROR_BASE -> IABHELPER_ERROR_BASE
    int IABHELPER_REMOTE_EXCEPTION -> IABHELPER_REMOTE_EXCEPTION
    int IABHELPER_BAD_RESPONSE -> IABHELPER_BAD_RESPONSE
    int IABHELPER_VERIFICATION_FAILED -> IABHELPER_VERIFICATION_FAILED
    int IABHELPER_SEND_INTENT_FAILED -> IABHELPER_SEND_INTENT_FAILED
    int IABHELPER_USER_CANCELLED -> IABHELPER_USER_CANCELLED
    int IABHELPER_UNKNOWN_PURCHASE_RESPONSE -> IABHELPER_UNKNOWN_PURCHASE_RESPONSE
    int IABHELPER_MISSING_TOKEN -> IABHELPER_MISSING_TOKEN
    int IABHELPER_UNKNOWN_ERROR -> IABHELPER_UNKNOWN_ERROR
    int IABHELPER_SUBSCRIPTIONS_NOT_AVAILABLE -> IABHELPER_SUBSCRIPTIONS_NOT_AVAILABLE
    int IABHELPER_INVALID_CONSUMPTION -> IABHELPER_INVALID_CONSUMPTION
    int IABHELPER_MISSING_SIGNATURE -> IABHELPER_MISSING_SIGNATURE
    java.lang.String RESPONSE_CODE -> RESPONSE_CODE
    java.lang.String RESPONSE_GET_SKU_DETAILS_LIST -> RESPONSE_GET_SKU_DETAILS_LIST
    java.lang.String RESPONSE_BUY_INTENT -> RESPONSE_BUY_INTENT
    java.lang.String RESPONSE_INAPP_PURCHASE_DATA -> RESPONSE_INAPP_PURCHASE_DATA
    java.lang.String RESPONSE_INAPP_SIGNATURE -> RESPONSE_INAPP_SIGNATURE
    java.lang.String RESPONSE_INAPP_ITEM_LIST -> RESPONSE_INAPP_ITEM_LIST
    java.lang.String RESPONSE_INAPP_PURCHASE_DATA_LIST -> RESPONSE_INAPP_PURCHASE_DATA_LIST
    java.lang.String RESPONSE_INAPP_SIGNATURE_LIST -> RESPONSE_INAPP_SIGNATURE_LIST
    java.lang.String INAPP_CONTINUATION_TOKEN -> INAPP_CONTINUATION_TOKEN
    java.lang.String ITEM_TYPE_INAPP -> ITEM_TYPE_INAPP
    java.lang.String ITEM_TYPE_SUBS -> ITEM_TYPE_SUBS
    java.lang.String GET_SKU_DETAILS_ITEM_LIST -> GET_SKU_DETAILS_ITEM_LIST
    java.lang.String GET_SKU_DETAILS_ITEM_TYPE_LIST -> GET_SKU_DETAILS_ITEM_TYPE_LIST
    java.lang.Object mSignatureLock -> mSignatureLock
    com.aviary.android.feather.cds.billing.util.IabHelper$OnIabPurchaseFinishedListener mPurchaseListener -> mPurchaseListener
    boolean isSetupDone() -> isSetupDone
    boolean isDisposed() -> isDisposed
    boolean isAvailable() -> isAvailable
    void enableDebugLogging(boolean,java.lang.String) -> enableDebugLogging
    void enableDebugLogging(boolean) -> enableDebugLogging
    void loadKeysAsync() -> loadKeysAsync
    void startSetup(com.aviary.android.feather.cds.billing.util.IabHelper$OnIabSetupFinishedListener) -> startSetup
    void dispose() -> dispose
    void checkNotDisposed() -> checkNotDisposed
    boolean subscriptionsSupported() -> subscriptionsSupported
    void launchPurchaseFlow(android.app.Activity,java.lang.String,int,com.aviary.android.feather.cds.billing.util.IabHelper$OnIabPurchaseFinishedListener) -> launchPurchaseFlow
    void launchPurchaseFlow(android.app.Activity,java.lang.String,int,com.aviary.android.feather.cds.billing.util.IabHelper$OnIabPurchaseFinishedListener,java.lang.String) -> launchPurchaseFlow
    void launchSubscriptionPurchaseFlow(android.app.Activity,java.lang.String,int,com.aviary.android.feather.cds.billing.util.IabHelper$OnIabPurchaseFinishedListener) -> launchSubscriptionPurchaseFlow
    void launchSubscriptionPurchaseFlow(android.app.Activity,java.lang.String,int,com.aviary.android.feather.cds.billing.util.IabHelper$OnIabPurchaseFinishedListener,java.lang.String) -> launchSubscriptionPurchaseFlow
    void launchPurchaseFlow(android.app.Activity,java.lang.String,java.lang.String,int,com.aviary.android.feather.cds.billing.util.IabHelper$OnIabPurchaseFinishedListener,java.lang.String) -> launchPurchaseFlow
    boolean handleActivityResult(int,int,android.content.Intent) -> handleActivityResult
    com.aviary.android.feather.cds.billing.util.Inventory queryInventory(boolean,java.util.List) -> queryInventory
    com.aviary.android.feather.cds.billing.util.Inventory queryInventory(boolean,java.util.List,java.util.List) -> queryInventory
    void queryInventoryAsync(boolean,java.util.List,com.aviary.android.feather.cds.billing.util.IabHelper$QueryInventoryFinishedListener) -> queryInventoryAsync
    void queryInventoryAsync(com.aviary.android.feather.cds.billing.util.IabHelper$QueryInventoryFinishedListener) -> queryInventoryAsync
    void queryInventoryAsync(boolean,com.aviary.android.feather.cds.billing.util.IabHelper$QueryInventoryFinishedListener) -> queryInventoryAsync
    void consume(com.aviary.android.feather.cds.billing.util.Purchase) -> consume
    void consumeAsync(com.aviary.android.feather.cds.billing.util.Purchase,com.aviary.android.feather.cds.billing.util.IabHelper$OnConsumeFinishedListener) -> consumeAsync
    void consumeAsync(java.util.List,com.aviary.android.feather.cds.billing.util.IabHelper$OnConsumeMultiFinishedListener) -> consumeAsync
    java.lang.String getResponseDesc(int) -> getResponseDesc
    void checkSetupDone(java.lang.String) -> checkSetupDone
    int getResponseCodeFromBundle(android.os.Bundle) -> getResponseCodeFromBundle
    int getResponseCodeFromIntent(android.content.Intent) -> getResponseCodeFromIntent
    void flagStartAsync(java.lang.String) -> flagStartAsync
    void flagEndAsync() -> flagEndAsync
    int queryPurchases(com.aviary.android.feather.cds.billing.util.Inventory,java.lang.String) -> queryPurchases
    int querySkuDetails(java.lang.String,com.aviary.android.feather.cds.billing.util.Inventory,java.util.List) -> querySkuDetails
    void consumeAsyncInternal(java.util.List,com.aviary.android.feather.cds.billing.util.IabHelper$OnConsumeFinishedListener,com.aviary.android.feather.cds.billing.util.IabHelper$OnConsumeMultiFinishedListener) -> consumeAsyncInternal
    void logDebug(java.lang.String) -> logDebug
    void logError(java.lang.String) -> logError
    void logWarn(java.lang.String) -> logWarn
    java.lang.Object access$0(com.aviary.android.feather.cds.billing.util.IabHelper) -> access$0
com.aviary.android.feather.cds.billing.util.IabHelper$1 -> com.aviary.android.feather.cds.billing.util.IabHelper$1:
    com.aviary.android.feather.cds.billing.util.IabHelper this$0 -> this$0
    void run() -> run
com.aviary.android.feather.cds.billing.util.IabHelper$2 -> com.aviary.android.feather.cds.billing.util.IabHelper$2:
    com.aviary.android.feather.cds.billing.util.IabHelper this$0 -> this$0
    com.aviary.android.feather.cds.billing.util.IabHelper$OnIabSetupFinishedListener val$listener -> val$listener
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
com.aviary.android.feather.cds.billing.util.IabHelper$3 -> com.aviary.android.feather.cds.billing.util.IabHelper$3:
    com.aviary.android.feather.cds.billing.util.IabHelper this$0 -> this$0
    boolean val$querySkuDetails -> val$querySkuDetails
    java.util.List val$moreSkus -> val$moreSkus
    com.aviary.android.feather.cds.billing.util.IabHelper$QueryInventoryFinishedListener val$listener -> val$listener
    android.os.Handler val$handler -> val$handler
    void run() -> run
com.aviary.android.feather.cds.billing.util.IabHelper$3$1 -> com.aviary.android.feather.cds.billing.util.IabHelper$3$1:
    com.aviary.android.feather.cds.billing.util.IabHelper$3 this$1 -> this$1
    com.aviary.android.feather.cds.billing.util.IabHelper$QueryInventoryFinishedListener val$listener -> val$listener
    com.aviary.android.feather.cds.billing.util.IabResult val$result_f -> val$result_f
    com.aviary.android.feather.cds.billing.util.Inventory val$inv_f -> val$inv_f
    void run() -> run
com.aviary.android.feather.cds.billing.util.IabHelper$4 -> com.aviary.android.feather.cds.billing.util.IabHelper$4:
    com.aviary.android.feather.cds.billing.util.IabHelper this$0 -> this$0
    java.util.List val$purchases -> val$purchases
    com.aviary.android.feather.cds.billing.util.IabHelper$OnConsumeFinishedListener val$singleListener -> val$singleListener
    android.os.Handler val$handler -> val$handler
    com.aviary.android.feather.cds.billing.util.IabHelper$OnConsumeMultiFinishedListener val$multiListener -> val$multiListener
    void run() -> run
com.aviary.android.feather.cds.billing.util.IabHelper$4$1 -> com.aviary.android.feather.cds.billing.util.IabHelper$4$1:
    com.aviary.android.feather.cds.billing.util.IabHelper$4 this$1 -> this$1
    com.aviary.android.feather.cds.billing.util.IabHelper$OnConsumeFinishedListener val$singleListener -> val$singleListener
    java.util.List val$purchases -> val$purchases
    java.util.List val$results -> val$results
    void run() -> run
com.aviary.android.feather.cds.billing.util.IabHelper$4$2 -> com.aviary.android.feather.cds.billing.util.IabHelper$4$2:
    com.aviary.android.feather.cds.billing.util.IabHelper$4 this$1 -> this$1
    com.aviary.android.feather.cds.billing.util.IabHelper$OnConsumeMultiFinishedListener val$multiListener -> val$multiListener
    java.util.List val$purchases -> val$purchases
    java.util.List val$results -> val$results
    void run() -> run
com.aviary.android.feather.cds.billing.util.IabHelper$OnConsumeFinishedListener -> com.aviary.android.feather.cds.billing.util.IabHelper$OnConsumeFinishedListener:
    void onConsumeFinished(com.aviary.android.feather.cds.billing.util.Purchase,com.aviary.android.feather.cds.billing.util.IabResult) -> onConsumeFinished
com.aviary.android.feather.cds.billing.util.IabHelper$OnConsumeMultiFinishedListener -> com.aviary.android.feather.cds.billing.util.IabHelper$OnConsumeMultiFinishedListener:
    void onConsumeMultiFinished(java.util.List,java.util.List) -> onConsumeMultiFinished
com.aviary.android.feather.cds.billing.util.IabHelper$OnIabPurchaseFinishedListener -> com.aviary.android.feather.cds.billing.util.IabHelper$OnIabPurchaseFinishedListener:
    void onIabPurchaseFinished(com.aviary.android.feather.cds.billing.util.IabResult,com.aviary.android.feather.cds.billing.util.Purchase) -> onIabPurchaseFinished
com.aviary.android.feather.cds.billing.util.IabHelper$OnIabSetupFinishedListener -> com.aviary.android.feather.cds.billing.util.IabHelper$OnIabSetupFinishedListener:
    void onIabSetupFinished(com.aviary.android.feather.cds.billing.util.IabResult) -> onIabSetupFinished
com.aviary.android.feather.cds.billing.util.IabHelper$QueryInventoryFinishedListener -> com.aviary.android.feather.cds.billing.util.IabHelper$QueryInventoryFinishedListener:
    void onQueryInventoryFinished(com.aviary.android.feather.cds.billing.util.IabResult,com.aviary.android.feather.cds.billing.util.Inventory) -> onQueryInventoryFinished
com.aviary.android.feather.cds.billing.util.IabResult -> com.aviary.android.feather.cds.billing.util.IabResult:
    int mResponse -> mResponse
    java.lang.String mMessage -> mMessage
    int getResponse() -> getResponse
    java.lang.String getMessage() -> getMessage
    boolean isSuccess() -> isSuccess
    boolean isFailure() -> isFailure
    java.lang.String toString() -> toString
com.aviary.android.feather.cds.billing.util.Inventory -> com.aviary.android.feather.cds.billing.util.Inventory:
    java.util.Map mSkuMap -> mSkuMap
    java.util.Map mPurchaseMap -> mPurchaseMap
    com.aviary.android.feather.cds.billing.util.SkuDetails getSkuDetails(java.lang.String) -> getSkuDetails
    com.aviary.android.feather.cds.billing.util.Purchase getPurchase(java.lang.String) -> getPurchase
    boolean hasPurchase(java.lang.String) -> hasPurchase
    boolean hasDetails(java.lang.String) -> hasDetails
    void erasePurchase(java.lang.String) -> erasePurchase
    java.util.List getAllOwnedSkus() -> getAllOwnedSkus
    java.util.List getAllOwnedSkus(java.lang.String) -> getAllOwnedSkus
    java.util.List getAllPurchases() -> getAllPurchases
    void addSkuDetails(com.aviary.android.feather.cds.billing.util.SkuDetails) -> addSkuDetails
    void addPurchase(com.aviary.android.feather.cds.billing.util.Purchase) -> addPurchase
com.aviary.android.feather.cds.billing.util.Purchase -> com.aviary.android.feather.cds.billing.util.Purchase:
    java.lang.String mItemType -> mItemType
    java.lang.String mOrderId -> mOrderId
    java.lang.String mPackageName -> mPackageName
    java.lang.String mSku -> mSku
    long mPurchaseTime -> mPurchaseTime
    int mPurchaseState -> mPurchaseState
    java.lang.String mDeveloperPayload -> mDeveloperPayload
    java.lang.String mToken -> mToken
    java.lang.String mOriginalJson -> mOriginalJson
    java.lang.String mSignature -> mSignature
    java.lang.String getItemType() -> getItemType
    java.lang.String getOrderId() -> getOrderId
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getSku() -> getSku
    long getPurchaseTime() -> getPurchaseTime
    int getPurchaseState() -> getPurchaseState
    java.lang.String getDeveloperPayload() -> getDeveloperPayload
    java.lang.String getToken() -> getToken
    java.lang.String getOriginalJson() -> getOriginalJson
    java.lang.String getSignature() -> getSignature
    java.lang.String toString() -> toString
com.aviary.android.feather.cds.billing.util.Security -> com.aviary.android.feather.cds.billing.util.Security:
    java.lang.String TAG -> TAG
    java.lang.String KEY_FACTORY_ALGORITHM -> KEY_FACTORY_ALGORITHM
    java.lang.String SIGNATURE_ALGORITHM -> SIGNATURE_ALGORITHM
    boolean verifyPurchase(java.lang.String,java.lang.String,java.lang.String) -> verifyPurchase
    java.security.PublicKey generatePublicKey(java.lang.String) -> generatePublicKey
    boolean verify(java.security.PublicKey,java.lang.String,java.lang.String) -> verify
com.aviary.android.feather.cds.billing.util.SkuDetails -> com.aviary.android.feather.cds.billing.util.SkuDetails:
    java.lang.String mItemType -> mItemType
    java.lang.String mSku -> mSku
    java.lang.String mType -> mType
    java.lang.String mPrice -> mPrice
    java.lang.String mTitle -> mTitle
    java.lang.String mDescription -> mDescription
    java.lang.String mJson -> mJson
    java.lang.String getSku() -> getSku
    java.lang.String getType() -> getType
    java.lang.String getPrice() -> getPrice
    java.lang.String getTitle() -> getTitle
    java.lang.String getDescription() -> getDescription
    java.lang.String toString() -> toString
com.aviary.android.feather.cds.json.CdsContentParser -> com.aviary.android.feather.cds.json.CdsContentParser:
    java.lang.String identifier -> identifier
    java.lang.String versionKey -> versionKey
    java.lang.String packType -> packType
    java.lang.String displayName -> displayName
    java.lang.String displayDescription -> displayDescription
    java.lang.String iconURL -> iconURL
    java.lang.String iconVersion -> iconVersion
    java.lang.String previewURL -> previewURL
    java.lang.String previewVersion -> previewVersion
    java.lang.String contentURL -> contentURL
    java.lang.String contentVersion -> contentVersion
    boolean free -> free
    java.util.List mItems -> mItems
    java.util.List getItems() -> getItems
    java.lang.String getIdentifier() -> getIdentifier
    java.lang.String getVersionKey() -> getVersionKey
    java.lang.String getPackType() -> getPackType
    java.lang.String getDisplayName() -> getDisplayName
    java.lang.String getDisplayDescription() -> getDisplayDescription
    java.lang.String getIconURL() -> getIconURL
    java.lang.String getIconVersion() -> getIconVersion
    java.lang.String getPreviewURL() -> getPreviewURL
    java.lang.String getPreviewVersion() -> getPreviewVersion
    java.lang.String getContentURL() -> getContentURL
    java.lang.String getContentVersion() -> getContentVersion
    boolean isFree() -> isFree
    void onParseJson(org.json.JSONObject) -> onParseJson
    java.lang.String toString() -> toString
com.aviary.android.feather.cds.json.CdsContentParser$ContentItem -> com.aviary.android.feather.cds.json.CdsContentParser$ContentItem:
    java.lang.String identifier -> identifier
    java.lang.String displayName -> displayName
    byte[] options -> options
    java.lang.String getIdentifier() -> getIdentifier
    java.lang.String getDisplayName() -> getDisplayName
    byte[] getOptions() -> getOptions
    java.lang.String toString() -> toString
    com.aviary.android.feather.cds.json.CdsContentParser$ContentItem create(org.json.JSONObject) -> create
com.aviary.android.feather.cds.json.CdsJsonParser -> com.aviary.android.feather.cds.json.CdsJsonParser:
    int CODE_NOERROR -> CODE_NOERROR
    int CODE_INVALID -> CODE_INVALID
    int mCode -> mCode
    java.lang.String mStatus -> mStatus
    int parse(java.io.InputStream) -> parse
    int parse(java.lang.String) -> parse
    int parse(org.json.JSONObject) -> parse
    int getCode() -> getCode
    java.lang.String getStatus() -> getStatus
    void onParseJson(org.json.JSONObject) -> onParseJson
com.aviary.android.feather.cds.json.CdsManifestParser -> com.aviary.android.feather.cds.json.CdsManifestParser:
    java.lang.String assetsBaseURL -> assetsBaseURL
    java.lang.String versionKey -> versionKey
    java.lang.String formatListId -> formatListId
    boolean mHasContent -> mHasContent
    java.util.HashMap enabledPacks -> enabledPacks
    java.util.HashMap deletedPacks -> deletedPacks
    java.util.HashMap enabledPacksNames -> enabledPacksNames
    java.util.HashMap enabledMessages -> enabledMessages
    java.util.HashMap enabledMessagesNames -> enabledMessagesNames
    java.util.List permissions -> permissions
    java.lang.String getAssetsBaseURL() -> getAssetsBaseURL
    java.lang.String getVersionKey() -> getVersionKey
    java.lang.String getFormatListId() -> getFormatListId
    boolean hasEnabledPacks() -> hasEnabledPacks
    boolean hasDeletedPacks() -> hasDeletedPacks
    boolean hasMessages() -> hasMessages
    boolean containsEnabledPack(java.lang.String) -> containsEnabledPack
    boolean containsMessage(java.lang.String) -> containsMessage
    boolean hasContent() -> hasContent
    java.util.List getEnabledPacks(java.lang.String) -> getEnabledPacks
    java.util.List getDeletedPacks(java.lang.String) -> getDeletedPacks
    java.util.List getMessages(java.lang.String) -> getMessages
    java.util.HashMap getMessages() -> getMessages
    java.util.HashMap getEnabledPacks() -> getEnabledPacks
    java.util.List getPermissions() -> getPermissions
    java.lang.String getPermissionsKey() -> getPermissionsKey
    java.util.List getDeletedPacks() -> getDeletedPacks
    void onParseJson(org.json.JSONObject) -> onParseJson
    void onParsePermissions(org.json.JSONArray) -> onParsePermissions
    void onParseMessageEntry(org.json.JSONObject,java.lang.String) -> onParseMessageEntry
    void onParsePackEntry(org.json.JSONObject,java.lang.String) -> onParsePackEntry
    void parsePackArray(org.json.JSONObject,java.lang.String,java.util.List,java.util.HashMap,boolean) -> parsePackArray
com.aviary.android.feather.cds.json.CdsManifestParser$ManifestPackItem -> com.aviary.android.feather.cds.json.CdsManifestParser$ManifestPackItem:
    java.lang.String identifier -> identifier
    java.lang.String versionKey -> versionKey
    java.lang.String getIdentifier() -> getIdentifier
    java.lang.String getVersionKey() -> getVersionKey
    java.lang.String toString() -> toString
com.aviary.android.feather.cds.json.CdsMessageContentParser -> com.aviary.android.feather.cds.json.CdsMessageContentParser:
    java.lang.String identifier -> identifier
    java.lang.String contentIdentifier -> contentIdentifier
    java.lang.String versionKey -> versionKey
    long beginDate -> beginDate
    long endDate -> endDate
    java.lang.String title -> title
    java.lang.String paragraph -> paragraph
    java.lang.String dismissButtonText -> dismissButtonText
    java.lang.String actionButtonText -> actionButtonText
    java.lang.String contentURL -> contentURL
    java.lang.String layoutStyle -> layoutStyle
    boolean showNewBanner -> showNewBanner
    boolean splitButton -> splitButton
    java.lang.String getIdentifier() -> getIdentifier
    java.lang.String getVersionKey() -> getVersionKey
    java.lang.String getContentURL() -> getContentURL
    java.lang.String getContentIdentifier() -> getContentIdentifier
    long getBeginDate() -> getBeginDate
    long getEndDate() -> getEndDate
    java.lang.String getTitle() -> getTitle
    java.lang.String getParagraph() -> getParagraph
    java.lang.String getDismissButtonText() -> getDismissButtonText
    java.lang.String getActionButtonText() -> getActionButtonText
    java.lang.String getLayoutStyle() -> getLayoutStyle
    boolean isShowNewBanner() -> isShowNewBanner
    boolean isSplitButton() -> isSplitButton
    void onParseJson(org.json.JSONObject) -> onParseJson
com.aviary.android.feather.common.AviaryIntent -> com.aviary.android.feather.common.AviaryIntent:
    java.lang.String ACTION_EDIT -> ACTION_EDIT
    java.lang.String ACTION_COLLECT_LOGS -> ACTION_COLLECT_LOGS
    java.lang.String ACTION_ALERT -> ACTION_ALERT
    java.lang.String ACTION_CDS_DOWNLOAD_START -> ACTION_CDS_DOWNLOAD_START
    java.lang.String ACTION_CDS_VERIFY_PACKAGE -> ACTION_CDS_VERIFY_PACKAGE
    java.lang.String ACTION_CDS_RESTORE_USER_ITEMS -> ACTION_CDS_RESTORE_USER_ITEMS
    java.lang.String ACTION_MESSAGE -> ACTION_MESSAGE
    java.lang.String EXTRA_API_KEY_SECRET -> EXTRA_API_KEY_SECRET
    java.lang.String EXTRA_BILLING_PUBLIC_KEY -> EXTRA_BILLING_PUBLIC_KEY
    java.lang.String EXTRA_EXCEPTIONS -> EXTRA_EXCEPTIONS
    java.lang.String SCHEME_TOOL -> SCHEME_TOOL
    android.content.ComponentName getAlertComponent(android.content.Context) -> getAlertComponent
    android.content.ComponentName getLogsCollectorComponent(android.content.Context) -> getLogsCollectorComponent
    android.content.ComponentName getTutorialComponent(android.content.Context) -> getTutorialComponent
    android.content.ComponentName getCdsServiceComponent(android.content.Context) -> getCdsServiceComponent
    android.content.Intent createAlertIntent(android.content.Context,java.lang.CharSequence,java.lang.CharSequence) -> createAlertIntent
    android.content.Intent createCdsInitIntent(android.content.Context,java.lang.String,java.lang.String) -> createCdsInitIntent
    android.content.Intent createCdsRestoreAllIntent(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> createCdsRestoreAllIntent
com.aviary.android.feather.common.AviaryIntent$OptionBundle -> com.aviary.android.feather.common.AviaryIntent$OptionBundle:
    java.lang.String SHOW_IAP_DIALOG -> SHOW_IAP_DIALOG
    java.lang.String TRACK_EVENT -> TRACK_EVENT
com.aviary.android.feather.common.log.LoggerFactory -> com.aviary.android.feather.common.log.LoggerFactory:
    boolean LOG_ENABLED -> LOG_ENABLED
    java.lang.String BASE_LOG_TAG -> BASE_LOG_TAG
    com.aviary.android.feather.common.log.LoggerFactory$Logger getLogger(java.lang.String,com.aviary.android.feather.common.log.LoggerFactory$LoggerType) -> getLogger
    void printDeveloperError(java.lang.String) -> printDeveloperError
com.aviary.android.feather.common.log.LoggerFactory$BaseLogger -> com.aviary.android.feather.common.log.LoggerFactory$BaseLogger:
    java.lang.String tag -> tag
    java.lang.StringBuilder formatArguments(java.lang.Object[]) -> formatArguments
com.aviary.android.feather.common.log.LoggerFactory$ConsoleLogger -> com.aviary.android.feather.common.log.LoggerFactory$ConsoleLogger:
    void log(java.lang.String) -> log
    void info(java.lang.String) -> info
    void warn(java.lang.String) -> warn
    void error(java.lang.String) -> error
    void log(java.lang.String,java.lang.Object[]) -> log
    void info(java.lang.String,java.lang.Object[]) -> info
    void warn(java.lang.String,java.lang.Object[]) -> warn
    void error(java.lang.String,java.lang.Object[]) -> error
com.aviary.android.feather.common.log.LoggerFactory$Logger -> com.aviary.android.feather.common.log.LoggerFactory$Logger:
    void log(java.lang.String) -> log
    void info(java.lang.String) -> info
    void warn(java.lang.String) -> warn
    void error(java.lang.String) -> error
    void log(java.lang.String,java.lang.Object[]) -> log
    void info(java.lang.String,java.lang.Object[]) -> info
    void warn(java.lang.String,java.lang.Object[]) -> warn
    void error(java.lang.String,java.lang.Object[]) -> error
com.aviary.android.feather.common.log.LoggerFactory$LoggerType -> com.aviary.android.feather.common.log.LoggerFactory$LoggerType:
    com.aviary.android.feather.common.log.LoggerFactory$LoggerType ConsoleLoggerType -> ConsoleLoggerType
    com.aviary.android.feather.common.log.LoggerFactory$LoggerType[] ENUM$VALUES -> ENUM$VALUES
    com.aviary.android.feather.common.log.LoggerFactory$LoggerType[] values() -> values
    com.aviary.android.feather.common.log.LoggerFactory$LoggerType valueOf(java.lang.String) -> valueOf
com.aviary.android.feather.common.log.LoggerFactory$NullLogger -> com.aviary.android.feather.common.log.LoggerFactory$NullLogger:
    void log(java.lang.String) -> log
    void info(java.lang.String) -> info
    void warn(java.lang.String) -> warn
    void error(java.lang.String) -> error
    void log(java.lang.String,java.lang.Object[]) -> log
    void info(java.lang.String,java.lang.Object[]) -> info
    void warn(java.lang.String,java.lang.Object[]) -> warn
    void error(java.lang.String,java.lang.Object[]) -> error
com.aviary.android.feather.common.threading.Future -> com.aviary.android.feather.common.threading.Future:
    boolean cancel(boolean) -> cancel
    void setCancelListener(com.aviary.android.feather.common.threading.ThreadPool$CancelListener) -> setCancelListener
    java.lang.Object get() -> get
    void waitDone() -> waitDone
    boolean hasException() -> hasException
    java.lang.Exception getException() -> getException
com.aviary.android.feather.common.threading.FutureListener -> com.aviary.android.feather.common.threading.FutureListener:
    void onFutureDone(com.aviary.android.feather.common.threading.Future) -> onFutureDone
com.aviary.android.feather.common.threading.PriorityThreadFactory -> com.aviary.android.feather.common.threading.PriorityThreadFactory:
    int mPriority -> mPriority
    java.util.concurrent.atomic.AtomicInteger mNumber -> mNumber
    java.lang.String mName -> mName
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
    int access$0(com.aviary.android.feather.common.threading.PriorityThreadFactory) -> access$0
com.aviary.android.feather.common.threading.PriorityThreadFactory$1 -> com.aviary.android.feather.common.threading.PriorityThreadFactory$1:
    com.aviary.android.feather.common.threading.PriorityThreadFactory this$0 -> this$0
    void run() -> run
com.aviary.android.feather.common.threading.ThreadPool -> com.aviary.android.feather.common.threading.ThreadPool:
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadPoolExecutor mExecutor -> mExecutor
    android.os.Handler mListenerHandler -> mListenerHandler
    com.aviary.android.feather.common.log.LoggerFactory$Logger logger -> logger
    java.util.concurrent.BlockingQueue getQueue() -> getQueue
    int getPoolSize() -> getPoolSize
    long getCompletedTaskCount() -> getCompletedTaskCount
    int getActiveCount() -> getActiveCount
    long getTaskCount() -> getTaskCount
    com.aviary.android.feather.common.threading.Future submit(com.aviary.android.feather.common.threading.ThreadPool$Job,com.aviary.android.feather.common.threading.FutureListener,java.lang.Object[]) -> submit
    void printStats() -> printStats
    void dispose() -> dispose
    com.aviary.android.feather.common.log.LoggerFactory$Logger access$0() -> access$0
    android.os.Handler access$1(com.aviary.android.feather.common.threading.ThreadPool) -> access$1
    void access$2(com.aviary.android.feather.common.threading.ThreadPool) -> access$2
com.aviary.android.feather.common.threading.ThreadPool$1 -> com.aviary.android.feather.common.threading.ThreadPool$1:
    com.aviary.android.feather.common.threading.ThreadPool this$0 -> this$0
    com.aviary.android.feather.common.threading.ThreadPool$Job val$job -> val$job
    java.lang.Object[] val$params -> val$params
    void run() -> run
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
com.aviary.android.feather.common.threading.ThreadPool$CancelListener -> com.aviary.android.feather.common.threading.ThreadPool$CancelListener:
    void onCancel() -> onCancel
com.aviary.android.feather.common.threading.ThreadPool$Job -> com.aviary.android.feather.common.threading.ThreadPool$Job:
    java.lang.Object run(com.aviary.android.feather.common.threading.ThreadPool$Worker,java.lang.Object[]) -> run
com.aviary.android.feather.common.threading.ThreadPool$LowPriorityThreadFactory -> com.aviary.android.feather.common.threading.ThreadPool$LowPriorityThreadFactory:
    int mPriority -> mPriority
    java.util.concurrent.atomic.AtomicInteger mNumber -> mNumber
    java.lang.String mName -> mName
    com.aviary.android.feather.common.threading.ThreadPool this$0 -> this$0
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
    int access$0(com.aviary.android.feather.common.threading.ThreadPool$LowPriorityThreadFactory) -> access$0
com.aviary.android.feather.common.threading.ThreadPool$LowPriorityThreadFactory$1 -> com.aviary.android.feather.common.threading.ThreadPool$LowPriorityThreadFactory$1:
    com.aviary.android.feather.common.threading.ThreadPool$LowPriorityThreadFactory this$1 -> this$1
    void run() -> run
com.aviary.android.feather.common.threading.ThreadPool$Worker -> com.aviary.android.feather.common.threading.ThreadPool$Worker:
    com.aviary.android.feather.common.threading.ThreadPool$Job mTask -> mTask
    com.aviary.android.feather.common.threading.FutureListener mListener -> mListener
    com.aviary.android.feather.common.threading.ThreadPool$CancelListener mCancelListener -> mCancelListener
    java.lang.Object mResult -> mResult
    java.lang.Object mParams -> mParams
    java.lang.Exception mError -> mError
    boolean mIsDone -> mIsDone
    boolean mIsCancelled -> mIsCancelled
    com.aviary.android.feather.common.threading.ThreadPool this$0 -> this$0
    void fireOnCancelEvent() -> fireOnCancelEvent
    void fireOnDoneEvent() -> fireOnDoneEvent
    void setResult(java.lang.Object) -> setResult
    void setException(java.lang.Exception) -> setException
    void setIsDone() -> setIsDone
    void setCancelListener(com.aviary.android.feather.common.threading.ThreadPool$CancelListener) -> setCancelListener
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    boolean isCancelled() -> isCancelled
    boolean isDone() -> isDone
    void waitDone() -> waitDone
    boolean hasException() -> hasException
    java.lang.Exception getException() -> getException
com.aviary.android.feather.common.threading.ThreadPool$Worker$1 -> com.aviary.android.feather.common.threading.ThreadPool$Worker$1:
    com.aviary.android.feather.common.threading.ThreadPool$Worker this$1 -> this$1
    void run() -> run
com.aviary.android.feather.common.threading.ThreadPool$Worker$2 -> com.aviary.android.feather.common.threading.ThreadPool$Worker$2:
    com.aviary.android.feather.common.threading.ThreadPool$Worker this$1 -> this$1
    com.aviary.android.feather.common.threading.Future val$sender -> val$sender
    void run() -> run
com.aviary.android.feather.common.utils.DateTimeUtils -> com.aviary.android.feather.common.utils.DateTimeUtils:
    long ONE_SECOND -> ONE_SECOND
    long ONE_MINUTE -> ONE_MINUTE
    long ONE_HOUR -> ONE_HOUR
    long ONE_DAY -> ONE_DAY
    long ONE_WEEK -> ONE_WEEK
    java.lang.String LOG_TAG -> LOG_TAG
    java.text.SimpleDateFormat sSqldateFormat -> sSqldateFormat
    long tick() -> tick
    long tick(long,java.lang.String) -> tick
    java.lang.String toSqlDateTime(long) -> toSqlDateTime
    java.lang.String toSqlDateTime(java.util.Date) -> toSqlDateTime
    java.util.Date fromSqlDateTime(java.lang.String) -> fromSqlDateTime
com.aviary.android.feather.common.utils.IDisposable -> com.aviary.android.feather.common.utils.IDisposable:
    void dispose() -> dispose
com.aviary.android.feather.common.utils.IOUtils -> com.aviary.android.feather.common.utils.IOUtils:
    java.lang.String LOG_TAG -> LOG_TAG
    int KILOBYE -> KILOBYE
    int MEGABYTE -> MEGABYTE
    java.io.File mkdirs(java.io.File,java.lang.String) -> mkdirs
    boolean readFileFromZip(java.util.zip.ZipInputStream,java.lang.String,java.io.OutputStream) -> readFileFromZip
    boolean readFileFromZip(java.util.zip.ZipInputStream,java.lang.String,java.nio.ByteBuffer) -> readFileFromZip
    boolean readFileFromZip(java.util.zip.ZipFile,java.lang.String,java.io.OutputStream) -> readFileFromZip
    void closeSilently(java.io.Closeable) -> closeSilently
    void closeSilently(java.util.zip.ZipFile) -> closeSilently
    void closeSilently(android.os.ParcelFileDescriptor) -> closeSilently
    void closeSilently(android.database.Cursor) -> closeSilently
    void copyFile(java.io.InputStream,java.io.OutputStream) -> copyFile
    void copyFileChannel(java.io.File,java.io.File) -> copyFileChannel
    void copyFile(java.io.InputStream,java.nio.ByteBuffer) -> copyFile
    void copyFile(java.io.File,java.io.File) -> copyFile
    void copyFile(java.lang.String,java.lang.String) -> copyFile
    java.lang.String getNewFileName(java.lang.String) -> getNewFileName
    int readSystemFileAsInt(java.lang.String) -> readSystemFileAsInt
    java.lang.String readFully(java.io.InputStream) -> readFully
    void saveFile(java.io.File,java.lang.String) -> saveFile
    java.lang.String getRealFilePath(android.content.Context,android.net.Uri) -> getRealFilePath
    java.io.ByteArrayInputStream fromStream(java.io.InputStream) -> fromStream
    java.io.InputStream ensureMarkSupported(java.io.InputStream) -> ensureMarkSupported
    void unzip(java.io.InputStream,java.io.File) -> unzip
    void unzipEntry(java.util.zip.ZipEntry,java.util.zip.ZipInputStream,java.io.File) -> unzipEntry
    boolean mkdir(java.io.File) -> mkdir
    void deleteDirectory(java.io.File) -> deleteDirectory
    boolean isSymlink(java.io.File) -> isSymlink
    void cleanDirectory(java.io.File) -> cleanDirectory
    void forceDelete(java.io.File) -> forceDelete
    boolean deleteQuietly(java.io.File) -> deleteQuietly
    java.io.ByteArrayInputStream download(java.lang.String,java.util.List) -> download
com.aviary.android.feather.common.utils.PackageManagerUtils -> com.aviary.android.feather.common.utils.PackageManagerUtils:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String BASENAME -> BASENAME
    android.content.pm.ApplicationInfo mInfo -> mInfo
    android.content.pm.PackageInfo mPackageInfo -> mPackageInfo
    java.lang.String CONTENT_BASE_URL_RELEASE -> CONTENT_BASE_URL_RELEASE
    java.lang.String CONTENT_BASE_URL_DEBUG -> CONTENT_BASE_URL_DEBUG
    java.lang.String CONTENT_BASE_URL -> CONTENT_BASE_URL
    java.lang.String sCdsProviderContentUri -> sCdsProviderContentUri
    java.lang.String sCdsAuthority -> sCdsAuthority
    android.content.pm.ApplicationInfo getApplicationInfo(android.content.Context) -> getApplicationInfo
    android.content.pm.PackageInfo getPackageInfo(android.content.Context) -> getPackageInfo
    android.content.pm.PackageInfo getPackageInfo(android.content.Context,int) -> getPackageInfo
    android.content.pm.PackageInfo getPackageInfo(android.content.Context,java.lang.String,int) -> getPackageInfo
    boolean isStandalone(android.content.Context) -> isStandalone
    boolean isDebugVersion(android.content.Context) -> isDebugVersion
    java.lang.String getCDSBaseUrl(android.content.Context) -> getCDSBaseUrl
    java.lang.String getCDSProviderAuthority(android.content.Context) -> getCDSProviderAuthority
    java.lang.String getCDSProviderContentUrl(android.content.Context) -> getCDSProviderContentUrl
    android.net.Uri getCDSProviderContentUri(android.content.Context,java.lang.String) -> getCDSProviderContentUri
    boolean hasPermission(android.content.Context,java.lang.String) -> hasPermission
com.aviary.android.feather.common.utils.ReflectionUtils -> com.aviary.android.feather.common.utils.ReflectionUtils:
    java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> newInstance
    java.lang.Object helper(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class[],java.lang.Object[]) -> helper
    java.lang.Object invokeStaticMethod(java.lang.String,java.lang.String,java.lang.Class[],java.lang.Object[]) -> invokeStaticMethod
    java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Class[],java.lang.Object[]) -> invokeMethod
    java.lang.Object invokeMethod(java.lang.Object,java.lang.String) -> invokeMethod
    java.util.List getStaticMethods(java.lang.Class) -> getStaticMethods
    java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getMethod
    java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String) -> getMethod
com.aviary.android.feather.common.utils.ReflectionUtils$ReflectionException -> com.aviary.android.feather.common.utils.ReflectionUtils$ReflectionException:
    long serialVersionUID -> serialVersionUID
com.aviary.android.feather.common.utils.ResourcesUtils -> com.aviary.android.feather.common.utils.ResourcesUtils:
    java.lang.String RESOURCE_TYPE_DRAWABLE -> RESOURCE_TYPE_DRAWABLE
    java.lang.String RESOURCE_TYPE_STRING -> RESOURCE_TYPE_STRING
    int getIdentifier(android.content.Context,java.lang.String,java.lang.String) -> getIdentifier
    int getIdentifier(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> getIdentifier
    java.lang.String getString(android.content.Context,java.lang.String,java.lang.String) -> getString
    java.lang.String getString(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> getString
    java.lang.String formatString(android.content.Context,java.lang.String,java.lang.String,java.lang.Object[]) -> formatString
com.aviary.android.feather.common.utils.SDKUtils -> com.aviary.android.feather.common.utils.SDKUtils:
    java.lang.String SDK_VERSION -> SDK_VERSION
    int SDK_INT -> SDK_INT
    int IAP_RELEASE_VERSION -> IAP_RELEASE_VERSION
    java.lang.String MISSING_APIKEY_MESSAGE -> MISSING_APIKEY_MESSAGE
    java.lang.String getApiKey(android.content.Context) -> getApiKey
    java.lang.String[] getKeys(android.content.Context) -> getKeys
com.aviary.android.feather.common.utils.SDKUtils$ApiKeyReader -> com.aviary.android.feather.common.utils.SDKUtils$ApiKeyReader:
    java.lang.String METADATA_API_KEY -> METADATA_API_KEY
    java.lang.String mApiKey -> mApiKey
    java.lang.String[] mExtraKeys -> mExtraKeys
    java.lang.Object mApiKeyLock -> mApiKeyLock
    java.lang.String[] getKeys(android.content.Context) -> getKeys
    java.lang.String[] getExtraKeys(android.content.Context) -> getExtraKeys
    java.lang.String getApiKey(android.content.Context) -> getApiKey
    java.lang.String readApiKeyFromMetadata(android.content.Context) -> readApiKeyFromMetadata
    java.lang.String readApiKey(android.content.Context) -> readApiKey
com.aviary.android.feather.common.utils.ScreenUtils -> com.aviary.android.feather.common.utils.ScreenUtils:
    java.lang.String LOG_TAG -> LOG_TAG
    double INCHES_TABLET -> INCHES_TABLET
    double getScreenInches(android.content.Context) -> getScreenInches
    double[] getScreenSize(android.content.Context) -> getScreenSize
    boolean isTablet(android.content.Context) -> isTablet
com.aviary.android.feather.common.utils.StringUtils -> com.aviary.android.feather.common.utils.StringUtils:
    byte[] SALT -> SALT
    long INITIALCRC -> INITIALCRC
    long POLY64REV -> POLY64REV
    long[] sCrcTable -> sCrcTable
    java.lang.String join(java.lang.Object[],java.lang.String) -> join
    java.lang.String join(java.util.List,java.lang.String) -> join
    java.lang.String getSha256(java.lang.String) -> getSha256
    java.lang.String padRight(java.lang.String,char,int) -> padRight
    java.lang.String padLeft(java.lang.String,char,int) -> padLeft
    byte[] getBytes(java.lang.String) -> getBytes
    long crc64Long(java.lang.String) -> crc64Long
    long crc64Long(byte[]) -> crc64Long
    java.lang.String hashCode(java.util.Collection) -> hashCode
    java.lang.String hashCode(java.lang.String[]) -> hashCode
com.aviary.android.feather.common.utils.SystemUtils -> com.aviary.android.feather.common.utils.SystemUtils:
    java.lang.String PROCESSOR -> PROCESSOR
    java.lang.String BogoMIPS -> BogoMIPS
    java.lang.String FEATURES -> FEATURES
    java.lang.String CPU_ARCHITECTURE -> CPU_ARCHITECTURE
    java.lang.String CPU_IMPLEMENTER -> CPU_IMPLEMENTER
    java.lang.String CPU_VARIANT -> CPU_VARIANT
    java.lang.String CPU_PART -> CPU_PART
    java.lang.String CPU_REVISION -> CPU_REVISION
    java.lang.String HARDWARE -> HARDWARE
    java.lang.String REVISION -> REVISION
    java.lang.String SERIAL -> SERIAL
    java.util.HashMap mValues -> mValues
    int mCpuKiloHz -> mCpuKiloHz
    double mMaxMemory -> mMaxMemory
    void init() -> init
    void parseLine(java.lang.String) -> parseLine
    java.lang.String getValue(java.lang.String) -> getValue
    float getCpuSpeed() -> getCpuSpeed
    int getCpuArchitecture() -> getCpuArchitecture
    long getAvailableInternalMemorySize() -> getAvailableInternalMemorySize
    long getTotalInternalMemorySize() -> getTotalInternalMemorySize
    boolean isHoneyComb() -> isHoneyComb
    boolean isIceCreamSandwich() -> isIceCreamSandwich
    boolean isJellyBean() -> isJellyBean
    int getCpuFrequencyMax() -> getCpuFrequencyMax
    int getCpuMhz() -> getCpuMhz
    boolean isUIThread(android.content.Context) -> isUIThread
    void throwIfNonUiThread(android.content.Context) -> throwIfNonUiThread
    void getRuntimeMemoryInfo(double[]) -> getRuntimeMemoryInfo
    double getApplicationTotalMemory() -> getApplicationTotalMemory
    void trySleep(long) -> trySleep
com.aviary.android.feather.common.utils.ThrowableUtils -> com.aviary.android.feather.common.utils.ThrowableUtils:
    java.lang.String getStackTrace(java.lang.Throwable) -> getStackTrace
    java.lang.String getStackTrace(java.util.Collection,java.lang.CharSequence) -> getStackTrace
    java.lang.String getLocalizedMessage(java.util.Collection,java.lang.CharSequence) -> getLocalizedMessage
com.aviary.android.feather.common.utils.os.AviaryAsyncTask -> com.aviary.android.feather.common.utils.os.AviaryAsyncTask:
    java.lang.String LOG_TAG -> LOG_TAG
    android.os.Handler sHandler -> sHandler
    boolean isUiThread() -> isUiThread
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void PostExecute(java.lang.Object) -> PostExecute
    void PreExecute() -> PreExecute
    void ProgressUpdate(java.lang.Object[]) -> ProgressUpdate
com.aviary.android.feather.common.utils.os.AviaryAsyncTask$1 -> com.aviary.android.feather.common.utils.os.AviaryAsyncTask$1:
    com.aviary.android.feather.common.utils.os.AviaryAsyncTask this$0 -> this$0
    void run() -> run
com.aviary.android.feather.common.utils.os.AviaryAsyncTask$2 -> com.aviary.android.feather.common.utils.os.AviaryAsyncTask$2:
    com.aviary.android.feather.common.utils.os.AviaryAsyncTask this$0 -> this$0
    java.lang.Object val$result -> val$result
    void run() -> run
com.aviary.android.feather.common.utils.os.AviaryAsyncTask$3 -> com.aviary.android.feather.common.utils.os.AviaryAsyncTask$3:
    com.aviary.android.feather.common.utils.os.AviaryAsyncTask this$0 -> this$0
    java.lang.Object[] val$values -> val$values
    void run() -> run
com.aviary.android.feather.effects.AbstractContentPanel -> com.aviary.android.feather.effects.AbstractContentPanel:
    com.aviary.android.feather.effects.AbstractPanel$OnContentReadyListener mContentReadyListener -> mContentReadyListener
    android.view.View mDrawingPanel -> mDrawingPanel
    it.sephiroth.android.library.imagezoom.ImageViewTouch mImageView -> mImageView
    void setOnReadyListener(com.aviary.android.feather.effects.AbstractPanel$OnContentReadyListener) -> setOnReadyListener
    android.view.View getContentView(android.view.LayoutInflater) -> getContentView
    android.view.View getContentView() -> getContentView
    void onDispose() -> onDispose
    void setEnabled(boolean) -> setEnabled
    void contentReady() -> contentReady
    android.view.View generateContentView(android.view.LayoutInflater) -> generateContentView
    boolean isRendering() -> isRendering
com.aviary.android.feather.effects.AbstractOptionPanel -> com.aviary.android.feather.effects.AbstractOptionPanel:
    android.view.ViewGroup mOptionView -> mOptionView
    android.view.ViewGroup getOptionView(android.view.LayoutInflater,android.view.ViewGroup) -> getOptionView
    android.view.ViewGroup getOptionView() -> getOptionView
    void onDispose() -> onDispose
    void setEnabled(boolean) -> setEnabled
    android.view.ViewGroup generateOptionView(android.view.LayoutInflater,android.view.ViewGroup) -> generateOptionView
    void disableHapticIsNecessary(com.aviary.android.feather.widget.VibrationWidget[]) -> disableHapticIsNecessary
    android.view.View getOptionView(android.view.LayoutInflater,android.view.ViewGroup) -> getOptionView
com.aviary.android.feather.effects.AbstractPanel -> com.aviary.android.feather.effects.AbstractPanel:
    int PREVIEW_BITMAP_CHANGED -> PREVIEW_BITMAP_CHANGED
    int FILTER_SAVE_COMPLETED -> FILTER_SAVE_COMPLETED
    int PROGRESS_START -> PROGRESS_START
    int PROGRESS_END -> PROGRESS_END
    int PROGRESS_MODAL_START -> PROGRESS_MODAL_START
    int PROGRESS_MODAL_END -> PROGRESS_MODAL_END
    int SET_TOOLBAR_TITLE -> SET_TOOLBAR_TITLE
    int RESTORE_TOOLBAR_TITLE -> RESTORE_TOOLBAR_TITLE
    int HIDE_TOOLBAR_APPLY_BUTTON -> HIDE_TOOLBAR_APPLY_BUTTON
    int SHOW_TOOLBAR_APPLY_BUTTON -> SHOW_TOOLBAR_APPLY_BUTTON
    int PREVIEW_BITMAP_UPDATED -> PREVIEW_BITMAP_UPDATED
    android.graphics.Bitmap mPreview -> mPreview
    android.graphics.Bitmap mBitmap -> mBitmap
    android.os.Bundle mOptions -> mOptions
    boolean mActive -> mActive
    boolean mCreated -> mCreated
    boolean mChanged -> mChanged
    boolean mSaving -> mSaving
    long mRenderTime -> mRenderTime
    boolean mEnabled -> mEnabled
    com.aviary.android.feather.headless.filters.IFilter mFilter -> mFilter
    java.util.HashMap mTrackingAttributes -> mTrackingAttributes
    com.aviary.android.feather.effects.AbstractPanel$OnProgressListener mProgressListener -> mProgressListener
    com.aviary.android.feather.effects.AbstractPanel$OnPreviewListener mListener -> mListener
    com.aviary.android.feather.effects.AbstractPanel$OnApplyResultListener mApplyListener -> mApplyListener
    com.aviary.android.feather.effects.AbstractPanel$OnErrorListener mErrorListener -> mErrorListener
    com.aviary.android.feather.library.services.IAviaryController mFilterContext -> mFilterContext
    com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters mEntryName -> mEntryName
    com.aviary.android.feather.common.log.LoggerFactory$Logger mLogger -> mLogger
    android.os.Handler mListenerHandler -> mListenerHandler
    android.os.Handler getHandler() -> getHandler
    void setToolbarTitle(java.lang.CharSequence) -> setToolbarTitle
    void restoreToolbarTitle() -> restoreToolbarTitle
    void setApplyEnabled(boolean) -> setApplyEnabled
    void onProgressStart() -> onProgressStart
    void onProgressEnd() -> onProgressEnd
    void onProgressModalStart() -> onProgressModalStart
    void onProgressModalEnd() -> onProgressModalEnd
    void setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    boolean isActive() -> isActive
    boolean isCreated() -> isCreated
    boolean isRendering() -> isRendering
    void setOnPreviewListener(com.aviary.android.feather.effects.AbstractPanel$OnPreviewListener) -> setOnPreviewListener
    void setOnApplyResultListener(com.aviary.android.feather.effects.AbstractPanel$OnApplyResultListener) -> setOnApplyResultListener
    void setOnErrorListener(com.aviary.android.feather.effects.AbstractPanel$OnErrorListener) -> setOnErrorListener
    void setOnProgressListener(com.aviary.android.feather.effects.AbstractPanel$OnProgressListener) -> setOnProgressListener
    void onCreate(android.graphics.Bitmap,android.os.Bundle) -> onCreate
    void onBitmapReplaced(android.graphics.Bitmap) -> onBitmapReplaced
    android.os.Bundle getOptions() -> getOptions
    void setOptions(android.os.Bundle) -> setOptions
    boolean hasOptions() -> hasOptions
    void onOpening() -> onOpening
    void onClosing() -> onClosing
    boolean onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration,android.content.res.Configuration) -> onConfigurationChanged
    void onSave() -> onSave
    boolean onCancel() -> onCancel
    void onCancelled() -> onCancelled
    boolean getIsChanged() -> getIsChanged
    void setIsChanged(boolean) -> setIsChanged
    void onDestroy() -> onDestroy
    void onActivate() -> onActivate
    void onDeactivate() -> onDeactivate
    com.aviary.android.feather.library.services.IAviaryController getContext() -> getContext
    void onDispose() -> onDispose
    void internalDispose() -> internalDispose
    com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters getName() -> getName
    void recyclePreview() -> recyclePreview
    void onPreviewUpdated() -> onPreviewUpdated
    void onPreviewChanged(android.graphics.Bitmap,boolean,boolean) -> onPreviewChanged
    void onComplete(android.graphics.Bitmap,com.aviary.android.feather.headless.moa.MoaActionList) -> onComplete
    void onGenericError(java.lang.CharSequence,int,android.content.DialogInterface$OnClickListener) -> onGenericError
    void onGenericError(int,int,android.content.DialogInterface$OnClickListener) -> onGenericError
    void onGenericError(int,int,android.content.DialogInterface$OnClickListener,int,android.content.DialogInterface$OnClickListener) -> onGenericError
    void onGenericError(java.lang.String,int,android.content.DialogInterface$OnClickListener,int,android.content.DialogInterface$OnClickListener) -> onGenericError
    void onGenericError(java.lang.Exception) -> onGenericError
    void onGenericMessage(java.lang.CharSequence,java.lang.CharSequence,int,android.content.DialogInterface$OnClickListener) -> onGenericMessage
    void onGenericMessage(java.lang.CharSequence,java.lang.CharSequence,int,android.content.DialogInterface$OnClickListener,int,android.content.DialogInterface$OnClickListener) -> onGenericMessage
    void onGenerateResult() -> onGenerateResult
    void onGenerateResult(com.aviary.android.feather.headless.moa.MoaActionList) -> onGenerateResult
com.aviary.android.feather.effects.AbstractPanel$1 -> com.aviary.android.feather.effects.AbstractPanel$1:
    com.aviary.android.feather.effects.AbstractPanel this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.aviary.android.feather.effects.AbstractPanel$ContentPanel -> com.aviary.android.feather.effects.AbstractPanel$ContentPanel:
    void setOnReadyListener(com.aviary.android.feather.effects.AbstractPanel$OnContentReadyListener) -> setOnReadyListener
    android.view.View getContentView(android.view.LayoutInflater) -> getContentView
    android.view.View getContentView() -> getContentView
com.aviary.android.feather.effects.AbstractPanel$OnApplyResultListener -> com.aviary.android.feather.effects.AbstractPanel$OnApplyResultListener:
    void onComplete(android.graphics.Bitmap,com.aviary.android.feather.headless.moa.MoaActionList,java.util.HashMap) -> onComplete
com.aviary.android.feather.effects.AbstractPanel$OnContentReadyListener -> com.aviary.android.feather.effects.AbstractPanel$OnContentReadyListener:
    void onReady(com.aviary.android.feather.effects.AbstractPanel) -> onReady
com.aviary.android.feather.effects.AbstractPanel$OnErrorListener -> com.aviary.android.feather.effects.AbstractPanel$OnErrorListener:
    void onError(java.lang.CharSequence,int,android.content.DialogInterface$OnClickListener) -> onError
    void onError(java.lang.CharSequence,int,android.content.DialogInterface$OnClickListener,int,android.content.DialogInterface$OnClickListener) -> onError
    void onMessage(java.lang.CharSequence,java.lang.CharSequence,int,android.content.DialogInterface$OnClickListener) -> onMessage
    void onMessage(java.lang.CharSequence,java.lang.CharSequence,int,android.content.DialogInterface$OnClickListener,int,android.content.DialogInterface$OnClickListener) -> onMessage
com.aviary.android.feather.effects.AbstractPanel$OnPreviewListener -> com.aviary.android.feather.effects.AbstractPanel$OnPreviewListener:
    void onPreviewChange(android.graphics.Bitmap,boolean) -> onPreviewChange
    void onPreviewUpdated() -> onPreviewUpdated
com.aviary.android.feather.effects.AbstractPanel$OnProgressListener -> com.aviary.android.feather.effects.AbstractPanel$OnProgressListener:
    void onProgressStart() -> onProgressStart
    void onProgressEnd() -> onProgressEnd
    void onProgressModalStart() -> onProgressModalStart
    void onProgressModalEnd() -> onProgressModalEnd
com.aviary.android.feather.effects.AbstractPanel$OptionPanel -> com.aviary.android.feather.effects.AbstractPanel$OptionPanel:
    android.view.View getOptionView(android.view.LayoutInflater,android.view.ViewGroup) -> getOptionView
com.aviary.android.feather.effects.AbstractPanelLoaderService -> com.aviary.android.feather.effects.AbstractPanelLoaderService:
    java.lang.String NAME -> NAME
    com.aviary.android.feather.library.content.ToolEntry[] mAllEntries -> mAllEntries
    int[] $SWITCH_TABLE$com$aviary$android$feather$library$filters$FilterLoaderFactory$Filters -> $SWITCH_TABLE$com$aviary$android$feather$library$filters$FilterLoaderFactory$Filters
    com.aviary.android.feather.effects.AbstractPanel createNew(com.aviary.android.feather.library.content.ToolEntry) -> createNew
    com.aviary.android.feather.library.content.ToolEntry[] getToolsEntries() -> getToolsEntries
    com.aviary.android.feather.library.content.ToolEntry findEntry(com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters) -> findEntry
    com.aviary.android.feather.library.content.ToolEntry findEntry(java.lang.String) -> findEntry
    com.aviary.android.feather.library.content.ToolEntry[] getAllEntries() -> getAllEntries
    boolean hasStickers() -> hasStickers
    void dispose() -> dispose
    int[] $SWITCH_TABLE$com$aviary$android$feather$library$filters$FilterLoaderFactory$Filters() -> $SWITCH_TABLE$com$aviary$android$feather$library$filters$FilterLoaderFactory$Filters
com.aviary.android.feather.effects.AdjustEffectPanel -> com.aviary.android.feather.effects.AdjustEffectPanel:
    boolean isClosing -> isClosing
    com.aviary.android.feather.widget.AviaryHighlightImageButton mButton1 -> mButton1
    com.aviary.android.feather.widget.AviaryHighlightImageButton mButton2 -> mButton2
    com.aviary.android.feather.widget.AviaryHighlightImageButton mButton3 -> mButton3
    com.aviary.android.feather.widget.AviaryHighlightImageButton mButton4 -> mButton4
    com.aviary.android.feather.widget.AdjustImageView mAdjustImageView -> mAdjustImageView
    void onCreate(android.graphics.Bitmap,android.os.Bundle) -> onCreate
    void onActivate() -> onActivate
    void onDeactivate() -> onDeactivate
    void onDestroy() -> onDestroy
    android.view.ViewGroup generateOptionView(android.view.LayoutInflater,android.view.ViewGroup) -> generateOptionView
    android.view.View generateContentView(android.view.LayoutInflater) -> generateContentView
    void onClick(android.view.View) -> onClick
    boolean getIsChanged() -> getIsChanged
    void onGenerateResult() -> onGenerateResult
    boolean onCancel() -> onCancel
    void onResetComplete() -> onResetComplete
    boolean isRendering() -> isRendering
    void setEnabled(boolean) -> setEnabled
com.aviary.android.feather.effects.BordersPanel -> com.aviary.android.feather.effects.BordersPanel:
    com.aviary.android.feather.cds.AviaryCds$PackType mPackType -> mPackType
    it.sephiroth.android.library.widget.HListView mHList -> mHList
    android.view.View mLoader -> mLoader
    java.lang.Boolean mIsRendering -> mIsRendering
    boolean mIsAnimating -> mIsAnimating
    com.aviary.android.feather.effects.BordersPanel$RenderTask mCurrentTask -> mCurrentTask
    com.aviary.android.feather.library.services.ConfigService mConfigService -> mConfigService
    com.aviary.android.feather.library.services.BadgeService mBadgeService -> mBadgeService
    com.aviary.android.feather.headless.moa.MoaActionList mActions -> mActions
    int mCellWidth -> mCellWidth
    int mThumbSize -> mThumbSize
    com.squareup.picasso.Picasso mPicassoLibrary -> mPicassoLibrary
    com.squareup.picasso.LruCache mCache -> mCache
    android.graphics.Bitmap mThumbBitmap -> mThumbBitmap
    int mSelectedPosition -> mSelectedPosition
    int mListFirstValidPosition -> mListFirstValidPosition
    boolean mFirstTime -> mFirstTime
    android.graphics.BitmapFactory$Options mThumbnailOptions -> mThumbnailOptions
    boolean mEnableFastPreview -> mEnableFastPreview
    com.aviary.android.feather.cds.TrayColumns$TrayCursorWrapper mRenderedEffect -> mRenderedEffect
    android.support.v4.widget.CursorAdapter mAdapter -> mAdapter
    android.support.v4.content.CursorLoader mCursorLoader -> mCursorLoader
    android.database.ContentObserver mContentObserver -> mContentObserver
    com.aviary.android.feather.widget.IAPDialogMain mIapDialog -> mIapDialog
    int MAX_MEM_CACHE_SIZE -> MAX_MEM_CACHE_SIZE
    void onLoadComplete(android.support.v4.content.Loader,android.database.Cursor) -> onLoadComplete
    void onCreate(android.graphics.Bitmap,android.os.Bundle) -> onCreate
    void onBitmapReplaced(android.graphics.Bitmap) -> onBitmapReplaced
    void onActivate() -> onActivate
    boolean isRendering() -> isRendering
    com.aviary.android.feather.cds.AviaryCds$PackType getPluginType() -> getPluginType
    void onPostActivate() -> onPostActivate
    void onDestroy() -> onDestroy
    void onDeactivate() -> onDeactivate
    void onConfigurationChanged(android.content.res.Configuration,android.content.res.Configuration) -> onConfigurationChanged
    void onDispose() -> onDispose
    void onGenerateResult() -> onGenerateResult
    void onComplete(android.graphics.Bitmap,com.aviary.android.feather.headless.moa.MoaActionList) -> onComplete
    boolean onBackPressed() -> onBackPressed
    void onCancelled() -> onCancelled
    boolean getIsChanged() -> getIsChanged
    android.view.View makeView() -> makeView
    android.view.ViewGroup generateOptionView(android.view.LayoutInflater,android.view.ViewGroup) -> generateOptionView
    android.graphics.Bitmap generateThumbnail(android.graphics.Bitmap,int,int) -> generateThumbnail
    void updateInstalledPacks(boolean) -> updateInstalledPacks
    android.support.v4.widget.CursorAdapter createListAdapter(android.content.Context,android.database.Cursor) -> createListAdapter
    void onEffectListUpdated(android.database.Cursor,int) -> onEffectListUpdated
    void displayIAPDialog(com.aviary.android.feather.widget.IAPDialogMain$IAPUpdater) -> displayIAPDialog
    boolean removeIapDialog() -> removeIapDialog
    void renderEffect(com.aviary.android.feather.cds.TrayColumns$TrayCursorWrapper,int) -> renderEffect
    com.aviary.android.feather.effects.BordersPanel$RenderTask createRenderTask(int) -> createRenderTask
    boolean killCurrentTask() -> killCurrentTask
    com.aviary.android.feather.headless.filters.INativeFilter loadNativeFilter(com.aviary.android.feather.cds.TrayColumns$TrayCursorWrapper,int,boolean) -> loadNativeFilter
    boolean backHandled() -> backHandled
    void onItemClick(it.sephiroth.android.library.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onItemSelected(it.sephiroth.android.library.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(it.sephiroth.android.library.widget.AdapterView) -> onNothingSelected
    java.lang.CharSequence[] getOptionalEffectsValues() -> getOptionalEffectsValues
    java.lang.CharSequence[] getOptionalEffectsLabels() -> getOptionalEffectsLabels
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void setEnabled(boolean) -> setEnabled
    int access$2(com.aviary.android.feather.effects.BordersPanel) -> access$2
    com.aviary.android.feather.cds.AviaryCds$PackType access$3(com.aviary.android.feather.effects.BordersPanel) -> access$3
    com.squareup.picasso.Picasso access$4(com.aviary.android.feather.effects.BordersPanel) -> access$4
    com.squareup.picasso.LruCache access$5(com.aviary.android.feather.effects.BordersPanel) -> access$5
    void access$6(com.aviary.android.feather.effects.BordersPanel,com.aviary.android.feather.effects.BordersPanel$RenderTask) -> access$6
    boolean access$7(com.aviary.android.feather.effects.BordersPanel) -> access$7
com.aviary.android.feather.effects.BordersPanel$1 -> com.aviary.android.feather.effects.BordersPanel$1:
    com.aviary.android.feather.effects.BordersPanel this$0 -> this$0
    void onChange(boolean) -> onChange
com.aviary.android.feather.effects.BordersPanel$2 -> com.aviary.android.feather.effects.BordersPanel$2:
    com.aviary.android.feather.effects.BordersPanel this$0 -> this$0
    void onClose() -> onClose
com.aviary.android.feather.effects.BordersPanel$3 -> com.aviary.android.feather.effects.BordersPanel$3:
    com.aviary.android.feather.effects.BordersPanel this$0 -> this$0
    int val$delta -> val$delta
    void run() -> run
com.aviary.android.feather.effects.BordersPanel$BorderThumbnailCallable -> com.aviary.android.feather.effects.BordersPanel$BorderThumbnailCallable:
    android.graphics.Bitmap mBitmap -> mBitmap
    android.graphics.Bitmap decode(android.net.Uri) -> decode
    com.aviary.android.feather.headless.moa.MoaActionList actionsForRoundedThumbnail(boolean,com.aviary.android.feather.headless.filters.INativeFilter) -> actionsForRoundedThumbnail
com.aviary.android.feather.effects.BordersPanel$EffectPack -> com.aviary.android.feather.effects.BordersPanel$EffectPack:
    java.lang.CharSequence mPackageName -> mPackageName
    java.util.List mValues -> mValues
    java.util.List mIds -> mIds
    java.lang.CharSequence mTitle -> mTitle
    int mStatus -> mStatus
    java.lang.String mError -> mError
    int size -> size
    int index -> index
    com.aviary.android.feather.effects.BordersPanel$EffectPack$EffectPackType mType -> mType
    int getCount() -> getCount
    int getIndex() -> getIndex
    void setIndex(int) -> setIndex
    java.lang.CharSequence getItemAt(int) -> getItemAt
    long getItemIdAt(int) -> getItemIdAt
    java.lang.CharSequence getLabelAt(int) -> getLabelAt
    int getItemIndex(int) -> getItemIndex
    void finalize() -> finalize
com.aviary.android.feather.effects.BordersPanel$EffectPack$EffectPackType -> com.aviary.android.feather.effects.BordersPanel$EffectPack$EffectPackType:
    com.aviary.android.feather.effects.BordersPanel$EffectPack$EffectPackType INTERNAL -> INTERNAL
    com.aviary.android.feather.effects.BordersPanel$EffectPack$EffectPackType EXTERNAL -> EXTERNAL
    com.aviary.android.feather.effects.BordersPanel$EffectPack$EffectPackType PACK_DIVIDER -> PACK_DIVIDER
    com.aviary.android.feather.effects.BordersPanel$EffectPack$EffectPackType LEFT_DIVIDER -> LEFT_DIVIDER
    com.aviary.android.feather.effects.BordersPanel$EffectPack$EffectPackType RIGHT_DIVIDER -> RIGHT_DIVIDER
    com.aviary.android.feather.effects.BordersPanel$EffectPack$EffectPackType GET_MORE -> GET_MORE
    com.aviary.android.feather.effects.BordersPanel$EffectPack$EffectPackType[] ENUM$VALUES -> ENUM$VALUES
    com.aviary.android.feather.effects.BordersPanel$EffectPack$EffectPackType[] values() -> values
    com.aviary.android.feather.effects.BordersPanel$EffectPack$EffectPackType valueOf(java.lang.String) -> valueOf
com.aviary.android.feather.effects.BordersPanel$EffectPackError -> com.aviary.android.feather.effects.BordersPanel$EffectPackError:
    java.lang.CharSequence mPackageName -> mPackageName
    java.lang.CharSequence mLabel -> mLabel
    int mError -> mError
    java.lang.String mErrorMessage -> mErrorMessage
    com.aviary.android.feather.effects.BordersPanel this$0 -> this$0
com.aviary.android.feather.effects.BordersPanel$GenerateResultTask -> com.aviary.android.feather.effects.BordersPanel$GenerateResultTask:
    android.app.ProgressDialog mProgress -> mProgress
    com.aviary.android.feather.effects.BordersPanel this$0 -> this$0
    void PreExecute() -> PreExecute
    java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    void PostExecute(java.lang.Void) -> PostExecute
    void PostExecute(java.lang.Object) -> PostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.aviary.android.feather.effects.BordersPanel$ListAdapter -> com.aviary.android.feather.effects.BordersPanel$ListAdapter:
    int TYPE_INVALID -> TYPE_INVALID
    int TYPE_LEFT_GETMORE -> TYPE_LEFT_GETMORE
    int TYPE_RIGHT_GETMORE -> TYPE_RIGHT_GETMORE
    int TYPE_NORMAL -> TYPE_NORMAL
    int TYPE_EXTERNAL -> TYPE_EXTERNAL
    int TYPE_DIVIDER -> TYPE_DIVIDER
    int TYPE_LEFT_DIVIDER -> TYPE_LEFT_DIVIDER
    int TYPE_RIGHT_DIVIDER -> TYPE_RIGHT_DIVIDER
    java.lang.Object mLock -> mLock
    android.view.LayoutInflater mInflater -> mInflater
    int mDefaultResId -> mDefaultResId
    int mMoreResId -> mMoreResId
    int mExternalResId -> mExternalResId
    int mDividerResId -> mDividerResId
    int mCount -> mCount
    android.graphics.drawable.BitmapDrawable mExternalFolderIcon -> mExternalFolderIcon
    int mIdColumnIndex -> mIdColumnIndex
    int mPackageNameColumnIndex -> mPackageNameColumnIndex
    int mIdentifierColumnIndex -> mIdentifierColumnIndex
    int mTypeColumnIndex -> mTypeColumnIndex
    int mDisplayNameColumnIndex -> mDisplayNameColumnIndex
    int mPathColumnIndex -> mPathColumnIndex
    com.aviary.android.feather.effects.BordersPanel this$0 -> this$0
    void initColumns(android.database.Cursor) -> initColumns
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void onContentChanged() -> onContentChanged
    android.graphics.drawable.BitmapDrawable getExternalBackgroundDrawable(android.content.Context) -> getExternalBackgroundDrawable
    boolean hasStableIds() -> hasStableIds
    int getViewTypeCount() -> getViewTypeCount
    int getItemViewType(int) -> getItemViewType
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup,int) -> newView
    void bindView(android.view.View,android.content.Context,android.database.Cursor,int) -> bindView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    com.squareup.picasso.Generator createContentCallable(long,int,java.lang.String,java.lang.String) -> createContentCallable
com.aviary.android.feather.effects.BordersPanel$RenderTask -> com.aviary.android.feather.effects.BordersPanel$RenderTask:
    int mPosition -> mPosition
    java.lang.String mError -> mError
    com.aviary.android.feather.headless.moa.MoaResult mMoaMainExecutor -> mMoaMainExecutor
    com.aviary.android.feather.effects.BordersPanel this$0 -> this$0
    void PreExecute() -> PreExecute
    com.aviary.android.feather.headless.filters.INativeFilter initFilter(com.aviary.android.feather.cds.TrayColumns$TrayCursorWrapper,int) -> initFilter
    com.aviary.android.feather.headless.moa.MoaResult initPreview(com.aviary.android.feather.headless.filters.INativeFilter) -> initPreview
    void doFullPreviewInBackground() -> doFullPreviewInBackground
    android.graphics.Bitmap doInBackground(com.aviary.android.feather.cds.TrayColumns$TrayCursorWrapper[]) -> doInBackground
    void PostExecute(android.graphics.Bitmap) -> PostExecute
    void onApplyNewBitmap(android.graphics.Bitmap) -> onApplyNewBitmap
    void onRestoreOriginalBitmap() -> onRestoreOriginalBitmap
    void onCancelled() -> onCancelled
    void onCancel(android.content.DialogInterface) -> onCancel
    void PostExecute(java.lang.Object) -> PostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.aviary.android.feather.effects.BordersPanel$ViewHolder -> com.aviary.android.feather.effects.BordersPanel$ViewHolder:
    android.widget.TextView text -> text
    android.widget.ImageView image -> image
    int type -> type
    long id -> id
    java.lang.String identifier -> identifier
com.aviary.android.feather.effects.BordersPanel$ViewHolderExternal -> com.aviary.android.feather.effects.BordersPanel$ViewHolderExternal:
    android.view.View badgeIcon -> badgeIcon
    android.view.View externalIcon -> externalIcon
com.aviary.android.feather.effects.ColorSplashPanel -> com.aviary.android.feather.effects.ColorSplashPanel:
    com.aviary.android.feather.widget.AviaryHighlightImageButton mLensButton -> mLensButton
    com.aviary.android.feather.effects.ColorSplashPanel$BackgroundDrawThread mBackgroundDrawThread -> mBackgroundDrawThread
    com.aviary.android.feather.library.filters.ColorSplashFilter mFilter -> mFilter
    com.aviary.android.feather.widget.AviaryHighlightImageButton mSmart -> mSmart
    com.aviary.android.feather.widget.AviaryHighlightImageButton mErase -> mErase
    com.aviary.android.feather.widget.AviaryHighlightImageButton mFree -> mFree
    com.aviary.android.feather.widget.AviaryHighlightImageButton mCurrent -> mCurrent
    android.view.View mDisabledStatusView -> mDisabledStatusView
    com.aviary.android.feather.headless.filters.NativeToolFilter$ColorSplashBrushMode mBrushType -> mBrushType
    double BRUSH_MULTIPLIER -> BRUSH_MULTIPLIER
    com.aviary.android.feather.headless.moa.MoaActionList mActions -> mActions
    void onCreate(android.graphics.Bitmap,android.os.Bundle) -> onCreate
    void onActivate() -> onActivate
    void onDispose() -> onDispose
    void onClick(android.view.View) -> onClick
    void onCheckedChanged(com.aviary.android.feather.widget.AviaryHighlightImageButton,boolean,boolean) -> onCheckedChanged
    void setSelectedTool(com.aviary.android.feather.widget.ImageViewSpotDraw$TouchMode) -> setSelectedTool
    void onDeactivate() -> onDeactivate
    void onDestroy() -> onDestroy
    void onCancelled() -> onCancelled
    void onDrawStart(float[],int) -> onDrawStart
    void onDrawing(float[],int) -> onDrawing
    void onDrawEnd() -> onDrawEnd
    void onGenerateResult() -> onGenerateResult
    void setPanelEnabled(boolean) -> setPanelEnabled
    boolean getPanelEnabled() -> getPanelEnabled
    java.lang.String printRect(android.graphics.Rect) -> printRect
    com.aviary.android.feather.library.filters.ColorSplashFilter createFilter() -> createFilter
    android.view.View generateContentView(android.view.LayoutInflater) -> generateContentView
    android.view.ViewGroup generateOptionView(android.view.LayoutInflater,android.view.ViewGroup) -> generateOptionView
    boolean isRendering() -> isRendering
    void setEnabled(boolean) -> setEnabled
    com.aviary.android.feather.library.filters.ColorSplashFilter access$2(com.aviary.android.feather.effects.ColorSplashPanel) -> access$2
    com.aviary.android.feather.effects.ColorSplashPanel$BackgroundDrawThread access$3(com.aviary.android.feather.effects.ColorSplashPanel) -> access$3
com.aviary.android.feather.effects.ColorSplashPanel$BackgroundDrawThread -> com.aviary.android.feather.effects.ColorSplashPanel$BackgroundDrawThread:
    boolean started -> started
    boolean running -> running
    java.util.Queue mQueue -> mQueue
    com.aviary.android.feather.effects.ColorSplashPanel$DrawQueue mCurrentQueue -> mCurrentQueue
    android.graphics.PointF mLastPoint -> mLastPoint
    com.aviary.android.feather.effects.ColorSplashPanel this$0 -> this$0
    void init() -> init
    void start() -> start
    void quit() -> quit
    void pathStart(int,float[],com.aviary.android.feather.headless.filters.NativeToolFilter$ColorSplashBrushMode) -> pathStart
    void pathEnd() -> pathEnd
    void lineTo(float[]) -> lineTo
    boolean isCompleted() -> isCompleted
    int getQueueSize() -> getQueueSize
    void getLerp(android.graphics.PointF,android.graphics.PointF,float,android.graphics.PointF) -> getLerp
    void clear() -> clear
    void finish() -> finish
    void run() -> run
com.aviary.android.feather.effects.ColorSplashPanel$DrawQueue -> com.aviary.android.feather.effects.ColorSplashPanel$DrawQueue:
    long serialVersionUID -> serialVersionUID
    com.aviary.android.feather.headless.filters.NativeToolFilter$ColorSplashBrushMode mode_ -> mode_
    int radius_ -> radius_
    boolean completed_ -> completed_
    com.aviary.android.feather.headless.filters.NativeToolFilter$ColorSplashBrushMode getMode() -> getMode
    int getRadius() -> getRadius
    void end() -> end
    boolean isCompleted() -> isCompleted
com.aviary.android.feather.effects.ColorSplashPanel$GenerateResultTask -> com.aviary.android.feather.effects.ColorSplashPanel$GenerateResultTask:
    android.app.ProgressDialog mProgress -> mProgress
    com.aviary.android.feather.effects.ColorSplashPanel this$0 -> this$0
    void PreExecute() -> PreExecute
    java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    void PostExecute(java.lang.Void) -> PostExecute
    void PostExecute(java.lang.Object) -> PostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.aviary.android.feather.effects.CropPanel -> com.aviary.android.feather.effects.CropPanel:
    com.aviary.android.feather.widget.AviaryGallery mGallery -> mGallery
    java.lang.String[] mCropNames -> mCropNames
    java.lang.String[] mCropValues -> mCropValues
    int mSelectedPosition -> mSelectedPosition
    boolean mIsPortrait -> mIsPortrait
    int noImage -> noImage
    java.util.HashSet mNonInvertOptions -> mNonInvertOptions
    boolean mStrictPolicy -> mStrictPolicy
    boolean isChecked -> isChecked
    boolean mHasScrolled -> mHasScrolled
    void invertRatios(java.lang.String[],java.lang.String[]) -> invertRatios
    void populateInvertOptions(java.util.HashSet,java.lang.String[]) -> populateInvertOptions
    void onCreate(android.graphics.Bitmap,android.os.Bundle) -> onCreate
    void onActivate() -> onActivate
    double calculateAspectRatio(int,boolean) -> calculateAspectRatio
    void onDestroy() -> onDestroy
    void onDeactivate() -> onDeactivate
    void createCropView(double,boolean) -> createCropView
    void setCustomRatio(double,boolean) -> setCustomRatio
    void onGenerateResult() -> onGenerateResult
    android.view.View generateContentView(android.view.LayoutInflater) -> generateContentView
    android.view.ViewGroup generateOptionView(android.view.LayoutInflater,android.view.ViewGroup) -> generateOptionView
    void onItemClick(com.aviary.android.feather.widget.AviaryAdapterView,android.view.View,int,long) -> onItemClick
    void onScrollStarted(com.aviary.android.feather.widget.AviaryAdapterView,android.view.View,int,long) -> onScrollStarted
    void onScroll(com.aviary.android.feather.widget.AviaryAdapterView,android.view.View,int,long) -> onScroll
    void onScrollFinished(com.aviary.android.feather.widget.AviaryAdapterView,android.view.View,int,long) -> onScrollFinished
    boolean isRendering() -> isRendering
    void setEnabled(boolean) -> setEnabled
com.aviary.android.feather.effects.CropPanel$GalleryAdapter -> com.aviary.android.feather.effects.CropPanel$GalleryAdapter:
    int INVALID_POSITION -> INVALID_POSITION
    int VALID_POSITION -> VALID_POSITION
    int VALID_POSITION_CUSTOM -> VALID_POSITION_CUSTOM
    java.lang.String[] mValues -> mValues
    android.view.LayoutInflater mLayoutInflater -> mLayoutInflater
    android.content.res.Resources mRes -> mRes
    com.aviary.android.feather.effects.CropPanel this$0 -> this$0
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getViewTypeCount() -> getViewTypeCount
    int getItemViewType(int) -> getItemViewType
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.aviary.android.feather.effects.CropPanel$GenerateResultTask -> com.aviary.android.feather.effects.CropPanel$GenerateResultTask:
    com.aviary.android.feather.library.graphics.RectD mCropRect -> mCropRect
    com.aviary.android.feather.headless.moa.MoaActionList mActionList -> mActionList
    com.aviary.android.feather.effects.CropPanel this$0 -> this$0
    void PreExecute() -> PreExecute
    android.graphics.Bitmap doInBackground(android.graphics.Bitmap[]) -> doInBackground
    void PostExecute(android.graphics.Bitmap) -> PostExecute
    void PostExecute(java.lang.Object) -> PostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.aviary.android.feather.effects.DelayedSpotDrawPanel -> com.aviary.android.feather.effects.DelayedSpotDrawPanel:
    int mBrushSize -> mBrushSize
    com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters mFilterType -> mFilterType
    com.aviary.android.feather.widget.AviaryGallery mGallery -> mGallery
    int[] mBrushSizes -> mBrushSizes
    int mSelectedPosition -> mSelectedPosition
    com.aviary.android.feather.widget.AviaryHighlightImageButton mLensButton -> mLensButton
    com.aviary.android.feather.effects.DelayedSpotDrawPanel$MyHandlerThread mBackgroundDrawThread -> mBackgroundDrawThread
    android.view.View mDisabledStatusView -> mDisabledStatusView
    java.lang.String mSizeContentDescription -> mSizeContentDescription
    android.widget.Toast mToast -> mToast
    com.aviary.android.feather.graphics.PreviewSpotDrawable mDrawable -> mDrawable
    com.aviary.android.feather.headless.moa.MoaActionList mActions -> mActions
    boolean mLimitDrawArea -> mLimitDrawArea
    float minRadiusSize -> minRadiusSize
    float maxRadiusSize -> maxRadiusSize
    int mBrushSizeIndex -> mBrushSizeIndex
    int minBrushSize -> minBrushSize
    int maxBrushSize -> maxBrushSize
    void showSizePreview(int) -> showSizePreview
    void updateSizePreview(int) -> updateSizePreview
    void onCreate(android.graphics.Bitmap,android.os.Bundle) -> onCreate
    void onActivate() -> onActivate
    void onDispose() -> onDispose
    void onClick(android.view.View) -> onClick
    void setSelectedTool(com.aviary.android.feather.widget.ImageViewSpotDraw$TouchMode) -> setSelectedTool
    void onDeactivate() -> onDeactivate
    void onDestroy() -> onDestroy
    void onCancelled() -> onCancelled
    android.widget.Toast makeToast() -> makeToast
    void onDrawStart(float[],int) -> onDrawStart
    void onDrawing(float[],int) -> onDrawing
    void onDrawEnd() -> onDrawEnd
    void onGenerateResult() -> onGenerateResult
    void setPanelEnabled(boolean) -> setPanelEnabled
    java.lang.String printRect(android.graphics.Rect) -> printRect
    com.aviary.android.feather.headless.filters.IFilter createFilter() -> createFilter
    android.view.View generateContentView(android.view.LayoutInflater) -> generateContentView
    android.view.ViewGroup generateOptionView(android.view.LayoutInflater,android.view.ViewGroup) -> generateOptionView
    void onScrollStarted(com.aviary.android.feather.widget.AviaryAdapterView,android.view.View,int,long) -> onScrollStarted
    void onScroll(com.aviary.android.feather.widget.AviaryAdapterView,android.view.View,int,long) -> onScroll
    void onScrollFinished(com.aviary.android.feather.widget.AviaryAdapterView,android.view.View,int,long) -> onScrollFinished
    boolean isRendering() -> isRendering
    void setEnabled(boolean) -> setEnabled
    int access$2(com.aviary.android.feather.effects.DelayedSpotDrawPanel) -> access$2
    int access$3(com.aviary.android.feather.effects.DelayedSpotDrawPanel) -> access$3
    com.aviary.android.feather.effects.DelayedSpotDrawPanel$MyHandlerThread access$4(com.aviary.android.feather.effects.DelayedSpotDrawPanel) -> access$4
com.aviary.android.feather.effects.DelayedSpotDrawPanel$GalleryAdapter -> com.aviary.android.feather.effects.DelayedSpotDrawPanel$GalleryAdapter:
    int VALID_POSITION -> VALID_POSITION
    int INVALID_POSITION -> INVALID_POSITION
    int[] sizes -> sizes
    android.view.LayoutInflater mLayoutInflater -> mLayoutInflater
    android.content.res.Resources mRes -> mRes
    com.aviary.android.feather.effects.DelayedSpotDrawPanel this$0 -> this$0
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getViewTypeCount() -> getViewTypeCount
    int getItemViewType(int) -> getItemViewType
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.aviary.android.feather.effects.DelayedSpotDrawPanel$GenerateResultTask -> com.aviary.android.feather.effects.DelayedSpotDrawPanel$GenerateResultTask:
    android.app.ProgressDialog mProgress -> mProgress
    com.aviary.android.feather.effects.DelayedSpotDrawPanel this$0 -> this$0
    void PreExecute() -> PreExecute
    java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    void PostExecute(java.lang.Void) -> PostExecute
    void PostExecute(java.lang.Object) -> PostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.aviary.android.feather.effects.DelayedSpotDrawPanel$MyHandlerThread -> com.aviary.android.feather.effects.DelayedSpotDrawPanel$MyHandlerThread:
    boolean started -> started
    boolean running -> running
    boolean paused -> paused
    java.util.Queue mQueue -> mQueue
    com.aviary.android.feather.library.filters.SpotBrushFilter mCurrentFilter -> mCurrentFilter
    com.aviary.android.feather.effects.DelayedSpotDrawPanel this$0 -> this$0
    void init() -> init
    void start() -> start
    void quit() -> quit
    void pathStart(double,int) -> pathStart
    void pathEnd() -> pathEnd
    void pause() -> pause
    void unpause() -> unpause
    void moveTo(float[]) -> moveTo
    void lineTo(float[]) -> lineTo
    void quadTo(float[]) -> quadTo
    boolean isCompleted() -> isCompleted
    int queueSize() -> queueSize
    android.graphics.PointF getLerp(android.graphics.PointF,android.graphics.PointF,float) -> getLerp
    void run() -> run
com.aviary.android.feather.effects.DrawingPanel -> com.aviary.android.feather.effects.DrawingPanel:
    com.aviary.android.feather.widget.AviaryHighlightImageButton mLensButton -> mLensButton
    com.aviary.android.feather.widget.AviaryGallery mGallerySize -> mGallerySize
    com.aviary.android.feather.widget.AviaryGallery mGalleryColor -> mGalleryColor
    int mSelectedColorPosition -> mSelectedColorPosition
    int mSelectedSizePosition -> mSelectedSizePosition
    int[] mBrushSizes -> mBrushSizes
    int[] mBrushColors -> mBrushColors
    int mColor -> mColor
    int mSize -> mSize
    int mBlur -> mBlur
    android.graphics.Paint mPaint -> mPaint
    com.aviary.android.feather.library.services.ConfigService mConfig -> mConfig
    com.aviary.android.feather.effects.DrawingPanel$DrawinTool mSelectedTool -> mSelectedTool
    int mWidth -> mWidth
    int mHeight -> mHeight
    com.aviary.android.feather.headless.moa.MoaActionList mActionList -> mActionList
    com.aviary.android.feather.headless.moa.MoaAction mAction -> mAction
    java.util.Collection mOperations -> mOperations
    com.aviary.android.feather.headless.moa.MoaGraphicsOperationParameter mCurrentOperation -> mCurrentOperation
    com.aviary.android.feather.graphics.PreviewFillColorDrawable mDrawable -> mDrawable
    com.aviary.android.feather.graphics.PreviewSpotDrawable mEraserDrawable -> mEraserDrawable
    android.widget.Toast mToast -> mToast
    float minRadiusSize -> minRadiusSize
    float maxRadiusSize -> maxRadiusSize
    int mBrushSizeIndex -> mBrushSizeIndex
    int mBrushColorIndex -> mBrushColorIndex
    int minBrushSize -> minBrushSize
    int maxBrushSize -> maxBrushSize
    java.lang.String mEraserContentDescription -> mEraserContentDescription
    java.lang.String mSizeContentDescription -> mSizeContentDescription
    java.lang.String mColorContentDescription -> mColorContentDescription
    int[] $SWITCH_TABLE$com$aviary$android$feather$effects$DrawingPanel$DrawinTool -> $SWITCH_TABLE$com$aviary$android$feather$effects$DrawingPanel$DrawinTool
    void onCreate(android.graphics.Bitmap,android.os.Bundle) -> onCreate
    void setupSize() -> setupSize
    void setupFill() -> setupFill
    void resetBitmap() -> resetBitmap
    void onActivate() -> onActivate
    void onDeactivate() -> onDeactivate
    void onClick(android.view.View) -> onClick
    android.widget.Toast makeToast() -> makeToast
    void updateToast() -> updateToast
    void setSelectedTool(com.aviary.android.feather.effects.DrawingPanel$DrawinTool) -> setSelectedTool
    void setPanelEnabled(boolean) -> setPanelEnabled
    com.aviary.android.feather.effects.DrawingPanel$DrawinTool getSelectedTool() -> getSelectedTool
    void onDestroy() -> onDestroy
    android.graphics.Paint initPaint(android.graphics.Paint) -> initPaint
    android.view.View generateContentView(android.view.LayoutInflater) -> generateContentView
    android.view.ViewGroup generateOptionView(android.view.LayoutInflater,android.view.ViewGroup) -> generateOptionView
    void onGenerateResult() -> onGenerateResult
    void onDrawStart() -> onDrawStart
    void onStart() -> onStart
    void onMoveTo(float,float) -> onMoveTo
    void onLineTo(float,float) -> onLineTo
    void onQuadTo(float,float,float,float) -> onQuadTo
    void onEnd() -> onEnd
    boolean isRendering() -> isRendering
    void setEnabled(boolean) -> setEnabled
    float access$2(com.aviary.android.feather.effects.DrawingPanel) -> access$2
    int access$3(com.aviary.android.feather.effects.DrawingPanel) -> access$3
    int access$4(com.aviary.android.feather.effects.DrawingPanel) -> access$4
    float access$5(com.aviary.android.feather.effects.DrawingPanel) -> access$5
    void access$6(com.aviary.android.feather.effects.DrawingPanel,int) -> access$6
    android.graphics.Paint access$7(com.aviary.android.feather.effects.DrawingPanel) -> access$7
    int access$8(com.aviary.android.feather.effects.DrawingPanel) -> access$8
    com.aviary.android.feather.effects.DrawingPanel$DrawinTool access$9(com.aviary.android.feather.effects.DrawingPanel) -> access$9
    void access$10(com.aviary.android.feather.effects.DrawingPanel,com.aviary.android.feather.effects.DrawingPanel$DrawinTool) -> access$10
    void access$11(com.aviary.android.feather.effects.DrawingPanel) -> access$11
    void access$12(com.aviary.android.feather.effects.DrawingPanel,int) -> access$12
    int access$13(com.aviary.android.feather.effects.DrawingPanel) -> access$13
    int[] $SWITCH_TABLE$com$aviary$android$feather$effects$DrawingPanel$DrawinTool() -> $SWITCH_TABLE$com$aviary$android$feather$effects$DrawingPanel$DrawinTool
com.aviary.android.feather.effects.DrawingPanel$1 -> com.aviary.android.feather.effects.DrawingPanel$1:
    com.aviary.android.feather.effects.DrawingPanel this$0 -> this$0
    void onScrollFinished(com.aviary.android.feather.widget.AviaryAdapterView,android.view.View,int,long) -> onScrollFinished
    void onScrollStarted(com.aviary.android.feather.widget.AviaryAdapterView,android.view.View,int,long) -> onScrollStarted
    void onScroll(com.aviary.android.feather.widget.AviaryAdapterView,android.view.View,int,long) -> onScroll
com.aviary.android.feather.effects.DrawingPanel$2 -> com.aviary.android.feather.effects.DrawingPanel$2:
    com.aviary.android.feather.effects.DrawingPanel this$0 -> this$0
    void onScrollFinished(com.aviary.android.feather.widget.AviaryAdapterView,android.view.View,int,long) -> onScrollFinished
    void onScrollStarted(com.aviary.android.feather.widget.AviaryAdapterView,android.view.View,int,long) -> onScrollStarted
    void onScroll(com.aviary.android.feather.widget.AviaryAdapterView,android.view.View,int,long) -> onScroll
com.aviary.android.feather.effects.DrawingPanel$DrawinTool -> com.aviary.android.feather.effects.DrawingPanel$DrawinTool:
    com.aviary.android.feather.effects.DrawingPanel$DrawinTool Draw -> Draw
    com.aviary.android.feather.effects.DrawingPanel$DrawinTool Erase -> Erase
    com.aviary.android.feather.effects.DrawingPanel$DrawinTool Zoom -> Zoom
    com.aviary.android.feather.effects.DrawingPanel$DrawinTool[] ENUM$VALUES -> ENUM$VALUES
    com.aviary.android.feather.effects.DrawingPanel$DrawinTool[] values() -> values
    com.aviary.android.feather.effects.DrawingPanel$DrawinTool valueOf(java.lang.String) -> valueOf
com.aviary.android.feather.effects.DrawingPanel$GalleryColorAdapter -> com.aviary.android.feather.effects.DrawingPanel$GalleryColorAdapter:
    int VALID_POSITION -> VALID_POSITION
    int INVALID_POSITION -> INVALID_POSITION
    int ERASER_POSITION -> ERASER_POSITION
    int[] sizes -> sizes
    android.view.LayoutInflater mLayoutInflater -> mLayoutInflater
    android.content.res.Resources mRes -> mRes
    com.aviary.android.feather.effects.DrawingPanel this$0 -> this$0
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getViewTypeCount() -> getViewTypeCount
    int getItemViewType(int) -> getItemViewType
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.aviary.android.feather.effects.DrawingPanel$GallerySizeAdapter -> com.aviary.android.feather.effects.DrawingPanel$GallerySizeAdapter:
    int VALID_POSITION -> VALID_POSITION
    int INVALID_POSITION -> INVALID_POSITION
    int[] sizes -> sizes
    android.view.LayoutInflater mLayoutInflater -> mLayoutInflater
    android.content.res.Resources mRes -> mRes
    com.aviary.android.feather.effects.DrawingPanel this$0 -> this$0
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getViewTypeCount() -> getViewTypeCount
    int getItemViewType(int) -> getItemViewType
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.aviary.android.feather.effects.EffectsPanel -> com.aviary.android.feather.effects.EffectsPanel:
    int mThumbPadding -> mThumbPadding
    int mThumbRoundedCorners -> mThumbRoundedCorners
    int mThumbStrokeColor -> mThumbStrokeColor
    int mThumbStrokeWidth -> mThumbStrokeWidth
    double mFactor -> mFactor
    void onCreate(android.graphics.Bitmap,android.os.Bundle) -> onCreate
    android.graphics.Bitmap generateThumbnail(android.graphics.Bitmap,int,int) -> generateThumbnail
    void onDispose() -> onDispose
    void onProgressEnd() -> onProgressEnd
    void onProgressStart() -> onProgressStart
    com.aviary.android.feather.effects.BordersPanel$ListAdapter createListAdapter(android.content.Context,android.database.Cursor) -> createListAdapter
    com.aviary.android.feather.effects.BordersPanel$RenderTask createRenderTask(int) -> createRenderTask
    com.aviary.android.feather.headless.filters.INativeFilter loadNativeFilter(com.aviary.android.feather.cds.TrayColumns$TrayCursorWrapper,int,boolean) -> loadNativeFilter
    java.lang.CharSequence[] getOptionalEffectsLabels() -> getOptionalEffectsLabels
    java.lang.CharSequence[] getOptionalEffectsValues() -> getOptionalEffectsValues
    android.support.v4.widget.CursorAdapter createListAdapter(android.content.Context,android.database.Cursor) -> createListAdapter
    void setEnabled(boolean) -> setEnabled
    double access$2(com.aviary.android.feather.effects.EffectsPanel) -> access$2
    int access$3(com.aviary.android.feather.effects.EffectsPanel) -> access$3
    int access$4(com.aviary.android.feather.effects.EffectsPanel) -> access$4
    int access$5(com.aviary.android.feather.effects.EffectsPanel) -> access$5
    int access$6(com.aviary.android.feather.effects.EffectsPanel) -> access$6
com.aviary.android.feather.effects.EffectsPanel$EffectsListAdapter -> com.aviary.android.feather.effects.EffectsPanel$EffectsListAdapter:
    com.aviary.android.feather.effects.EffectsPanel this$0 -> this$0
    com.squareup.picasso.Generator createContentCallable(long,int,java.lang.String,java.lang.String) -> createContentCallable
    android.graphics.drawable.BitmapDrawable getExternalBackgroundDrawable(android.content.Context) -> getExternalBackgroundDrawable
com.aviary.android.feather.effects.EffectsPanel$EffectsRenderTask -> com.aviary.android.feather.effects.EffectsPanel$EffectsRenderTask:
    com.aviary.android.feather.effects.EffectsPanel this$0 -> this$0
com.aviary.android.feather.effects.EffectsPanel$FilterThumbnailCallable -> com.aviary.android.feather.effects.EffectsPanel$FilterThumbnailCallable:
    com.aviary.android.feather.headless.filters.INativeFilter mFilter -> mFilter
    android.graphics.Bitmap srcBitmap -> srcBitmap
    com.aviary.android.feather.effects.EffectsPanel this$0 -> this$0
    com.aviary.android.feather.headless.filters.INativeFilter loadFilter(java.lang.CharSequence) -> loadFilter
    android.graphics.Bitmap decode(android.net.Uri) -> decode
    android.graphics.Bitmap call(java.lang.String) -> call
    com.aviary.android.feather.headless.moa.MoaActionList actionsForRoundedThumbnail(boolean,com.aviary.android.feather.headless.filters.INativeFilter) -> actionsForRoundedThumbnail
com.aviary.android.feather.effects.EnhanceEffectPanel -> com.aviary.android.feather.effects.EnhanceEffectPanel:
    com.aviary.android.feather.effects.EnhanceEffectPanel$RenderTask mCurrentTask -> mCurrentTask
    boolean mIsRendering -> mIsRendering
    com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters mFilterType -> mFilterType
    boolean enableFastPreview -> enableFastPreview
    com.aviary.android.feather.headless.moa.MoaActionList mActions -> mActions
    com.aviary.android.feather.widget.AviaryHighlightImageButton mButton1 -> mButton1
    com.aviary.android.feather.widget.AviaryHighlightImageButton mButton2 -> mButton2
    com.aviary.android.feather.widget.AviaryHighlightImageButton mButton3 -> mButton3
    com.aviary.android.feather.widget.AviaryHighlightImageButton mCurrent -> mCurrent
    void onCreate(android.graphics.Bitmap,android.os.Bundle) -> onCreate
    void onActivate() -> onActivate
    void onDeactivate() -> onDeactivate
    boolean isRendering() -> isRendering
    void onBitmapReplaced(android.graphics.Bitmap) -> onBitmapReplaced
    void onCheckedChanged(com.aviary.android.feather.widget.AviaryHighlightImageButton,boolean,boolean) -> onCheckedChanged
    void onProgressStart() -> onProgressStart
    void onProgressEnd() -> onProgressEnd
    android.view.ViewGroup generateOptionView(android.view.LayoutInflater,android.view.ViewGroup) -> generateOptionView
    boolean onBackPressed() -> onBackPressed
    void onCancelled() -> onCancelled
    boolean onCancel() -> onCancel
    void killCurrentTask() -> killCurrentTask
    boolean getIsChanged() -> getIsChanged
    void onGenerateResult() -> onGenerateResult
    void setEnabled(boolean) -> setEnabled
    com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters access$1(com.aviary.android.feather.effects.EnhanceEffectPanel) -> access$1
    void access$2(com.aviary.android.feather.effects.EnhanceEffectPanel,com.aviary.android.feather.effects.EnhanceEffectPanel$RenderTask) -> access$2
com.aviary.android.feather.effects.EnhanceEffectPanel$GenerateResultTask -> com.aviary.android.feather.effects.EnhanceEffectPanel$GenerateResultTask:
    android.app.ProgressDialog mProgress -> mProgress
    com.aviary.android.feather.effects.EnhanceEffectPanel this$0 -> this$0
    void PreExecute() -> PreExecute
    java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    void PostExecute(java.lang.Void) -> PostExecute
    void PostExecute(java.lang.Object) -> PostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.aviary.android.feather.effects.EnhanceEffectPanel$RenderTask -> com.aviary.android.feather.effects.EnhanceEffectPanel$RenderTask:
    java.lang.String mError -> mError
    com.aviary.android.feather.library.filters.EnhanceFilter renderFilter -> renderFilter
    com.aviary.android.feather.effects.EnhanceEffectPanel this$0 -> this$0
    void PreExecute() -> PreExecute
    android.graphics.Bitmap doInBackground(com.aviary.android.feather.library.filters.EnhanceFilter$Types[]) -> doInBackground
    void PostExecute(android.graphics.Bitmap) -> PostExecute
    void onCancelled() -> onCancelled
    void PostExecute(java.lang.Object) -> PostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.aviary.android.feather.effects.MemePanel -> com.aviary.android.feather.effects.MemePanel:
    com.aviary.android.feather.widget.AviaryButton editTopButton -> editTopButton
    com.aviary.android.feather.widget.AviaryButton editBottomButton -> editBottomButton
    android.widget.EditText editTopText -> editTopText
    android.widget.EditText editBottomText -> editBottomText
    android.view.inputmethod.InputMethodManager mInputManager -> mInputManager
    android.graphics.Canvas mCanvas -> mCanvas
    com.aviary.android.feather.widget.DrawableHighlightView topHv -> topHv
    com.aviary.android.feather.widget.DrawableHighlightView bottomHv -> bottomHv
    android.graphics.Typeface mTypeface -> mTypeface
    java.lang.String mTypefaceSourceDir -> mTypefaceSourceDir
    java.lang.String fontName -> fontName
    android.view.View clearButtonTop -> clearButtonTop
    android.view.View clearButtonBottom -> clearButtonBottom
    int paddingTop -> paddingTop
    int paddingBottom -> paddingBottom
    int mTextColor -> mTextColor
    int mTextStrokeColor -> mTextStrokeColor
    boolean mTextStrokeEnabled -> mTextStrokeEnabled
    android.os.Handler mInputHandler -> mInputHandler
    android.os.ResultReceiver mInputReceiver -> mInputReceiver
    com.aviary.android.feather.effects.MemePanel$MyTextWatcher mEditTextWatcher -> mEditTextWatcher
    void onCreate(android.graphics.Bitmap,android.os.Bundle) -> onCreate
    void onActivate() -> onActivate
    void onDeactivate() -> onDeactivate
    void onDestroy() -> onDestroy
    android.view.View generateContentView(android.view.LayoutInflater) -> generateContentView
    android.view.ViewGroup generateOptionView(android.view.LayoutInflater,android.view.ViewGroup) -> generateOptionView
    void onGenerateResult() -> onGenerateResult
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
    void flattenText(com.aviary.android.feather.widget.DrawableHighlightView,com.aviary.android.feather.library.filters.MemeFilter) -> flattenText
    void createAndConfigurePreview() -> createAndConfigurePreview
    void onClick(android.view.View) -> onClick
    void onTopClick(com.aviary.android.feather.widget.DrawableHighlightView) -> onTopClick
    float[] getMatrixValues(android.graphics.Matrix) -> getMatrixValues
    void onAddTopText() -> onAddTopText
    void onAddBottomText() -> onAddBottomText
    void onFocusChange(com.aviary.android.feather.widget.DrawableHighlightView,com.aviary.android.feather.widget.DrawableHighlightView) -> onFocusChange
    void endEditView(com.aviary.android.feather.widget.DrawableHighlightView) -> endEditView
    void beginEditView(com.aviary.android.feather.widget.DrawableHighlightView) -> beginEditView
    void clearEditView(com.aviary.android.feather.widget.DrawableHighlightView) -> clearEditView
    void checkIsChanged() -> checkIsChanged
    boolean checkIsChanged(com.aviary.android.feather.widget.DrawableHighlightView) -> checkIsChanged
    void onDown(com.aviary.android.feather.widget.DrawableHighlightView) -> onDown
    void onMove(com.aviary.android.feather.widget.DrawableHighlightView) -> onMove
    void onClick(com.aviary.android.feather.widget.DrawableHighlightView) -> onClick
    void beginEditText(com.aviary.android.feather.widget.DrawableHighlightView) -> beginEditText
    void endEditText(com.aviary.android.feather.widget.DrawableHighlightView) -> endEditText
    void createTypeFace() -> createTypeFace
    void onLayoutChanged(boolean,int,int,int,int) -> onLayoutChanged
    boolean isRendering() -> isRendering
    void setEnabled(boolean) -> setEnabled
    void access$2(com.aviary.android.feather.effects.MemePanel) -> access$2
com.aviary.android.feather.effects.MemePanel$1 -> com.aviary.android.feather.effects.MemePanel$1:
    com.aviary.android.feather.effects.MemePanel this$0 -> this$0
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.aviary.android.feather.effects.MemePanel$2 -> com.aviary.android.feather.effects.MemePanel$2:
    com.aviary.android.feather.effects.MemePanel this$0 -> this$0
    void onDrawableChanged(android.graphics.drawable.Drawable) -> onDrawableChanged
com.aviary.android.feather.effects.MemePanel$MyTextWatcher -> com.aviary.android.feather.effects.MemePanel$MyTextWatcher:
    com.aviary.android.feather.widget.DrawableHighlightView view -> view
    com.aviary.android.feather.effects.MemePanel this$0 -> this$0
com.aviary.android.feather.effects.NativeEffectRangePanel -> com.aviary.android.feather.effects.NativeEffectRangePanel:
    com.aviary.android.feather.effects.NativeEffectRangePanel$ApplyFilterTask mCurrentTask -> mCurrentTask
    boolean mIsRendering -> mIsRendering
    boolean enableFastPreview -> enableFastPreview
    com.aviary.android.feather.headless.moa.MoaActionList mActions -> mActions
    void onCreate(android.graphics.Bitmap,android.os.Bundle) -> onCreate
    void onBitmapReplaced(android.graphics.Bitmap) -> onBitmapReplaced
    void onActivate() -> onActivate
    boolean isRendering() -> isRendering
    void onSliderStart(int) -> onSliderStart
    void onSliderEnd(int) -> onSliderEnd
    void onSliderChanged(int,boolean) -> onSliderChanged
    void onDestroy() -> onDestroy
    void onDeactivate() -> onDeactivate
    void onGenerateResult() -> onGenerateResult
    boolean onBackPressed() -> onBackPressed
    void onCancelled() -> onCancelled
    boolean getIsChanged() -> getIsChanged
    boolean killCurrentTask() -> killCurrentTask
    void applyFilter(float,boolean) -> applyFilter
    void setEnabled(boolean) -> setEnabled
com.aviary.android.feather.effects.NativeEffectRangePanel$ApplyFilterTask -> com.aviary.android.feather.effects.NativeEffectRangePanel$ApplyFilterTask:
    com.aviary.android.feather.headless.moa.MoaResult mResult -> mResult
    boolean mShowProgress -> mShowProgress
    com.aviary.android.feather.effects.NativeEffectRangePanel this$0 -> this$0
    void PreExecute() -> PreExecute
    void onCancelled() -> onCancelled
    android.graphics.Bitmap doInBackground(android.graphics.Bitmap[]) -> doInBackground
    void PostExecute(android.graphics.Bitmap) -> PostExecute
    void PostExecute(java.lang.Object) -> PostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.aviary.android.feather.effects.NativeEffectRangePanel$GenerateResultTask -> com.aviary.android.feather.effects.NativeEffectRangePanel$GenerateResultTask:
    android.app.ProgressDialog mProgress -> mProgress
    com.aviary.android.feather.effects.NativeEffectRangePanel this$0 -> this$0
    void PreExecute() -> PreExecute
    java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    void PostExecute(java.lang.Void) -> PostExecute
    void PostExecute(java.lang.Object) -> PostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.aviary.android.feather.effects.SimpleStatusMachine -> com.aviary.android.feather.effects.SimpleStatusMachine:
    int INVALID_STATUS -> INVALID_STATUS
    int currentStatus -> currentStatus
    int previousStatus -> previousStatus
    com.aviary.android.feather.effects.SimpleStatusMachine$OnStatusChangeListener mStatusListener -> mStatusListener
    void setOnStatusChangeListener(com.aviary.android.feather.effects.SimpleStatusMachine$OnStatusChangeListener) -> setOnStatusChangeListener
    void setStatus(int) -> setStatus
    int getCurrentStatus() -> getCurrentStatus
com.aviary.android.feather.effects.SimpleStatusMachine$OnStatusChangeListener -> com.aviary.android.feather.effects.SimpleStatusMachine$OnStatusChangeListener:
    void OnStatusChanged(int,int) -> OnStatusChanged
    void OnStatusUpdated(int) -> OnStatusUpdated
com.aviary.android.feather.effects.SliderEffectPanel -> com.aviary.android.feather.effects.SliderEffectPanel:
    com.aviary.android.feather.effects.SliderEffectPanel$SliderStyle mStyle -> mStyle
    com.aviary.android.feather.widget.AviaryWheel mWheel -> mWheel
    com.aviary.android.feather.widget.AviarySeekBar mSeekBar -> mSeekBar
    java.lang.String mResourceName -> mResourceName
    android.view.View mButtonMinus -> mButtonMinus
    android.view.View mButtonPlus -> mButtonPlus
    void onCreate(android.graphics.Bitmap,android.os.Bundle) -> onCreate
    void onActivate() -> onActivate
    void onDeactivate() -> onDeactivate
    void setValue(int) -> setValue
    void onClick(android.view.View) -> onClick
    void decreaseValue() -> decreaseValue
    void increaseValue() -> increaseValue
    android.view.ViewGroup generateOptionView(android.view.LayoutInflater,android.view.ViewGroup) -> generateOptionView
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void onStartTrackingTouch(com.aviary.android.feather.widget.AviaryWheel) -> onStartTrackingTouch
    void OnValueChanged(com.aviary.android.feather.widget.AviaryWheel,int) -> OnValueChanged
    void onStopTrackingTouch(com.aviary.android.feather.widget.AviaryWheel) -> onStopTrackingTouch
    void onSliderStart(int) -> onSliderStart
    void onSliderChanged(int,boolean) -> onSliderChanged
    void onSliderEnd(int) -> onSliderEnd
    void setEnabled(boolean) -> setEnabled
com.aviary.android.feather.effects.SliderEffectPanel$SliderStyle -> com.aviary.android.feather.effects.SliderEffectPanel$SliderStyle:
    com.aviary.android.feather.effects.SliderEffectPanel$SliderStyle SeekBarStyle -> SeekBarStyle
    com.aviary.android.feather.effects.SliderEffectPanel$SliderStyle WheelStyle -> WheelStyle
    com.aviary.android.feather.effects.SliderEffectPanel$SliderStyle[] ENUM$VALUES -> ENUM$VALUES
    com.aviary.android.feather.effects.SliderEffectPanel$SliderStyle[] values() -> values
    com.aviary.android.feather.effects.SliderEffectPanel$SliderStyle valueOf(java.lang.String) -> valueOf
com.aviary.android.feather.effects.StickersPanel -> com.aviary.android.feather.effects.StickersPanel:
    int STATUS_NULL -> STATUS_NULL
    int STATUS_PACKS -> STATUS_PACKS
    int STATUS_STICKERS -> STATUS_STICKERS
    com.aviary.android.feather.effects.SimpleStatusMachine mStatus -> mStatus
    it.sephiroth.android.library.widget.HListView mListPacks -> mListPacks
    it.sephiroth.android.library.widget.HListView mListStickers -> mListStickers
    android.widget.ViewFlipper mViewFlipper -> mViewFlipper
    com.squareup.picasso.Picasso mPicassoLib -> mPicassoLib
    android.graphics.Canvas mCanvas -> mCanvas
    int mPackCellWidth -> mPackCellWidth
    int mStickerCellWidth -> mStickerCellWidth
    java.util.List mInstalledPackages -> mInstalledPackages
    com.aviary.android.feather.library.services.ConfigService mConfigService -> mConfigService
    com.aviary.android.feather.library.services.DragControllerService mDragControllerService -> mDragControllerService
    com.aviary.android.feather.library.services.BadgeService mBadgeService -> mBadgeService
    com.aviary.android.feather.widget.IAPDialogMain mIapDialog -> mIapDialog
    com.aviary.android.feather.headless.moa.MoaActionList mActionList -> mActionList
    com.aviary.android.feather.library.filters.StickerFilter mCurrentFilter -> mCurrentFilter
    int mPackThumbSize -> mPackThumbSize
    int mStickerThumbSize -> mStickerThumbSize
    boolean mFirstTimeRenderer -> mFirstTimeRenderer
    android.support.v4.widget.CursorAdapter mAdapterPacks -> mAdapterPacks
    android.support.v4.widget.CursorAdapter mAdapterStickers -> mAdapterStickers
    android.support.v4.content.CursorLoader mCursorLoaderPacks -> mCursorLoaderPacks
    android.database.ContentObserver mContentObserver -> mContentObserver
    com.aviary.android.feather.effects.StickersPanel$StickerPackInfo mPackInfo -> mPackInfo
    void onLoadComplete(android.support.v4.content.Loader,android.database.Cursor) -> onLoadComplete
    void onCreate(android.graphics.Bitmap,android.os.Bundle) -> onCreate
    void onActivate() -> onActivate
    boolean onBackPressed() -> onBackPressed
    boolean onCancel() -> onCancel
    void onDeactivate() -> onDeactivate
    void onDestroy() -> onDestroy
    void onDispose() -> onDispose
    void onGenerateResult() -> onGenerateResult
    void onConfigurationChanged(android.content.res.Configuration,android.content.res.Configuration) -> onConfigurationChanged
    android.view.View generateContentView(android.view.LayoutInflater) -> generateContentView
    android.view.ViewGroup generateOptionView(android.view.LayoutInflater,android.view.ViewGroup) -> generateOptionView
    void OnStatusChanged(int,int) -> OnStatusChanged
    void OnStatusUpdated(int) -> OnStatusUpdated
    void onItemClick(it.sephiroth.android.library.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean startDrag(it.sephiroth.android.library.widget.AdapterView,android.view.View,int,long,boolean) -> startDrag
    void setDragController(com.aviary.android.feather.library.services.DragControllerService) -> setDragController
    com.aviary.android.feather.library.services.DragControllerService getDragController() -> getDragController
    void onDropCompleted(android.view.View,boolean) -> onDropCompleted
    boolean onDragEnd() -> onDragEnd
    void onDragStart(com.aviary.android.feather.library.services.DragControllerService$DragSource,java.lang.Object,int) -> onDragStart
    boolean acceptDrop(com.aviary.android.feather.library.services.DragControllerService$DragSource,int,int,int,int,com.aviary.android.feather.library.services.drag.DragView,java.lang.Object) -> acceptDrop
    void onDrop(com.aviary.android.feather.library.services.DragControllerService$DragSource,int,int,int,int,com.aviary.android.feather.library.services.drag.DragView,java.lang.Object) -> onDrop
    void askToLeaveWithoutApply() -> askToLeaveWithoutApply
    void createAndConfigurePreview() -> createAndConfigurePreview
    void updateInstalledPacks(boolean) -> updateInstalledPacks
    com.aviary.android.feather.effects.StickersPanel$StickerPacksAdapter createPacksAdapter(android.content.Context,android.database.Cursor) -> createPacksAdapter
    void displayIAPDialog(com.aviary.android.feather.widget.IAPDialogMain$IAPUpdater) -> displayIAPDialog
    boolean removeIapDialog() -> removeIapDialog
    void loadStickers() -> loadStickers
    void addSticker(java.lang.String,java.lang.String,android.graphics.RectF) -> addSticker
    void addSticker(com.aviary.android.feather.library.graphics.drawable.FeatherDrawable,android.graphics.RectF) -> addSticker
    void onApplyCurrent() -> onApplyCurrent
    void onClearCurrent(boolean) -> onClearCurrent
    void onClearCurrent(com.aviary.android.feather.widget.DrawableHighlightView,boolean) -> onClearCurrent
    boolean stickersOnScreen() -> stickersOnScreen
    void onStickersPackListUpdated(android.database.Cursor,int) -> onStickersPackListUpdated
    boolean isRendering() -> isRendering
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void setEnabled(boolean) -> setEnabled
    int access$3(com.aviary.android.feather.effects.StickersPanel) -> access$3
    it.sephiroth.android.library.widget.HListView access$4(com.aviary.android.feather.effects.StickersPanel) -> access$4
    int access$5(com.aviary.android.feather.effects.StickersPanel) -> access$5
    com.aviary.android.feather.library.services.BadgeService access$6(com.aviary.android.feather.effects.StickersPanel) -> access$6
    com.squareup.picasso.Picasso access$7(com.aviary.android.feather.effects.StickersPanel) -> access$7
    int access$8(com.aviary.android.feather.effects.StickersPanel) -> access$8
    int access$9(com.aviary.android.feather.effects.StickersPanel) -> access$9
    boolean access$10(com.aviary.android.feather.effects.StickersPanel) -> access$10
    void access$11(com.aviary.android.feather.effects.StickersPanel,java.lang.String,java.lang.String,android.graphics.RectF) -> access$11
    boolean access$12(com.aviary.android.feather.effects.StickersPanel,it.sephiroth.android.library.widget.AdapterView,android.view.View,int,long,boolean) -> access$12
    void access$13(com.aviary.android.feather.effects.StickersPanel,boolean) -> access$13
com.aviary.android.feather.effects.StickersPanel$1 -> com.aviary.android.feather.effects.StickersPanel$1:
    com.aviary.android.feather.effects.StickersPanel this$0 -> this$0
    int val$delta -> val$delta
    void run() -> run
com.aviary.android.feather.effects.StickersPanel$2 -> com.aviary.android.feather.effects.StickersPanel$2:
    com.aviary.android.feather.effects.StickersPanel this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.aviary.android.feather.effects.StickersPanel$3 -> com.aviary.android.feather.effects.StickersPanel$3:
    com.aviary.android.feather.effects.StickersPanel this$0 -> this$0
    void onChange(boolean) -> onChange
com.aviary.android.feather.effects.StickersPanel$4 -> com.aviary.android.feather.effects.StickersPanel$4:
    com.aviary.android.feather.effects.StickersPanel this$0 -> this$0
    void onClose() -> onClose
com.aviary.android.feather.effects.StickersPanel$5 -> com.aviary.android.feather.effects.StickersPanel$5:
    com.aviary.android.feather.effects.StickersPanel this$0 -> this$0
    void onItemClick(it.sephiroth.android.library.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.aviary.android.feather.effects.StickersPanel$6 -> com.aviary.android.feather.effects.StickersPanel$6:
    com.aviary.android.feather.effects.StickersPanel this$0 -> this$0
    boolean onItemLongClick(it.sephiroth.android.library.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.aviary.android.feather.effects.StickersPanel$7 -> com.aviary.android.feather.effects.StickersPanel$7:
    com.aviary.android.feather.effects.StickersPanel this$0 -> this$0
    void onDeleteClick() -> onDeleteClick
com.aviary.android.feather.effects.StickersPanel$StickerDragInfo -> com.aviary.android.feather.effects.StickersPanel$StickerDragInfo:
    java.lang.String contentPath -> contentPath
    java.lang.String identifier -> identifier
com.aviary.android.feather.effects.StickersPanel$StickerEffectPack -> com.aviary.android.feather.effects.StickersPanel$StickerEffectPack:
    java.lang.CharSequence mPackageName -> mPackageName
    java.lang.CharSequence mTitle -> mTitle
    int mPluginStatus -> mPluginStatus
    com.aviary.android.feather.effects.StickersPanel$StickerEffectPack$StickerEffectPackType mType -> mType
    void finalize() -> finalize
com.aviary.android.feather.effects.StickersPanel$StickerEffectPack$StickerEffectPackType -> com.aviary.android.feather.effects.StickersPanel$StickerEffectPack$StickerEffectPackType:
    com.aviary.android.feather.effects.StickersPanel$StickerEffectPack$StickerEffectPackType GET_MORE_FIRST -> GET_MORE_FIRST
    com.aviary.android.feather.effects.StickersPanel$StickerEffectPack$StickerEffectPackType GET_MORE_LAST -> GET_MORE_LAST
    com.aviary.android.feather.effects.StickersPanel$StickerEffectPack$StickerEffectPackType EXTERNAL -> EXTERNAL
    com.aviary.android.feather.effects.StickersPanel$StickerEffectPack$StickerEffectPackType INTERNAL -> INTERNAL
    com.aviary.android.feather.effects.StickersPanel$StickerEffectPack$StickerEffectPackType LEFT_DIVIDER -> LEFT_DIVIDER
    com.aviary.android.feather.effects.StickersPanel$StickerEffectPack$StickerEffectPackType RIGHT_DIVIDER -> RIGHT_DIVIDER
    com.aviary.android.feather.effects.StickersPanel$StickerEffectPack$StickerEffectPackType[] ENUM$VALUES -> ENUM$VALUES
    com.aviary.android.feather.effects.StickersPanel$StickerEffectPack$StickerEffectPackType[] values() -> values
    com.aviary.android.feather.effects.StickersPanel$StickerEffectPack$StickerEffectPackType valueOf(java.lang.String) -> valueOf
com.aviary.android.feather.effects.StickersPanel$StickerPackInfo -> com.aviary.android.feather.effects.StickersPanel$StickerPackInfo:
    long packId -> packId
    java.lang.String packIdentifier -> packIdentifier
com.aviary.android.feather.effects.StickersPanel$StickerPacksAdapter -> com.aviary.android.feather.effects.StickersPanel$StickerPacksAdapter:
    int TYPE_INVALID -> TYPE_INVALID
    int TYPE_LEFT_GETMORE -> TYPE_LEFT_GETMORE
    int TYPE_RIGHT_GETMORE -> TYPE_RIGHT_GETMORE
    int TYPE_NORMAL -> TYPE_NORMAL
    int TYPE_EXTERNAL -> TYPE_EXTERNAL
    int TYPE_DIVIDER -> TYPE_DIVIDER
    int TYPE_LEFT_DIVIDER -> TYPE_LEFT_DIVIDER
    int TYPE_RIGHT_DIVIDER -> TYPE_RIGHT_DIVIDER
    int mLayoutResId -> mLayoutResId
    int mExternalLayoutResId -> mExternalLayoutResId
    int mMoreResId -> mMoreResId
    android.view.LayoutInflater mInflater -> mInflater
    int mIdColumnIndex -> mIdColumnIndex
    int mPackageNameColumnIndex -> mPackageNameColumnIndex
    int mIdentifierColumnIndex -> mIdentifierColumnIndex
    int mTypeColumnIndex -> mTypeColumnIndex
    int mDisplayNameColumnIndex -> mDisplayNameColumnIndex
    int mPathColumnIndex -> mPathColumnIndex
    com.aviary.android.feather.effects.StickersPanel this$0 -> this$0
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void initColumns(android.database.Cursor) -> initColumns
    boolean hasStableIds() -> hasStableIds
    int getViewTypeCount() -> getViewTypeCount
    int getItemViewType(int) -> getItemViewType
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup,int) -> newView
    void bindView(android.view.View,android.content.Context,android.database.Cursor,int) -> bindView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
com.aviary.android.feather.effects.StickersPanel$StickerThumbnailCallable -> com.aviary.android.feather.effects.StickersPanel$StickerThumbnailCallable:
    int mFinalSize -> mFinalSize
    java.lang.String mUrl -> mUrl
    android.graphics.Bitmap call() -> call
    java.lang.Object call() -> call
com.aviary.android.feather.effects.StickersPanel$StickersAdapter -> com.aviary.android.feather.effects.StickersPanel$StickersAdapter:
    android.view.LayoutInflater mLayoutInflater -> mLayoutInflater
    int mStickerResourceId -> mStickerResourceId
    java.lang.String mContentPath -> mContentPath
    int idColumnIndex -> idColumnIndex
    int identifierColumnIndex -> identifierColumnIndex
    int packIdColumnIndex -> packIdColumnIndex
    com.aviary.android.feather.effects.StickersPanel this$0 -> this$0
    void setContentPath(java.lang.String) -> setContentPath
    java.lang.String getContentPath() -> getContentPath
    boolean hasStableIds() -> hasStableIds
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void initCursor(android.database.Cursor) -> initCursor
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    java.lang.String getItemIdentifier(int) -> getItemIdentifier
com.aviary.android.feather.effects.TextPanel -> com.aviary.android.feather.effects.TextPanel:
    int[] mColors -> mColors
    int mColor -> mColor
    com.aviary.android.feather.widget.AviaryGallery mGallery -> mGallery
    int mSelectedPosition -> mSelectedPosition
    int mDefaultTextSize -> mDefaultTextSize
    android.graphics.Canvas mCanvas -> mCanvas
    android.widget.EditText mEditText -> mEditText
    com.aviary.android.feather.library.services.ConfigService config -> config
    java.lang.String mColorContentDescription -> mColorContentDescription
    com.aviary.android.feather.effects.TextPanel$MyTextWatcher mEditTextWatcher -> mEditTextWatcher
    void beginEdit(com.aviary.android.feather.widget.DrawableHighlightView) -> beginEdit
    void createAndConfigurePreview() -> createAndConfigurePreview
    void endEdit(com.aviary.android.feather.widget.DrawableHighlightView) -> endEdit
    android.view.View generateContentView(android.view.LayoutInflater) -> generateContentView
    android.view.ViewGroup generateOptionView(android.view.LayoutInflater,android.view.ViewGroup) -> generateOptionView
    boolean getIsChanged() -> getIsChanged
    void onAddNewText() -> onAddNewText
    com.aviary.android.feather.headless.moa.MoaActionList onApplyCurrent() -> onApplyCurrent
    com.aviary.android.feather.headless.moa.MoaActionList onApplyCurrent(com.aviary.android.feather.widget.DrawableHighlightView) -> onApplyCurrent
    void onClearCurrent(com.aviary.android.feather.widget.DrawableHighlightView) -> onClearCurrent
    void onClick(com.aviary.android.feather.widget.DrawableHighlightView) -> onClick
    void onCreate(android.graphics.Bitmap,android.os.Bundle) -> onCreate
    void onActivate() -> onActivate
    void onDeactivate() -> onDeactivate
    void onDestroy() -> onDestroy
    void onScrollStarted(com.aviary.android.feather.widget.AviaryAdapterView,android.view.View,int,long) -> onScrollStarted
    void onScroll(com.aviary.android.feather.widget.AviaryAdapterView,android.view.View,int,long) -> onScroll
    void onScrollFinished(com.aviary.android.feather.widget.AviaryAdapterView,android.view.View,int,long) -> onScrollFinished
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    void onDown(com.aviary.android.feather.widget.DrawableHighlightView) -> onDown
    void onFocusChange(com.aviary.android.feather.widget.DrawableHighlightView,com.aviary.android.feather.widget.DrawableHighlightView) -> onFocusChange
    void onGenerateResult() -> onGenerateResult
    void onMove(com.aviary.android.feather.widget.DrawableHighlightView) -> onMove
    void updateCurrentHighlightColor() -> updateCurrentHighlightColor
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
    boolean isRendering() -> isRendering
    void setEnabled(boolean) -> setEnabled
    com.aviary.android.feather.widget.AviaryGallery access$2(com.aviary.android.feather.effects.TextPanel) -> access$2
    int access$3(com.aviary.android.feather.effects.TextPanel) -> access$3
    void access$4(com.aviary.android.feather.effects.TextPanel) -> access$4
com.aviary.android.feather.effects.TextPanel$1 -> com.aviary.android.feather.effects.TextPanel$1:
    com.aviary.android.feather.effects.TextPanel this$0 -> this$0
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.aviary.android.feather.effects.TextPanel$2 -> com.aviary.android.feather.effects.TextPanel$2:
    com.aviary.android.feather.effects.TextPanel this$0 -> this$0
    void run() -> run
com.aviary.android.feather.effects.TextPanel$GalleryAdapter -> com.aviary.android.feather.effects.TextPanel$GalleryAdapter:
    int VALID_POSITION -> VALID_POSITION
    int INVALID_POSITION -> INVALID_POSITION
    int[] sizes -> sizes
    android.view.LayoutInflater mLayoutInflater -> mLayoutInflater
    android.content.res.Resources mRes -> mRes
    com.aviary.android.feather.effects.TextPanel this$0 -> this$0
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getViewTypeCount() -> getViewTypeCount
    int getItemViewType(int) -> getItemViewType
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.aviary.android.feather.effects.TextPanel$MyTextWatcher -> com.aviary.android.feather.effects.TextPanel$MyTextWatcher:
    com.aviary.android.feather.widget.DrawableHighlightView view -> view
    com.aviary.android.feather.effects.TextPanel this$0 -> this$0
com.aviary.android.feather.effects.TiltShiftPanel -> com.aviary.android.feather.effects.TiltShiftPanel:
    com.aviary.android.feather.effects.TiltShiftPanel$BackgroundDrawThread mBackgroundDrawThread -> mBackgroundDrawThread
    com.aviary.android.feather.library.filters.TiltShiftFilter mFilter -> mFilter
    com.aviary.android.feather.widget.AviaryHighlightImageButton mCircleButton -> mCircleButton
    com.aviary.android.feather.widget.AviaryHighlightImageButton mRectButton -> mRectButton
    float BRUSH_MULTIPLIER -> BRUSH_MULTIPLIER
    com.aviary.android.feather.headless.moa.MoaActionList mActions -> mActions
    com.aviary.android.feather.headless.filters.NativeToolFilter$TiltShiftMode mTiltShiftMode -> mTiltShiftMode
    void onCreate(android.graphics.Bitmap,android.os.Bundle) -> onCreate
    void onActivate() -> onActivate
    void onDispose() -> onDispose
    void onCheckedChanged(com.aviary.android.feather.widget.AviaryHighlightImageButton,boolean,boolean) -> onCheckedChanged
    void onDeactivate() -> onDeactivate
    void onDestroy() -> onDestroy
    void onCancelled() -> onCancelled
    void onDrawStart(float[],com.aviary.android.feather.widget.ImageViewTiltiShiftTouch$TiltShiftDrawMode,float,float,float,float,float,float) -> onDrawStart
    void onDrawing(float[],float,float,float,float,float,float) -> onDrawing
    void onDrawEnd() -> onDrawEnd
    void onDrawableChanged(android.graphics.drawable.Drawable) -> onDrawableChanged
    void onGenerateResult() -> onGenerateResult
    void onComplete(android.graphics.Bitmap,com.aviary.android.feather.headless.moa.MoaActionList) -> onComplete
    java.lang.String printRect(android.graphics.Rect) -> printRect
    com.aviary.android.feather.library.filters.TiltShiftFilter createFilter() -> createFilter
    android.view.View generateContentView(android.view.LayoutInflater) -> generateContentView
    android.view.ViewGroup generateOptionView(android.view.LayoutInflater,android.view.ViewGroup) -> generateOptionView
    boolean isRendering() -> isRendering
    void setEnabled(boolean) -> setEnabled
    com.aviary.android.feather.library.filters.TiltShiftFilter access$2(com.aviary.android.feather.effects.TiltShiftPanel) -> access$2
    com.aviary.android.feather.effects.TiltShiftPanel$BackgroundDrawThread access$3(com.aviary.android.feather.effects.TiltShiftPanel) -> access$3
    com.aviary.android.feather.widget.AviaryHighlightImageButton access$4(com.aviary.android.feather.effects.TiltShiftPanel) -> access$4
    com.aviary.android.feather.widget.AviaryHighlightImageButton access$5(com.aviary.android.feather.effects.TiltShiftPanel) -> access$5
com.aviary.android.feather.effects.TiltShiftPanel$1 -> com.aviary.android.feather.effects.TiltShiftPanel$1:
    com.aviary.android.feather.effects.TiltShiftPanel this$0 -> this$0
    void run() -> run
com.aviary.android.feather.effects.TiltShiftPanel$BackgroundDrawThread -> com.aviary.android.feather.effects.TiltShiftPanel$BackgroundDrawThread:
    boolean started -> started
    boolean running -> running
    java.util.Queue mQueue -> mQueue
    com.aviary.android.feather.effects.TiltShiftPanel$DrawQueue mCurrentQueue -> mCurrentQueue
    com.aviary.android.feather.effects.TiltShiftPanel this$0 -> this$0
    void init() -> init
    void start() -> start
    void quit() -> quit
    void drawStart(float[],com.aviary.android.feather.widget.ImageViewTiltiShiftTouch$TiltShiftDrawMode,float,float,float,float,float,float) -> drawStart
    void draw(float[],float,float,float,float,float,float) -> draw
    void pathEnd() -> pathEnd
    boolean isCompleted() -> isCompleted
    int getQueueSize() -> getQueueSize
    void clear() -> clear
    void finish() -> finish
    void run() -> run
com.aviary.android.feather.effects.TiltShiftPanel$DrawQueue -> com.aviary.android.feather.effects.TiltShiftPanel$DrawQueue:
    long serialVersionUID -> serialVersionUID
    com.aviary.android.feather.headless.filters.NativeToolFilter$TiltShiftMode mode_ -> mode_
    boolean completed_ -> completed_
    com.aviary.android.feather.headless.filters.NativeToolFilter$TiltShiftMode getMode() -> getMode
    void end() -> end
    boolean isCompleted() -> isCompleted
    com.aviary.android.feather.headless.filters.NativeToolFilter$TiltShiftMode access$0(com.aviary.android.feather.effects.TiltShiftPanel$DrawQueue) -> access$0
com.aviary.android.feather.effects.TiltShiftPanel$GenerateResultTask -> com.aviary.android.feather.effects.TiltShiftPanel$GenerateResultTask:
    android.app.ProgressDialog mProgress -> mProgress
    com.aviary.android.feather.effects.TiltShiftPanel this$0 -> this$0
    void PreExecute() -> PreExecute
    java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    void PostExecute(java.lang.Void) -> PostExecute
    void PostExecute(java.lang.Object) -> PostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.aviary.android.feather.graphics.CdsPreviewTransformer -> com.aviary.android.feather.graphics.CdsPreviewTransformer:
    com.aviary.android.feather.common.log.LoggerFactory$Logger logger -> logger
    java.lang.String mPath -> mPath
    java.lang.String mDisplayName -> mDisplayName
    java.lang.String mType -> mType
    int mTargetDensity -> mTargetDensity
    int mInputDensity -> mInputDensity
    int mMaxW -> mMaxW
    int mMaxH -> mMaxH
    android.graphics.Bitmap transform(android.graphics.Bitmap) -> transform
    java.lang.String key() -> key
    android.graphics.Bitmap call() -> call
    android.graphics.Bitmap decode() -> decode
    java.lang.Object call() -> call
com.aviary.android.feather.graphics.GalleryBottomIndicatorDrawable -> com.aviary.android.feather.graphics.GalleryBottomIndicatorDrawable:
    int mShadowColor -> mShadowColor
    int mFillColor -> mFillColor
    int mStrokeColor1 -> mStrokeColor1
    int mStrokeColor2 -> mStrokeColor2
    float mIndicatorSize -> mIndicatorSize
    int mStrokeWidth -> mStrokeWidth
    int mShadowDy -> mShadowDy
    android.graphics.Rect destRect -> destRect
    android.graphics.Paint paint -> paint
    void draw(android.graphics.Canvas) -> draw
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
com.aviary.android.feather.graphics.GalleryTopIndicatorDrawable -> com.aviary.android.feather.graphics.GalleryTopIndicatorDrawable:
    java.lang.String LOG_TAG -> LOG_TAG
    int DIRECTION_TOP_DOWN -> DIRECTION_TOP_DOWN
    int DIRECTION_BOTTOM_TOP -> DIRECTION_BOTTOM_TOP
    int mShadowColor -> mShadowColor
    int mFillColor -> mFillColor
    int mStrokeColor1 -> mStrokeColor1
    int mStrokeColor2 -> mStrokeColor2
    float mIndicatorSize -> mIndicatorSize
    int mStrokeWidth -> mStrokeWidth
    int mShadowDy -> mShadowDy
    int mDirection -> mDirection
    int mOffsetY -> mOffsetY
    int mMinHeight -> mMinHeight
    android.graphics.Matrix mMatrix -> mMatrix
    android.graphics.Rect destRect -> destRect
    android.graphics.Paint paint -> paint
    int getMinimumHeight() -> getMinimumHeight
    int getIntrinsicHeight() -> getIntrinsicHeight
    void draw(android.graphics.Canvas) -> draw
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
com.aviary.android.feather.graphics.GlowBitmapDrawable -> com.aviary.android.feather.graphics.GlowBitmapDrawable:
    java.lang.String LOG_TAG -> LOG_TAG
    android.graphics.Rect mDstRect -> mDstRect
    android.graphics.Bitmap mPressedBitmap -> mPressedBitmap
    android.graphics.Bitmap mCheckedBitmap -> mCheckedBitmap
    android.graphics.Bitmap mSelectedBitmap -> mSelectedBitmap
    android.graphics.Bitmap mCurrent -> mCurrent
    boolean mPressed -> mPressed
    boolean mChecked -> mChecked
    boolean mSelected -> mSelected
    int mHighlightColorPressed -> mHighlightColorPressed
    int mHighlightColorChecked -> mHighlightColorChecked
    int mHighlightColorSelected -> mHighlightColorSelected
    int mBlurValue -> mBlurValue
    int mGlowMode -> mGlowMode
    int mHighlightMode -> mHighlightMode
    void init(int,int,int,int,int,int) -> init
    void setBitmap(android.graphics.Bitmap) -> setBitmap
    void recycleBitmaps() -> recycleBitmaps
    void updateConfig(int,int,int,int,int,int) -> updateConfig
    android.graphics.Bitmap generateBlurBitmap(android.graphics.Bitmap,int,int,android.graphics.PorterDuff$Mode,boolean,android.graphics.Paint) -> generateBlurBitmap
    boolean isStateful() -> isStateful
    void draw(android.graphics.Canvas) -> draw
    boolean onStateChange(int[]) -> onStateChange
com.aviary.android.feather.graphics.GlowDrawable -> com.aviary.android.feather.graphics.GlowDrawable:
    int mCount -> mCount
    int mThisCount -> mThisCount
    com.aviary.android.feather.common.log.LoggerFactory$Logger logger -> logger
    android.graphics.drawable.Drawable mDrawable -> mDrawable
    android.graphics.Paint mPaint -> mPaint
    android.graphics.Paint mPaintBlur -> mPaintBlur
    android.graphics.Rect mDstRect -> mDstRect
    android.graphics.Bitmap mBackground -> mBackground
    boolean mDraw -> mDraw
    android.graphics.Canvas tmpCanvas -> tmpCanvas
    com.aviary.android.feather.graphics.GlowDrawable$GlowDrawableState mCurrentStateSet -> mCurrentStateSet
    int mHighlightColorPressed -> mHighlightColorPressed
    int mHighlightColorChecked -> mHighlightColorChecked
    int mHighlightColorSelected -> mHighlightColorSelected
    int mBlurValue -> mBlurValue
    int mGlowMode -> mGlowMode
    int mHighlightMode -> mHighlightMode
    void initialize(int,int,int,int,int,int) -> initialize
    void update(int,int,int,int,int,int) -> update
    void setDrawable(android.graphics.drawable.Drawable) -> setDrawable
    void invalidateBackground(int,int) -> invalidateBackground
    void recycleBackground() -> recycleBackground
    android.graphics.Bitmap generateBitmap(android.graphics.drawable.Drawable,int,boolean) -> generateBitmap
    boolean isStateful() -> isStateful
    void draw(android.graphics.Canvas) -> draw
    android.graphics.Paint getPaint() -> getPaint
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getMinimumHeight() -> getMinimumHeight
    int getMinimumWidth() -> getMinimumWidth
    boolean setState(int[]) -> setState
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    boolean onStateChange(int[]) -> onStateChange
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    java.lang.String toString() -> toString
    boolean stateSetContains(int[],int) -> stateSetContains
com.aviary.android.feather.graphics.GlowDrawable$GlowDrawableState -> com.aviary.android.feather.graphics.GlowDrawable$GlowDrawableState:
    boolean pressed -> pressed
    boolean checked -> checked
    boolean selected -> selected
    boolean updateStateSet(int[]) -> updateStateSet
    java.lang.String toString() -> toString
com.aviary.android.feather.graphics.PluginDividerDrawable -> com.aviary.android.feather.graphics.PluginDividerDrawable:
    java.lang.String LOG_TAG -> LOG_TAG
    float mTextSize -> mTextSize
    int mStrokeWidth -> mStrokeWidth
    int mStrokeColor -> mStrokeColor
    int mFillColor -> mFillColor
    float mTextDivider -> mTextDivider
    android.graphics.Paint$FontMetrics mMetrics -> mMetrics
    java.lang.String mLabel -> mLabel
    android.graphics.Paint mTextPaint -> mTextPaint
    android.graphics.Paint mTextStrokePaint -> mTextStrokePaint
    android.graphics.Rect mBounds -> mBounds
    int mWidth -> mWidth
    int mHeight -> mHeight
    int mTextY -> mTextY
    int mMaxHeight -> mMaxHeight
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void clearColorFilter() -> clearColorFilter
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getMinimumHeight() -> getMinimumHeight
    int getMinimumWidth() -> getMinimumWidth
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void onTextBoundsChanged() -> onTextBoundsChanged
    void draw(android.graphics.Canvas) -> draw
com.aviary.android.feather.graphics.PreviewFillColorDrawable -> com.aviary.android.feather.graphics.PreviewFillColorDrawable:
    int mStrokeWidth -> mStrokeWidth
    int mStrokeColor -> mStrokeColor
    android.graphics.Paint mPaint -> mPaint
    float mRadius -> mRadius
    android.graphics.Rect mDstRect -> mDstRect
    android.graphics.Matrix mGradientMatrix -> mGradientMatrix
    boolean mRadiusFixed -> mRadiusFixed
    android.graphics.LinearGradient mGradient -> mGradient
    int mColor -> mColor
    int mLightenColor -> mLightenColor
    boolean mChecked -> mChecked
    boolean mPressed -> mPressed
    int getColor() -> getColor
    float getRadius() -> getRadius
    boolean isFixedRadius() -> isFixedRadius
    void setRadius(float) -> setRadius
    void setColor(int) -> setColor
    void setFixedRadius(float) -> setFixedRadius
    void draw(android.graphics.Canvas) -> draw
    boolean isStateful() -> isStateful
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    boolean onStateChange(int[]) -> onStateChange
com.aviary.android.feather.graphics.PreviewSpotDrawable -> com.aviary.android.feather.graphics.PreviewSpotDrawable:
    java.lang.String LOG_TAG -> LOG_TAG
    int mStrokeWidth -> mStrokeWidth
    int mStrokeWidthOuter -> mStrokeWidthOuter
    int mGlowColor -> mGlowColor
    int mStrokeColor -> mStrokeColor
    int mBackgroundColorUnselected -> mBackgroundColorUnselected
    int mBackgroundColorSelected -> mBackgroundColorSelected
    android.graphics.Paint mPaint -> mPaint
    float mRadius -> mRadius
    android.graphics.Rect mDstRect -> mDstRect
    android.graphics.LinearGradient mGradientShaderUnselected -> mGradientShaderUnselected
    android.graphics.LinearGradient mGradientShaderSelected -> mGradientShaderSelected
    android.graphics.BlurMaskFilter mGlowBlurMaskFilter -> mGlowBlurMaskFilter
    android.graphics.Matrix mGradientMatrix -> mGradientMatrix
    boolean mRadiusFixed -> mRadiusFixed
    android.graphics.LinearGradient mGradient -> mGradient
    boolean mChecked -> mChecked
    boolean mPressed -> mPressed
    android.graphics.Xfermode mPorterDuffSrcInMode -> mPorterDuffSrcInMode
    void setRadius(float) -> setRadius
    void setFixedRadius(float) -> setFixedRadius
    void draw(android.graphics.Canvas) -> draw
    boolean isStateful() -> isStateful
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    boolean onStateChange(int[]) -> onStateChange
com.aviary.android.feather.graphics.RepeatableHorizontalDrawable -> com.aviary.android.feather.graphics.RepeatableHorizontalDrawable:
    android.graphics.Paint mPaint -> mPaint
    android.graphics.Rect mRect -> mRect
    android.graphics.Matrix mMatrix -> mMatrix
    android.graphics.Bitmap mBitmap -> mBitmap
    android.graphics.Shader mShader -> mShader
    android.graphics.drawable.Drawable createFromView(android.view.View) -> createFromView
    void init(android.graphics.Bitmap) -> init
    void draw(android.graphics.Canvas) -> draw
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
com.aviary.android.feather.headless.AviaryEffect -> com.aviary.android.feather.headless.AviaryEffect:
    java.lang.String LOG_TAG -> LOG_TAG
    boolean LOG_ENABLED -> LOG_ENABLED
    int VERSION -> VERSION
    boolean s_hasHeadless -> s_hasHeadless
    void init(android.content.Context,java.lang.String) -> init
    void internalInit(android.content.Context,java.lang.String) -> internalInit
    java.lang.String[] getEffects() -> getEffects
    com.aviary.android.feather.headless.filters.impl.EffectFilter loadFilter() -> loadFilter
    android.graphics.Bitmap crop(android.graphics.Bitmap,android.graphics.Rect) -> crop
    boolean applyEffect(android.graphics.Bitmap,byte[]) -> applyEffect
    boolean applyEffect(android.graphics.Bitmap,java.io.File) -> applyEffect
    boolean applyEffect(android.graphics.Bitmap,java.io.File,java.lang.String) -> applyEffect
    boolean applyEffect(android.graphics.Bitmap,android.graphics.Bitmap,byte[]) -> applyEffect
    boolean applyEffect(android.graphics.Bitmap,android.graphics.Bitmap,java.io.File,java.lang.String) -> applyEffect
    boolean applyEffect(android.graphics.Bitmap,android.graphics.Bitmap,java.io.File) -> applyEffect
    boolean applyEffects(android.graphics.Bitmap,android.graphics.Bitmap,byte[][]) -> applyEffects
    boolean applyEffects(android.graphics.Bitmap,android.graphics.Bitmap,java.io.File[]) -> applyEffects
    boolean applyEffects(android.graphics.Bitmap,android.graphics.Bitmap,java.io.File,java.lang.String[]) -> applyEffects
    boolean applyEffects(android.graphics.Bitmap,byte[][]) -> applyEffects
    boolean applyEffects(android.graphics.Bitmap,java.io.File[]) -> applyEffects
    boolean applyGrid(android.graphics.Bitmap,android.graphics.Bitmap,int,int,byte[][]) -> applyGrid
    boolean applyGrid(android.graphics.Bitmap,android.graphics.Bitmap,int,int,java.io.File[]) -> applyGrid
    boolean applyGrid(android.graphics.Bitmap,android.graphics.Bitmap,int,int,java.io.File,java.lang.String[]) -> applyGrid
    com.aviary.android.feather.headless.AviaryEffect$AviaryEffectHD load(java.io.File,com.aviary.android.feather.headless.utils.MegaPixels) -> load
    com.aviary.android.feather.headless.AviaryEffect$AviaryEffectHD load(java.io.FileDescriptor,com.aviary.android.feather.headless.utils.MegaPixels) -> load
    com.aviary.android.feather.headless.AviaryEffect$AviaryEffectHD load(java.io.InputStream,com.aviary.android.feather.headless.utils.MegaPixels) -> load
    boolean executeMoaActions(com.aviary.android.feather.headless.moa.MoaHD,com.aviary.android.feather.headless.moa.MoaActionList) -> executeMoaActions
    boolean access$0(com.aviary.android.feather.headless.moa.MoaHD,com.aviary.android.feather.headless.moa.MoaActionList) -> access$0
    com.aviary.android.feather.headless.filters.impl.EffectFilter access$1() -> access$1
com.aviary.android.feather.headless.AviaryEffect$AviaryEffectHD -> com.aviary.android.feather.headless.AviaryEffect$AviaryEffectHD:
    com.aviary.android.feather.headless.moa.MoaHD moa -> moa
    void load(java.io.File) -> load
    void load(java.io.InputStream) -> load
    void load(java.io.FileDescriptor) -> load
    void load(int) -> load
    boolean executeActionList(com.aviary.android.feather.headless.moa.MoaActionList) -> executeActionList
    boolean crop(double,double,double,double) -> crop
    boolean execute(java.io.File[]) -> execute
    boolean execute(byte[][]) -> execute
    boolean execute(java.io.File,java.lang.String[]) -> execute
    void save(java.io.File) -> save
    void save(java.io.File,int,android.graphics.Bitmap$CompressFormat) -> save
    void unload() -> unload
    void dispose() -> dispose
    void finalize() -> finalize
com.aviary.android.feather.headless.AviaryExecutionException -> com.aviary.android.feather.headless.AviaryExecutionException:
    int NO_ERROR -> NO_ERROR
    int FILE_NOT_FOUND_ERROR -> FILE_NOT_FOUND_ERROR
    int FILE_EXCEED_MAX_SIZE_ERROR -> FILE_EXCEED_MAX_SIZE_ERROR
    int FILE_NOT_LOADED_ERROR -> FILE_NOT_LOADED_ERROR
    int INVALID_CONTEXT_ERROR -> INVALID_CONTEXT_ERROR
    int FILE_ALREADY_LOADED_ERROR -> FILE_ALREADY_LOADED_ERROR
    int DECODER_NOT_FOUND_ERROR -> DECODER_NOT_FOUND_ERROR
    int ENCODER_NOT_FOUND_ERROR -> ENCODER_NOT_FOUND_ERROR
    int DECODE_ERROR -> DECODE_ERROR
    int ENCODE_ERROR -> ENCODE_ERROR
    int INSTANCE_NULL_ERROR -> INSTANCE_NULL_ERROR
    int UNKNOWN_ERROR -> UNKNOWN_ERROR
    int code -> code
    int getCode() -> getCode
    com.aviary.android.feather.headless.AviaryExecutionException fromInt(int) -> fromInt
com.aviary.android.feather.headless.AviaryInitializationException -> com.aviary.android.feather.headless.AviaryInitializationException:
    int CODE_NO_ERROR -> CODE_NO_ERROR
    int CODE_INVALID_CONTEXT_ERROR -> CODE_INVALID_CONTEXT_ERROR
    int CODE_INVALID_API_KEY_ERROR -> CODE_INVALID_API_KEY_ERROR
    com.aviary.android.feather.headless.AviaryInitializationException fromInt(int) -> fromInt
com.aviary.android.feather.headless.AviaryInitializationException$AviaryInvalidApiKeyException -> com.aviary.android.feather.headless.AviaryInitializationException$AviaryInvalidApiKeyException:
com.aviary.android.feather.headless.AviaryInitializationException$AviaryInvalidContextException -> com.aviary.android.feather.headless.AviaryInitializationException$AviaryInvalidContextException:
com.aviary.android.feather.headless.filters.IFilter -> com.aviary.android.feather.headless.filters.IFilter:
com.aviary.android.feather.headless.filters.INativeFilter -> com.aviary.android.feather.headless.filters.INativeFilter:
    com.aviary.android.feather.headless.moa.MoaActionList getActions() -> getActions
    void executeInPlace(android.graphics.Bitmap) -> executeInPlace
    android.graphics.Bitmap execute(android.graphics.Bitmap,android.graphics.Bitmap,int,int) -> execute
    com.aviary.android.feather.headless.moa.MoaResult prepare(android.graphics.Bitmap,android.graphics.Bitmap,int,int) -> prepare
com.aviary.android.feather.headless.filters.INativeRangeFilter -> com.aviary.android.feather.headless.filters.INativeRangeFilter:
    void setValue(java.lang.Float) -> setValue
    com.aviary.android.feather.headless.moa.MoaFloatParameter getValue() -> getValue
com.aviary.android.feather.headless.filters.NativeFilter -> com.aviary.android.feather.headless.filters.NativeFilter:
    java.lang.String ORIGINAL -> ORIGINAL
    com.aviary.android.feather.headless.moa.MoaActionList mActions -> mActions
    com.aviary.android.feather.headless.moa.MoaResult mResult -> mResult
    com.aviary.android.feather.headless.moa.MoaActionList getActions() -> getActions
    void executeInPlace(android.graphics.Bitmap) -> executeInPlace
    android.graphics.Bitmap execute(android.graphics.Bitmap,android.graphics.Bitmap,int,int) -> execute
    com.aviary.android.feather.headless.moa.MoaResult prepare(android.graphics.Bitmap,android.graphics.Bitmap,int,int) -> prepare
    boolean stop() -> stop
    void setPreviewSize(int,int) -> setPreviewSize
com.aviary.android.feather.headless.filters.NativeFilterProxy -> com.aviary.android.feather.headless.filters.NativeFilterProxy:
    java.lang.String LOG_TAG -> LOG_TAG
    boolean mInitialized -> mInitialized
    void init(android.content.Context) -> init
    boolean initialized() -> initialized
    com.aviary.android.feather.headless.moa.MoaResult prepareActions(com.aviary.android.feather.headless.moa.MoaActionList,android.graphics.Bitmap) -> prepareActions
    com.aviary.android.feather.headless.moa.MoaResult prepareActions(com.aviary.android.feather.headless.moa.MoaActionList,android.graphics.Bitmap,android.graphics.Bitmap,int,int) -> prepareActions
    java.lang.String encodeActions(com.aviary.android.feather.headless.moa.MoaActionList) -> encodeActions
com.aviary.android.feather.headless.filters.NativeRangeFilter -> com.aviary.android.feather.headless.filters.NativeRangeFilter:
    java.lang.String mKey -> mKey
    com.aviary.android.feather.headless.moa.MoaFloatParameter defaultParam -> defaultParam
    void setValue(java.lang.Float) -> setValue
    com.aviary.android.feather.headless.moa.MoaFloatParameter getValue() -> getValue
com.aviary.android.feather.headless.filters.NativeToolFilter -> com.aviary.android.feather.headless.filters.NativeToolFilter:
    long n_ptr -> n_ptr
    android.graphics.Rect mBitmapRect -> mBitmapRect
    com.aviary.android.feather.headless.filters.NativeToolFilter$NativeToolType mType -> mType
    com.aviary.android.feather.headless.moa.MoaAction mFirstAction -> mFirstAction
    long nativeCtor(java.lang.String) -> nativeCtor
    int nativeSetTiltShiftMode(long,java.lang.String) -> nativeSetTiltShiftMode
    int nativeSetColorSplashMode(long,java.lang.String) -> nativeSetColorSplashMode
    int nativeInit(long,android.graphics.Bitmap,android.graphics.Bitmap) -> nativeInit
    int nativeDrawStart(long,float,float,float,float) -> nativeDrawStart
    int nativeColorSplash_Draw(long,float,float) -> nativeColorSplash_Draw
    int nativeTiltShift_Draw(long,float,float,float,float) -> nativeTiltShift_Draw
    int nativeRenderPreview(long,int,int,int,int) -> nativeRenderPreview
    void nativeDispose(long) -> nativeDispose
    boolean valid() -> valid
    int init(android.graphics.Bitmap,android.graphics.Bitmap) -> init
    boolean renderPreview(int,int,int,int) -> renderPreview
    boolean renderPreview() -> renderPreview
    boolean renderPreview(android.graphics.Rect) -> renderPreview
    boolean renderPreview(android.graphics.RectF) -> renderPreview
    boolean drawStart(float,float,float,float) -> drawStart
    boolean colorsplash_draw(float,float) -> colorsplash_draw
    boolean tiltshift_draw(float,float,float,float) -> tiltshift_draw
    boolean setTiltShiftMode(com.aviary.android.feather.headless.filters.NativeToolFilter$TiltShiftMode) -> setTiltShiftMode
    boolean setColorSplashMode(com.aviary.android.feather.headless.filters.NativeToolFilter$ColorSplashBrushMode) -> setColorSplashMode
    void dispose() -> dispose
    void finalize() -> finalize
    void draw(android.graphics.Bitmap) -> draw
com.aviary.android.feather.headless.filters.NativeToolFilter$ColorSplashBrushMode -> com.aviary.android.feather.headless.filters.NativeToolFilter$ColorSplashBrushMode:
    com.aviary.android.feather.headless.filters.NativeToolFilter$ColorSplashBrushMode None -> None
    com.aviary.android.feather.headless.filters.NativeToolFilter$ColorSplashBrushMode Smart -> Smart
    com.aviary.android.feather.headless.filters.NativeToolFilter$ColorSplashBrushMode Free -> Free
    com.aviary.android.feather.headless.filters.NativeToolFilter$ColorSplashBrushMode Erase -> Erase
    com.aviary.android.feather.headless.filters.NativeToolFilter$ColorSplashBrushMode[] ENUM$VALUES -> ENUM$VALUES
    com.aviary.android.feather.headless.filters.NativeToolFilter$ColorSplashBrushMode[] values() -> values
    com.aviary.android.feather.headless.filters.NativeToolFilter$ColorSplashBrushMode valueOf(java.lang.String) -> valueOf
com.aviary.android.feather.headless.filters.NativeToolFilter$NativeToolType -> com.aviary.android.feather.headless.filters.NativeToolFilter$NativeToolType:
    com.aviary.android.feather.headless.filters.NativeToolFilter$NativeToolType ColorSplash -> ColorSplash
    com.aviary.android.feather.headless.filters.NativeToolFilter$NativeToolType TiltShift -> TiltShift
    com.aviary.android.feather.headless.filters.NativeToolFilter$NativeToolType None -> None
    com.aviary.android.feather.headless.filters.NativeToolFilter$NativeToolType[] ENUM$VALUES -> ENUM$VALUES
    com.aviary.android.feather.headless.filters.NativeToolFilter$NativeToolType[] values() -> values
    com.aviary.android.feather.headless.filters.NativeToolFilter$NativeToolType valueOf(java.lang.String) -> valueOf
com.aviary.android.feather.headless.filters.NativeToolFilter$TiltShiftMode -> com.aviary.android.feather.headless.filters.NativeToolFilter$TiltShiftMode:
    com.aviary.android.feather.headless.filters.NativeToolFilter$TiltShiftMode Radial -> Radial
    com.aviary.android.feather.headless.filters.NativeToolFilter$TiltShiftMode Linear -> Linear
    com.aviary.android.feather.headless.filters.NativeToolFilter$TiltShiftMode None -> None
    com.aviary.android.feather.headless.filters.NativeToolFilter$TiltShiftMode[] ENUM$VALUES -> ENUM$VALUES
    com.aviary.android.feather.headless.filters.NativeToolFilter$TiltShiftMode[] values() -> values
    com.aviary.android.feather.headless.filters.NativeToolFilter$TiltShiftMode valueOf(java.lang.String) -> valueOf
com.aviary.android.feather.headless.filters.impl.CropFilter -> com.aviary.android.feather.headless.filters.impl.CropFilter:
    void setTopLeft(com.aviary.android.feather.headless.moa.MoaPointParameter) -> setTopLeft
    void setSize(com.aviary.android.feather.headless.moa.MoaPointParameter) -> setSize
    void setPreviewSize(com.aviary.android.feather.headless.moa.MoaPointParameter) -> setPreviewSize
com.aviary.android.feather.headless.filters.impl.EffectFilter -> com.aviary.android.feather.headless.filters.impl.EffectFilter:
    java.lang.String ORIGINAL -> ORIGINAL
    void setEffectName(java.lang.CharSequence) -> setEffectName
    void setMoaLiteEffect(java.lang.String,java.lang.String) -> setMoaLiteEffect
    void setMoaLiteEffect(java.lang.String) -> setMoaLiteEffect
    void setMoaLiteEffectContent(java.lang.String) -> setMoaLiteEffectContent
    void setMoaLiteEffectContent(byte[]) -> setMoaLiteEffectContent
    void setIntensity(double) -> setIntensity
    void setBorders(boolean) -> setBorders
com.aviary.android.feather.headless.gl.GLUtils -> com.aviary.android.feather.headless.gl.GLUtils:
    int mGlEsVersion -> mGlEsVersion
    int getGlEsVersion(android.content.Context) -> getGlEsVersion
    boolean getGlEsEnabled(android.content.Context) -> getGlEsEnabled
    boolean n_getOpenGLEnabled() -> n_getOpenGLEnabled
com.aviary.android.feather.headless.moa.JSONWriter -> com.aviary.android.feather.headless.moa.JSONWriter:
    java.lang.String encode(com.aviary.android.feather.headless.moa.MoaActionList,com.aviary.android.feather.headless.moa.MoaMetadata) -> encode
    void encodeCollection(org.json.JSONArray,java.util.Collection) -> encodeCollection
com.aviary.android.feather.headless.moa.JSONWriter$JSONEncode -> com.aviary.android.feather.headless.moa.JSONWriter$JSONEncode:
    org.json.JSONObject encode() -> encode
com.aviary.android.feather.headless.moa.Moa -> com.aviary.android.feather.headless.moa.Moa:
    java.lang.Object mLock -> mLock
    int n_init(android.content.Context,java.lang.String,int) -> n_init
    void n_setid(java.lang.String) -> n_setid
    void n_applyActions(com.aviary.android.feather.headless.moa.MoaResult) -> n_applyActions
    java.lang.String[] n_getActions() -> n_getActions
    java.lang.String[] n_getEffects() -> n_getEffects
    int n_getVersion() -> n_getVersion
    boolean n_cpuIsArmv7() -> n_cpuIsArmv7
    int n_getCpuFamily() -> n_getCpuFamily
    int n_getCpuBuild() -> n_getCpuBuild
    void n_notifyPixelsChanged(android.graphics.Bitmap) -> n_notifyPixelsChanged
    java.lang.String n_getProclistVersion() -> n_getProclistVersion
    boolean n_hasHeadless() -> n_hasHeadless
    void notifyPixelsChanged(android.graphics.Bitmap) -> notifyPixelsChanged
    void init(android.content.Context,java.lang.String,int) -> init
    void setId(java.lang.String) -> setId
    int getVersion() -> getVersion
    java.lang.String getProclistVersion() -> getProclistVersion
    boolean hasHeadless() -> hasHeadless
    void applyActions(com.aviary.android.feather.headless.moa.MoaResult) -> applyActions
    java.lang.String[] getActions() -> getActions
    java.lang.String[] getEffects() -> getEffects
    boolean cpuIsArmv7() -> cpuIsArmv7
    int getCpuFamily() -> getCpuFamily
    com.aviary.android.feather.headless.moa.Moa$CPUArchAbi getCpuBuild() -> getCpuBuild
com.aviary.android.feather.headless.moa.Moa$CPUArchAbi -> com.aviary.android.feather.headless.moa.Moa$CPUArchAbi:
    com.aviary.android.feather.headless.moa.Moa$CPUArchAbi CPU_TYPE_NONE -> CPU_TYPE_NONE
    com.aviary.android.feather.headless.moa.Moa$CPUArchAbi CPU_TYPE_X86 -> CPU_TYPE_X86
    com.aviary.android.feather.headless.moa.Moa$CPUArchAbi CPU_TYPE_ARM5 -> CPU_TYPE_ARM5
    com.aviary.android.feather.headless.moa.Moa$CPUArchAbi CPU_TYPE_ARM7 -> CPU_TYPE_ARM7
    com.aviary.android.feather.headless.moa.Moa$CPUArchAbi[] ENUM$VALUES -> ENUM$VALUES
    com.aviary.android.feather.headless.moa.Moa$CPUArchAbi parseInt(int) -> parseInt
    com.aviary.android.feather.headless.moa.Moa$CPUArchAbi[] values() -> values
    com.aviary.android.feather.headless.moa.Moa$CPUArchAbi valueOf(java.lang.String) -> valueOf
com.aviary.android.feather.headless.moa.MoaAction -> com.aviary.android.feather.headless.moa.MoaAction:
    long serialVersionUID -> serialVersionUID
    java.util.HashMap mOptions -> mOptions
    java.lang.String name -> name
    java.lang.String description -> description
    org.json.JSONArray jsonParameters -> jsonParameters
    java.lang.Object clone() -> clone
    java.lang.Object getValue(java.lang.String,java.lang.Object) -> getValue
    void addParam(java.lang.String,java.lang.Object) -> addParam
    void setValue(java.lang.String,com.aviary.android.feather.headless.moa.MoaParameter) -> setValue
    void setValue(java.lang.String,java.util.Collection) -> setValue
    void setValue(java.lang.String,java.lang.String) -> setValue
    void setValue(java.lang.String,java.lang.CharSequence) -> setValue
    void setValue(java.lang.String,int) -> setValue
    void setValue(java.lang.String,float) -> setValue
    void setValue(java.lang.String,double) -> setValue
    void setValue(java.lang.String,boolean) -> setValue
    java.util.Set keySet() -> keySet
    java.util.Set entrySet() -> entrySet
    java.lang.String getName() -> getName
    void decode() -> decode
    void decodeParameters(org.json.JSONArray) -> decodeParameters
com.aviary.android.feather.headless.moa.MoaActionFactory -> com.aviary.android.feather.headless.moa.MoaActionFactory:
    com.aviary.android.feather.headless.moa.MoaAction decodeAction(org.json.JSONObject) -> decodeAction
    java.util.List decodeActions(org.json.JSONArray) -> decodeActions
    com.aviary.android.feather.headless.moa.MoaParameter decodeParameter(org.json.JSONObject) -> decodeParameter
    com.aviary.android.feather.headless.moa.MoaActionList actionList() -> actionList
    com.aviary.android.feather.headless.moa.MoaActionList actionList(java.lang.String[]) -> actionList
    com.aviary.android.feather.headless.moa.MoaAction action(java.lang.String) -> action
    com.aviary.android.feather.headless.moa.MoaMetadata metadata() -> metadata
com.aviary.android.feather.headless.moa.MoaActionList -> com.aviary.android.feather.headless.moa.MoaActionList:
    long serialVersionUID -> serialVersionUID
    java.util.List actions -> actions
    java.lang.Object clone() -> clone
    com.aviary.android.feather.headless.moa.MoaAction[] getActions() -> getActions
    void clear() -> clear
    int indexOf(com.aviary.android.feather.headless.moa.MoaAction) -> indexOf
    int size() -> size
    boolean add(com.aviary.android.feather.headless.moa.MoaAction) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    void add(int,com.aviary.android.feather.headless.moa.MoaAction) -> add
    boolean addAll(int,java.util.Collection) -> addAll
    com.aviary.android.feather.headless.moa.MoaAction get(int) -> get
    com.aviary.android.feather.headless.moa.MoaAction get(java.lang.String) -> get
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.ListIterator listIterator() -> listIterator
    java.util.ListIterator listIterator(int) -> listIterator
    com.aviary.android.feather.headless.moa.MoaAction remove(int) -> remove
    com.aviary.android.feather.headless.moa.MoaAction set(int,com.aviary.android.feather.headless.moa.MoaAction) -> set
    java.util.List subList(int,int) -> subList
    java.lang.Object get(int) -> get
    void add(int,java.lang.Object) -> add
    boolean add(java.lang.Object) -> add
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object remove(int) -> remove
com.aviary.android.feather.headless.moa.MoaColorParameter -> com.aviary.android.feather.headless.moa.MoaColorParameter:
    long serialVersionUID -> serialVersionUID
    java.lang.Object encode() -> encode
    java.lang.Object clone() -> clone
    java.lang.Integer parseValue(org.json.JSONObject,java.lang.String) -> parseValue
    java.lang.Object parseValue(org.json.JSONObject,java.lang.String) -> parseValue
com.aviary.android.feather.headless.moa.MoaFloatParameter -> com.aviary.android.feather.headless.moa.MoaFloatParameter:
    long serialVersionUID -> serialVersionUID
    java.lang.Object encode() -> encode
    java.lang.Float parseValue(org.json.JSONObject,java.lang.String) -> parseValue
    java.lang.Object clone() -> clone
    java.lang.Object parseValue(org.json.JSONObject,java.lang.String) -> parseValue
com.aviary.android.feather.headless.moa.MoaGraphicsCommandListParameter -> com.aviary.android.feather.headless.moa.MoaGraphicsCommandListParameter:
    long serialVersionUID -> serialVersionUID
    java.lang.Object mLock -> mLock
    java.util.List mList -> mList
    void addCommand(com.aviary.android.feather.headless.moa.MoaGraphicsCommandParameter) -> addCommand
    java.lang.Object encode() -> encode
    java.lang.Object clone() -> clone
    com.aviary.android.feather.headless.moa.MoaGraphicsCommandParameter parseValue(org.json.JSONObject,java.lang.String) -> parseValue
    java.lang.Object parseValue(org.json.JSONObject,java.lang.String) -> parseValue
com.aviary.android.feather.headless.moa.MoaGraphicsCommandParameter -> com.aviary.android.feather.headless.moa.MoaGraphicsCommandParameter:
    int COMMAND_MOVETO -> COMMAND_MOVETO
    int COMMAND_LINETO -> COMMAND_LINETO
    int COMMAND_QUADTO -> COMMAND_QUADTO
    int COMMAND_CUBICTO -> COMMAND_CUBICTO
    long serialVersionUID -> serialVersionUID
    int commandType -> commandType
    java.text.DecimalFormatSymbols symbols -> symbols
    java.text.DecimalFormat formatter -> formatter
    void init(int) -> init
    void setPoint(float,float) -> setPoint
    void setPoint(float,float,float,float) -> setPoint
    void setPoint(float,float,float,float,float,float) -> setPoint
    java.lang.Object encode() -> encode
    java.lang.Object clone() -> clone
    float[] parseValue(org.json.JSONObject,java.lang.String) -> parseValue
    java.lang.Object parseValue(org.json.JSONObject,java.lang.String) -> parseValue
com.aviary.android.feather.headless.moa.MoaGraphicsOperationParameter -> com.aviary.android.feather.headless.moa.MoaGraphicsOperationParameter:
    long serialVersionUID -> serialVersionUID
    java.lang.Object mLock -> mLock
    int mBlurSize -> mBlurSize
    int mColor -> mColor
    int mErase -> mErase
    float mRadius -> mRadius
    java.util.List mCommands -> mCommands
    void addCommand(com.aviary.android.feather.headless.moa.MoaGraphicsCommandParameter) -> addCommand
    java.lang.Object encode() -> encode
    java.lang.Object clone() -> clone
    java.lang.Object parseValue(org.json.JSONObject,java.lang.String) -> parseValue
com.aviary.android.feather.headless.moa.MoaHD -> com.aviary.android.feather.headless.moa.MoaHD:
    long serialVersionUID -> serialVersionUID
    int KILOBYE -> KILOBYE
    int MEGABYTE -> MEGABYTE
    long m_ptr -> m_ptr
    boolean disposed -> disposed
    int[] $SWITCH_TABLE$android$graphics$Bitmap$CompressFormat -> $SWITCH_TABLE$android$graphics$Bitmap$CompressFormat
    int[] $SWITCH_TABLE$android$graphics$Bitmap$Config -> $SWITCH_TABLE$android$graphics$Bitmap$Config
    long getPtr() -> getPtr
    boolean isValid() -> isValid
    boolean isLoaded() -> isLoaded
    boolean isDisposed() -> isDisposed
    void load(java.lang.String) -> load
    void load(int) -> load
    void load(java.io.FileDescriptor) -> load
    void load(java.io.InputStream) -> load
    void unload() -> unload
    void applyActions(java.lang.String) -> applyActions
    void applyActions(com.aviary.android.feather.headless.moa.MoaActionList) -> applyActions
    void save(java.lang.String) -> save
    void save(java.lang.String,int,android.graphics.Bitmap$CompressFormat) -> save
    int nativeFormat(android.graphics.Bitmap$CompressFormat) -> nativeFormat
    int nativeConfig(android.graphics.Bitmap$Config) -> nativeConfig
    void dispose() -> dispose
    int width() -> width
    int height() -> height
    void setMaxMegaPixels(com.aviary.android.feather.headless.utils.MegaPixels) -> setMaxMegaPixels
    int m_width(long) -> m_width
    int m_height(long) -> m_height
    long m_nativeCtor() -> m_nativeCtor
    int m_nativeLoad(long,java.lang.String) -> m_nativeLoad
    int m_nativeLoad(long,int) -> m_nativeLoad
    int m_nativeLoad(long,java.io.FileDescriptor) -> m_nativeLoad
    int m_nativeLoad(long,java.io.InputStream,byte[]) -> m_nativeLoad
    boolean m_nativeIsValid(long) -> m_nativeIsValid
    boolean m_nativeIsLoaded(long) -> m_nativeIsLoaded
    int m_nativeUnload(long) -> m_nativeUnload
    void m_nativeDispose(long) -> m_nativeDispose
    void m_nativeApplyActions(long,java.lang.String) -> m_nativeApplyActions
    int m_nativeSave(long,java.lang.String) -> m_nativeSave
    int m_nativeSaveWithQualityAndConfig(long,java.lang.String,int,int) -> m_nativeSaveWithQualityAndConfig
    void m_setMaxMegaPixels(long,int) -> m_setMaxMegaPixels
    int[] $SWITCH_TABLE$android$graphics$Bitmap$CompressFormat() -> $SWITCH_TABLE$android$graphics$Bitmap$CompressFormat
    int[] $SWITCH_TABLE$android$graphics$Bitmap$Config() -> $SWITCH_TABLE$android$graphics$Bitmap$Config
com.aviary.android.feather.headless.moa.MoaMatrixParameter -> com.aviary.android.feather.headless.moa.MoaMatrixParameter:
    long serialVersionUID -> serialVersionUID
    android.graphics.Matrix matrix -> matrix
    java.lang.Object encode() -> encode
    android.graphics.Matrix parseValue(org.json.JSONObject,java.lang.String) -> parseValue
    java.lang.Object clone() -> clone
    java.lang.Object parseValue(org.json.JSONObject,java.lang.String) -> parseValue
com.aviary.android.feather.headless.moa.MoaMetadata -> com.aviary.android.feather.headless.moa.MoaMetadata:
    int[] imagesize -> imagesize
    int[] cellsize -> cellsize
    int[] grid -> grid
    int inplace -> inplace
    void setImageSize(int,int) -> setImageSize
    void setTransformInputBitmap(boolean) -> setTransformInputBitmap
    int imageWidth() -> imageWidth
    int imageHeight() -> imageHeight
    int cellWidth() -> cellWidth
    int cellHeight() -> cellHeight
    int cols() -> cols
    int rows() -> rows
    void setCellSize(int,int) -> setCellSize
    void setGridSize(int,int) -> setGridSize
    org.json.JSONObject encode() -> encode
com.aviary.android.feather.headless.moa.MoaParameter -> com.aviary.android.feather.headless.moa.MoaParameter:
    long serialVersionUID -> serialVersionUID
    java.lang.String TYPE_FLOAT -> TYPE_FLOAT
    java.lang.String TYPE_POINT -> TYPE_POINT
    java.lang.String TYPE_MATRIX -> TYPE_MATRIX
    java.lang.String uid -> uid
    java.lang.String name -> name
    java.lang.String type -> type
    java.lang.String description -> description
    boolean has_limits -> has_limits
    java.lang.Object minValue -> minValue
    java.lang.Object maxValue -> maxValue
    java.lang.Object defaultValue -> defaultValue
    java.lang.Object value -> value
    java.lang.Object encode() -> encode
    java.lang.Object clone() -> clone
    void decode(org.json.JSONObject) -> decode
    java.lang.Object parseValue(org.json.JSONObject,java.lang.String) -> parseValue
    java.lang.Object getValue() -> getValue
    boolean hasLimits() -> hasLimits
    void setValue(java.lang.Object) -> setValue
    java.lang.String getUID() -> getUID
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    java.lang.String getDescription() -> getDescription
com.aviary.android.feather.headless.moa.MoaPointParameter -> com.aviary.android.feather.headless.moa.MoaPointParameter:
    long serialVersionUID -> serialVersionUID
    void init() -> init
    void setValue(float,float) -> setValue
    void setValue(double,double) -> setValue
    java.lang.Object encode() -> encode
    double[] parseValue(org.json.JSONObject,java.lang.String) -> parseValue
    java.lang.Object clone() -> clone
    java.lang.Object parseValue(org.json.JSONObject,java.lang.String) -> parseValue
com.aviary.android.feather.headless.moa.MoaResult -> com.aviary.android.feather.headless.moa.MoaResult:
    java.lang.String inputString -> inputString
    android.graphics.Bitmap inputBitmap -> inputBitmap
    java.lang.String outputString -> outputString
    android.graphics.Bitmap outputBitmap -> outputBitmap
    int active -> active
    void execute() -> execute
    void cancel() -> cancel
com.aviary.android.feather.headless.moa.MoaStrokeParameter -> com.aviary.android.feather.headless.moa.MoaStrokeParameter:
    long serialVersionUID -> serialVersionUID
    java.lang.Object mLock -> mLock
    java.util.List mList -> mList
    double radius -> radius
    com.aviary.android.feather.headless.filters.NativeToolFilter$ColorSplashBrushMode brushmode -> brushmode
    void addPoint(com.aviary.android.feather.headless.moa.MoaPointParameter) -> addPoint
    void addPoint(double,double) -> addPoint
    void addPoint(float,float) -> addPoint
    void addPoint(double[]) -> addPoint
    void addPoint(float[]) -> addPoint
    java.lang.Object encode() -> encode
    java.lang.Object clone() -> clone
    com.aviary.android.feather.headless.moa.MoaPointParameter parseValue(org.json.JSONObject,java.lang.String) -> parseValue
    java.lang.Object parseValue(org.json.JSONObject,java.lang.String) -> parseValue
com.aviary.android.feather.headless.moa.moalite.MoaLitePack -> com.aviary.android.feather.headless.moa.moalite.MoaLitePack:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String TYPE_EFFECT -> TYPE_EFFECT
    java.lang.String INDEX_FILENAME -> INDEX_FILENAME
    java.lang.String fileName -> fileName
    int packVersionCode -> packVersionCode
    java.lang.String packType -> packType
    java.lang.String identifier -> identifier
    java.lang.String codename -> codename
    java.lang.String displayName -> displayName
    java.lang.String minVersion -> minVersion
    java.util.List items -> items
    boolean valid() -> valid
    boolean containsIdentifier(java.lang.String) -> containsIdentifier
    void addItem(com.aviary.android.feather.headless.moa.moalite.MoaLitePack$MoaLiteItem) -> addItem
    void setFileName(java.lang.String) -> setFileName
    java.lang.String getFileName() -> getFileName
    void setIdentifier(java.lang.String) -> setIdentifier
    void setCodename(java.lang.String) -> setCodename
    void setDisplayName(java.lang.String) -> setDisplayName
    void setMinVersion(java.lang.String) -> setMinVersion
    void setPackType(java.lang.String) -> setPackType
    void setPackVersionCode(int) -> setPackVersionCode
    int getCount() -> getCount
    com.aviary.android.feather.headless.moa.moalite.MoaLitePack$MoaLiteItem getItemAt(int) -> getItemAt
    int getPackVersionCode() -> getPackVersionCode
    java.lang.String getPackType() -> getPackType
    int getPackTypeInt() -> getPackTypeInt
    java.lang.String getIdentifier() -> getIdentifier
    java.lang.String getCodename() -> getCodename
    java.lang.String getDisplayName() -> getDisplayName
    java.lang.String getMinVersion() -> getMinVersion
    com.aviary.android.feather.headless.moa.moalite.MoaLiteProclistVersion getProclistVersion() -> getProclistVersion
    java.lang.String toString() -> toString
com.aviary.android.feather.headless.moa.moalite.MoaLitePack$MoaLiteItem -> com.aviary.android.feather.headless.moa.moalite.MoaLitePack$MoaLiteItem:
    java.lang.String displayName -> displayName
    java.lang.String ref -> ref
    java.lang.String getDisplayName() -> getDisplayName
    java.lang.String getRef() -> getRef
    void setDisplayName(java.lang.String) -> setDisplayName
    void setRef(java.lang.String) -> setRef
    boolean loadContentFromZip(java.io.InputStream,java.io.OutputStream) -> loadContentFromZip
    boolean loadContentFromZip(java.io.InputStream,java.nio.ByteBuffer) -> loadContentFromZip
    boolean loadContentFromZip(java.io.File,java.io.OutputStream) -> loadContentFromZip
    byte[] loadContentFromZip(java.io.InputStream) -> loadContentFromZip
    byte[] loadContentFromZip(java.io.File) -> loadContentFromZip
    boolean loadContent(java.io.File,java.io.OutputStream) -> loadContent
    byte[] loadContent(java.io.File) -> loadContent
    boolean loadContent(java.io.InputStream,java.io.OutputStream) -> loadContent
    byte[] loadContent(java.io.InputStream) -> loadContent
com.aviary.android.feather.headless.moa.moalite.MoaLiteParserDefault -> com.aviary.android.feather.headless.moa.moalite.MoaLiteParserDefault:
    com.aviary.android.feather.headless.moa.moalite.MoaLitePack parseStream(java.io.InputStream) -> parseStream
com.aviary.android.feather.headless.moa.moalite.MoaLiteParserFactory -> com.aviary.android.feather.headless.moa.moalite.MoaLiteParserFactory:
    com.aviary.android.feather.headless.moa.moalite.MoaLiteParserFactory$MoaLiteParser create() -> create
com.aviary.android.feather.headless.moa.moalite.MoaLiteParserFactory$MoaLiteParser -> com.aviary.android.feather.headless.moa.moalite.MoaLiteParserFactory$MoaLiteParser:
    com.aviary.android.feather.headless.moa.moalite.MoaLitePack parseStream(java.io.InputStream) -> parseStream
    com.aviary.android.feather.headless.moa.moalite.MoaLitePack parseZip(java.io.InputStream) -> parseZip
    com.aviary.android.feather.headless.moa.moalite.MoaLitePack parseZip(java.util.zip.ZipInputStream) -> parseZip
com.aviary.android.feather.headless.moa.moalite.MoaLiteParserNew -> com.aviary.android.feather.headless.moa.moalite.MoaLiteParserNew:
    com.aviary.android.feather.headless.moa.moalite.MoaLitePack parseStream(java.io.InputStream) -> parseStream
com.aviary.android.feather.headless.moa.moalite.MoaLiteProclistVersion -> com.aviary.android.feather.headless.moa.moalite.MoaLiteProclistVersion:
    java.util.regex.Pattern pattern -> pattern
    int major -> major
    int minor -> minor
    int patch -> patch
    java.lang.String toString() -> toString
    boolean supports(com.aviary.android.feather.headless.moa.moalite.MoaLiteProclistVersion) -> supports
    com.aviary.android.feather.headless.moa.moalite.MoaLiteProclistVersion fromString(java.lang.String) -> fromString
com.aviary.android.feather.headless.utils.CameraUtils -> com.aviary.android.feather.headless.utils.CameraUtils:
    java.lang.String getMegaPixels(int,int) -> getMegaPixels
    com.aviary.android.feather.headless.utils.MegaPixels fromInt(int) -> fromInt
    int[] computePixels(com.aviary.android.feather.headless.utils.MegaPixels,int,int) -> computePixels
    com.aviary.android.feather.headless.utils.MegaPixels getMaximumMegaPixels() -> getMaximumMegaPixels
    com.aviary.android.feather.headless.utils.MegaPixels getOriginalMegaPixels() -> getOriginalMegaPixels
    com.aviary.android.feather.headless.utils.MegaPixels getLargeMegaPixels() -> getLargeMegaPixels
    com.aviary.android.feather.headless.utils.MegaPixels getNormalMegaPixels() -> getNormalMegaPixels
    int n_getMaximumMp() -> n_getMaximumMp
    int n_getSmallMp() -> n_getSmallMp
    int n_getLargeMp() -> n_getLargeMp
    int n_getMediumMp() -> n_getMediumMp
com.aviary.android.feather.headless.utils.MegaPixels -> com.aviary.android.feather.headless.utils.MegaPixels:
    com.aviary.android.feather.headless.utils.MegaPixels Mp0 -> Mp0
    com.aviary.android.feather.headless.utils.MegaPixels Mp1 -> Mp1
    com.aviary.android.feather.headless.utils.MegaPixels Mp2 -> Mp2
    com.aviary.android.feather.headless.utils.MegaPixels Mp3 -> Mp3
    com.aviary.android.feather.headless.utils.MegaPixels Mp4 -> Mp4
    com.aviary.android.feather.headless.utils.MegaPixels Mp5 -> Mp5
    com.aviary.android.feather.headless.utils.MegaPixels Mp6 -> Mp6
    com.aviary.android.feather.headless.utils.MegaPixels Mp7 -> Mp7
    com.aviary.android.feather.headless.utils.MegaPixels Mp8 -> Mp8
    com.aviary.android.feather.headless.utils.MegaPixels Mp9 -> Mp9
    com.aviary.android.feather.headless.utils.MegaPixels Mp10 -> Mp10
    com.aviary.android.feather.headless.utils.MegaPixels Mp11 -> Mp11
    com.aviary.android.feather.headless.utils.MegaPixels Mp12 -> Mp12
    com.aviary.android.feather.headless.utils.MegaPixels Mp13 -> Mp13
    com.aviary.android.feather.headless.utils.MegaPixels Mp14 -> Mp14
    com.aviary.android.feather.headless.utils.MegaPixels Mp15 -> Mp15
    com.aviary.android.feather.headless.utils.MegaPixels Mp16 -> Mp16
    com.aviary.android.feather.headless.utils.MegaPixels Mp17 -> Mp17
    com.aviary.android.feather.headless.utils.MegaPixels Mp18 -> Mp18
    com.aviary.android.feather.headless.utils.MegaPixels Mp19 -> Mp19
    com.aviary.android.feather.headless.utils.MegaPixels Mp20 -> Mp20
    com.aviary.android.feather.headless.utils.MegaPixels Mp21 -> Mp21
    com.aviary.android.feather.headless.utils.MegaPixels Mp22 -> Mp22
    com.aviary.android.feather.headless.utils.MegaPixels Mp23 -> Mp23
    com.aviary.android.feather.headless.utils.MegaPixels Mp24 -> Mp24
    com.aviary.android.feather.headless.utils.MegaPixels Mp25 -> Mp25
    com.aviary.android.feather.headless.utils.MegaPixels Mp26 -> Mp26
    com.aviary.android.feather.headless.utils.MegaPixels Mp27 -> Mp27
    com.aviary.android.feather.headless.utils.MegaPixels Mp28 -> Mp28
    com.aviary.android.feather.headless.utils.MegaPixels Mp29 -> Mp29
    com.aviary.android.feather.headless.utils.MegaPixels Mp30 -> Mp30
    com.aviary.android.feather.headless.utils.MegaPixels[] ENUM$VALUES -> ENUM$VALUES
    com.aviary.android.feather.headless.utils.MegaPixels[] values() -> values
    com.aviary.android.feather.headless.utils.MegaPixels valueOf(java.lang.String) -> valueOf
com.aviary.android.feather.library.Constants -> com.aviary.android.feather.library.Constants:
    int BOGO_CPU_FAST -> BOGO_CPU_FAST
    int BOGO_CPU_MEDIUM -> BOGO_CPU_MEDIUM
    int MHZ_CPU_FAST -> MHZ_CPU_FAST
    int APP_MEMORY_LARGE -> APP_MEMORY_LARGE
    int APP_MEMORY_MEDIUM -> APP_MEMORY_MEDIUM
    int APP_MEMORY_SMALL -> APP_MEMORY_SMALL
    int ANDROID_SDK -> ANDROID_SDK
    java.lang.String EXTRA_RETURN_DATA -> EXTRA_RETURN_DATA
    java.lang.String EXTRA_OUTPUT -> EXTRA_OUTPUT
    java.lang.String EXTRA_OUTPUT_FORMAT -> EXTRA_OUTPUT_FORMAT
    java.lang.String EXTRA_OUTPUT_QUALITY -> EXTRA_OUTPUT_QUALITY
    java.lang.String EXTRA_TOOLS_LIST -> EXTRA_TOOLS_LIST
    java.lang.String EXTRA_HIDE_EXIT_UNSAVE_CONFIRMATION -> EXTRA_HIDE_EXIT_UNSAVE_CONFIRMATION
    java.lang.String EXTRA_EFFECTS_ENABLE_FAST_PREVIEW -> EXTRA_EFFECTS_ENABLE_FAST_PREVIEW
    java.lang.String EXTRA_MAX_IMAGE_SIZE -> EXTRA_MAX_IMAGE_SIZE
    java.lang.String EXTRA_OUTPUT_HIRES_SESSION_ID -> EXTRA_OUTPUT_HIRES_SESSION_ID
    java.lang.String EXTRA_APP_ID -> EXTRA_APP_ID
    java.lang.String EXTRA_TOOLS_DISABLE_VIBRATION -> EXTRA_TOOLS_DISABLE_VIBRATION
    java.lang.String EXTRA_WHITELABEL -> EXTRA_WHITELABEL
    java.lang.String EXTRA_OUT_BITMAP_CHANGED -> EXTRA_OUT_BITMAP_CHANGED
    java.lang.String EXTRA_IN_SAVE_ON_NO_CHANGES -> EXTRA_IN_SAVE_ON_NO_CHANGES
    java.lang.String EXTRA_IN_SOURCE_TYPE -> EXTRA_IN_SOURCE_TYPE
    java.lang.String EXTRA_IN_API_KEY_SECRET -> EXTRA_IN_API_KEY_SECRET
    java.lang.String EXTRA_IN_BILLING_PUBLIC_KEY -> EXTRA_IN_BILLING_PUBLIC_KEY
com.aviary.android.feather.library.MonitoredActivity -> com.aviary.android.feather.library.MonitoredActivity:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String ACTION_KILL -> ACTION_KILL
    java.util.ArrayList mListeners -> mListeners
    android.content.BroadcastReceiver mBroadcastKillReceiver -> mBroadcastKillReceiver
    void addLifeCycleListener(com.aviary.android.feather.library.MonitoredActivity$LifeCycleListener) -> addLifeCycleListener
    void removeLifeCycleListener(com.aviary.android.feather.library.MonitoredActivity$LifeCycleListener) -> removeLifeCycleListener
    void onCreate(android.os.Bundle) -> onCreate
    void lazyInitialize() -> lazyInitialize
    void onKill() -> onKill
    void initializeBroadcastReceivers() -> initializeBroadcastReceivers
    void initializeCDS() -> initializeCDS
    void onDestroy() -> onDestroy
    void onStart() -> onStart
    void onStop() -> onStop
    void onPause() -> onPause
    void onResume() -> onResume
    void access$0(com.aviary.android.feather.library.MonitoredActivity) -> access$0
    void access$1(com.aviary.android.feather.library.MonitoredActivity) -> access$1
    void access$2(com.aviary.android.feather.library.MonitoredActivity) -> access$2
com.aviary.android.feather.library.MonitoredActivity$1 -> com.aviary.android.feather.library.MonitoredActivity$1:
    com.aviary.android.feather.library.MonitoredActivity this$0 -> this$0
    void run() -> run
com.aviary.android.feather.library.MonitoredActivity$2 -> com.aviary.android.feather.library.MonitoredActivity$2:
    com.aviary.android.feather.library.MonitoredActivity this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.aviary.android.feather.library.MonitoredActivity$LifeCycleAdapter -> com.aviary.android.feather.library.MonitoredActivity$LifeCycleAdapter:
    void onActivityCreated(com.aviary.android.feather.library.MonitoredActivity) -> onActivityCreated
    void onActivityDestroyed(com.aviary.android.feather.library.MonitoredActivity) -> onActivityDestroyed
    void onActivityPaused(com.aviary.android.feather.library.MonitoredActivity) -> onActivityPaused
    void onActivityResumed(com.aviary.android.feather.library.MonitoredActivity) -> onActivityResumed
    void onActivityStarted(com.aviary.android.feather.library.MonitoredActivity) -> onActivityStarted
    void onActivityStopped(com.aviary.android.feather.library.MonitoredActivity) -> onActivityStopped
com.aviary.android.feather.library.MonitoredActivity$LifeCycleListener -> com.aviary.android.feather.library.MonitoredActivity$LifeCycleListener:
    void onActivityCreated(com.aviary.android.feather.library.MonitoredActivity) -> onActivityCreated
    void onActivityDestroyed(com.aviary.android.feather.library.MonitoredActivity) -> onActivityDestroyed
    void onActivityPaused(com.aviary.android.feather.library.MonitoredActivity) -> onActivityPaused
    void onActivityResumed(com.aviary.android.feather.library.MonitoredActivity) -> onActivityResumed
    void onActivityStarted(com.aviary.android.feather.library.MonitoredActivity) -> onActivityStarted
    void onActivityStopped(com.aviary.android.feather.library.MonitoredActivity) -> onActivityStopped
com.aviary.android.feather.library.content.FeatherIntent -> com.aviary.android.feather.library.content.FeatherIntent:
    java.lang.String ACTION -> ACTION
com.aviary.android.feather.library.content.FeatherIntent$PluginType -> com.aviary.android.feather.library.content.FeatherIntent$PluginType:
    int TYPE_FILTER -> TYPE_FILTER
    int TYPE_STICKER -> TYPE_STICKER
    int TYPE_BORDER -> TYPE_BORDER
    int TYPE_ALL -> TYPE_ALL
    boolean typeof(int,int) -> typeof
    boolean isSticker(int) -> isSticker
    boolean isFilter(int) -> isFilter
    boolean isBorder(int) -> isBorder
    boolean isTypeOf(int,int) -> isTypeOf
    java.lang.String getName(int) -> getName
com.aviary.android.feather.library.content.ToolEntry -> com.aviary.android.feather.library.content.ToolEntry:
    int labelResourceId -> labelResourceId
    int iconResourceId -> iconResourceId
    com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters name -> name
    java.lang.String toString() -> toString
com.aviary.android.feather.library.content.cache.DownloadCachedManager -> com.aviary.android.feather.library.content.cache.DownloadCachedManager:
    com.aviary.android.feather.library.content.cache.FileSQLManager sqlManager -> sqlManager
    com.aviary.android.feather.library.content.cache.FileCacheManager fileManager -> fileManager
    void dispose() -> dispose
    void clear(long) -> clear
    java.io.InputStream loadStream(java.lang.String,long) -> loadStream
    java.io.File loadFile(java.lang.String,long) -> loadFile
    com.aviary.android.feather.library.content.cache.FileSQLManager$FileSQL internalLoadFile(java.lang.String,long) -> internalLoadFile
    void download(java.lang.String,int,com.aviary.android.feather.library.content.cache.DownloadManager$OnDownloadListener,com.aviary.android.feather.library.content.cache.DownloadManager$OnDownloadProgressListener) -> download
    com.aviary.android.feather.library.content.cache.DownloadManager$DownloadJob createDownloadJob(int,com.aviary.android.feather.library.content.cache.DownloadManager$OnDownloadListener,com.aviary.android.feather.library.content.cache.DownloadManager$OnDownloadProgressListener,long[]) -> createDownloadJob
com.aviary.android.feather.library.content.cache.DownloadCachedManager$DownloadCachedJob -> com.aviary.android.feather.library.content.cache.DownloadCachedManager$DownloadCachedJob:
    long max_age -> max_age
    com.aviary.android.feather.library.content.cache.DownloadCachedManager this$0 -> this$0
    java.io.InputStream run(com.aviary.android.feather.common.threading.ThreadPool$Worker,java.lang.String[]) -> run
    java.io.InputStream handleStream(java.lang.String,java.io.InputStream,int,com.aviary.android.feather.library.content.cache.DownloadManager$OnDownloadProgressListener,int) -> handleStream
com.aviary.android.feather.library.content.cache.DownloadManager -> com.aviary.android.feather.library.content.cache.DownloadManager:
    java.lang.String LOG_TAG -> LOG_TAG
    android.os.Handler handler -> handler
    boolean disposed -> disposed
    android.content.Context context -> context
    com.aviary.android.feather.common.threading.ThreadPool threadPool -> threadPool
    void dispose() -> dispose
    void download(java.lang.String,int,com.aviary.android.feather.library.content.cache.DownloadManager$OnDownloadListener,com.aviary.android.feather.library.content.cache.DownloadManager$OnDownloadProgressListener,long[]) -> download
    void handleResult(com.aviary.android.feather.common.threading.Future,java.lang.String,com.aviary.android.feather.library.content.cache.DownloadManager$OnDownloadListener,int) -> handleResult
    com.aviary.android.feather.library.content.cache.DownloadManager$DownloadJob createDownloadJob(int,com.aviary.android.feather.library.content.cache.DownloadManager$OnDownloadListener,com.aviary.android.feather.library.content.cache.DownloadManager$OnDownloadProgressListener,long[]) -> createDownloadJob
    void fireOnDownloadCompleted(java.lang.String,java.io.InputStream,com.aviary.android.feather.library.content.cache.DownloadManager$OnDownloadListener,int) -> fireOnDownloadCompleted
    void fireOnDownloadProgress(java.lang.String,int,int,com.aviary.android.feather.library.content.cache.DownloadManager$OnDownloadProgressListener,int) -> fireOnDownloadProgress
    void fireOnDownloadError(java.lang.String,java.lang.Throwable,com.aviary.android.feather.library.content.cache.DownloadManager$OnDownloadListener,int) -> fireOnDownloadError
    void fireOnDownloadStarted(java.lang.String,com.aviary.android.feather.library.content.cache.DownloadManager$OnDownloadListener,int) -> fireOnDownloadStarted
    java.io.InputStream download(java.lang.String,java.util.List) -> download
com.aviary.android.feather.library.content.cache.DownloadManager$1 -> com.aviary.android.feather.library.content.cache.DownloadManager$1:
    com.aviary.android.feather.library.content.cache.DownloadManager this$0 -> this$0
    java.lang.String val$file -> val$file
    com.aviary.android.feather.library.content.cache.DownloadManager$OnDownloadListener val$downloadCallback -> val$downloadCallback
    int val$id -> val$id
    void onFutureDone(com.aviary.android.feather.common.threading.Future) -> onFutureDone
com.aviary.android.feather.library.content.cache.DownloadManager$DownloadJob -> com.aviary.android.feather.library.content.cache.DownloadManager$DownloadJob:
    java.lang.ref.WeakReference mDownloadCallbackRef -> mDownloadCallbackRef
    java.lang.ref.WeakReference mProgressCallbackRef -> mProgressCallbackRef
    int mId -> mId
    com.aviary.android.feather.library.content.cache.DownloadManager this$0 -> this$0
    java.net.HttpURLConnection openConnection(java.net.URL) -> openConnection
    void copyFile(java.io.InputStream,java.io.OutputStream,java.lang.String,int,com.aviary.android.feather.library.content.cache.DownloadManager$OnDownloadProgressListener,int) -> copyFile
    java.io.InputStream handleStream(java.lang.String,java.io.InputStream,int,com.aviary.android.feather.library.content.cache.DownloadManager$OnDownloadProgressListener,int) -> handleStream
    java.io.InputStream run(com.aviary.android.feather.common.threading.ThreadPool$Worker,java.lang.String[]) -> run
    java.lang.Object run(com.aviary.android.feather.common.threading.ThreadPool$Worker,java.lang.Object[]) -> run
com.aviary.android.feather.library.content.cache.DownloadManager$OnDownloadListener -> com.aviary.android.feather.library.content.cache.DownloadManager$OnDownloadListener:
    void onDownloadStarted(java.lang.String,int) -> onDownloadStarted
    void onDownloadComplete(java.lang.String,int,java.io.InputStream) -> onDownloadComplete
    void onDownloadError(java.lang.String,int,java.lang.Throwable) -> onDownloadError
com.aviary.android.feather.library.content.cache.DownloadManager$OnDownloadProgressListener -> com.aviary.android.feather.library.content.cache.DownloadManager$OnDownloadProgressListener:
    void onDownloadProgress(java.lang.String,int,int,int) -> onDownloadProgress
com.aviary.android.feather.library.content.cache.FileCacheManager -> com.aviary.android.feather.library.content.cache.FileCacheManager:
    java.lang.String LOG_TAG -> LOG_TAG
    int MAX_DEPTH -> MAX_DEPTH
    int MAX_DIR_SIZE -> MAX_DIR_SIZE
    java.io.File cacheRoot -> cacheRoot
    java.io.File root -> root
    java.io.File curDir -> curDir
    boolean enabled -> enabled
    int depth -> depth
    java.io.File getCacheDir(android.content.Context) -> getCacheDir
    boolean isEnabled() -> isEnabled
    java.io.File newFile(java.lang.String) -> newFile
    java.io.File createTempFile(java.lang.String) -> createTempFile
    java.io.File updateDir(java.lang.String,boolean) -> updateDir
    java.io.File initializeCache(java.lang.String,int) -> initializeCache
com.aviary.android.feather.library.content.cache.FileSQLManager -> com.aviary.android.feather.library.content.cache.FileSQLManager:
    java.lang.String LOG_TAG -> LOG_TAG
    boolean LOG_ENABLED -> LOG_ENABLED
    java.lang.String DATABASE_NAME -> DATABASE_NAME
    int DATABASE_VERSION -> DATABASE_VERSION
    java.lang.String[] PROJECTION_PATH_ONLY -> PROJECTION_PATH_ONLY
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void close() -> close
    int deleteFiles(long) -> deleteFiles
    void printDatabase(android.database.sqlite.SQLiteDatabase) -> printDatabase
    com.aviary.android.feather.library.content.cache.FileSQLManager$FileSQL getFile(java.lang.String) -> getFile
    java.lang.String getFilePath(java.lang.String) -> getFilePath
    long putFile(java.lang.String,java.lang.String) -> putFile
    int deleteFile(java.lang.String) -> deleteFile
com.aviary.android.feather.library.content.cache.FileSQLManager$FileColumn -> com.aviary.android.feather.library.content.cache.FileSQLManager$FileColumn:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String NAME -> NAME
    java.lang.String CREATED -> CREATED
    java.lang.String PATH -> PATH
    int ID_INDEX -> ID_INDEX
    int NAME_INDEX -> NAME_INDEX
    int CREATED_INDEX -> CREATED_INDEX
    int PATH_INDEX -> PATH_INDEX
com.aviary.android.feather.library.content.cache.FileSQLManager$FileSQL -> com.aviary.android.feather.library.content.cache.FileSQLManager$FileSQL:
    long id -> id
    java.lang.String name -> name
    java.lang.String path -> path
    long created -> created
    long getId() -> getId
    java.lang.String getName() -> getName
    long getCreated() -> getCreated
    java.lang.String getPath() -> getPath
    java.lang.String toString() -> toString
    com.aviary.android.feather.library.content.cache.FileSQLManager$FileSQL fromCursor(android.database.Cursor) -> fromCursor
com.aviary.android.feather.library.external.tracking.Constants -> com.aviary.android.feather.library.external.tracking.Constants:
    java.lang.String EXTRAS_APP_NAME -> EXTRAS_APP_NAME
    java.lang.String EXTRAS_API_KEY -> EXTRAS_API_KEY
    java.lang.String EXTRAS_SDK_VERSION -> EXTRAS_SDK_VERSION
    java.lang.String LOCALYTICS_CLIENT_LIBRARY_VERSION -> LOCALYTICS_CLIENT_LIBRARY_VERSION
    java.lang.String LOCALYTICS_PACKAGE_NAME -> LOCALYTICS_PACKAGE_NAME
    java.lang.String LOCALYTICS_METADATA_APP_KEY -> LOCALYTICS_METADATA_APP_KEY
    int MAX_NUM_SESSIONS -> MAX_NUM_SESSIONS
    int MAX_NUM_ATTRIBUTES -> MAX_NUM_ATTRIBUTES
    int MAX_CUSTOM_DIMENSIONS -> MAX_CUSTOM_DIMENSIONS
    int MAX_NAME_LENGTH -> MAX_NAME_LENGTH
    long SESSION_EXPIRATION -> SESSION_EXPIRATION
    java.lang.String LOG_TAG -> LOG_TAG
    boolean IS_LOGGABLE -> IS_LOGGABLE
    boolean IS_PARAMETER_CHECKING_ENABLED -> IS_PARAMETER_CHECKING_ENABLED
    boolean IS_EXCEPTION_SUPPRESSION_ENABLED -> IS_EXCEPTION_SUPPRESSION_ENABLED
    boolean IS_DEVICE_IDENTIFIER_UPLOADED -> IS_DEVICE_IDENTIFIER_UPLOADED
    int CURRENT_API_LEVEL -> CURRENT_API_LEVEL
com.aviary.android.feather.library.external.tracking.DatapointHelper -> com.aviary.android.feather.library.external.tracking.DatapointHelper:
    java.lang.String INVALID_ANDROID_ID -> INVALID_ANDROID_ID
    java.lang.String LEGACY_DEVICE_ID_FILE -> LEGACY_DEVICE_ID_FILE
    java.lang.Class[] STRING_CLASS_ARRAY -> STRING_CLASS_ARRAY
    java.lang.Object[] HARDWARE_WIFI -> HARDWARE_WIFI
    java.lang.Object[] HARDWARE_TELEPHONY -> HARDWARE_TELEPHONY
    int getApiLevel() -> getApiLevel
    java.lang.String getAndroidIdHashOrNull(android.content.Context) -> getAndroidIdHashOrNull
    java.lang.String getSerialNumberHashOrNull() -> getSerialNumberHashOrNull
    java.lang.String getTelephonyDeviceIdOrNull(android.content.Context) -> getTelephonyDeviceIdOrNull
    java.lang.String getTelephonyDeviceIdHashOrNull(android.content.Context) -> getTelephonyDeviceIdHashOrNull
    java.lang.String getWifiMacHashOrNull(android.content.Context) -> getWifiMacHashOrNull
    java.lang.String getNetworkType(android.content.Context,android.telephony.TelephonyManager) -> getNetworkType
    java.lang.String getManufacturer() -> getManufacturer
    java.lang.String getFBAttribution(android.content.Context) -> getFBAttribution
    java.lang.String getAppVersion(android.content.Context) -> getAppVersion
    java.lang.String getLocalyticsAppKeyOrNull(android.content.Context) -> getLocalyticsAppKeyOrNull
    java.lang.String getSha256_buggy(java.lang.String) -> getSha256_buggy
com.aviary.android.feather.library.external.tracking.JsonObjects -> com.aviary.android.feather.library.external.tracking.JsonObjects:
com.aviary.android.feather.library.external.tracking.JsonObjects$BlobHeader -> com.aviary.android.feather.library.external.tracking.JsonObjects$BlobHeader:
    java.lang.String KEY_DATA_TYPE -> KEY_DATA_TYPE
    java.lang.String VALUE_DATA_TYPE -> VALUE_DATA_TYPE
    java.lang.String KEY_PERSISTENT_STORAGE_CREATION_TIME_SECONDS -> KEY_PERSISTENT_STORAGE_CREATION_TIME_SECONDS
    java.lang.String KEY_SEQUENCE_NUMBER -> KEY_SEQUENCE_NUMBER
    java.lang.String KEY_UNIQUE_ID -> KEY_UNIQUE_ID
    java.lang.String KEY_ATTRIBUTES -> KEY_ATTRIBUTES
    java.lang.String KEY_IDENTIFIERS -> KEY_IDENTIFIERS
com.aviary.android.feather.library.external.tracking.JsonObjects$BlobHeader$Attributes -> com.aviary.android.feather.library.external.tracking.JsonObjects$BlobHeader$Attributes:
    java.lang.String KEY_DATA_CONNECTION -> KEY_DATA_CONNECTION
    java.lang.String KEY_CLIENT_APP_VERSION -> KEY_CLIENT_APP_VERSION
    java.lang.String KEY_DEVICE_ANDROID_ID_HASH -> KEY_DEVICE_ANDROID_ID_HASH
    java.lang.String KEY_DEVICE_COUNTRY -> KEY_DEVICE_COUNTRY
    java.lang.String KEY_DEVICE_MANUFACTURER -> KEY_DEVICE_MANUFACTURER
    java.lang.String KEY_DEVICE_MODEL -> KEY_DEVICE_MODEL
    java.lang.String KEY_DEVICE_OS_VERSION -> KEY_DEVICE_OS_VERSION
    java.lang.String KEY_DEVICE_TELEPHONY_ID -> KEY_DEVICE_TELEPHONY_ID
    java.lang.String KEY_DEVICE_PLATFORM -> KEY_DEVICE_PLATFORM
    java.lang.String KEY_DEVICE_SERIAL_HASH -> KEY_DEVICE_SERIAL_HASH
    java.lang.String KEY_DEVICE_SDK_LEVEL -> KEY_DEVICE_SDK_LEVEL
    java.lang.String KEY_DEVICE_TELEPHONY_ID_HASH -> KEY_DEVICE_TELEPHONY_ID_HASH
    java.lang.String KEY_DEVICE_WIFI_MAC_HASH -> KEY_DEVICE_WIFI_MAC_HASH
    java.lang.String KEY_LOCALE_COUNTRY -> KEY_LOCALE_COUNTRY
    java.lang.String KEY_LOCALE_LANGUAGE -> KEY_LOCALE_LANGUAGE
    java.lang.String KEY_LOCALYTICS_API_KEY -> KEY_LOCALYTICS_API_KEY
    java.lang.String KEY_LOCALYTICS_CLIENT_LIBRARY_VERSION -> KEY_LOCALYTICS_CLIENT_LIBRARY_VERSION
    java.lang.String KEY_LOCALYTICS_DATA_TYPE -> KEY_LOCALYTICS_DATA_TYPE
    java.lang.String KEY_LOCALYTICS_INSTALLATION_ID -> KEY_LOCALYTICS_INSTALLATION_ID
    java.lang.String KEY_NETWORK_CARRIER -> KEY_NETWORK_CARRIER
    java.lang.String KEY_NETWORK_COUNTRY -> KEY_NETWORK_COUNTRY
    java.lang.String KEY_GOOGLE_PLAY_ATTRIBUTION -> KEY_GOOGLE_PLAY_ATTRIBUTION
    java.lang.String KEY_FB_COOKIE -> KEY_FB_COOKIE
    java.lang.String VALUE_DATA_TYPE -> VALUE_DATA_TYPE
    java.lang.String VALUE_PLATFORM -> VALUE_PLATFORM
com.aviary.android.feather.library.external.tracking.JsonObjects$BlobHeader$Identifiers -> com.aviary.android.feather.library.external.tracking.JsonObjects$BlobHeader$Identifiers:
    java.lang.String KEY -> KEY
com.aviary.android.feather.library.external.tracking.JsonObjects$EventFlow -> com.aviary.android.feather.library.external.tracking.JsonObjects$EventFlow:
    java.lang.String KEY_DATA_TYPE -> KEY_DATA_TYPE
    java.lang.String KEY_EVENT_UUID -> KEY_EVENT_UUID
    java.lang.String KEY_SESSION_START_TIME -> KEY_SESSION_START_TIME
    java.lang.String KEY_FLOW_NEW -> KEY_FLOW_NEW
    java.lang.String KEY_FLOW_OLD -> KEY_FLOW_OLD
    java.lang.String VALUE_DATA_TYPE -> VALUE_DATA_TYPE
com.aviary.android.feather.library.external.tracking.JsonObjects$EventFlow$Element -> com.aviary.android.feather.library.external.tracking.JsonObjects$EventFlow$Element:
    java.lang.String TYPE_EVENT -> TYPE_EVENT
    java.lang.String TYPE_SCREEN -> TYPE_SCREEN
com.aviary.android.feather.library.external.tracking.JsonObjects$OptEvent -> com.aviary.android.feather.library.external.tracking.JsonObjects$OptEvent:
    java.lang.String KEY_DATA_TYPE -> KEY_DATA_TYPE
    java.lang.String VALUE_DATA_TYPE -> VALUE_DATA_TYPE
    java.lang.String KEY_WALL_TIME_SECONDS -> KEY_WALL_TIME_SECONDS
    java.lang.String KEY_API_KEY -> KEY_API_KEY
    java.lang.String KEY_OPT -> KEY_OPT
com.aviary.android.feather.library.external.tracking.JsonObjects$SessionClose -> com.aviary.android.feather.library.external.tracking.JsonObjects$SessionClose:
    java.lang.String KEY_DATA_TYPE -> KEY_DATA_TYPE
    java.lang.String KEY_EVENT_UUID -> KEY_EVENT_UUID
    java.lang.String KEY_FLOW_ARRAY -> KEY_FLOW_ARRAY
    java.lang.String KEY_SESSION_LENGTH_SECONDS -> KEY_SESSION_LENGTH_SECONDS
    java.lang.String KEY_SESSION_START_TIME -> KEY_SESSION_START_TIME
    java.lang.String KEY_SESSION_UUID -> KEY_SESSION_UUID
    java.lang.String KEY_WALL_TIME_SECONDS -> KEY_WALL_TIME_SECONDS
    java.lang.String KEY_CUSTOM_DIMENSION_1 -> KEY_CUSTOM_DIMENSION_1
    java.lang.String KEY_CUSTOM_DIMENSION_2 -> KEY_CUSTOM_DIMENSION_2
    java.lang.String KEY_CUSTOM_DIMENSION_3 -> KEY_CUSTOM_DIMENSION_3
    java.lang.String KEY_CUSTOM_DIMENSION_4 -> KEY_CUSTOM_DIMENSION_4
    java.lang.String VALUE_DATA_TYPE -> VALUE_DATA_TYPE
com.aviary.android.feather.library.external.tracking.JsonObjects$SessionEvent -> com.aviary.android.feather.library.external.tracking.JsonObjects$SessionEvent:
    java.lang.String KEY_DATA_TYPE -> KEY_DATA_TYPE
    java.lang.String VALUE_DATA_TYPE -> VALUE_DATA_TYPE
    java.lang.String KEY_WALL_TIME_SECONDS -> KEY_WALL_TIME_SECONDS
    java.lang.String KEY_SESSION_UUID -> KEY_SESSION_UUID
    java.lang.String KEY_EVENT_UUID -> KEY_EVENT_UUID
    java.lang.String KEY_NAME -> KEY_NAME
    java.lang.String KEY_ATTRIBUTES -> KEY_ATTRIBUTES
    java.lang.String KEY_CUSTOM_DIMENSION_1 -> KEY_CUSTOM_DIMENSION_1
    java.lang.String KEY_CUSTOM_DIMENSION_2 -> KEY_CUSTOM_DIMENSION_2
    java.lang.String KEY_CUSTOM_DIMENSION_3 -> KEY_CUSTOM_DIMENSION_3
    java.lang.String KEY_CUSTOM_DIMENSION_4 -> KEY_CUSTOM_DIMENSION_4
    java.lang.String KEY_CUSTOMER_VALUE_INCREASE -> KEY_CUSTOMER_VALUE_INCREASE
com.aviary.android.feather.library.external.tracking.JsonObjects$SessionOpen -> com.aviary.android.feather.library.external.tracking.JsonObjects$SessionOpen:
    java.lang.String KEY_DATA_TYPE -> KEY_DATA_TYPE
    java.lang.String VALUE_DATA_TYPE -> VALUE_DATA_TYPE
    java.lang.String KEY_WALL_TIME_SECONDS -> KEY_WALL_TIME_SECONDS
    java.lang.String KEY_EVENT_UUID -> KEY_EVENT_UUID
    java.lang.String KEY_COUNT -> KEY_COUNT
    java.lang.String KEY_CUSTOM_DIMENSION_1 -> KEY_CUSTOM_DIMENSION_1
    java.lang.String KEY_CUSTOM_DIMENSION_2 -> KEY_CUSTOM_DIMENSION_2
    java.lang.String KEY_CUSTOM_DIMENSION_3 -> KEY_CUSTOM_DIMENSION_3
    java.lang.String KEY_CUSTOM_DIMENSION_4 -> KEY_CUSTOM_DIMENSION_4
com.aviary.android.feather.library.external.tracking.LocalyticsProvider -> com.aviary.android.feather.library.external.tracking.LocalyticsProvider:
    java.lang.String DATABASE_FILE -> DATABASE_FILE
    int DATABASE_VERSION -> DATABASE_VERSION
    java.util.Map sLocalyticsProviderMap -> sLocalyticsProviderMap
    java.lang.Object[] sLocalyticsProviderIntrinsicLock -> sLocalyticsProviderIntrinsicLock
    java.util.Map sCountProjectionMap -> sCountProjectionMap
    java.util.Set sValidTables -> sValidTables
    android.database.sqlite.SQLiteDatabase mDb -> mDb
    com.aviary.android.feather.library.external.tracking.LocalyticsProvider getInstance(android.content.Context,java.lang.String) -> getInstance
    long insert(java.lang.String,android.content.ContentValues) -> insert
    android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(java.lang.String,java.lang.String,java.lang.String[]) -> delete
    void runBatchTransaction(java.lang.Runnable) -> runBatchTransaction
    void close() -> close
    boolean isValidTable(java.lang.String) -> isValidTable
    java.util.Set getValidTables() -> getValidTables
    java.util.HashMap getCountProjectionMap() -> getCountProjectionMap
    void deleteOldFiles(android.content.Context) -> deleteOldFiles
    boolean deleteDirectory(java.io.File) -> deleteDirectory
com.aviary.android.feather.library.external.tracking.LocalyticsProvider$ApiKeysDbColumns -> com.aviary.android.feather.library.external.tracking.LocalyticsProvider$ApiKeysDbColumns:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String API_KEY -> API_KEY
    java.lang.String UUID -> UUID
    java.lang.String OPT_OUT -> OPT_OUT
    java.lang.String CREATED_TIME -> CREATED_TIME
com.aviary.android.feather.library.external.tracking.LocalyticsProvider$AttributesDbColumns -> com.aviary.android.feather.library.external.tracking.LocalyticsProvider$AttributesDbColumns:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String EVENTS_KEY_REF -> EVENTS_KEY_REF
    java.lang.String ATTRIBUTE_KEY -> ATTRIBUTE_KEY
    java.lang.String ATTRIBUTE_VALUE -> ATTRIBUTE_VALUE
    java.lang.String ATTRIBUTE_FORMAT -> ATTRIBUTE_FORMAT
    java.lang.String ATTRIBUTE_CUSTOM_DIMENSION_1 -> ATTRIBUTE_CUSTOM_DIMENSION_1
    java.lang.String ATTRIBUTE_CUSTOM_DIMENSION_2 -> ATTRIBUTE_CUSTOM_DIMENSION_2
    java.lang.String ATTRIBUTE_CUSTOM_DIMENSION_3 -> ATTRIBUTE_CUSTOM_DIMENSION_3
    java.lang.String ATTRIBUTE_CUSTOM_DIMENSION_4 -> ATTRIBUTE_CUSTOM_DIMENSION_4
com.aviary.android.feather.library.external.tracking.LocalyticsProvider$DatabaseHelper -> com.aviary.android.feather.library.external.tracking.LocalyticsProvider$DatabaseHelper:
    java.lang.String SQLITE_BOOLEAN_TRUE -> SQLITE_BOOLEAN_TRUE
    java.lang.String SQLITE_BOOLEAN_FALSE -> SQLITE_BOOLEAN_FALSE
    android.content.Context mContext -> mContext
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.aviary.android.feather.library.external.tracking.LocalyticsProvider$EventHistoryDbColumns -> com.aviary.android.feather.library.external.tracking.LocalyticsProvider$EventHistoryDbColumns:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String SESSION_KEY_REF -> SESSION_KEY_REF
    java.lang.String TYPE -> TYPE
    java.lang.String NAME -> NAME
    java.lang.String PROCESSED_IN_BLOB -> PROCESSED_IN_BLOB
    int TYPE_EVENT -> TYPE_EVENT
    int TYPE_SCREEN -> TYPE_SCREEN
com.aviary.android.feather.library.external.tracking.LocalyticsProvider$EventsDbColumns -> com.aviary.android.feather.library.external.tracking.LocalyticsProvider$EventsDbColumns:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String SESSION_KEY_REF -> SESSION_KEY_REF
    java.lang.String UUID -> UUID
    java.lang.String EVENT_NAME -> EVENT_NAME
    java.lang.String REAL_TIME -> REAL_TIME
    java.lang.String WALL_TIME -> WALL_TIME
    java.lang.String CLV_INCREASE -> CLV_INCREASE
com.aviary.android.feather.library.external.tracking.LocalyticsProvider$IdentifiersDbColumns -> com.aviary.android.feather.library.external.tracking.LocalyticsProvider$IdentifiersDbColumns:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String KEY -> KEY
    java.lang.String VALUE -> VALUE
com.aviary.android.feather.library.external.tracking.LocalyticsProvider$InfoDbColumns -> com.aviary.android.feather.library.external.tracking.LocalyticsProvider$InfoDbColumns:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String FIRST_RUN -> FIRST_RUN
    java.lang.String FB_ATTRIBUTION -> FB_ATTRIBUTION
    java.lang.String PLAY_ATTRIBUTION -> PLAY_ATTRIBUTION
com.aviary.android.feather.library.external.tracking.LocalyticsProvider$SessionsDbColumns -> com.aviary.android.feather.library.external.tracking.LocalyticsProvider$SessionsDbColumns:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String API_KEY_REF -> API_KEY_REF
    java.lang.String UUID -> UUID
    java.lang.String SESSION_START_WALL_TIME -> SESSION_START_WALL_TIME
    java.lang.String LOCALYTICS_LIBRARY_VERSION -> LOCALYTICS_LIBRARY_VERSION
    java.lang.String LOCALYTICS_INSTALLATION_ID -> LOCALYTICS_INSTALLATION_ID
    java.lang.String APP_VERSION -> APP_VERSION
    java.lang.String ANDROID_VERSION -> ANDROID_VERSION
    java.lang.String ANDROID_SDK -> ANDROID_SDK
    java.lang.String DEVICE_MODEL -> DEVICE_MODEL
    java.lang.String DEVICE_MANUFACTURER -> DEVICE_MANUFACTURER
    java.lang.String DEVICE_ANDROID_ID_HASH -> DEVICE_ANDROID_ID_HASH
    java.lang.String DEVICE_TELEPHONY_ID -> DEVICE_TELEPHONY_ID
    java.lang.String DEVICE_TELEPHONY_ID_HASH -> DEVICE_TELEPHONY_ID_HASH
    java.lang.String DEVICE_SERIAL_NUMBER_HASH -> DEVICE_SERIAL_NUMBER_HASH
    java.lang.String DEVICE_WIFI_MAC_HASH -> DEVICE_WIFI_MAC_HASH
    java.lang.String LOCALE_LANGUAGE -> LOCALE_LANGUAGE
    java.lang.String LOCALE_COUNTRY -> LOCALE_COUNTRY
    java.lang.String DEVICE_COUNTRY -> DEVICE_COUNTRY
    java.lang.String NETWORK_CARRIER -> NETWORK_CARRIER
    java.lang.String NETWORK_COUNTRY -> NETWORK_COUNTRY
    java.lang.String NETWORK_TYPE -> NETWORK_TYPE
    java.lang.String LATITUDE -> LATITUDE
    java.lang.String LONGITUDE -> LONGITUDE
com.aviary.android.feather.library.external.tracking.LocalyticsProvider$UploadBlobEventsDbColumns -> com.aviary.android.feather.library.external.tracking.LocalyticsProvider$UploadBlobEventsDbColumns:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String UPLOAD_BLOBS_KEY_REF -> UPLOAD_BLOBS_KEY_REF
    java.lang.String EVENTS_KEY_REF -> EVENTS_KEY_REF
com.aviary.android.feather.library.external.tracking.LocalyticsProvider$UploadBlobsDbColumns -> com.aviary.android.feather.library.external.tracking.LocalyticsProvider$UploadBlobsDbColumns:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String UUID -> UUID
com.aviary.android.feather.library.external.tracking.LocalyticsSession -> com.aviary.android.feather.library.external.tracking.LocalyticsSession:
    java.lang.String EVENT_FORMAT -> EVENT_FORMAT
    java.lang.String OPEN_EVENT -> OPEN_EVENT
    java.lang.String CLOSE_EVENT -> CLOSE_EVENT
    java.lang.String OPT_IN_EVENT -> OPT_IN_EVENT
    java.lang.String OPT_OUT_EVENT -> OPT_OUT_EVENT
    java.lang.String FLOW_EVENT -> FLOW_EVENT
    android.os.HandlerThread sSessionHandlerThread -> sSessionHandlerThread
    android.os.HandlerThread sUploadHandlerThread -> sUploadHandlerThread
    java.util.Map sLocalyticsSessionHandlerMap -> sLocalyticsSessionHandlerMap
    java.lang.Object[] sLocalyticsSessionIntrinsicLock -> sLocalyticsSessionIntrinsicLock
    android.os.Handler mSessionHandler -> mSessionHandler
    android.content.Context mContext -> mContext
    java.util.Map sIsUploadingMap -> sIsUploadingMap
    android.os.HandlerThread getHandlerThread(java.lang.String) -> getHandlerThread
    void setOptOut(boolean) -> setOptOut
    void open() -> open
    void open(java.util.List) -> open
    void close() -> close
    void close(java.util.List) -> close
    void tagEvent(java.lang.String) -> tagEvent
    void tagEvent(java.lang.String,java.util.Map) -> tagEvent
    void tagEvent(java.lang.String,java.util.Map,java.util.List) -> tagEvent
    void tagEvent(java.lang.String,java.util.Map,java.util.List,long) -> tagEvent
    void tagScreen(java.lang.String) -> tagScreen
    void setCustomerEmail(java.lang.String) -> setCustomerEmail
    void setCustomerName(java.lang.String) -> setCustomerName
    void setCustomerId(java.lang.String) -> setCustomerId
    void setCustomerData(java.lang.String,java.lang.String) -> setCustomerData
    void upload() -> upload
    java.lang.String createRangedAttribute(int,int,int,int) -> createRangedAttribute
    java.lang.String createRangedAttribute(int,int[]) -> createRangedAttribute
    java.util.Map convertDimensionsToAttributes(java.util.List) -> convertDimensionsToAttributes
com.aviary.android.feather.library.external.tracking.LocalyticsSession$Pair -> com.aviary.android.feather.library.external.tracking.LocalyticsSession$Pair:
    java.lang.Object first -> first
    java.lang.Object second -> second
com.aviary.android.feather.library.external.tracking.LocalyticsSession$SessionHandler -> com.aviary.android.feather.library.external.tracking.LocalyticsSession$SessionHandler:
    int MESSAGE_INIT -> MESSAGE_INIT
    int MESSAGE_OPEN -> MESSAGE_OPEN
    int MESSAGE_CLOSE -> MESSAGE_CLOSE
    int MESSAGE_TAG_EVENT -> MESSAGE_TAG_EVENT
    int MESSAGE_UPLOAD -> MESSAGE_UPLOAD
    int MESSAGE_UPLOAD_CALLBACK -> MESSAGE_UPLOAD_CALLBACK
    int MESSAGE_OPT_OUT -> MESSAGE_OPT_OUT
    int MESSAGE_TAG_SCREEN -> MESSAGE_TAG_SCREEN
    int MESSAGE_SET_IDENTIFIER -> MESSAGE_SET_IDENTIFIER
    java.lang.String UPLOAD_BLOBS_EVENTS_SORT_ORDER -> UPLOAD_BLOBS_EVENTS_SORT_ORDER
    java.lang.String EVENTS_SORT_ORDER -> EVENTS_SORT_ORDER
    android.content.Context mContext -> mContext
    com.aviary.android.feather.library.external.tracking.LocalyticsProvider mProvider -> mProvider
    java.lang.String mApiKey -> mApiKey
    long mApiKeyId -> mApiKeyId
    java.lang.String mAppVersion -> mAppVersion
    android.os.Handler mUploadHandler -> mUploadHandler
    java.lang.String[] PROJECTION_INIT_API_KEY -> PROJECTION_INIT_API_KEY
    java.lang.String SELECTION_INIT_API_KEY -> SELECTION_INIT_API_KEY
    java.lang.String SELECTION_OPT_IN_OUT -> SELECTION_OPT_IN_OUT
    java.lang.String[] PROJECTION_GET_OPEN_SESSION_ID_SESSION_ID -> PROJECTION_GET_OPEN_SESSION_ID_SESSION_ID
    java.lang.String[] PROJECTION_GET_OPEN_SESSION_ID_EVENT_COUNT -> PROJECTION_GET_OPEN_SESSION_ID_EVENT_COUNT
    java.lang.String SELECTION_GET_OPEN_SESSION_ID_EVENT_COUNT -> SELECTION_GET_OPEN_SESSION_ID_EVENT_COUNT
    java.lang.String[] PROJECTION_OPEN_EVENT_ID -> PROJECTION_OPEN_EVENT_ID
    java.lang.String SELECTION_OPEN -> SELECTION_OPEN
    java.lang.String[] PROJECTION_OPEN_BLOB_EVENTS -> PROJECTION_OPEN_BLOB_EVENTS
    java.lang.String[] PROJECTION_OPEN_SESSIONS -> PROJECTION_OPEN_SESSIONS
    java.lang.String SELECTION_OPEN_NEW_SESSION -> SELECTION_OPEN_NEW_SESSION
    java.lang.String SELECTION_OPEN_DELETE_EMPTIES_EVENT_HISTORY_SESSION_KEY_REF -> SELECTION_OPEN_DELETE_EMPTIES_EVENT_HISTORY_SESSION_KEY_REF
    java.lang.String SELECTION_OPEN_DELETE_EMPTIES_EVENTS_SESSION_KEY_REF -> SELECTION_OPEN_DELETE_EMPTIES_EVENTS_SESSION_KEY_REF
    java.lang.String[] PROJECTION_OPEN_DELETE_EMPTIES_EVENT_ID -> PROJECTION_OPEN_DELETE_EMPTIES_EVENT_ID
    java.lang.String[] PROJECTION_OPEN_DELETE_EMPTIES_PROCESSED_IN_BLOB -> PROJECTION_OPEN_DELETE_EMPTIES_PROCESSED_IN_BLOB
    java.lang.String SELECTION_OPEN_DELETE_EMPTIES_UPLOAD_BLOBS_ID -> SELECTION_OPEN_DELETE_EMPTIES_UPLOAD_BLOBS_ID
    java.lang.String SELECTION_OPEN_DELETE_EMPTIES_SESSIONS_ID -> SELECTION_OPEN_DELETE_EMPTIES_SESSIONS_ID
    java.lang.String[] PROJECTION_GET_INSTALLATION_ID -> PROJECTION_GET_INSTALLATION_ID
    java.lang.String SELECTION_GET_INSTALLATION_ID -> SELECTION_GET_INSTALLATION_ID
    java.lang.String[] PROJECTION_OPEN_CLOSED_SESSION -> PROJECTION_OPEN_CLOSED_SESSION
    java.lang.String SELECTION_OPEN_CLOSED_SESSION -> SELECTION_OPEN_CLOSED_SESSION
    java.lang.String SELECTION_OPEN_CLOSED_SESSION_ATTRIBUTES -> SELECTION_OPEN_CLOSED_SESSION_ATTRIBUTES
    java.lang.String[] PROJECTION_GET_NUMBER_OF_SESSIONS -> PROJECTION_GET_NUMBER_OF_SESSIONS
    java.lang.String[] PROJECTION_TAG_EVENT -> PROJECTION_TAG_EVENT
    java.lang.String SELECTION_TAG_EVENT -> SELECTION_TAG_EVENT
    java.lang.String[] PROJECTION_TAG_SCREEN -> PROJECTION_TAG_SCREEN
    java.lang.String SELECTION_TAG_SCREEN -> SELECTION_TAG_SCREEN
    java.lang.String SORT_ORDER_TAG_SCREEN -> SORT_ORDER_TAG_SCREEN
    java.lang.String[] PROJECTION_SET_IDENTIFIER -> PROJECTION_SET_IDENTIFIER
    java.lang.String SELECTION_SET_IDENTIFIER -> SELECTION_SET_IDENTIFIER
    java.lang.String[] PROJECTION_FLOW_EVENTS -> PROJECTION_FLOW_EVENTS
    java.lang.String SELECTION_FLOW_EVENTS -> SELECTION_FLOW_EVENTS
    java.lang.String[] SELECTION_ARGS_FLOW_EVENTS -> SELECTION_ARGS_FLOW_EVENTS
    java.lang.String[] PROJECTION_FLOW_BLOBS -> PROJECTION_FLOW_BLOBS
    java.lang.String[] PROJECTION_UPLOAD_EVENTS -> PROJECTION_UPLOAD_EVENTS
    java.lang.String[] PROJECTION_UPLOAD_BLOBS -> PROJECTION_UPLOAD_BLOBS
    java.lang.String SELECTION_UPLOAD_NULL_BLOBS -> SELECTION_UPLOAD_NULL_BLOBS
    java.lang.String[] JOINER_ARG_UPLOAD_EVENTS_COLUMNS -> JOINER_ARG_UPLOAD_EVENTS_COLUMNS
    java.lang.String[] PROJECTION_IS_OPTED_OUT -> PROJECTION_IS_OPTED_OUT
    java.lang.String SELECTION_IS_OPTED_OUT -> SELECTION_IS_OPTED_OUT
    int[] $SWITCH_TABLE$android$database$CursorJoiner$Result -> $SWITCH_TABLE$android$database$CursorJoiner$Result
    void handleMessage(android.os.Message) -> handleMessage
    void init() -> init
    void optOut(boolean) -> optOut
    java.lang.Long getOpenSessionId(com.aviary.android.feather.library.external.tracking.LocalyticsProvider) -> getOpenSessionId
    void open(boolean,java.util.Map) -> open
    void openNewSession(java.util.Map) -> openNewSession
    java.lang.String getInstallationId(com.aviary.android.feather.library.external.tracking.LocalyticsProvider,java.lang.String) -> getInstallationId
    java.lang.String getFBAttribution(com.aviary.android.feather.library.external.tracking.LocalyticsProvider) -> getFBAttribution
    void openClosedSession(long) -> openClosedSession
    long getNumberOfSessions(com.aviary.android.feather.library.external.tracking.LocalyticsProvider) -> getNumberOfSessions
    void close(java.util.Map) -> close
    void tagEvent(java.lang.String,java.util.Map) -> tagEvent
    void tagEvent(java.lang.String,java.util.Map,java.lang.Long) -> tagEvent
    void tagScreen(java.lang.String) -> tagScreen
    void setIdentifier(java.lang.String,java.lang.String) -> setIdentifier
    void conditionallyAddFlowEvent() -> conditionallyAddFlowEvent
    void preUploadBuildBlobs(com.aviary.android.feather.library.external.tracking.LocalyticsProvider) -> preUploadBuildBlobs
    void upload(java.lang.Runnable) -> upload
    boolean isOptedOut(com.aviary.android.feather.library.external.tracking.LocalyticsProvider,java.lang.String) -> isOptedOut
    int[] $SWITCH_TABLE$android$database$CursorJoiner$Result() -> $SWITCH_TABLE$android$database$CursorJoiner$Result
com.aviary.android.feather.library.external.tracking.LocalyticsSession$SessionHandler$1 -> com.aviary.android.feather.library.external.tracking.LocalyticsSession$SessionHandler$1:
    com.aviary.android.feather.library.external.tracking.LocalyticsSession$SessionHandler this$1 -> this$1
    boolean val$isOptingOut -> val$isOptingOut
    void run() -> run
com.aviary.android.feather.library.external.tracking.LocalyticsSession$SessionHandler$2 -> com.aviary.android.feather.library.external.tracking.LocalyticsSession$SessionHandler$2:
    com.aviary.android.feather.library.external.tracking.LocalyticsSession$SessionHandler this$1 -> this$1
    android.os.Message val$msg -> val$msg
    void run() -> run
com.aviary.android.feather.library.external.tracking.LocalyticsSession$SessionHandler$3 -> com.aviary.android.feather.library.external.tracking.LocalyticsSession$SessionHandler$3:
    com.aviary.android.feather.library.external.tracking.LocalyticsSession$SessionHandler this$1 -> this$1
    android.os.Message val$msg -> val$msg
    void run() -> run
com.aviary.android.feather.library.external.tracking.LocalyticsSession$SessionHandler$4 -> com.aviary.android.feather.library.external.tracking.LocalyticsSession$SessionHandler$4:
    com.aviary.android.feather.library.external.tracking.LocalyticsSession$SessionHandler this$1 -> this$1
    java.lang.String val$event -> val$event
    java.util.Map val$attributes -> val$attributes
    java.lang.Long val$clv -> val$clv
    void run() -> run
com.aviary.android.feather.library.external.tracking.LocalyticsSession$SessionHandler$5 -> com.aviary.android.feather.library.external.tracking.LocalyticsSession$SessionHandler$5:
    com.aviary.android.feather.library.external.tracking.LocalyticsSession$SessionHandler this$1 -> this$1
    java.lang.String val$screen -> val$screen
    void run() -> run
com.aviary.android.feather.library.external.tracking.LocalyticsSession$SessionHandler$6 -> com.aviary.android.feather.library.external.tracking.LocalyticsSession$SessionHandler$6:
    com.aviary.android.feather.library.external.tracking.LocalyticsSession$SessionHandler this$1 -> this$1
    java.lang.String val$key -> val$key
    java.lang.String val$value -> val$value
    void run() -> run
com.aviary.android.feather.library.external.tracking.LocalyticsSession$SessionHandler$7 -> com.aviary.android.feather.library.external.tracking.LocalyticsSession$SessionHandler$7:
    com.aviary.android.feather.library.external.tracking.LocalyticsSession$SessionHandler this$1 -> this$1
    java.lang.Runnable val$callback -> val$callback
    void run() -> run
com.aviary.android.feather.library.external.tracking.LocalyticsSession$Triple -> com.aviary.android.feather.library.external.tracking.LocalyticsSession$Triple:
    java.lang.Object first -> first
    java.lang.Object second -> second
    java.lang.Object third -> third
com.aviary.android.feather.library.external.tracking.LocalyticsSession$UploadHandler -> com.aviary.android.feather.library.external.tracking.LocalyticsSession$UploadHandler:
    java.lang.String UPLOAD_CALLBACK_THREAD_NAME -> UPLOAD_CALLBACK_THREAD_NAME
    java.lang.String ANALYTICS_URL -> ANALYTICS_URL
    int MESSAGE_UPLOAD -> MESSAGE_UPLOAD
    int MESSAGE_RETRY_UPLOAD_REQUEST -> MESSAGE_RETRY_UPLOAD_REQUEST
    com.aviary.android.feather.library.external.tracking.LocalyticsProvider mProvider -> mProvider
    android.content.Context mContext -> mContext
    java.lang.String mApiKey -> mApiKey
    java.lang.String mInstallId -> mInstallId
    android.os.Handler mSessionHandler -> mSessionHandler
    void handleMessage(android.os.Message) -> handleMessage
    boolean uploadSessions(java.lang.String,java.lang.String,java.lang.String) -> uploadSessions
    java.util.List convertDatabaseToJson(android.content.Context,com.aviary.android.feather.library.external.tracking.LocalyticsProvider,java.lang.String) -> convertDatabaseToJson
    void deleteBlobsAndSessions(com.aviary.android.feather.library.external.tracking.LocalyticsProvider) -> deleteBlobsAndSessions
    long getApiKeyCreationTime(com.aviary.android.feather.library.external.tracking.LocalyticsProvider,java.lang.String) -> getApiKeyCreationTime
    org.json.JSONObject getAttributesFromSession(com.aviary.android.feather.library.external.tracking.LocalyticsProvider,java.lang.String,long) -> getAttributesFromSession
    org.json.JSONObject getIdentifiers(com.aviary.android.feather.library.external.tracking.LocalyticsProvider) -> getIdentifiers
    org.json.JSONObject convertEventToJson(com.aviary.android.feather.library.external.tracking.LocalyticsProvider,android.content.Context,long,long,java.lang.String) -> convertEventToJson
    long getSessionIdForEventId(com.aviary.android.feather.library.external.tracking.LocalyticsProvider,long) -> getSessionIdForEventId
    java.lang.String getSessionUuid(com.aviary.android.feather.library.external.tracking.LocalyticsProvider,long) -> getSessionUuid
    java.lang.String getStringFromAppInfo(com.aviary.android.feather.library.external.tracking.LocalyticsProvider,java.lang.String) -> getStringFromAppInfo
    long getSessionStartTime(com.aviary.android.feather.library.external.tracking.LocalyticsProvider,long) -> getSessionStartTime
    org.json.JSONObject convertAttributesToJson(com.aviary.android.feather.library.external.tracking.LocalyticsProvider,android.content.Context,long) -> convertAttributesToJson
    long getSessionIdForBlobId(com.aviary.android.feather.library.external.tracking.LocalyticsProvider,long) -> getSessionIdForBlobId
com.aviary.android.feather.library.external.tracking.LocalyticsSession$UploadHandler$1 -> com.aviary.android.feather.library.external.tracking.LocalyticsSession$UploadHandler$1:
    com.aviary.android.feather.library.external.tracking.LocalyticsSession$UploadHandler this$1 -> this$1
    void run() -> run
com.aviary.android.feather.library.external.tracking.LocalyticsTracker -> com.aviary.android.feather.library.external.tracking.LocalyticsTracker:
    java.lang.String LOG_TAG -> LOG_TAG
    boolean LOG_ENABLED -> LOG_ENABLED
    java.lang.String localyticsKey -> localyticsKey
    com.aviary.android.feather.library.external.tracking.LocalyticsSession localyticsSession -> localyticsSession
    java.util.HashMap mDefaultAttributes -> mDefaultAttributes
    java.util.List mCustomDimensions -> mCustomDimensions
    void putCustomAttribute(java.lang.String,java.lang.String) -> putCustomAttribute
    boolean recordTag(java.lang.String,java.util.HashMap) -> recordTag
    void open() -> open
    void upload() -> upload
    boolean close() -> close
com.aviary.android.feather.library.external.tracking.ReferralReceiver -> com.aviary.android.feather.library.external.tracking.ReferralReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.aviary.android.feather.library.external.tracking.ReferralReceiver$1 -> com.aviary.android.feather.library.external.tracking.ReferralReceiver$1:
    com.aviary.android.feather.library.external.tracking.ReferralReceiver this$0 -> this$0
    java.lang.String val$referrer -> val$referrer
    com.aviary.android.feather.library.external.tracking.LocalyticsProvider val$provider -> val$provider
    void run() -> run
com.aviary.android.feather.library.external.tracking.ReflectionUtils -> com.aviary.android.feather.library.external.tracking.ReflectionUtils:
    java.lang.Object tryInvokeStatic(java.lang.Class,java.lang.String,java.lang.Class[],java.lang.Object[]) -> tryInvokeStatic
    java.lang.Object tryInvokeStatic(java.lang.String,java.lang.String,java.lang.Class[],java.lang.Object[]) -> tryInvokeStatic
    java.lang.Object tryInvokeInstance(java.lang.Object,java.lang.String,java.lang.Class[],java.lang.Object[]) -> tryInvokeInstance
    java.lang.Object helper(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,java.lang.Class[],java.lang.Object[]) -> helper
com.aviary.android.feather.library.external.tracking.TrackerFactory -> com.aviary.android.feather.library.external.tracking.TrackerFactory:
    com.aviary.android.feather.library.tracking.AbstractTracker create(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> create
com.aviary.android.feather.library.filters.AdjustFilter -> com.aviary.android.feather.library.filters.AdjustFilter:
    boolean setStraighten(double,double,double) -> setStraighten
    boolean setFixedRotation(int) -> setFixedRotation
    void setFeatherEditSize(int,int) -> setFeatherEditSize
    boolean setFlip(boolean,boolean) -> setFlip
com.aviary.android.feather.library.filters.BorderFilter -> com.aviary.android.feather.library.filters.BorderFilter:
    void setSourceDir(java.lang.CharSequence) -> setSourceDir
    void setIdentifier(java.lang.CharSequence) -> setIdentifier
    void setHiRes(boolean) -> setHiRes
    void setSize(double) -> setSize
com.aviary.android.feather.library.filters.ColorSplashFilter -> com.aviary.android.feather.library.filters.ColorSplashFilter:
    java.util.List strokes -> strokes
    void addStrokeData(com.aviary.android.feather.headless.moa.MoaStrokeParameter) -> addStrokeData
com.aviary.android.feather.library.filters.EnhanceFilter -> com.aviary.android.feather.library.filters.EnhanceFilter:
    void setType(com.aviary.android.feather.library.filters.EnhanceFilter$Types) -> setType
    void executeInPlace(android.graphics.Bitmap) -> executeInPlace
com.aviary.android.feather.library.filters.EnhanceFilter$Types -> com.aviary.android.feather.library.filters.EnhanceFilter$Types:
    com.aviary.android.feather.library.filters.EnhanceFilter$Types HiDef -> HiDef
    com.aviary.android.feather.library.filters.EnhanceFilter$Types Illuminate -> Illuminate
    com.aviary.android.feather.library.filters.EnhanceFilter$Types ColorFix -> ColorFix
    com.aviary.android.feather.library.filters.EnhanceFilter$Types[] ENUM$VALUES -> ENUM$VALUES
    com.aviary.android.feather.library.filters.EnhanceFilter$Types[] values() -> values
    com.aviary.android.feather.library.filters.EnhanceFilter$Types valueOf(java.lang.String) -> valueOf
com.aviary.android.feather.library.filters.FilterLoaderFactory -> com.aviary.android.feather.library.filters.FilterLoaderFactory:
    int[] $SWITCH_TABLE$com$aviary$android$feather$library$filters$FilterLoaderFactory$Filters -> $SWITCH_TABLE$com$aviary$android$feather$library$filters$FilterLoaderFactory$Filters
    java.lang.String[] getDefaultFilters() -> getDefaultFilters
    java.lang.String[] getAllFilters() -> getAllFilters
    com.aviary.android.feather.headless.filters.NativeFilter get(java.lang.String) -> get
    com.aviary.android.feather.headless.filters.IFilter get(com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters) -> get
    int[] $SWITCH_TABLE$com$aviary$android$feather$library$filters$FilterLoaderFactory$Filters() -> $SWITCH_TABLE$com$aviary$android$feather$library$filters$FilterLoaderFactory$Filters
com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters -> com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters:
    com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters SHARPNESS -> SHARPNESS
    com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters BRIGHTNESS -> BRIGHTNESS
    com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters CONTRAST -> CONTRAST
    com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters SATURATION -> SATURATION
    com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters EFFECTS -> EFFECTS
    com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters RED_EYE -> RED_EYE
    com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters CROP -> CROP
    com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters WHITEN -> WHITEN
    com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters DRAWING -> DRAWING
    com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters STICKERS -> STICKERS
    com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters TEXT -> TEXT
    com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters BLEMISH -> BLEMISH
    com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters MEME -> MEME
    com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters ADJUST -> ADJUST
    com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters ENHANCE -> ENHANCE
    com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters COLORTEMP -> COLORTEMP
    com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters BORDERS -> BORDERS
    com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters COLOR_SPLASH -> COLOR_SPLASH
    com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters TILT_SHIFT -> TILT_SHIFT
    com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters[] ENUM$VALUES -> ENUM$VALUES
    com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters[] values() -> values
    com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters valueOf(java.lang.String) -> valueOf
com.aviary.android.feather.library.filters.ILevelFilter -> com.aviary.android.feather.library.filters.ILevelFilter:
    android.graphics.ColorMatrixColorFilter apply(float) -> apply
    float getAmount(int,int) -> getAmount
com.aviary.android.feather.library.filters.MemeFilter -> com.aviary.android.feather.library.filters.MemeFilter:
    com.aviary.android.feather.headless.moa.MoaAction mAction -> mAction
    void setFontSourceDir(java.lang.String) -> setFontSourceDir
    void setTopText(java.lang.String) -> setTopText
    void setBottomText(java.lang.String) -> setBottomText
    void setTextSize(double) -> setTextSize
    void setFillColor(int) -> setFillColor
    void setStrokeColor(int) -> setStrokeColor
    void setAssetFontName(java.lang.String) -> setAssetFontName
    void setPaddingTop(double) -> setPaddingTop
    void setPaddingBottom(double) -> setPaddingBottom
com.aviary.android.feather.library.filters.SaturationFilter -> com.aviary.android.feather.library.filters.SaturationFilter:
    void setValue(java.lang.Float) -> setValue
    void executeInPlace(android.graphics.Bitmap) -> executeInPlace
com.aviary.android.feather.library.filters.SpotBrushFilter -> com.aviary.android.feather.library.filters.SpotBrushFilter:
    com.aviary.android.feather.headless.moa.MoaPointParameter center -> center
    java.util.ArrayList pointlist -> pointlist
    com.aviary.android.feather.library.graphics.FlattenPath mFlattenPath -> mFlattenPath
    float mX -> mX
    float mY -> mY
    double mRadius -> mRadius
    java.lang.String OPTION_CENTER -> OPTION_CENTER
    java.lang.String OPTION_RADIUS -> OPTION_RADIUS
    java.lang.String OPTION_POINTS -> OPTION_POINTS
    com.aviary.android.feather.library.graphics.FlattenPath getFlattenPath() -> getFlattenPath
    void moveTo(float[]) -> moveTo
    void lineTo(float[]) -> lineTo
    void quadTo(float[]) -> quadTo
    void setRadius(double,int) -> setRadius
    double getRadius() -> getRadius
    double getRealRadius() -> getRealRadius
    com.aviary.android.feather.headless.moa.MoaPointParameter getCenter() -> getCenter
    void addPoint(float,float) -> addPoint
    void clearPoints() -> clearPoints
    void draw(android.graphics.Bitmap) -> draw
    void draw(float,float,android.graphics.Bitmap) -> draw
com.aviary.android.feather.library.filters.StickerFilter -> com.aviary.android.feather.library.filters.StickerFilter:
    java.lang.String getUrl() -> getUrl
    java.lang.String getSourceDir() -> getSourceDir
    void setSourceDir(java.lang.String) -> setSourceDir
    void setUrl(java.lang.String) -> setUrl
    void setSize(int,int) -> setSize
    void setTopLeft(float,float) -> setTopLeft
    void setBottomRight(float,float) -> setBottomRight
    void setRotation(double) -> setRotation
    void setCenter(float,float) -> setCenter
    void setScale(float,float) -> setScale
com.aviary.android.feather.library.filters.TextFilter -> com.aviary.android.feather.library.filters.TextFilter:
    void setText(java.lang.CharSequence) -> setText
    void setFillColor(int) -> setFillColor
    void setStrokeColor(int) -> setStrokeColor
    void setRotation(float) -> setRotation
    void setTopLeft(double,double) -> setTopLeft
    void setBottomRight(double,double) -> setBottomRight
    void setTextSize(double) -> setTextSize
com.aviary.android.feather.library.filters.TiltShiftFilter -> com.aviary.android.feather.library.filters.TiltShiftFilter:
com.aviary.android.feather.library.graphics.CircleF -> com.aviary.android.feather.library.graphics.CircleF:
    float radius -> radius
    float x -> x
    float y -> y
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void set(float,float,float) -> set
    void set(float,float) -> set
    float centerX() -> centerX
    float centerY() -> centerY
    float getRadius() -> getRadius
    void setRadius(float) -> setRadius
    android.graphics.RectF getBounds() -> getBounds
    void getBounds(android.graphics.RectF) -> getBounds
    void offset(float,float) -> offset
    android.graphics.PointF[] intersect(com.aviary.android.feather.library.graphics.LineF) -> intersect
    android.graphics.PointF[] intersect(android.graphics.PointF,android.graphics.PointF) -> intersect
    android.graphics.PointF[] intersect(float,float,float,float) -> intersect
    java.util.List intersect(android.graphics.RectF) -> intersect
    boolean contains(android.graphics.PointF) -> contains
    boolean contains(float,float) -> contains
    void draw(android.graphics.Canvas,android.graphics.Paint) -> draw
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void readFromParcel(android.os.Parcel) -> readFromParcel
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.aviary.android.feather.library.graphics.CircleF$1 -> com.aviary.android.feather.library.graphics.CircleF$1:
    com.aviary.android.feather.library.graphics.CircleF createFromParcel(android.os.Parcel) -> createFromParcel
    com.aviary.android.feather.library.graphics.CircleF[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.aviary.android.feather.library.graphics.CubicCurve -> com.aviary.android.feather.library.graphics.CubicCurve:
    double _x0 -> _x0
    double _y0 -> _y0
    double _x1 -> _x1
    double _y1 -> _y1
    double _x2 -> _x2
    double _y2 -> _y2
    double _x3 -> _x3
    double _y3 -> _y3
    void update(double,double,double,double,double,double,double,double) -> update
    android.graphics.PointF getA() -> getA
    android.graphics.PointF getB() -> getB
    double getSquareFlatness() -> getSquareFlatness
    double[] subdivide() -> subdivide
com.aviary.android.feather.library.graphics.FlattenPath -> com.aviary.android.feather.library.graphics.FlattenPath:
    double DEFAULT_FLATNESS -> DEFAULT_FLATNESS
    double MIN_CHORD_LENGTH_SQ -> MIN_CHORD_LENGTH_SQ
    double MAX_CHORD_LENGTH_SQ -> MAX_CHORD_LENGTH_SQ
    double flatness -> flatness
    java.util.LinkedList points -> points
    android.graphics.PointF lastPoint -> lastPoint
    com.aviary.android.feather.library.graphics.CubicCurve cubic -> cubic
    float[] getPoints() -> getPoints
    android.graphics.PointF remove() -> remove
    int size() -> size
    android.graphics.PointF getLastPoint() -> getLastPoint
    void clear() -> clear
    void moveTo(float,float) -> moveTo
    void lineTo(float,float) -> lineTo
    void quadTo(float,float,float,float) -> quadTo
    void flattenCubicPoints(double,double,double,double,double,double,double,double) -> flattenCubicPoints
com.aviary.android.feather.library.graphics.IGeom -> com.aviary.android.feather.library.graphics.IGeom:
    void draw(android.graphics.Canvas,android.graphics.Paint) -> draw
    android.graphics.RectF getBounds() -> getBounds
    void getBounds(android.graphics.RectF) -> getBounds
    void readFromParcel(android.os.Parcel) -> readFromParcel
com.aviary.android.feather.library.graphics.LineF -> com.aviary.android.feather.library.graphics.LineF:
    android.graphics.PointF start -> start
    android.graphics.PointF end -> end
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void set(android.graphics.PointF,android.graphics.PointF) -> set
    void set(float,float,float,float) -> set
    float getStartX() -> getStartX
    float getStartY() -> getStartY
    float getEndX() -> getEndX
    float getEndY() -> getEndY
    void reset() -> reset
    boolean isEmpty() -> isEmpty
    double length() -> length
    android.graphics.RectF getBounds() -> getBounds
    void getBounds(android.graphics.RectF) -> getBounds
    android.graphics.PointF intersect(com.aviary.android.feather.library.graphics.LineF) -> intersect
    android.graphics.PointF intersect(android.graphics.PointF,android.graphics.PointF) -> intersect
    android.graphics.PointF intersect(float,float,float,float) -> intersect
    android.graphics.PointF[] intersect(android.graphics.RectF) -> intersect
    void draw(android.graphics.Canvas,android.graphics.Paint) -> draw
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void readFromParcel(android.os.Parcel) -> readFromParcel
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.aviary.android.feather.library.graphics.LineF$1 -> com.aviary.android.feather.library.graphics.LineF$1:
    com.aviary.android.feather.library.graphics.LineF createFromParcel(android.os.Parcel) -> createFromParcel
    com.aviary.android.feather.library.graphics.LineF[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.aviary.android.feather.library.graphics.Point2D -> com.aviary.android.feather.library.graphics.Point2D:
    double angleBetweenPoints(float[],float[]) -> angleBetweenPoints
    double angleBetweenPoints(float,float,float,float,float) -> angleBetweenPoints
    double angle360(double) -> angle360
    double angleBetweenPoints(android.graphics.PointF,android.graphics.PointF) -> angleBetweenPoints
    double angleBetweenPoints(android.graphics.PointF,android.graphics.PointF,float) -> angleBetweenPoints
    double degrees(double) -> degrees
    double distance(float[],float[]) -> distance
    double distance(android.graphics.PointF,android.graphics.PointF) -> distance
    double distance(float,float,float,float) -> distance
    double hypotenuse(android.graphics.RectF) -> hypotenuse
    double radians(double) -> radians
    void rotate(android.graphics.PointF[],double) -> rotate
    void rotateAroundBy(android.graphics.PointF,android.graphics.PointF,float) -> rotateAroundBy
    void rotateAroundOrigin(android.graphics.PointF,android.graphics.PointF,float) -> rotateAroundOrigin
    void rotate(android.graphics.PointF,double) -> rotate
    void translate(android.graphics.PointF[],float,float) -> translate
    void translate(android.graphics.PointF,float,float) -> translate
    android.graphics.PointF intersection(android.graphics.PointF[],android.graphics.PointF[]) -> intersection
    android.graphics.PointF sizeOfRect(android.graphics.PointF[]) -> sizeOfRect
    boolean getLineToLineIntersection(com.aviary.android.feather.library.graphics.LineF[],com.aviary.android.feather.library.graphics.LineF,com.aviary.android.feather.library.graphics.LineF) -> getLineToLineIntersection
    void getLerp(android.graphics.PointF,android.graphics.PointF,float,android.graphics.PointF) -> getLerp
    void grow(android.graphics.RectF,float,float) -> grow
com.aviary.android.feather.library.graphics.RectD -> com.aviary.android.feather.library.graphics.RectD:
    double left -> left
    double top -> top
    double right -> right
    double bottom -> bottom
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String toShortString() -> toShortString
    java.lang.String toShortString(java.lang.StringBuilder) -> toShortString
    void printShortString(java.io.PrintWriter) -> printShortString
    boolean isEmpty() -> isEmpty
    double width() -> width
    double height() -> height
    double centerX() -> centerX
    double centerY() -> centerY
    void setEmpty() -> setEmpty
    void set(double,double,double,double) -> set
    void set(android.graphics.RectF) -> set
    void set(com.aviary.android.feather.library.graphics.RectD) -> set
    void set(android.graphics.Rect) -> set
    void offset(double,double) -> offset
    void offsetTo(double,double) -> offsetTo
    void inset(double,double) -> inset
    boolean contains(double,double) -> contains
    boolean contains(double,double,double,double) -> contains
    boolean contains(android.graphics.RectF) -> contains
    boolean contains(com.aviary.android.feather.library.graphics.RectD) -> contains
    boolean intersect(double,double,double,double) -> intersect
    boolean intersect(android.graphics.RectF) -> intersect
    boolean intersect(com.aviary.android.feather.library.graphics.RectD) -> intersect
    boolean setIntersect(com.aviary.android.feather.library.graphics.RectD,com.aviary.android.feather.library.graphics.RectD) -> setIntersect
    boolean intersects(double,double,double,double) -> intersects
    boolean intersects(com.aviary.android.feather.library.graphics.RectD,com.aviary.android.feather.library.graphics.RectD) -> intersects
    void round(android.graphics.Rect) -> round
    void roundOut(android.graphics.Rect) -> roundOut
    void union(double,double,double,double) -> union
    void union(com.aviary.android.feather.library.graphics.RectD) -> union
    void union(android.graphics.RectF) -> union
    void union(android.graphics.Rect) -> union
    void union(double,double) -> union
    void sort() -> sort
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void readFromParcel(android.os.Parcel) -> readFromParcel
    void draw(android.graphics.Canvas,android.graphics.Paint) -> draw
    android.graphics.RectF getBounds() -> getBounds
    void getBounds(android.graphics.RectF) -> getBounds
com.aviary.android.feather.library.graphics.RectD$1 -> com.aviary.android.feather.library.graphics.RectD$1:
    com.aviary.android.feather.library.graphics.RectD createFromParcel(android.os.Parcel) -> createFromParcel
    com.aviary.android.feather.library.graphics.RectD[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.aviary.android.feather.library.graphics.animation.CustomAlphaAnimation -> com.aviary.android.feather.library.graphics.animation.CustomAlphaAnimation:
    float mFromAlpha -> mFromAlpha
    float mToAlpha -> mToAlpha
    float mCurrentAlpha -> mCurrentAlpha
    float getAlpha() -> getAlpha
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
    boolean willChangeTransformationMatrix() -> willChangeTransformationMatrix
    boolean willChangeBounds() -> willChangeBounds
com.aviary.android.feather.library.graphics.animation.Flip2dAnimation -> com.aviary.android.feather.library.graphics.animation.Flip2dAnimation:
    float mFromDegrees -> mFromDegrees
    float mToDegrees -> mToDegrees
    float mCenterX -> mCenterX
    float mCenterY -> mCenterY
    void initialize(int,int,int,int) -> initialize
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
    boolean willChangeBounds() -> willChangeBounds
    boolean willChangeTransformationMatrix() -> willChangeTransformationMatrix
com.aviary.android.feather.library.graphics.animation.Flip3dAnimation -> com.aviary.android.feather.library.graphics.animation.Flip3dAnimation:
    float mFromDegrees -> mFromDegrees
    float mToDegrees -> mToDegrees
    float mCenterX -> mCenterX
    float mCenterY -> mCenterY
    android.graphics.Camera mCamera -> mCamera
    void initialize(int,int,int,int) -> initialize
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
    boolean willChangeBounds() -> willChangeBounds
    boolean willChangeTransformationMatrix() -> willChangeTransformationMatrix
com.aviary.android.feather.library.graphics.animation.TransformAnimation -> com.aviary.android.feather.library.graphics.animation.TransformAnimation:
    int mFromXType -> mFromXType
    int mToXType -> mToXType
    int mFromYType -> mFromYType
    int mToYType -> mToYType
    float mFromXValue -> mFromXValue
    float mToXValue -> mToXValue
    float mFromYValue -> mFromYValue
    float mToYValue -> mToYValue
    float mFromXDelta -> mFromXDelta
    float mToXDelta -> mToXDelta
    float mFromYDelta -> mFromYDelta
    float mToYDelta -> mToYDelta
    float mFromScaleX -> mFromScaleX
    float mFromScaleY -> mFromScaleY
    float mToScaleX -> mToScaleX
    float mToScaleY -> mToScaleY
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
    void initialize(int,int,int,int) -> initialize
com.aviary.android.feather.library.graphics.animation.VoidAnimation -> com.aviary.android.feather.library.graphics.animation.VoidAnimation:
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.aviary.android.feather.library.graphics.drawable.AviaryMemeTextDrawable -> com.aviary.android.feather.library.graphics.drawable.AviaryMemeTextDrawable:
    int mContentWidth -> mContentWidth
    int mContentHeight -> mContentHeight
    boolean mTextChanged -> mTextChanged
    float xoff -> xoff
    float yoff -> yoff
    android.graphics.Paint mTempPaint -> mTempPaint
    float maxSize -> maxSize
    float padW -> padW
    boolean mBoundsChanged -> mBoundsChanged
    boolean mTop -> mTop
    void setContentSize(float,float) -> setContentSize
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    void setTextSize(float) -> setTextSize
    void setText(java.lang.String) -> setText
    void onTextInvalidate() -> onTextInvalidate
    boolean validateSize(android.graphics.RectF) -> validateSize
    float getXoff() -> getXoff
    float getYoff() -> getYoff
    void setBounds(float,float,float,float) -> setBounds
    void draw(android.graphics.Canvas) -> draw
    int getNumLines() -> getNumLines
com.aviary.android.feather.library.graphics.drawable.AviaryTextDrawable -> com.aviary.android.feather.library.graphics.drawable.AviaryTextDrawable:
    boolean LOG_ENABLED -> LOG_ENABLED
    java.lang.String LOG_TAG -> LOG_TAG
    android.graphics.Paint mPaint -> mPaint
    android.graphics.Paint mCursorPaint -> mCursorPaint
    android.graphics.Paint mStrokePaint -> mStrokePaint
    android.graphics.Paint mDebugPaint -> mDebugPaint
    int mPaintAlpha -> mPaintAlpha
    int mStrokeAlpha -> mStrokeAlpha
    java.lang.String mHintString -> mHintString
    java.lang.String mText -> mText
    android.graphics.RectF mBoundsF -> mBoundsF
    boolean mEditing -> mEditing
    long mNow -> mNow
    boolean mShowCursor -> mShowCursor
    java.util.List linesBreak -> linesBreak
    boolean mTextHint -> mTextHint
    float mCursorWidth -> mCursorWidth
    float mCursorDistance -> mCursorDistance
    boolean mStrokeEnabled -> mStrokeEnabled
    float mDefaultTextSize -> mDefaultTextSize
    float mIntrinsicHeight -> mIntrinsicHeight
    float mIntrinsicWidth -> mIntrinsicWidth
    float mMinWidth -> mMinWidth
    float mMinHeight -> mMinHeight
    float mMinTextSize -> mMinTextSize
    android.graphics.Paint$FontMetrics metrics -> metrics
    android.graphics.Rect lastRect -> lastRect
    android.graphics.RectF drawRect -> drawRect
    com.aviary.android.feather.library.graphics.drawable.EditableDrawable$OnSizeChange mSizeChangeListener -> mSizeChangeListener
    float getDefaultTextSize() -> getDefaultTextSize
    void setCursorWidth(int) -> setCursorWidth
    void setStrokeEnabled(boolean) -> setStrokeEnabled
    boolean getStrokeEnabled() -> getStrokeEnabled
    void setTextHint(java.lang.CharSequence) -> setTextHint
    void setTextHint(java.lang.String) -> setTextHint
    boolean isTextHint() -> isTextHint
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    void beginEdit() -> beginEdit
    void endEdit() -> endEdit
    float getCurrentHeight() -> getCurrentHeight
    float getCurrentWidth() -> getCurrentWidth
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    void invalidateSize() -> invalidateSize
    int getOpacity() -> getOpacity
    java.lang.CharSequence getText() -> getText
    int getTextColor() -> getTextColor
    int getTextStrokeColor() -> getTextStrokeColor
    void setTextStrokeColor(int) -> setTextStrokeColor
    float getTextSize() -> getTextSize
    boolean isEditing() -> isEditing
    void setAlpha(int) -> setAlpha
    void setBounds(float,float,float,float) -> setBounds
    void setBounds(int,int,int,int) -> setBounds
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setStrokeColor(int) -> setStrokeColor
    void setText(java.lang.CharSequence) -> setText
    void setText(java.lang.String) -> setText
    void setTextColor(int) -> setTextColor
    void setTextSize(float) -> setTextSize
    boolean validateSize(android.graphics.RectF) -> validateSize
    void setMinSize(float,float) -> setMinSize
    void setMinTextSize(float) -> setMinTextSize
    float getMinTextSize() -> getMinTextSize
    float getFontMetrics(android.graphics.Paint$FontMetrics) -> getFontMetrics
    void computeMinSize() -> computeMinSize
    float getMinTextWidth() -> getMinTextWidth
    float getTotal(float[]) -> getTotal
    float computeTextHeight() -> computeTextHeight
    float computeTextWidth() -> computeTextWidth
    float getTextWidth(int,int) -> getTextWidth
    void copyBounds(android.graphics.RectF) -> copyBounds
    void draw(android.graphics.Canvas) -> draw
    void getLineBounds(int,android.graphics.Rect) -> getLineBounds
    int getNumLines() -> getNumLines
    void onTextInvalidate() -> onTextInvalidate
    void setOnSizeChangeListener(com.aviary.android.feather.library.graphics.drawable.EditableDrawable$OnSizeChange) -> setOnSizeChangeListener
com.aviary.android.feather.library.graphics.drawable.CircleDrawable -> com.aviary.android.feather.library.graphics.drawable.CircleDrawable:
    android.graphics.Paint mPaint -> mPaint
    int mRadius -> mRadius
    int mBackgroundColor -> mBackgroundColor
    android.graphics.RectF mOvalRect -> mOvalRect
    void draw(android.graphics.Canvas) -> draw
    void setBackgroundColor(int) -> setBackgroundColor
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
com.aviary.android.feather.library.graphics.drawable.EditableDrawable -> com.aviary.android.feather.library.graphics.drawable.EditableDrawable:
    int CURSOR_BLINK_TIME -> CURSOR_BLINK_TIME
    void setOnSizeChangeListener(com.aviary.android.feather.library.graphics.drawable.EditableDrawable$OnSizeChange) -> setOnSizeChangeListener
    void beginEdit() -> beginEdit
    void endEdit() -> endEdit
    boolean isEditing() -> isEditing
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    void setText(java.lang.String) -> setText
    void setTextHint(java.lang.CharSequence) -> setTextHint
    void setTextHint(java.lang.String) -> setTextHint
    boolean isTextHint() -> isTextHint
    void setBounds(float,float,float,float) -> setBounds
    void setTextColor(int) -> setTextColor
    int getTextColor() -> getTextColor
    float getTextSize() -> getTextSize
    float getFontMetrics(android.graphics.Paint$FontMetrics) -> getFontMetrics
    void setTextStrokeColor(int) -> setTextStrokeColor
    int getTextStrokeColor() -> getTextStrokeColor
    void setStrokeEnabled(boolean) -> setStrokeEnabled
    boolean getStrokeEnabled() -> getStrokeEnabled
    int getNumLines() -> getNumLines
com.aviary.android.feather.library.graphics.drawable.EditableDrawable$OnSizeChange -> com.aviary.android.feather.library.graphics.drawable.EditableDrawable$OnSizeChange:
    void onSizeChanged(com.aviary.android.feather.library.graphics.drawable.EditableDrawable,float,float,float,float) -> onSizeChanged
com.aviary.android.feather.library.graphics.drawable.FakeBitmapDrawable -> com.aviary.android.feather.library.graphics.drawable.FakeBitmapDrawable:
    int mFakeWidth -> mFakeWidth
    int mFakeHeight -> mFakeHeight
    int mRealWidth -> mRealWidth
    int mRealHeight -> mRealHeight
    android.graphics.Matrix mMatrix -> mMatrix
    void draw(android.graphics.Canvas) -> draw
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
com.aviary.android.feather.library.graphics.drawable.FeatherDrawable -> com.aviary.android.feather.library.graphics.drawable.FeatherDrawable:
    void setMinSize(float,float) -> setMinSize
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    boolean validateSize(android.graphics.RectF) -> validateSize
    void draw(android.graphics.Canvas) -> draw
    void setBounds(int,int,int,int) -> setBounds
    void setBounds(android.graphics.Rect) -> setBounds
    void copyBounds(android.graphics.Rect) -> copyBounds
    android.graphics.Rect copyBounds() -> copyBounds
    android.graphics.Rect getBounds() -> getBounds
    void setChangingConfigurations(int) -> setChangingConfigurations
    int getChangingConfigurations() -> getChangingConfigurations
    void setDither(boolean) -> setDither
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setCallback(android.graphics.drawable.Drawable$Callback) -> setCallback
    void invalidateSelf() -> invalidateSelf
    void scheduleSelf(java.lang.Runnable,long) -> scheduleSelf
    void unscheduleSelf(java.lang.Runnable) -> unscheduleSelf
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    void clearColorFilter() -> clearColorFilter
    boolean isStateful() -> isStateful
    boolean setState(int[]) -> setState
    int[] getState() -> getState
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    boolean setLevel(int) -> setLevel
    int getLevel() -> getLevel
    boolean setVisible(boolean,boolean) -> setVisible
    boolean isVisible() -> isVisible
    int getOpacity() -> getOpacity
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    float getCurrentWidth() -> getCurrentWidth
    float getCurrentHeight() -> getCurrentHeight
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    boolean getPadding(android.graphics.Rect) -> getPadding
    android.graphics.drawable.Drawable mutate() -> mutate
com.aviary.android.feather.library.graphics.drawable.RotateBitmap -> com.aviary.android.feather.library.graphics.drawable.RotateBitmap:
    java.lang.String TAG -> TAG
    android.graphics.Bitmap mBitmap -> mBitmap
    int mRotation -> mRotation
    int mWidth -> mWidth
    int mHeight -> mHeight
    int mBitmapWidth -> mBitmapWidth
    int mBitmapHeight -> mBitmapHeight
    void setRotation(int) -> setRotation
    int getRotation() -> getRotation
    android.graphics.Bitmap getBitmap() -> getBitmap
    void setBitmap(android.graphics.Bitmap) -> setBitmap
    void invalidate() -> invalidate
    android.graphics.Matrix getRotateMatrix() -> getRotateMatrix
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    void recycle() -> recycle
com.aviary.android.feather.library.graphics.drawable.StickerDrawable -> com.aviary.android.feather.library.graphics.drawable.StickerDrawable:
    float minWidth -> minWidth
    float minHeight -> minHeight
    java.lang.String mStickerIdentifier -> mStickerIdentifier
    java.lang.String mPackIdentifier -> mPackIdentifier
    android.graphics.BlurMaskFilter mBlurFilter -> mBlurFilter
    android.graphics.Paint mShadowPaint -> mShadowPaint
    android.graphics.Bitmap mShadowBitmap -> mShadowBitmap
    boolean mDrawShadow -> mDrawShadow
    android.graphics.Rect mTempRect -> mTempRect
    int getBitmapWidth() -> getBitmapWidth
    int getBitmapHeight() -> getBitmapHeight
    void draw(android.graphics.Canvas) -> draw
    void setDropShadow(boolean) -> setDropShadow
    java.lang.String getIdentifier() -> getIdentifier
    java.lang.String getPackIdentifier() -> getPackIdentifier
    boolean validateSize(android.graphics.RectF) -> validateSize
    void setMinSize(float,float) -> setMinSize
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    float getCurrentWidth() -> getCurrentWidth
    float getCurrentHeight() -> getCurrentHeight
com.aviary.android.feather.library.providers.FeatherContentProvider -> com.aviary.android.feather.library.providers.FeatherContentProvider:
    com.aviary.android.feather.common.log.LoggerFactory$Logger logger -> logger
    int DATABASE_VERSION -> DATABASE_VERSION
    long ONE_HOUR -> ONE_HOUR
    long ONE_DAY -> ONE_DAY
    long ONE_WEEK -> ONE_WEEK
    java.lang.String DATABASE_NAME -> DATABASE_NAME
    java.lang.String mAuthority -> mAuthority
    com.aviary.android.feather.library.providers.FeatherContentProvider$DatabaseHelper mDatabase -> mDatabase
    android.content.UriMatcher mUriMatcher -> mUriMatcher
    int MATCHER_SESSIONS -> MATCHER_SESSIONS
    int MATCHER_SESSION_ID -> MATCHER_SESSION_ID
    int MATCHER_SESSION_NAME -> MATCHER_SESSION_NAME
    int MATCHER_ACTIONS_SESSION_NAME -> MATCHER_ACTIONS_SESSION_NAME
    int MATCHER_ACTIONS_SESSION_ID -> MATCHER_ACTIONS_SESSION_ID
    int MATCHER_ACTION_ID_SESSION_NAME -> MATCHER_ACTION_ID_SESSION_NAME
    java.util.HashMap mSessionProjectionMap -> mSessionProjectionMap
    java.util.HashMap mActionProjectionMap -> mActionProjectionMap
    void initializeStaticMethods(android.content.Context) -> initializeStaticMethods
    java.lang.String loadAuthority(android.content.Context) -> loadAuthority
    java.lang.String getAuthority(android.content.Context) -> getAuthority
    boolean onCreate() -> onCreate
    void printDatabaseStats() -> printDatabaseStats
    void purgeDatabase() -> purgeDatabase
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    java.lang.String getSessionUUID(long) -> getSessionUUID
    long getSessionID(java.lang.String) -> getSessionID
com.aviary.android.feather.library.providers.FeatherContentProvider$ActionsDbColumns -> com.aviary.android.feather.library.providers.FeatherContentProvider$ActionsDbColumns:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String SESSION_ID -> SESSION_ID
    java.lang.String ACTIONS -> ACTIONS
    java.lang.String CREATION_TIME -> CREATION_TIME
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_ITEM_TYPE -> CONTENT_ITEM_TYPE
    java.lang.String PATH_ACTIONS -> PATH_ACTIONS
    java.lang.String PATH_ACTION_ID -> PATH_ACTION_ID
    java.lang.String SCHEME -> SCHEME
    android.net.Uri getContentUri(android.content.Context,java.lang.String) -> getContentUri
    android.net.Uri getContentUri(android.content.Context,long) -> getContentUri
    android.net.Uri getContentUri(android.content.Context,long,long) -> getContentUri
    android.net.Uri getContentUri(android.content.Context,java.lang.String,long) -> getContentUri
com.aviary.android.feather.library.providers.FeatherContentProvider$ActionsDbColumns$Action -> com.aviary.android.feather.library.providers.FeatherContentProvider$ActionsDbColumns$Action:
    long id -> id
    byte[] actions -> actions
    long ctime -> ctime
    long session_id -> session_id
    java.lang.String getActions() -> getActions
    com.aviary.android.feather.library.providers.FeatherContentProvider$ActionsDbColumns$Action Create(android.database.Cursor) -> Create
com.aviary.android.feather.library.providers.FeatherContentProvider$DatabaseHelper -> com.aviary.android.feather.library.providers.FeatherContentProvider$DatabaseHelper:
    com.aviary.android.feather.library.providers.FeatherContentProvider this$0 -> this$0
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.aviary.android.feather.library.providers.FeatherContentProvider$SessionsDbColumns -> com.aviary.android.feather.library.providers.FeatherContentProvider$SessionsDbColumns:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String SESSION -> SESSION
    java.lang.String CREATION_TIME -> CREATION_TIME
    java.lang.String FILE_NAME -> FILE_NAME
    java.lang.String SCHEME -> SCHEME
    java.lang.String PATH_SESSIONS -> PATH_SESSIONS
    java.lang.String PATH_SESSION_ID -> PATH_SESSION_ID
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_ITEM_TYPE -> CONTENT_ITEM_TYPE
    android.net.Uri mContentIdUriBase -> mContentIdUriBase
    void init(android.content.Context) -> init
    android.net.Uri getContentIdUriBase(android.content.Context) -> getContentIdUriBase
    android.net.Uri getContentUri(android.content.Context,java.lang.String) -> getContentUri
    android.net.Uri getContentUri(android.content.Context,long) -> getContentUri
com.aviary.android.feather.library.providers.FeatherContentProvider$SessionsDbColumns$Session -> com.aviary.android.feather.library.providers.FeatherContentProvider$SessionsDbColumns$Session:
    java.lang.String session -> session
    long id -> id
    long ctime -> ctime
    java.lang.String file_name -> file_name
    com.aviary.android.feather.library.providers.FeatherContentProvider$SessionsDbColumns$Session Create(android.database.Cursor) -> Create
com.aviary.android.feather.library.services.BadgeService -> com.aviary.android.feather.library.services.BadgeService:
    java.lang.String BADGE_ITEM_PREFIX -> BADGE_ITEM_PREFIX
    com.aviary.android.feather.common.log.LoggerFactory$Logger logger -> logger
    java.util.Set mToolsBadges -> mToolsBadges
    java.util.List mToolBadgesUpdateListeners -> mToolBadgesUpdateListeners
    boolean mEnabled -> mEnabled
    android.database.ContentObserver mObserver -> mObserver
    android.content.Context getBaseContext() -> getBaseContext
    void registerToExternalUpdates() -> registerToExternalUpdates
    boolean isEnabled() -> isEnabled
    void registerOnToolBadgesUpdateListener(com.aviary.android.feather.library.services.BadgeService$OnToolBadgesUpdateListener) -> registerOnToolBadgesUpdateListener
    void removeOnToolBadgesUpdateListener(com.aviary.android.feather.library.services.BadgeService$OnToolBadgesUpdateListener) -> removeOnToolBadgesUpdateListener
    void updateToolBadges() -> updateToolBadges
    boolean updateFromList(com.aviary.android.feather.library.services.IAviaryController,com.aviary.android.feather.library.services.PreferenceService,com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters,java.lang.String) -> updateFromList
    void markAsRead(com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters) -> markAsRead
    boolean getIsActive(com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters) -> getIsActive
    boolean getIsActive(java.lang.String) -> getIsActive
    void markAsRead(java.lang.String) -> markAsRead
    void dispose() -> dispose
    void dispatchToolBadgesUpdate() -> dispatchToolBadgesUpdate
    void dispatchToolBadgeSingleUpdate(com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters) -> dispatchToolBadgeSingleUpdate
    void access$0(com.aviary.android.feather.library.services.BadgeService) -> access$0
    boolean access$1(com.aviary.android.feather.library.services.BadgeService,com.aviary.android.feather.library.services.IAviaryController,com.aviary.android.feather.library.services.PreferenceService,com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters,java.lang.String) -> access$1
    java.util.Set access$2(com.aviary.android.feather.library.services.BadgeService) -> access$2
    void access$3(com.aviary.android.feather.library.services.BadgeService) -> access$3
com.aviary.android.feather.library.services.BadgeService$1 -> com.aviary.android.feather.library.services.BadgeService$1:
    com.aviary.android.feather.library.services.BadgeService this$0 -> this$0
    void onChange(boolean) -> onChange
    void onChange(boolean,android.net.Uri) -> onChange
com.aviary.android.feather.library.services.BadgeService$2 -> com.aviary.android.feather.library.services.BadgeService$2:
    com.aviary.android.feather.library.services.BadgeService this$0 -> this$0
    java.util.Set run(com.aviary.android.feather.common.threading.ThreadPool$Worker,java.lang.Integer[]) -> run
    java.lang.Object run(com.aviary.android.feather.common.threading.ThreadPool$Worker,java.lang.Object[]) -> run
com.aviary.android.feather.library.services.BadgeService$3 -> com.aviary.android.feather.library.services.BadgeService$3:
    com.aviary.android.feather.library.services.BadgeService this$0 -> this$0
    void onFutureDone(com.aviary.android.feather.common.threading.Future) -> onFutureDone
    com.aviary.android.feather.library.services.BadgeService access$0(com.aviary.android.feather.library.services.BadgeService$3) -> access$0
com.aviary.android.feather.library.services.BadgeService$3$1 -> com.aviary.android.feather.library.services.BadgeService$3$1:
    com.aviary.android.feather.library.services.BadgeService$3 this$1 -> this$1
    void run() -> run
com.aviary.android.feather.library.services.BadgeService$4 -> com.aviary.android.feather.library.services.BadgeService$4:
    com.aviary.android.feather.library.services.BadgeService this$0 -> this$0
    com.aviary.android.feather.library.services.BadgeService$OnToolBadgesUpdateListener val$l -> val$l
    com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters val$type -> val$type
    void run() -> run
com.aviary.android.feather.library.services.BadgeService$OnToolBadgesUpdateListener -> com.aviary.android.feather.library.services.BadgeService$OnToolBadgesUpdateListener:
    void onToolBadgesUpdate(com.aviary.android.feather.library.services.BadgeService) -> onToolBadgesUpdate
    void onToolBadgeSingleUpdate(com.aviary.android.feather.library.services.BadgeService,com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters) -> onToolBadgeSingleUpdate
com.aviary.android.feather.library.services.BaseContextService -> com.aviary.android.feather.library.services.BaseContextService:
    com.aviary.android.feather.library.services.IAviaryController mContext -> mContext
    com.aviary.android.feather.common.log.LoggerFactory$Logger logger -> logger
    boolean mDisposed -> mDisposed
    android.os.Handler mHandler -> mHandler
    com.aviary.android.feather.library.services.IAviaryController getContext() -> getContext
    boolean isActive() -> isActive
    void internalDispose() -> internalDispose
    void dispose() -> dispose
com.aviary.android.feather.library.services.ConfigService -> com.aviary.android.feather.library.services.ConfigService:
    android.content.res.Resources mResources -> mResources
    int getInteger(int) -> getInteger
    int[] getIntArray(int) -> getIntArray
    int[] getSizeArray(int) -> getSizeArray
    int getColor(int) -> getColor
    android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    boolean getBoolean(int) -> getBoolean
    java.lang.String getString(int) -> getString
    int getDimensionPixelSize(int) -> getDimensionPixelSize
    java.lang.String[] getStringArray(int) -> getStringArray
    void dispose() -> dispose
com.aviary.android.feather.library.services.DownloadService -> com.aviary.android.feather.library.services.DownloadService:
    com.aviary.android.feather.library.content.cache.DownloadCachedManager mDownloadManager -> mDownloadManager
    void download(java.lang.String,int,long,com.aviary.android.feather.library.content.cache.DownloadManager$OnDownloadListener,com.aviary.android.feather.library.content.cache.DownloadManager$OnDownloadProgressListener) -> download
    java.io.File loadFile(java.lang.String,long) -> loadFile
    java.io.InputStream loadStream(java.lang.String,long) -> loadStream
    void dispose() -> dispose
com.aviary.android.feather.library.services.DragControllerService -> com.aviary.android.feather.library.services.DragControllerService:
    int DRAG_ACTION_MOVE -> DRAG_ACTION_MOVE
    int DRAG_ACTION_COPY -> DRAG_ACTION_COPY
    int VIBRATE_DURATION -> VIBRATE_DURATION
    android.os.Vibrator mVibrator -> mVibrator
    android.graphics.Rect mRectTemp -> mRectTemp
    int[] mCoordinatesTemp -> mCoordinatesTemp
    float mMotionDownX -> mMotionDownX
    float mMotionDownY -> mMotionDownY
    android.util.DisplayMetrics mDisplayMetrics -> mDisplayMetrics
    android.view.View mOriginator -> mOriginator
    float mTouchOffsetX -> mTouchOffsetX
    float mTouchOffsetY -> mTouchOffsetY
    com.aviary.android.feather.library.services.DragControllerService$DragSource mDragSource -> mDragSource
    java.lang.Object mDragInfo -> mDragInfo
    com.aviary.android.feather.library.services.drag.DragView mDragView -> mDragView
    java.util.ArrayList mDropTargets -> mDropTargets
    com.aviary.android.feather.library.services.DragControllerService$DragListener mListener -> mListener
    android.os.IBinder mWindowToken -> mWindowToken
    android.view.View mMoveTarget -> mMoveTarget
    com.aviary.android.feather.library.services.drag.DropTarget mLastDropTarget -> mLastDropTarget
    android.view.inputmethod.InputMethodManager mInputMethodManager -> mInputMethodManager
    void activate() -> activate
    void deactivate() -> deactivate
    boolean active() -> active
    boolean startDrag(android.view.View,com.aviary.android.feather.library.services.DragControllerService$DragSource,java.lang.Object,int,boolean) -> startDrag
    boolean startDrag(android.view.View,android.graphics.Bitmap,int,int,com.aviary.android.feather.library.services.DragControllerService$DragSource,java.lang.Object,int,boolean) -> startDrag
    boolean startDrag(android.graphics.Bitmap,int,int,int,int,int,int,com.aviary.android.feather.library.services.DragControllerService$DragSource,java.lang.Object,int,boolean) -> startDrag
    boolean isDragging() -> isDragging
    android.graphics.Bitmap getViewBitmap(android.view.View) -> getViewBitmap
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void cancelDrag() -> cancelDrag
    void endDrag() -> endDrag
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void setMoveTarget(android.view.View) -> setMoveTarget
    boolean dispatchUnhandledMove(android.view.View,int) -> dispatchUnhandledMove
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean drop(float,float) -> drop
    com.aviary.android.feather.library.services.drag.DropTarget findDropTarget(int,int,int[]) -> findDropTarget
    void recordScreenSize() -> recordScreenSize
    int clamp(int,int,int) -> clamp
    void setWindowToken(android.os.IBinder) -> setWindowToken
    void setDragListener(com.aviary.android.feather.library.services.DragControllerService$DragListener) -> setDragListener
    void addDropTarget(com.aviary.android.feather.library.services.drag.DropTarget) -> addDropTarget
    void removeDropTarget(com.aviary.android.feather.library.services.drag.DropTarget) -> removeDropTarget
    void dispose() -> dispose
com.aviary.android.feather.library.services.DragControllerService$DragListener -> com.aviary.android.feather.library.services.DragControllerService$DragListener:
    void onDragStart(com.aviary.android.feather.library.services.DragControllerService$DragSource,java.lang.Object,int) -> onDragStart
    boolean onDragEnd() -> onDragEnd
com.aviary.android.feather.library.services.DragControllerService$DragSource -> com.aviary.android.feather.library.services.DragControllerService$DragSource:
    void setDragController(com.aviary.android.feather.library.services.DragControllerService) -> setDragController
    com.aviary.android.feather.library.services.DragControllerService getDragController() -> getDragController
    void onDropCompleted(android.view.View,boolean) -> onDropCompleted
com.aviary.android.feather.library.services.FutureListener -> com.aviary.android.feather.library.services.FutureListener:
    void onFutureDone(java.util.concurrent.Future) -> onFutureDone
com.aviary.android.feather.library.services.HiResService -> com.aviary.android.feather.library.services.HiResService:
    boolean running -> running
    android.os.Looper mServiceLooper -> mServiceLooper
    com.aviary.android.feather.library.services.HiResService$InternalHandler mServiceHandler -> mServiceHandler
    android.os.HandlerThread thread -> thread
    void start() -> start
    boolean isRunning() -> isRunning
    void stop() -> stop
    void sendMessage(android.os.Message) -> sendMessage
    android.os.Message obtainMessage() -> obtainMessage
    android.os.Message obtainMessage(int) -> obtainMessage
    void dispose() -> dispose
    android.content.Context getApplicationContext() -> getApplicationContext
    void load(java.lang.String,android.net.Uri) -> load
    void replace(java.lang.String,android.net.Uri) -> replace
    void execute(java.lang.String,com.aviary.android.feather.headless.moa.MoaActionList) -> execute
    void handleFile(android.content.Context,java.lang.String,android.net.Uri) -> handleFile
    android.content.Context access$0(com.aviary.android.feather.library.services.HiResService) -> access$0
    void access$1(com.aviary.android.feather.library.services.HiResService,android.content.Context,java.lang.String,android.net.Uri) -> access$1
com.aviary.android.feather.library.services.HiResService$1 -> com.aviary.android.feather.library.services.HiResService$1:
    com.aviary.android.feather.library.services.HiResService this$0 -> this$0
    android.net.Uri val$uri -> val$uri
    java.lang.String val$session -> val$session
    void run() -> run
com.aviary.android.feather.library.services.HiResService$2 -> com.aviary.android.feather.library.services.HiResService$2:
    com.aviary.android.feather.library.services.HiResService this$0 -> this$0
    java.lang.String val$session -> val$session
    android.net.Uri val$uri -> val$uri
    void run() -> run
com.aviary.android.feather.library.services.HiResService$3 -> com.aviary.android.feather.library.services.HiResService$3:
    com.aviary.android.feather.library.services.HiResService this$0 -> this$0
    java.lang.String val$session -> val$session
    com.aviary.android.feather.headless.moa.MoaActionList val$actions -> val$actions
    void run() -> run
com.aviary.android.feather.library.services.HiResService$InternalHandler -> com.aviary.android.feather.library.services.HiResService$InternalHandler:
    com.aviary.android.feather.library.services.HiResService this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.aviary.android.feather.library.services.IAPService -> com.aviary.android.feather.library.services.IAPService:
    com.aviary.android.feather.cds.IAPWrapper mWrapper -> mWrapper
    int PURCHASE_FLOW_REQUEST_CODE -> PURCHASE_FLOW_REQUEST_CODE
    com.aviary.android.feather.cds.IAPWrapper initialize(java.lang.String) -> initialize
    void launchPurchaseFlow(java.lang.String,com.aviary.android.feather.cds.billing.util.IabHelper$OnIabPurchaseFinishedListener,java.lang.String) -> launchPurchaseFlow
    boolean handleActivityResult(int,int,android.content.Intent) -> handleActivityResult
    void dispose() -> dispose
    com.aviary.android.feather.cds.IAPWrapper available() -> available
    void startSetup(com.aviary.android.feather.cds.billing.util.IabHelper$OnIabSetupFinishedListener) -> startSetup
    com.aviary.android.feather.cds.billing.util.IabResult getResult() -> getResult
    boolean isSetupDone() -> isSetupDone
    boolean isDisposed() -> isDisposed
    boolean isAvailable() -> isAvailable
    com.aviary.android.feather.cds.billing.util.Inventory queryInventory(boolean,java.util.List) -> queryInventory
com.aviary.android.feather.library.services.IAviaryController -> com.aviary.android.feather.library.services.IAviaryController:
    java.lang.Object getService(java.lang.Class) -> getService
    android.content.Context getBaseContext() -> getBaseContext
    android.app.Activity getBaseActivity() -> getBaseActivity
    android.graphics.Matrix getCurrentImageViewMatrix() -> getCurrentImageViewMatrix
    void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    void cancel() -> cancel
    com.aviary.android.feather.library.content.ToolEntry getActiveTool() -> getActiveTool
    void setToolbarTitle(int) -> setToolbarTitle
    void setToolbarTitle(java.lang.CharSequence) -> setToolbarTitle
    void restoreToolbarTitle() -> restoreToolbarTitle
    void setPanelApplyStatusEnabled(boolean) -> setPanelApplyStatusEnabled
    com.aviary.android.feather.library.services.drag.DragLayer getDragLayer() -> getDragLayer
com.aviary.android.feather.library.services.LocalDataService -> com.aviary.android.feather.library.services.LocalDataService:
    java.lang.String sourceImagePath -> sourceImagePath
    android.net.Uri sourceImageUri -> sourceImageUri
    android.net.Uri destImageUri -> destImageUri
    android.graphics.Bitmap$CompressFormat outputFormat -> outputFormat
    int[] sourceImageSize -> sourceImageSize
    android.os.Bundle exifBundle -> exifBundle
    android.content.Intent mOriginalIntent -> mOriginalIntent
    java.lang.Boolean mEnableFastPreview -> mEnableFastPreview
    void dispose() -> dispose
    void setOriginalIntent(android.content.Intent) -> setOriginalIntent
    android.content.Intent getOriginalIntent() -> getOriginalIntent
    android.os.Bundle getOriginalExtras() -> getOriginalExtras
    void remove(java.lang.String) -> remove
    void getSourceImageSize(int[]) -> getSourceImageSize
    void setSourceImageSize(int[]) -> setSourceImageSize
    java.lang.String getSourceImagePath() -> getSourceImagePath
    void setSourceImagePath(java.lang.String) -> setSourceImagePath
    android.net.Uri getSourceImageUri() -> getSourceImageUri
    void setSourceImageUri(android.net.Uri) -> setSourceImageUri
    android.net.Uri getDestImageUri() -> getDestImageUri
    void setDestImageUri(android.net.Uri) -> setDestImageUri
    android.graphics.Bitmap$CompressFormat getOutputFormat() -> getOutputFormat
    void setOutputFormat(android.graphics.Bitmap$CompressFormat) -> setOutputFormat
    void setOriginalExifBundle(android.os.Bundle) -> setOriginalExifBundle
    android.os.Bundle getOriginalExifBundle() -> getOriginalExifBundle
    java.lang.Object getIntentValue(java.lang.String,java.lang.Object) -> getIntentValue
    boolean getIntentContainsKey(java.lang.String) -> getIntentContainsKey
    boolean getFastPreviewEnabled() -> getFastPreviewEnabled
com.aviary.android.feather.library.services.PreferenceService -> com.aviary.android.feather.library.services.PreferenceService:
    android.content.SharedPreferences mPrefs -> mPrefs
    java.lang.String PREF_NAME -> PREF_NAME
    java.lang.String MESSAGE_PREFERENCE_PREFIX -> MESSAGE_PREFERENCE_PREFIX
    java.lang.String MESSAGE_SHOW_TIMESTAMP -> MESSAGE_SHOW_TIMESTAMP
    java.lang.String MESSAGE_FIRST_LAUNCH -> MESSAGE_FIRST_LAUNCH
    java.lang.String BADGE_TOOL_PREFIX -> BADGE_TOOL_PREFIX
    java.lang.String BADGE_ITEM_PREFIX -> BADGE_ITEM_PREFIX
    void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> registerOnSharedPreferenceChangeListener
    void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> unregisterOnSharedPreferenceChangeListener
    boolean containsValue(java.lang.String) -> containsValue
    int getInt(java.lang.String,int) -> getInt
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    long getLong(java.lang.String,long) -> getLong
    boolean putInt(java.lang.String,int) -> putInt
    boolean putLong(java.lang.String,long) -> putLong
    boolean putString(java.lang.String,java.lang.String) -> putString
    boolean putBoolean(java.lang.String,boolean) -> putBoolean
    long getMessageLastShownDate() -> getMessageLastShownDate
    void setMessageLastShownDate(long) -> setMessageLastShownDate
    void markMessageAsRead(java.lang.String) -> markMessageAsRead
    void markToolAsRead(com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters) -> markToolAsRead
    long getToolLastReadDate(com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters) -> getToolLastReadDate
    boolean getMessageIsRead(java.lang.String) -> getMessageIsRead
    boolean getStandaloneBoolean(java.lang.String,boolean) -> getStandaloneBoolean
    java.lang.String getStandaloneString(java.lang.String,java.lang.String) -> getStandaloneString
    void dispose() -> dispose
com.aviary.android.feather.library.services.ServiceLoader -> com.aviary.android.feather.library.services.ServiceLoader:
    java.util.HashMap mMap -> mMap
    java.util.HashMap mServices -> mServices
    com.aviary.android.feather.library.services.IAviaryController mContext -> mContext
    com.aviary.android.feather.library.services.BaseContextService getService(java.lang.Class) -> getService
    void register(java.lang.Class) -> register
    void register(com.aviary.android.feather.library.services.BaseContextService) -> register
    boolean remove(com.aviary.android.feather.library.services.BaseContextService) -> remove
    boolean remove(java.lang.Class) -> remove
    com.aviary.android.feather.library.services.BaseContextService get(java.lang.String,com.aviary.android.feather.library.services.IAviaryController) -> get
    void dispose() -> dispose
com.aviary.android.feather.library.services.ThreadPoolService -> com.aviary.android.feather.library.services.ThreadPoolService:
    com.aviary.android.feather.common.threading.ThreadPool mExecutor -> mExecutor
    com.aviary.android.feather.common.threading.Future submit(com.aviary.android.feather.common.threading.ThreadPool$Job,com.aviary.android.feather.common.threading.FutureListener,java.lang.Object[]) -> submit
    void printStats() -> printStats
    int getPoolSize() -> getPoolSize
    long getCompletedTaskCount() -> getCompletedTaskCount
    int getActiveCount() -> getActiveCount
    long getTaskCount() -> getTaskCount
    void dispose() -> dispose
com.aviary.android.feather.library.services.drag.DragLayer -> com.aviary.android.feather.library.services.drag.DragLayer:
    com.aviary.android.feather.library.services.DragControllerService mDragController -> mDragController
    void setDragController(com.aviary.android.feather.library.services.DragControllerService) -> setDragController
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean dispatchUnhandledMove(android.view.View,int) -> dispatchUnhandledMove
com.aviary.android.feather.library.services.drag.DragView -> com.aviary.android.feather.library.services.drag.DragView:
    java.lang.String LOG_TAG -> LOG_TAG
    android.graphics.Bitmap mBitmap -> mBitmap
    android.graphics.Paint mPaint -> mPaint
    android.graphics.Paint mDefaultPaint -> mDefaultPaint
    int mRegistrationX -> mRegistrationX
    int mRegistrationY -> mRegistrationY
    com.aviary.android.feather.library.utils.EasingManager mTween -> mTween
    float mScale -> mScale
    float mAnimationScale -> mAnimationScale
    android.view.WindowManager$LayoutParams mLayoutParams -> mLayoutParams
    android.view.WindowManager mWindowManager -> mWindowManager
    int mTextureWidth -> mTextureWidth
    int mTextureHeight -> mTextureHeight
    float getScaleFactor() -> getScaleFactor
    void onMeasure(int,int) -> onMeasure
    void onDraw(android.graphics.Canvas) -> onDraw
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onEasingValueChanged(double,double) -> onEasingValueChanged
    void onEasingStarted(double) -> onEasingStarted
    void onEasingFinished(double) -> onEasingFinished
    void setPaint(android.graphics.Paint) -> setPaint
    void show(android.os.IBinder,int,int,boolean) -> show
    void move(int,int) -> move
    void remove(boolean) -> remove
    float access$0(com.aviary.android.feather.library.services.drag.DragView) -> access$0
    void access$1(com.aviary.android.feather.library.services.drag.DragView,float) -> access$1
    android.graphics.Paint access$2(com.aviary.android.feather.library.services.drag.DragView) -> access$2
    android.view.WindowManager access$3(com.aviary.android.feather.library.services.drag.DragView) -> access$3
com.aviary.android.feather.library.services.drag.DragView$1 -> com.aviary.android.feather.library.services.drag.DragView$1:
    com.aviary.android.feather.library.services.drag.DragView this$0 -> this$0
    android.view.View val$view -> val$view
    void onEasingValueChanged(double,double) -> onEasingValueChanged
    void onEasingStarted(double) -> onEasingStarted
    void onEasingFinished(double) -> onEasingFinished
com.aviary.android.feather.library.services.drag.DragView$2 -> com.aviary.android.feather.library.services.drag.DragView$2:
    com.aviary.android.feather.library.services.drag.DragView this$0 -> this$0
    android.view.View val$view -> val$view
    void run() -> run
com.aviary.android.feather.library.services.drag.DropTarget -> com.aviary.android.feather.library.services.drag.DropTarget:
    void onDrop(com.aviary.android.feather.library.services.DragControllerService$DragSource,int,int,int,int,com.aviary.android.feather.library.services.drag.DragView,java.lang.Object) -> onDrop
    void onDragEnter(com.aviary.android.feather.library.services.DragControllerService$DragSource,int,int,int,int,com.aviary.android.feather.library.services.drag.DragView,java.lang.Object) -> onDragEnter
    void onDragOver(com.aviary.android.feather.library.services.DragControllerService$DragSource,int,int,int,int,com.aviary.android.feather.library.services.drag.DragView,java.lang.Object) -> onDragOver
    void onDragExit(com.aviary.android.feather.library.services.DragControllerService$DragSource,int,int,int,int,com.aviary.android.feather.library.services.drag.DragView,java.lang.Object) -> onDragExit
    boolean acceptDrop(com.aviary.android.feather.library.services.DragControllerService$DragSource,int,int,int,int,com.aviary.android.feather.library.services.drag.DragView,java.lang.Object) -> acceptDrop
    android.graphics.Rect estimateDropLocation(com.aviary.android.feather.library.services.DragControllerService$DragSource,int,int,int,int,com.aviary.android.feather.library.services.drag.DragView,java.lang.Object,android.graphics.Rect) -> estimateDropLocation
    void getHitRect(android.graphics.Rect) -> getHitRect
    void getLocationOnScreen(int[]) -> getLocationOnScreen
    int getLeft() -> getLeft
    int getTop() -> getTop
com.aviary.android.feather.library.services.drag.DropTarget$DropTargetListener -> com.aviary.android.feather.library.services.drag.DropTarget$DropTargetListener:
    boolean acceptDrop(com.aviary.android.feather.library.services.DragControllerService$DragSource,int,int,int,int,com.aviary.android.feather.library.services.drag.DragView,java.lang.Object) -> acceptDrop
    void onDrop(com.aviary.android.feather.library.services.DragControllerService$DragSource,int,int,int,int,com.aviary.android.feather.library.services.drag.DragView,java.lang.Object) -> onDrop
com.aviary.android.feather.library.tracking.AbstractTracker -> com.aviary.android.feather.library.tracking.AbstractTracker:
    java.lang.String mCallingAppName -> mCallingAppName
    java.lang.String mAppName -> mAppName
    java.lang.String mSdkVersion -> mSdkVersion
    java.lang.String mApiKey -> mApiKey
    void putCustomAttribute(java.lang.String,java.lang.String) -> putCustomAttribute
    boolean recordTag(java.lang.String,java.util.HashMap) -> recordTag
    void open() -> open
    void upload() -> upload
    boolean close() -> close
com.aviary.android.feather.library.tracking.Tracker -> com.aviary.android.feather.library.tracking.Tracker:
    java.lang.String EXTRAS_APP_NAME -> EXTRAS_APP_NAME
    java.lang.String EXTRAS_AB_GROUP -> EXTRAS_AB_GROUP
    java.lang.String EXTRAS_HAS_BADGES -> EXTRAS_HAS_BADGES
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String TRACKER_CLASS -> TRACKER_CLASS
    com.aviary.android.feather.library.tracking.AbstractTracker mInstance -> mInstance
    java.lang.Object mLock -> mLock
    android.os.HandlerThread mHandlerThread -> mHandlerThread
    android.os.Handler mHandler -> mHandler
    void destroy() -> destroy
    void putCustomAttribute(java.lang.String,java.lang.String) -> putCustomAttribute
    void recordTag(java.lang.String) -> recordTag
    void recordTag(java.lang.String,java.util.HashMap) -> recordTag
    void create(android.content.Context,java.lang.String) -> create
    void open() -> open
    void upload() -> upload
    void close() -> close
    java.lang.Object access$0() -> access$0
    com.aviary.android.feather.library.tracking.AbstractTracker access$1() -> access$1
    void access$2(com.aviary.android.feather.library.tracking.AbstractTracker) -> access$2
com.aviary.android.feather.library.tracking.Tracker$1 -> com.aviary.android.feather.library.tracking.Tracker$1:
    java.lang.String val$key -> val$key
    java.lang.String val$value -> val$value
    void run() -> run
com.aviary.android.feather.library.tracking.Tracker$2 -> com.aviary.android.feather.library.tracking.Tracker$2:
    java.lang.String val$theTag -> val$theTag
    java.util.HashMap val$attributes -> val$attributes
    void run() -> run
com.aviary.android.feather.library.tracking.Tracker$3 -> com.aviary.android.feather.library.tracking.Tracker$3:
    android.content.Context val$context -> val$context
    java.lang.String val$sdkVersion -> val$sdkVersion
    void run() -> run
com.aviary.android.feather.library.tracking.Tracker$4 -> com.aviary.android.feather.library.tracking.Tracker$4:
    void run() -> run
com.aviary.android.feather.library.tracking.Tracker$5 -> com.aviary.android.feather.library.tracking.Tracker$5:
    void run() -> run
com.aviary.android.feather.library.tracking.Tracker$6 -> com.aviary.android.feather.library.tracking.Tracker$6:
    void run() -> run
com.aviary.android.feather.library.utils.ArrayUtils -> com.aviary.android.feather.library.utils.ArrayUtils:
    java.lang.CharSequence[] concat(java.lang.CharSequence[],java.lang.CharSequence[][]) -> concat
com.aviary.android.feather.library.utils.BitmapUtils -> com.aviary.android.feather.library.utils.BitmapUtils:
    java.lang.String LOG_TAG -> LOG_TAG
    int COMPRESS_JPEG_QUALITY -> COMPRESS_JPEG_QUALITY
    int UNCONSTRAINED -> UNCONSTRAINED
    android.graphics.PorterDuffColorFilter mWhiteMultiplyFilter -> mWhiteMultiplyFilter
    int[] $SWITCH_TABLE$com$aviary$android$feather$library$utils$BitmapUtils$FLIP_MODE -> $SWITCH_TABLE$com$aviary$android$feather$library$utils$BitmapUtils$FLIP_MODE
    int[] $SWITCH_TABLE$com$aviary$android$feather$library$utils$BitmapUtils$ROTATION -> $SWITCH_TABLE$com$aviary$android$feather$library$utils$BitmapUtils$ROTATION
    android.graphics.Bitmap copy(android.graphics.Bitmap,android.graphics.Bitmap$Config) -> copy
    void copy(android.graphics.Bitmap,android.graphics.Bitmap) -> copy
    android.graphics.Bitmap createThumbnail(android.graphics.Bitmap,int,int,android.graphics.ColorMatrixColorFilter,int) -> createThumbnail
    android.graphics.Bitmap createThumbnail(android.graphics.Bitmap,int,int,com.aviary.android.feather.library.utils.BitmapUtils$FLIP_MODE,int) -> createThumbnail
    android.graphics.Bitmap createThumbnail(android.graphics.Bitmap,int,int,int,int) -> createThumbnail
    android.graphics.Bitmap createThumbnail(android.graphics.Bitmap,int,int,com.aviary.android.feather.library.utils.BitmapUtils$ROTATION,com.aviary.android.feather.library.utils.BitmapUtils$FLIP_MODE,android.graphics.ColorMatrixColorFilter,android.graphics.drawable.Drawable,int,float) -> createThumbnail
    android.graphics.Bitmap createThumbnail(android.graphics.Bitmap,int,int,com.aviary.android.feather.library.utils.BitmapUtils$ROTATION,com.aviary.android.feather.library.utils.BitmapUtils$FLIP_MODE,android.graphics.ColorMatrixColorFilter,int,int,int,float) -> createThumbnail
    void drawBitmapOnCanvas(android.graphics.Bitmap,int,int,com.aviary.android.feather.library.utils.BitmapUtils$ROTATION,com.aviary.android.feather.library.utils.BitmapUtils$FLIP_MODE,android.graphics.ColorMatrixColorFilter,int,android.graphics.Canvas) -> drawBitmapOnCanvas
    android.graphics.Bitmap createThumbnail(android.graphics.Bitmap,int,int,com.aviary.android.feather.library.utils.BitmapUtils$ROTATION,int) -> createThumbnail
    android.graphics.Bitmap flip(android.graphics.Bitmap,com.aviary.android.feather.library.utils.BitmapUtils$FLIP_MODE) -> flip
    int getRotationDegrees(com.aviary.android.feather.library.utils.BitmapUtils$ROTATION) -> getRotationDegrees
    android.graphics.Bitmap resizeBitmap(android.graphics.Bitmap,int,int) -> resizeBitmap
    android.graphics.Bitmap resizeBitmap(android.graphics.Bitmap,int,int,int) -> resizeBitmap
    int[] resize(int,int,int,int,int) -> resize
    android.graphics.Bitmap rotateBitmap(android.graphics.Bitmap,com.aviary.android.feather.library.utils.BitmapUtils$ROTATION) -> rotateBitmap
    byte[] compressBitmap(android.graphics.Bitmap) -> compressBitmap
    byte[] compressBitmap(android.graphics.Bitmap,android.graphics.Bitmap$CompressFormat,int) -> compressBitmap
    android.graphics.Bitmap$Config getConfig(android.graphics.Bitmap) -> getConfig
    android.graphics.Bitmap cropCenter(android.graphics.Bitmap,int,int,boolean) -> cropCenter
    android.graphics.Bitmap resizeAndRotateBySide(android.graphics.Bitmap,int,int,boolean,int,boolean) -> resizeAndRotateBySide
    int computeSampleSizeWithMaxPixels(int,int,int,int,int) -> computeSampleSizeWithMaxPixels
    int computeSampleSizeWithMaxPixels(int,int,int,int) -> computeSampleSizeWithMaxPixels
    int computeInitialSampleSize(int,int,int,int) -> computeInitialSampleSize
    android.graphics.Bitmap rotate(android.graphics.Bitmap,int,boolean) -> rotate
    boolean compareBySize(android.graphics.Bitmap,android.graphics.Bitmap) -> compareBySize
    android.graphics.Bitmap flattenDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,float,float) -> flattenDrawables
    android.graphics.Bitmap circleMask(android.graphics.Bitmap,float) -> circleMask
    android.graphics.Bitmap roundedCorners(android.graphics.Bitmap,float,float) -> roundedCorners
    android.graphics.Bitmap convertToAlphaMask(android.graphics.Bitmap) -> convertToAlphaMask
    android.graphics.Shader createShader(android.graphics.Bitmap) -> createShader
    int[] $SWITCH_TABLE$com$aviary$android$feather$library$utils$BitmapUtils$FLIP_MODE() -> $SWITCH_TABLE$com$aviary$android$feather$library$utils$BitmapUtils$FLIP_MODE
    int[] $SWITCH_TABLE$com$aviary$android$feather$library$utils$BitmapUtils$ROTATION() -> $SWITCH_TABLE$com$aviary$android$feather$library$utils$BitmapUtils$ROTATION
com.aviary.android.feather.library.utils.BitmapUtils$FLIP_MODE -> com.aviary.android.feather.library.utils.BitmapUtils$FLIP_MODE:
    com.aviary.android.feather.library.utils.BitmapUtils$FLIP_MODE None -> None
    com.aviary.android.feather.library.utils.BitmapUtils$FLIP_MODE Horizontal -> Horizontal
    com.aviary.android.feather.library.utils.BitmapUtils$FLIP_MODE Vertical -> Vertical
    com.aviary.android.feather.library.utils.BitmapUtils$FLIP_MODE HorizontalVertical -> HorizontalVertical
    com.aviary.android.feather.library.utils.BitmapUtils$FLIP_MODE[] ENUM$VALUES -> ENUM$VALUES
    com.aviary.android.feather.library.utils.BitmapUtils$FLIP_MODE[] values() -> values
    com.aviary.android.feather.library.utils.BitmapUtils$FLIP_MODE valueOf(java.lang.String) -> valueOf
com.aviary.android.feather.library.utils.BitmapUtils$ROTATION -> com.aviary.android.feather.library.utils.BitmapUtils$ROTATION:
    com.aviary.android.feather.library.utils.BitmapUtils$ROTATION ROTATE_90 -> ROTATE_90
    com.aviary.android.feather.library.utils.BitmapUtils$ROTATION ROTATE_180 -> ROTATE_180
    com.aviary.android.feather.library.utils.BitmapUtils$ROTATION ROTATE_270 -> ROTATE_270
    com.aviary.android.feather.library.utils.BitmapUtils$ROTATION ROTATE_NULL -> ROTATE_NULL
    com.aviary.android.feather.library.utils.BitmapUtils$ROTATION[] ENUM$VALUES -> ENUM$VALUES
    com.aviary.android.feather.library.utils.BitmapUtils$ROTATION[] values() -> values
    com.aviary.android.feather.library.utils.BitmapUtils$ROTATION valueOf(java.lang.String) -> valueOf
com.aviary.android.feather.library.utils.DecodeUtils -> com.aviary.android.feather.library.utils.DecodeUtils:
    com.aviary.android.feather.common.log.LoggerFactory$Logger logger -> logger
    android.graphics.Bitmap decode(android.content.Context,android.net.Uri,int,int,com.aviary.android.feather.library.utils.ImageSizes) -> decode
    android.graphics.Bitmap decodeBitmap(android.content.Context,android.net.Uri,android.graphics.BitmapFactory$Options,int,int,int,int) -> decodeBitmap
    java.io.InputStream openInputStream(android.content.Context,android.net.Uri) -> openInputStream
    boolean decodeImageBounds(java.io.InputStream,int[]) -> decodeImageBounds
    int computeSampleSize(int,int,int,int,int,com.aviary.android.feather.library.utils.ImageSizes) -> computeSampleSize
    java.io.InputStream openFileInputStream(java.lang.String) -> openFileInputStream
    java.io.InputStream openContentInputStream(android.content.Context,android.net.Uri) -> openContentInputStream
    java.io.InputStream openRemoteInputStream(android.net.Uri) -> openRemoteInputStream
    java.io.ByteArrayInputStream dup(java.io.InputStream) -> dup
    android.graphics.BitmapFactory$Options getDefaultOptions() -> getDefaultOptions
com.aviary.android.feather.library.utils.EasingManager -> com.aviary.android.feather.library.utils.EasingManager:
    int FPS -> FPS
    int FRAME_TIME -> FRAME_TIME
    android.os.Handler mHandler -> mHandler
    it.sephiroth.android.library.imagezoom.easing.Easing mEasing -> mEasing
    java.lang.reflect.Method mMethod -> mMethod
    boolean mRunning -> mRunning
    long mBase -> mBase
    int mDuration -> mDuration
    double mStartValue -> mStartValue
    double mEndValue -> mEndValue
    double mValue -> mValue
    boolean mInverted -> mInverted
    com.aviary.android.feather.library.utils.EasingManager$EasingCallback mEasingCallback -> mEasingCallback
    java.lang.String mToken -> mToken
    com.aviary.android.feather.library.utils.EasingManager$Ticker mTicker -> mTicker
    int[] $SWITCH_TABLE$com$aviary$android$feather$library$utils$EasingManager$EaseType -> $SWITCH_TABLE$com$aviary$android$feather$library$utils$EasingManager$EaseType
    void start(java.lang.Class,com.aviary.android.feather.library.utils.EasingManager$EaseType,double,double,int) -> start
    void start(java.lang.Class,com.aviary.android.feather.library.utils.EasingManager$EaseType,double,double,int,long) -> start
    void stop() -> stop
    it.sephiroth.android.library.imagezoom.easing.Easing createInstance(java.lang.Class) -> createInstance
    java.lang.reflect.Method getEasingMethod(it.sephiroth.android.library.imagezoom.easing.Easing,com.aviary.android.feather.library.utils.EasingManager$EaseType) -> getEasingMethod
    java.lang.String getMethodName(com.aviary.android.feather.library.utils.EasingManager$EaseType) -> getMethodName
    int[] $SWITCH_TABLE$com$aviary$android$feather$library$utils$EasingManager$EaseType() -> $SWITCH_TABLE$com$aviary$android$feather$library$utils$EasingManager$EaseType
com.aviary.android.feather.library.utils.EasingManager$EaseType -> com.aviary.android.feather.library.utils.EasingManager$EaseType:
    com.aviary.android.feather.library.utils.EasingManager$EaseType EaseIn -> EaseIn
    com.aviary.android.feather.library.utils.EasingManager$EaseType EaseOut -> EaseOut
    com.aviary.android.feather.library.utils.EasingManager$EaseType EaseInOut -> EaseInOut
    com.aviary.android.feather.library.utils.EasingManager$EaseType EaseNone -> EaseNone
    com.aviary.android.feather.library.utils.EasingManager$EaseType[] ENUM$VALUES -> ENUM$VALUES
    com.aviary.android.feather.library.utils.EasingManager$EaseType[] values() -> values
    com.aviary.android.feather.library.utils.EasingManager$EaseType valueOf(java.lang.String) -> valueOf
com.aviary.android.feather.library.utils.EasingManager$EasingCallback -> com.aviary.android.feather.library.utils.EasingManager$EasingCallback:
    void onEasingValueChanged(double,double) -> onEasingValueChanged
    void onEasingStarted(double) -> onEasingStarted
    void onEasingFinished(double) -> onEasingFinished
com.aviary.android.feather.library.utils.EasingManager$Ticker -> com.aviary.android.feather.library.utils.EasingManager$Ticker:
    com.aviary.android.feather.library.utils.EasingManager this$0 -> this$0
    void run() -> run
com.aviary.android.feather.library.utils.EasingManager$TickerStart -> com.aviary.android.feather.library.utils.EasingManager$TickerStart:
    double mValue -> mValue
    com.aviary.android.feather.library.utils.EasingManager this$0 -> this$0
    void run() -> run
com.aviary.android.feather.library.utils.ExifUtils -> com.aviary.android.feather.library.utils.ExifUtils:
    com.aviary.android.feather.common.log.LoggerFactory$Logger logger -> logger
    int getExifOrientation(java.lang.String) -> getExifOrientation
    int getExifOrientation(android.content.Context,android.net.Uri) -> getExifOrientation
com.aviary.android.feather.library.utils.ImageSizes -> com.aviary.android.feather.library.utils.ImageSizes:
    java.lang.String originalSize -> originalSize
    java.lang.String newSize -> newSize
    java.lang.String bucketSize -> bucketSize
    int[] realsize -> realsize
    void setBucketSize(java.lang.String) -> setBucketSize
    void computeBucketSize(int) -> computeBucketSize
    void setRealSize(int,int) -> setRealSize
    int[] getRealSize() -> getRealSize
    java.lang.String getBucketSize() -> getBucketSize
    void setOriginalSize(java.lang.String) -> setOriginalSize
    java.lang.String getOriginalSize() -> getOriginalSize
    void setNewSize(java.lang.String) -> setNewSize
    java.lang.String getNewSize() -> getNewSize
com.aviary.android.feather.library.utils.MatrixUtils -> com.aviary.android.feather.library.utils.MatrixUtils:
    void mapPoints(android.graphics.Matrix,float[]) -> mapPoints
    float[] getScale(android.graphics.Matrix) -> getScale
    float[] getValues(android.graphics.Matrix) -> getValues
com.aviary.android.feather.library.utils.SortedList -> com.aviary.android.feather.library.utils.SortedList:
    long serialVersionUID -> serialVersionUID
    java.lang.String LOG_TAG -> LOG_TAG
    java.util.Comparator comparator -> comparator
    void add(int,java.lang.Object) -> add
    boolean add(java.lang.Object) -> add
com.aviary.android.feather.library.utils.UIConfiguration -> com.aviary.android.feather.library.utils.UIConfiguration:
    int DRAG_SCALE -> DRAG_SCALE
    float IMAGE_VIEW_MAX_ZOOM -> IMAGE_VIEW_MAX_ZOOM
com.aviary.android.feather.library.utils.Utils -> com.aviary.android.feather.library.utils.Utils:
    java.lang.String TAG -> TAG
    void assertTrue(boolean) -> assertTrue
    void assertTrue(boolean,java.lang.String,java.lang.Object[]) -> assertTrue
    java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    boolean equals(java.lang.Object,java.lang.Object) -> equals
    boolean isPowerOf2(int) -> isPowerOf2
    int nextPowerOf2(int) -> nextPowerOf2
    int prevPowerOf2(int) -> prevPowerOf2
    float distance(float,float,float,float) -> distance
    int clamp(int,int,int) -> clamp
    float clamp(float,float,float) -> clamp
    long clamp(long,long,long) -> clamp
    int compare(long,long) -> compare
    int ceilLog2(float) -> ceilLog2
    int floorLog2(float) -> floorLog2
    java.lang.String ensureNotNull(java.lang.String) -> ensureNotNull
    float parseFloatSafely(java.lang.String,float) -> parseFloatSafely
    int parseIntSafely(java.lang.String,int) -> parseIntSafely
    boolean isNullOrEmpty(java.lang.String) -> isNullOrEmpty
    void waitWithoutInterrupt(java.lang.Object) -> waitWithoutInterrupt
    boolean handleInterrruptedException(java.lang.Throwable) -> handleInterrruptedException
com.aviary.android.feather.opengl.AviaryGLSurfaceView -> com.aviary.android.feather.opengl.AviaryGLSurfaceView:
    com.aviary.android.feather.common.log.LoggerFactory$Logger logger -> logger
    android.os.Handler mUIHandler -> mUIHandler
    java.lang.Object mNativeLock -> mNativeLock
    long mPtr -> mPtr
    com.aviary.android.feather.opengl.AviaryGLSurfaceView$GLRendererListener mGlRendererListener -> mGlRendererListener
    long init(android.content.Context,android.util.AttributeSet) -> init
    void onDetachedFromWindow() -> onDetachedFromWindow
    void initializeOpenGL() -> initializeOpenGL
    void setRenderbufferSize(boolean,int,int) -> setRenderbufferSize
    com.aviary.android.feather.common.threading.Future executeEffect(java.lang.String,android.graphics.Bitmap,boolean,com.aviary.android.feather.common.threading.FutureListener) -> executeEffect
    com.aviary.android.feather.common.threading.Future writeBitmap(android.graphics.Bitmap,com.aviary.android.feather.common.threading.FutureListener) -> writeBitmap
    long nativeCreate() -> nativeCreate
    void nativeDispose() -> nativeDispose
    boolean nativeInitialize() -> nativeInitialize
    boolean nativeSetRenderbufferSize(int,int) -> nativeSetRenderbufferSize
    boolean nativeRender(android.graphics.Bitmap,java.lang.String) -> nativeRender
    boolean nativeWriteBitmap(android.graphics.Bitmap) -> nativeWriteBitmap
    com.aviary.android.feather.common.threading.Future submit(com.aviary.android.feather.common.threading.ThreadPool$Job,com.aviary.android.feather.common.threading.FutureListener,java.lang.Object[]) -> submit
    long n_create() -> n_create
    boolean n_dispose(long) -> n_dispose
    boolean n_initialize(long) -> n_initialize
    boolean n_setRenderbufferSize(long,int,int) -> n_setRenderbufferSize
    boolean n_render(long,android.graphics.Bitmap,java.lang.String) -> n_render
    boolean n_writeCurrentBitmap(long,android.graphics.Bitmap) -> n_writeCurrentBitmap
    void setOnGlRendererListener(com.aviary.android.feather.opengl.AviaryGLSurfaceView$GLRendererListener) -> setOnGlRendererListener
    void fireOnSurfaceCreated() -> fireOnSurfaceCreated
    void fireOnSurfaceChanged(boolean,int,int) -> fireOnSurfaceChanged
    com.aviary.android.feather.common.log.LoggerFactory$Logger access$0() -> access$0
    boolean access$1(com.aviary.android.feather.opengl.AviaryGLSurfaceView,android.graphics.Bitmap,java.lang.String) -> access$1
    boolean access$2(com.aviary.android.feather.opengl.AviaryGLSurfaceView,android.graphics.Bitmap) -> access$2
    boolean access$3(com.aviary.android.feather.opengl.AviaryGLSurfaceView) -> access$3
    boolean access$4(com.aviary.android.feather.opengl.AviaryGLSurfaceView,int,int) -> access$4
    void access$5(com.aviary.android.feather.opengl.AviaryGLSurfaceView,boolean,int,int) -> access$5
    void access$6(com.aviary.android.feather.opengl.AviaryGLSurfaceView) -> access$6
    void access$7(com.aviary.android.feather.opengl.AviaryGLSurfaceView) -> access$7
    void access$8(com.aviary.android.feather.opengl.AviaryGLSurfaceView,boolean,int,int) -> access$8
    com.aviary.android.feather.opengl.AviaryGLSurfaceView$GLRendererListener access$9(com.aviary.android.feather.opengl.AviaryGLSurfaceView) -> access$9
com.aviary.android.feather.opengl.AviaryGLSurfaceView$1 -> com.aviary.android.feather.opengl.AviaryGLSurfaceView$1:
    com.aviary.android.feather.opengl.AviaryGLSurfaceView this$0 -> this$0
    void onFutureDone(com.aviary.android.feather.common.threading.Future) -> onFutureDone
com.aviary.android.feather.opengl.AviaryGLSurfaceView$2 -> com.aviary.android.feather.opengl.AviaryGLSurfaceView$2:
    com.aviary.android.feather.opengl.AviaryGLSurfaceView this$0 -> this$0
    boolean val$changed -> val$changed
    int val$width -> val$width
    int val$height -> val$height
    void onFutureDone(com.aviary.android.feather.common.threading.Future) -> onFutureDone
com.aviary.android.feather.opengl.AviaryGLSurfaceView$3 -> com.aviary.android.feather.opengl.AviaryGLSurfaceView$3:
    com.aviary.android.feather.opengl.AviaryGLSurfaceView this$0 -> this$0
    boolean val$changed -> val$changed
    int val$width -> val$width
    int val$height -> val$height
    void run() -> run
com.aviary.android.feather.opengl.AviaryGLSurfaceView$AviaryGLRenderer -> com.aviary.android.feather.opengl.AviaryGLSurfaceView$AviaryGLRenderer:
    int mWidth -> mWidth
    int mHeight -> mHeight
    com.aviary.android.feather.opengl.AviaryGLSurfaceView this$0 -> this$0
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
com.aviary.android.feather.opengl.AviaryGLSurfaceView$GLRendererListener -> com.aviary.android.feather.opengl.AviaryGLSurfaceView$GLRendererListener:
    void OnSurfaceCreated() -> OnSurfaceCreated
    void OnSurfaceChanged(boolean,int,int) -> OnSurfaceChanged
com.aviary.android.feather.opengl.AviaryGLSurfaceView$InitializeOpenGLJob -> com.aviary.android.feather.opengl.AviaryGLSurfaceView$InitializeOpenGLJob:
    com.aviary.android.feather.opengl.AviaryGLSurfaceView this$0 -> this$0
    java.lang.Void run(com.aviary.android.feather.common.threading.ThreadPool$Worker,java.lang.Void[]) -> run
    java.lang.Object run(com.aviary.android.feather.common.threading.ThreadPool$Worker,java.lang.Object[]) -> run
com.aviary.android.feather.opengl.AviaryGLSurfaceView$RenderJob -> com.aviary.android.feather.opengl.AviaryGLSurfaceView$RenderJob:
    java.lang.ref.WeakReference mBitmap -> mBitmap
    com.aviary.android.feather.opengl.AviaryGLSurfaceView this$0 -> this$0
    java.lang.Boolean run(com.aviary.android.feather.common.threading.ThreadPool$Worker,java.lang.String[]) -> run
    java.lang.Object run(com.aviary.android.feather.common.threading.ThreadPool$Worker,java.lang.Object[]) -> run
com.aviary.android.feather.opengl.AviaryGLSurfaceView$SetRenderbufferSizeJob -> com.aviary.android.feather.opengl.AviaryGLSurfaceView$SetRenderbufferSizeJob:
    com.aviary.android.feather.opengl.AviaryGLSurfaceView this$0 -> this$0
    java.lang.Void run(com.aviary.android.feather.common.threading.ThreadPool$Worker,java.lang.Integer[]) -> run
    java.lang.Object run(com.aviary.android.feather.common.threading.ThreadPool$Worker,java.lang.Object[]) -> run
com.aviary.android.feather.opengl.AviaryGLSurfaceView$WriteBitmapJob -> com.aviary.android.feather.opengl.AviaryGLSurfaceView$WriteBitmapJob:
    java.lang.ref.WeakReference mBitmap -> mBitmap
    com.aviary.android.feather.opengl.AviaryGLSurfaceView this$0 -> this$0
    java.lang.Boolean run(com.aviary.android.feather.common.threading.ThreadPool$Worker,java.lang.Void[]) -> run
    java.lang.Object run(com.aviary.android.feather.common.threading.ThreadPool$Worker,java.lang.Object[]) -> run
com.aviary.android.feather.receipt.Receipt -> com.aviary.android.feather.receipt.Receipt:
    java.lang.String productId -> productId
    long purchaseTime -> purchaseTime
    java.lang.String purchaseToken -> purchaseToken
    boolean isFree -> isFree
    java.lang.String orderId -> orderId
    java.lang.String price -> price
    boolean isNewPurchase -> isNewPurchase
    org.json.JSONObject toJSON(android.content.Context) -> toJSON
com.aviary.android.feather.receipt.Receipt$Builder -> com.aviary.android.feather.receipt.Receipt$Builder:
    boolean mIsFree -> mIsFree
    java.lang.String mProductId -> mProductId
    long mPurchaseTime -> mPurchaseTime
    java.lang.String mOrderId -> mOrderId
    java.lang.String mPrice -> mPrice
    boolean mIsNewPurchase -> mIsNewPurchase
    java.lang.String mToken -> mToken
    com.aviary.android.feather.receipt.Receipt$Builder withProductId(java.lang.String) -> withProductId
    com.aviary.android.feather.receipt.Receipt$Builder withPurchaseTime(long) -> withPurchaseTime
    com.aviary.android.feather.receipt.Receipt$Builder withOrderId(java.lang.String) -> withOrderId
    com.aviary.android.feather.receipt.Receipt$Builder withPrice(java.lang.String) -> withPrice
    com.aviary.android.feather.receipt.Receipt$Builder isNewPurchase(boolean) -> isNewPurchase
    com.aviary.android.feather.receipt.Receipt$Builder withToken(java.lang.String) -> withToken
    com.aviary.android.feather.receipt.Receipt build() -> build
com.aviary.android.feather.receipt.ReceiptManager -> com.aviary.android.feather.receipt.ReceiptManager:
    com.aviary.android.feather.common.log.LoggerFactory$Logger logger -> logger
    com.aviary.android.feather.receipt.ReceiptManager sInstance -> sInstance
    android.os.HandlerThread sDispatcherHandlerThread -> sDispatcherHandlerThread
    android.os.HandlerThread sUploadHandlerThread -> sUploadHandlerThread
    android.content.Context mContext -> mContext
    com.aviary.android.feather.receipt.ReceiptManager$Dispatcher mDispatcher -> mDispatcher
    java.lang.String SERVER_ROOT -> SERVER_ROOT
    java.lang.String URI_FREE -> URI_FREE
    java.lang.String URI_PAID -> URI_PAID
    int MAX_UPLOADS_PER_SESSION -> MAX_UPLOADS_PER_SESSION
    int MAX_UPLOAD_FAIL_COUNT -> MAX_UPLOAD_FAIL_COUNT
    int STATUS_OK -> STATUS_OK
    void open() -> open
    void close() -> close
    void upload() -> upload
    void sendTicket(com.aviary.android.feather.receipt.Receipt) -> sendTicket
    com.aviary.android.feather.receipt.ReceiptManager getInstance(android.content.Context) -> getInstance
com.aviary.android.feather.receipt.ReceiptManager$Dispatcher -> com.aviary.android.feather.receipt.ReceiptManager$Dispatcher:
    com.aviary.android.feather.common.log.LoggerFactory$Logger logger -> logger
    int MESSAGE_INIT -> MESSAGE_INIT
    int MESSAGE_OPEN -> MESSAGE_OPEN
    int MESSAGE_CLOSE -> MESSAGE_CLOSE
    int MESSAGE_UPLOAD -> MESSAGE_UPLOAD
    int MESSAGE_ADD_TICKET -> MESSAGE_ADD_TICKET
    android.content.Context mContext -> mContext
    android.os.Handler mUploadHandler -> mUploadHandler
    void handleMessage(android.os.Message) -> handleMessage
    void addTicket(com.aviary.android.feather.receipt.Receipt) -> addTicket
    void init() -> init
    void open() -> open
    void close() -> close
    void upload() -> upload
com.aviary.android.feather.receipt.ReceiptManager$Status -> com.aviary.android.feather.receipt.ReceiptManager$Status:
    long id -> id
    int status -> status
    int count -> count
com.aviary.android.feather.receipt.ReceiptManager$UploadHandler -> com.aviary.android.feather.receipt.ReceiptManager$UploadHandler:
    android.content.Context mContext -> mContext
    com.aviary.android.feather.common.log.LoggerFactory$Logger logger -> logger
    int MESSAGE_UPLOAD -> MESSAGE_UPLOAD
    void handleMessage(android.os.Message) -> handleMessage
    void upload() -> upload
    java.util.Collection uploadReceipts(android.database.Cursor) -> uploadReceipts
    void handleResults(java.util.Collection,com.aviary.android.feather.receipt.ReceiptProvider) -> handleResults
com.aviary.android.feather.receipt.ReceiptProvider -> com.aviary.android.feather.receipt.ReceiptProvider:
    android.content.Context mContext -> mContext
    android.database.sqlite.SQLiteDatabase mDb -> mDb
    com.aviary.android.feather.receipt.ReceiptProvider sInstance -> sInstance
    com.aviary.android.feather.common.log.LoggerFactory$Logger logger -> logger
    long addTicket(org.json.JSONObject,boolean) -> addTicket
    android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String) -> query
    android.database.Cursor getNewReceipts() -> getNewReceipts
    android.database.Cursor getFailedReceipts() -> getFailedReceipts
    long insert(java.lang.String,java.lang.String,android.content.ContentValues,int) -> insert
    int delete(java.lang.String,java.lang.String,java.lang.String[]) -> delete
    com.aviary.android.feather.receipt.ReceiptProvider getInstance(android.content.Context) -> getInstance
com.aviary.android.feather.receipt.ReceiptProvider$DatabaseHelper -> com.aviary.android.feather.receipt.ReceiptProvider$DatabaseHelper:
    java.lang.String DATABASE_NAME -> DATABASE_NAME
    int DATABASE_VERSION -> DATABASE_VERSION
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
com.aviary.android.feather.receipt.ReceiptProvider$ReceiptColumns -> com.aviary.android.feather.receipt.ReceiptProvider$ReceiptColumns:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String RECEIPT_ID -> RECEIPT_ID
    java.lang.String ITEM_JSON -> ITEM_JSON
    java.lang.String ITEM_IS_FREE -> ITEM_IS_FREE
    java.lang.String TABLE_SQL -> TABLE_SQL
com.aviary.android.feather.receipt.ReceiptProvider$UploadedColumns -> com.aviary.android.feather.receipt.ReceiptProvider$UploadedColumns:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String UPLOAD_ID -> UPLOAD_ID
    java.lang.String RECEIPT_ID -> RECEIPT_ID
    java.lang.String RESPONSE_STATUS -> RESPONSE_STATUS
    java.lang.String FAIL_COUNT -> FAIL_COUNT
    java.lang.String TABLE_SQL -> TABLE_SQL
com.aviary.android.feather.receipt.ReceiptUtils -> com.aviary.android.feather.receipt.ReceiptUtils:
    java.util.Locale sLocale -> sLocale
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String getCountry() -> getCountry
    java.lang.String getLanguage() -> getLanguage
    java.util.Locale getLocale() -> getLocale
    int getBinaryVersion(android.content.Context) -> getBinaryVersion
    java.lang.String getUserUUID(android.content.Context) -> getUserUUID
    android.os.HandlerThread getHandlerThread(java.lang.String) -> getHandlerThread
    int clamp(int,int,int) -> clamp
    int upload(java.lang.String,java.lang.String) -> upload
com.aviary.android.feather.utils.PackIconCallable -> com.aviary.android.feather.utils.PackIconCallable:
    java.lang.String imagePath -> imagePath
    com.aviary.android.feather.cds.AviaryCds$PackType packType -> packType
    java.lang.ref.SoftReference resourcesRef -> resourcesRef
    int fallbackResId -> fallbackResId
    int maxSize -> maxSize
    android.graphics.Bitmap call() -> call
    android.graphics.Bitmap generate(android.content.res.Resources,android.graphics.Bitmap,com.aviary.android.feather.cds.AviaryCds$PackType,int) -> generate
    android.graphics.Bitmap generate(android.content.res.Resources,android.graphics.Bitmap,com.aviary.android.feather.cds.AviaryCds$PackType) -> generate
    java.lang.String key() -> key
    android.graphics.Bitmap transform(android.graphics.Bitmap) -> transform
    java.lang.Object call() -> call
com.aviary.android.feather.utils.SimpleBitmapCache -> com.aviary.android.feather.utils.SimpleBitmapCache:
    int DELAY_BEFORE_PURGE -> DELAY_BEFORE_PURGE
    int HARD_CACHE_CAPACITY -> HARD_CACHE_CAPACITY
    android.os.Handler purgeHandler -> purgeHandler
    java.util.HashMap sHardBitmapCache -> sHardBitmapCache
    java.util.concurrent.ConcurrentHashMap sSoftBitmapCache -> sSoftBitmapCache
    java.lang.Runnable mPurger -> mPurger
    android.graphics.Bitmap getBitmapFromCache(java.lang.String) -> getBitmapFromCache
    void addBitmapToCache(java.lang.String,android.graphics.Bitmap) -> addBitmapToCache
    void clearCache() -> clearCache
    void resetPurgeTimer() -> resetPurgeTimer
    java.util.concurrent.ConcurrentHashMap access$0() -> access$0
com.aviary.android.feather.utils.SimpleBitmapCache$1 -> com.aviary.android.feather.utils.SimpleBitmapCache$1:
    long serialVersionUID -> serialVersionUID
    com.aviary.android.feather.utils.SimpleBitmapCache this$0 -> this$0
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
com.aviary.android.feather.utils.SimpleBitmapCache$2 -> com.aviary.android.feather.utils.SimpleBitmapCache$2:
    com.aviary.android.feather.utils.SimpleBitmapCache this$0 -> this$0
    void run() -> run
com.aviary.android.feather.utils.ThreadUtils -> com.aviary.android.feather.utils.ThreadUtils:
    void startBackgroundJob(com.aviary.android.feather.library.MonitoredActivity,java.lang.String,java.lang.String,java.lang.Runnable,android.os.Handler) -> startBackgroundJob
com.aviary.android.feather.utils.ThreadUtils$BackgroundJob -> com.aviary.android.feather.utils.ThreadUtils$BackgroundJob:
    com.aviary.android.feather.library.MonitoredActivity mActivity -> mActivity
    android.app.ProgressDialog mDialog -> mDialog
    java.lang.Runnable mJob -> mJob
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mCleanupRunner -> mCleanupRunner
    void run() -> run
    void onActivityDestroyed(com.aviary.android.feather.library.MonitoredActivity) -> onActivityDestroyed
    void onActivityStopped(com.aviary.android.feather.library.MonitoredActivity) -> onActivityStopped
    void onActivityStarted(com.aviary.android.feather.library.MonitoredActivity) -> onActivityStarted
    com.aviary.android.feather.library.MonitoredActivity access$0(com.aviary.android.feather.utils.ThreadUtils$BackgroundJob) -> access$0
    android.app.ProgressDialog access$1(com.aviary.android.feather.utils.ThreadUtils$BackgroundJob) -> access$1
com.aviary.android.feather.utils.ThreadUtils$BackgroundJob$1 -> com.aviary.android.feather.utils.ThreadUtils$BackgroundJob$1:
    com.aviary.android.feather.utils.ThreadUtils$BackgroundJob this$1 -> this$1
    void run() -> run
com.aviary.android.feather.utils.TypefaceUtils -> com.aviary.android.feather.utils.TypefaceUtils:
    java.util.HashMap sTypeCache -> sTypeCache
    android.graphics.Typeface createFromAsset(android.content.res.AssetManager,java.lang.String) -> createFromAsset
    java.lang.ref.SoftReference getFromCache(java.lang.String) -> getFromCache
    void putIntoCache(java.lang.String,android.graphics.Typeface) -> putIntoCache
com.aviary.android.feather.utils.UIUtils -> com.aviary.android.feather.utils.UIUtils:
    int HIGHLIGHT_MODE_PRESSED -> HIGHLIGHT_MODE_PRESSED
    int HIGHLIGHT_MODE_CHECKED -> HIGHLIGHT_MODE_CHECKED
    int HIGHLIGHT_MODE_SELECTED -> HIGHLIGHT_MODE_SELECTED
    int GLOW_MODE_PRESSED -> GLOW_MODE_PRESSED
    int GLOW_MODE_CHECKED -> GLOW_MODE_CHECKED
    int GLOW_MODE_SELECTED -> GLOW_MODE_SELECTED
    boolean checkBits(int,int) -> checkBits
    android.widget.Toast makeCustomToast(android.content.Context) -> makeCustomToast
    android.widget.Toast makeCustomToast(android.content.Context,int) -> makeCustomToast
    com.aviary.android.feather.widget.AviaryToast createModalLoaderToast(android.content.Context) -> createModalLoaderToast
com.aviary.android.feather.widget.AdjustImageView -> com.aviary.android.feather.widget.AdjustImageView:
    java.lang.String LOG_TAG -> LOG_TAG
    int HIT_TOLERANCE -> HIT_TOLERANCE
    android.net.Uri mUri -> mUri
    int mResource -> mResource
    android.graphics.Matrix mMatrix -> mMatrix
    com.aviary.android.feather.widget.AdjustImageView$ScaleType mScaleType -> mScaleType
    boolean mAdjustViewBounds -> mAdjustViewBounds
    int mMaxWidth -> mMaxWidth
    int mMaxHeight -> mMaxHeight
    android.graphics.ColorFilter mColorFilter -> mColorFilter
    int mAlpha -> mAlpha
    int mViewAlphaScale -> mViewAlphaScale
    boolean mColorMod -> mColorMod
    android.graphics.drawable.Drawable mDrawable -> mDrawable
    int[] mState -> mState
    boolean mMergeState -> mMergeState
    int mLevel -> mLevel
    int mDrawableWidth -> mDrawableWidth
    int mDrawableHeight -> mDrawableHeight
    android.graphics.Matrix mDrawMatrix -> mDrawMatrix
    android.graphics.Matrix mTempMatrix -> mTempMatrix
    android.graphics.Matrix mRotateMatrix -> mRotateMatrix
    android.graphics.Matrix mFlipMatrix -> mFlipMatrix
    android.graphics.RectF mTempSrc -> mTempSrc
    android.graphics.RectF mTempDst -> mTempDst
    int mBaseline -> mBaseline
    boolean mBaselineAlignBottom -> mBaselineAlignBottom
    boolean mHaveFrame -> mHaveFrame
    it.sephiroth.android.library.imagezoom.easing.Easing mEasing -> mEasing
    boolean isReset -> isReset
    long mResetAnimationDuration -> mResetAnimationDuration
    long mAnimationDuration -> mAnimationDuration
    android.graphics.PointF mCenter -> mCenter
    android.graphics.Path mClipPath -> mClipPath
    android.graphics.Path mInversePath -> mInversePath
    android.graphics.Rect mViewDrawRect -> mViewDrawRect
    android.graphics.RectF mViewInvertRect -> mViewInvertRect
    android.graphics.Paint mOutlinePaint -> mOutlinePaint
    android.graphics.Paint mOutlineFill -> mOutlineFill
    android.graphics.RectF mDrawRect -> mDrawRect
    android.graphics.Path mLinesPath -> mLinesPath
    android.graphics.Paint mLinesPaint -> mLinesPaint
    android.graphics.drawable.Drawable mStraightenDrawable -> mStraightenDrawable
    int handleWidth -> handleWidth
    int handleHeight -> handleHeight
    int grid_rows -> grid_rows
    int grid_cols -> grid_cols
    boolean mEnableFreeRotate -> mEnableFreeRotate
    com.aviary.android.feather.widget.AdjustImageView$OnResetListener mResetListener -> mResetListener
    int mOutlinePaintAlpha -> mOutlinePaintAlpha
    int mOutlineFillAlpha -> mOutlineFillAlpha
    int mLinesAlpha -> mLinesAlpha
    boolean straightenStarted -> straightenStarted
    double previousStraightenAngle -> previousStraightenAngle
    double prevGrowth -> prevGrowth
    boolean testStraighten -> testStraighten
    float currentGrowth -> currentGrowth
    android.graphics.Matrix mStraightenMatrix -> mStraightenMatrix
    double previousAngle -> previousAngle
    boolean intersectPoints -> intersectPoints
    boolean portrait -> portrait
    int orientation -> orientation
    float mLastTouchX -> mLastTouchX
    float mPosX -> mPosX
    boolean mIsInStraighten -> mIsInStraighten
    int straightenDuration -> straightenDuration
    int previousPosition -> previousPosition
    boolean initTool -> initTool
    int mActivePointerId -> mActivePointerId
    int mActivePointerIndex -> mActivePointerIndex
    android.graphics.Matrix$ScaleToFit[] sS2FArray -> sS2FArray
    float ax -> ax
    float ay -> ay
    float bx -> bx
    float by -> by
    float cx -> cx
    float cy -> cy
    float dx -> dx
    float dy -> dy
    float intersectx -> intersectx
    float intersecty -> intersecty
    android.graphics.Paint intersectPaint -> intersectPaint
    android.graphics.RectF imageCaptureRegion -> imageCaptureRegion
    boolean initStraighten -> initStraighten
    android.graphics.Matrix rotateCopy -> rotateCopy
    boolean firstDraw -> firstDraw
    android.os.Handler mFadeHandler -> mFadeHandler
    boolean mFadeHandlerStarted -> mFadeHandlerStarted
    android.os.Handler mHandler -> mHandler
    double mRotation -> mRotation
    float mCurrentScale -> mCurrentScale
    boolean mRunning -> mRunning
    boolean mCameraEnabled -> mCameraEnabled
    float[] mMatrixValues -> mMatrixValues
    int mFlipType -> mFlipType
    void setEnableFreeRotate(boolean) -> setEnableFreeRotate
    boolean isFreeRotateEnabled() -> isFreeRotateEnabled
    void setOnResetListener(com.aviary.android.feather.widget.AdjustImageView$OnResetListener) -> setOnResetListener
    void setEasing(it.sephiroth.android.library.imagezoom.easing.Easing) -> setEasing
    void initImageView(android.content.Context,android.util.AttributeSet,int) -> initImageView
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    boolean onSetAlpha(int) -> onSetAlpha
    android.graphics.PointF getCenter() -> getCenter
    android.graphics.RectF getViewRect() -> getViewRect
    android.graphics.RectF getImageRect() -> getImageRect
    void onTouchStart() -> onTouchStart
    void setImageRotation(double,boolean) -> setImageRotation
    void onTouchUp() -> onTouchUp
    double getGrowthFactor() -> getGrowthFactor
    double getStraightenAngle() -> getStraightenAngle
    void setStraightenRotation(double) -> setStraightenRotation
    double isNumber(double,double) -> isNumber
    void straighten(double,float) -> straighten
    void straightenBy(double,int,long) -> straightenBy
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    double getRotationFromMatrix(android.graphics.Matrix) -> getRotationFromMatrix
    void setAdjustViewBounds(boolean) -> setAdjustViewBounds
    void setMaxWidth(int) -> setMaxWidth
    void setMaxHeight(int) -> setMaxHeight
    android.graphics.drawable.Drawable getDrawable() -> getDrawable
    void setImageResource(int) -> setImageResource
    void setImageURI(android.net.Uri) -> setImageURI
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageState(int[],boolean) -> setImageState
    void setSelected(boolean) -> setSelected
    void setImageLevel(int) -> setImageLevel
    void setScaleType(com.aviary.android.feather.widget.AdjustImageView$ScaleType) -> setScaleType
    com.aviary.android.feather.widget.AdjustImageView$ScaleType getScaleType() -> getScaleType
    android.graphics.Matrix getImageMatrix() -> getImageMatrix
    void setImageMatrix(android.graphics.Matrix) -> setImageMatrix
    void resolveUri() -> resolveUri
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    void updateDrawable(android.graphics.drawable.Drawable) -> updateDrawable
    void resizeFromDrawable() -> resizeFromDrawable
    android.graphics.Matrix$ScaleToFit scaleTypeToScaleToFit(com.aviary.android.feather.widget.AdjustImageView$ScaleType) -> scaleTypeToScaleToFit
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    int resolveAdjustedSize(int,int,int) -> resolveAdjustedSize
    void configureBounds() -> configureBounds
    void drawableStateChanged() -> drawableStateChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    void fadeinGrid(int) -> fadeinGrid
    void fadeoutGrid(int) -> fadeoutGrid
    void fadeinOutlines(int) -> fadeinOutlines
    void fadeoutOutlines(int) -> fadeoutOutlines
    void hideOutlines() -> hideOutlines
    double getAngle90(double) -> getAngle90
    android.graphics.RectF crop(float,float,double,float,float,android.graphics.PointF,android.graphics.Canvas) -> crop
    void drawLine(android.graphics.PointF[],android.graphics.Canvas,android.graphics.Paint) -> drawLine
    void drawRect(android.graphics.PointF[],android.graphics.Canvas,android.graphics.Paint) -> drawRect
    int getBaseline() -> getBaseline
    void setBaseline(int) -> setBaseline
    void setBaselineAlignBottom(boolean) -> setBaselineAlignBottom
    boolean getBaselineAlignBottom() -> getBaselineAlignBottom
    void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    void setColorFilter(int) -> setColorFilter
    void clearColorFilter() -> clearColorFilter
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setAlpha(int) -> setAlpha
    void applyColorMod() -> applyColorMod
    void rotate90(boolean) -> rotate90
    void rotate90(boolean,long) -> rotate90
    boolean getStraightenStarted() -> getStraightenStarted
    void rotateBy(double,long) -> rotateBy
    void resetStraighten() -> resetStraighten
    void printDetails() -> printDetails
    void flip(boolean) -> flip
    void flip(boolean,long) -> flip
    void setCameraEnabled(boolean) -> setCameraEnabled
    void flipTo(boolean,long) -> flipTo
    void flip(boolean,boolean) -> flip
    float getValue(android.graphics.Matrix,int) -> getValue
    float[] getMatrixScale(android.graphics.Matrix) -> getMatrixScale
    float getRotation() -> getRotation
    double getCurrentRotation() -> getCurrentRotation
    boolean getHorizontalFlip() -> getHorizontalFlip
    boolean getVerticalFlip() -> getVerticalFlip
    int getFlipType() -> getFlipType
    boolean isRunning() -> isRunning
    void reset() -> reset
    void onReset() -> onReset
    void fireOnResetComplete() -> fireOnResetComplete
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    it.sephiroth.android.library.imagezoom.easing.Easing access$0(com.aviary.android.feather.widget.AdjustImageView) -> access$0
    void access$1(com.aviary.android.feather.widget.AdjustImageView,double) -> access$1
    void access$2(com.aviary.android.feather.widget.AdjustImageView) -> access$2
    void access$3(com.aviary.android.feather.widget.AdjustImageView,double,boolean) -> access$3
    boolean access$4(com.aviary.android.feather.widget.AdjustImageView) -> access$4
    android.graphics.Matrix access$5(com.aviary.android.feather.widget.AdjustImageView) -> access$5
    android.graphics.Matrix access$6(com.aviary.android.feather.widget.AdjustImageView) -> access$6
    android.graphics.Matrix access$7(com.aviary.android.feather.widget.AdjustImageView) -> access$7
    double access$8(com.aviary.android.feather.widget.AdjustImageView,android.graphics.Matrix) -> access$8
com.aviary.android.feather.widget.AdjustImageView$1 -> com.aviary.android.feather.widget.AdjustImageView$1:
    com.aviary.android.feather.widget.AdjustImageView this$0 -> this$0
    long val$durationMs -> val$durationMs
    long val$startTime -> val$startTime
    double val$newPosition -> val$newPosition
    int val$newx -> val$newx
    int val$srcx -> val$srcx
    double val$srcRotation -> val$srcRotation
    double val$destRotation -> val$destRotation
    void run() -> run
com.aviary.android.feather.widget.AdjustImageView$2 -> com.aviary.android.feather.widget.AdjustImageView$2:
    com.aviary.android.feather.widget.AdjustImageView this$0 -> this$0
    int val$durationMs -> val$durationMs
    long val$startTime -> val$startTime
    it.sephiroth.android.library.imagezoom.easing.Linear val$easing -> val$easing
    float val$startAlpha -> val$startAlpha
    void run() -> run
com.aviary.android.feather.widget.AdjustImageView$3 -> com.aviary.android.feather.widget.AdjustImageView$3:
    com.aviary.android.feather.widget.AdjustImageView this$0 -> this$0
    int val$durationMs -> val$durationMs
    long val$startTime -> val$startTime
    it.sephiroth.android.library.imagezoom.easing.Linear val$easing -> val$easing
    float val$startAlpha -> val$startAlpha
    void run() -> run
com.aviary.android.feather.widget.AdjustImageView$4 -> com.aviary.android.feather.widget.AdjustImageView$4:
    com.aviary.android.feather.widget.AdjustImageView this$0 -> this$0
    int val$durationMs -> val$durationMs
    long val$startTime -> val$startTime
    it.sephiroth.android.library.imagezoom.easing.Linear val$easing -> val$easing
    void run() -> run
com.aviary.android.feather.widget.AdjustImageView$5 -> com.aviary.android.feather.widget.AdjustImageView$5:
    com.aviary.android.feather.widget.AdjustImageView this$0 -> this$0
    int val$durationMs -> val$durationMs
    long val$startTime -> val$startTime
    it.sephiroth.android.library.imagezoom.easing.Linear val$easing -> val$easing
    int val$alpha1 -> val$alpha1
    int val$alpha2 -> val$alpha2
    int val$alpha3 -> val$alpha3
    void run() -> run
com.aviary.android.feather.widget.AdjustImageView$6 -> com.aviary.android.feather.widget.AdjustImageView$6:
    float old_scale -> old_scale
    float old_rotation -> old_rotation
    com.aviary.android.feather.widget.AdjustImageView this$0 -> this$0
    long val$durationMs -> val$durationMs
    long val$startTime -> val$startTime
    double val$deltaRotation -> val$deltaRotation
    double val$srcRotation -> val$srcRotation
    double val$destRotation -> val$destRotation
    void run() -> run
com.aviary.android.feather.widget.AdjustImageView$7 -> com.aviary.android.feather.widget.AdjustImageView$7:
    com.aviary.android.feather.widget.AdjustImageView this$0 -> this$0
    long val$durationMs -> val$durationMs
    long val$startTime -> val$startTime
    android.graphics.Camera val$camera -> val$camera
    boolean val$horizontal -> val$horizontal
    float val$centerx -> val$centerx
    float val$centery -> val$centery
    void run() -> run
com.aviary.android.feather.widget.AdjustImageView$FlipType -> com.aviary.android.feather.widget.AdjustImageView$FlipType:
    com.aviary.android.feather.widget.AdjustImageView$FlipType FLIP_NONE -> FLIP_NONE
    com.aviary.android.feather.widget.AdjustImageView$FlipType FLIP_HORIZONTAL -> FLIP_HORIZONTAL
    com.aviary.android.feather.widget.AdjustImageView$FlipType FLIP_VERTICAL -> FLIP_VERTICAL
    int nativeInt -> nativeInt
    com.aviary.android.feather.widget.AdjustImageView$FlipType[] ENUM$VALUES -> ENUM$VALUES
    com.aviary.android.feather.widget.AdjustImageView$FlipType[] values() -> values
    com.aviary.android.feather.widget.AdjustImageView$FlipType valueOf(java.lang.String) -> valueOf
com.aviary.android.feather.widget.AdjustImageView$OnResetListener -> com.aviary.android.feather.widget.AdjustImageView$OnResetListener:
    void onResetComplete() -> onResetComplete
com.aviary.android.feather.widget.AdjustImageView$ScaleType -> com.aviary.android.feather.widget.AdjustImageView$ScaleType:
    com.aviary.android.feather.widget.AdjustImageView$ScaleType MATRIX -> MATRIX
    com.aviary.android.feather.widget.AdjustImageView$ScaleType FIT_XY -> FIT_XY
    com.aviary.android.feather.widget.AdjustImageView$ScaleType FIT_START -> FIT_START
    com.aviary.android.feather.widget.AdjustImageView$ScaleType FIT_CENTER -> FIT_CENTER
    com.aviary.android.feather.widget.AdjustImageView$ScaleType FIT_END -> FIT_END
    com.aviary.android.feather.widget.AdjustImageView$ScaleType CENTER -> CENTER
    com.aviary.android.feather.widget.AdjustImageView$ScaleType CENTER_CROP -> CENTER_CROP
    com.aviary.android.feather.widget.AdjustImageView$ScaleType CENTER_INSIDE -> CENTER_INSIDE
    int nativeInt -> nativeInt
    com.aviary.android.feather.widget.AdjustImageView$ScaleType[] ENUM$VALUES -> ENUM$VALUES
    com.aviary.android.feather.widget.AdjustImageView$ScaleType[] values() -> values
    com.aviary.android.feather.widget.AdjustImageView$ScaleType valueOf(java.lang.String) -> valueOf
com.aviary.android.feather.widget.AviaryAbsSpinner -> com.aviary.android.feather.widget.AviaryAbsSpinner:
    android.widget.Adapter mAdapter -> mAdapter
    int mHeightMeasureSpec -> mHeightMeasureSpec
    int mWidthMeasureSpec -> mWidthMeasureSpec
    boolean mBlockLayoutRequests -> mBlockLayoutRequests
    int mSelectionLeftPadding -> mSelectionLeftPadding
    int mSelectionTopPadding -> mSelectionTopPadding
    int mSelectionRightPadding -> mSelectionRightPadding
    int mSelectionBottomPadding -> mSelectionBottomPadding
    android.graphics.Rect mSpinnerPadding -> mSpinnerPadding
    int mPaddingLeft -> mPaddingLeft
    int mPaddingRight -> mPaddingRight
    int mPaddingTop -> mPaddingTop
    int mPaddingBottom -> mPaddingBottom
    java.util.List mRecycleBin -> mRecycleBin
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.graphics.Rect mTouchFrame -> mTouchFrame
    int mDefaultPosition -> mDefaultPosition
    void setPadding(int,int,int,int) -> setPadding
    void initAbsSpinner() -> initAbsSpinner
    void setDefaultPosition(int) -> setDefaultPosition
    void setAdapter(android.widget.Adapter) -> setAdapter
    void emptyRecycler() -> emptyRecycler
    void emptySubRecycler() -> emptySubRecycler
    void resetList() -> resetList
    void onMeasure(int,int) -> onMeasure
    int getChildHeight(android.view.View) -> getChildHeight
    int getChildWidth(android.view.View) -> getChildWidth
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void recycleAllViews() -> recycleAllViews
    void setSelection(int,boolean,boolean) -> setSelection
    void setSelection(int) -> setSelection
    void setSelectionInt(int,boolean,boolean) -> setSelectionInt
    void layout(int,boolean,boolean) -> layout
    android.view.View getSelectedView() -> getSelectedView
    void requestLayout() -> requestLayout
    android.widget.Adapter getAdapter() -> getAdapter
    int getCount() -> getCount
    int pointToPosition(int,int) -> pointToPosition
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
com.aviary.android.feather.widget.AviaryAbsSpinner$SavedState -> com.aviary.android.feather.widget.AviaryAbsSpinner$SavedState:
    long selectedId -> selectedId
    int position -> position
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.aviary.android.feather.widget.AviaryAbsSpinner$SavedState$1 -> com.aviary.android.feather.widget.AviaryAbsSpinner$SavedState$1:
    com.aviary.android.feather.widget.AviaryAbsSpinner$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.aviary.android.feather.widget.AviaryAbsSpinner$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.aviary.android.feather.widget.AviaryAdapterView -> com.aviary.android.feather.widget.AviaryAdapterView:
    int ITEM_VIEW_TYPE_IGNORE -> ITEM_VIEW_TYPE_IGNORE
    int ITEM_VIEW_TYPE_HEADER_OR_FOOTER -> ITEM_VIEW_TYPE_HEADER_OR_FOOTER
    int mFirstPosition -> mFirstPosition
    int mSpecificTop -> mSpecificTop
    int mSyncPosition -> mSyncPosition
    long mSyncRowId -> mSyncRowId
    long mSyncHeight -> mSyncHeight
    boolean mNeedSync -> mNeedSync
    int mSyncMode -> mSyncMode
    int mLayoutHeight -> mLayoutHeight
    int SYNC_SELECTED_POSITION -> SYNC_SELECTED_POSITION
    int SYNC_FIRST_POSITION -> SYNC_FIRST_POSITION
    int SYNC_MAX_DURATION_MILLIS -> SYNC_MAX_DURATION_MILLIS
    boolean mInLayout -> mInLayout
    com.aviary.android.feather.widget.AviaryAdapterView$OnItemSelectedListener mOnItemSelectedListener -> mOnItemSelectedListener
    com.aviary.android.feather.widget.AviaryAdapterView$OnItemClickListener mOnItemClickListener -> mOnItemClickListener
    com.aviary.android.feather.widget.AviaryAdapterView$OnItemLongClickListener mOnItemLongClickListener -> mOnItemLongClickListener
    boolean mDataChanged -> mDataChanged
    int mNextSelectedPosition -> mNextSelectedPosition
    long mNextSelectedRowId -> mNextSelectedRowId
    int mSelectedPosition -> mSelectedPosition
    long mSelectedRowId -> mSelectedRowId
    android.view.View mEmptyView -> mEmptyView
    int mItemCount -> mItemCount
    int mOldItemCount -> mOldItemCount
    int INVALID_POSITION -> INVALID_POSITION
    long INVALID_ROW_ID -> INVALID_ROW_ID
    int mOldSelectedPosition -> mOldSelectedPosition
    long mOldSelectedRowId -> mOldSelectedRowId
    boolean mDesiredFocusableState -> mDesiredFocusableState
    boolean mDesiredFocusableInTouchModeState -> mDesiredFocusableInTouchModeState
    com.aviary.android.feather.widget.AviaryAdapterView$SelectionNotifier mSelectionNotifier -> mSelectionNotifier
    boolean mBlockLayoutRequests -> mBlockLayoutRequests
    void setOnItemClickListener(com.aviary.android.feather.widget.AviaryAdapterView$OnItemClickListener) -> setOnItemClickListener
    com.aviary.android.feather.widget.AviaryAdapterView$OnItemClickListener getOnItemClickListener() -> getOnItemClickListener
    boolean performItemClick(android.view.View,int,long) -> performItemClick
    void setOnItemLongClickListener(com.aviary.android.feather.widget.AviaryAdapterView$OnItemLongClickListener) -> setOnItemLongClickListener
    com.aviary.android.feather.widget.AviaryAdapterView$OnItemLongClickListener getOnItemLongClickListener() -> getOnItemLongClickListener
    void setOnItemSelectedListener(com.aviary.android.feather.widget.AviaryAdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    com.aviary.android.feather.widget.AviaryAdapterView$OnItemSelectedListener getOnItemSelectedListener() -> getOnItemSelectedListener
    android.widget.Adapter getAdapter() -> getAdapter
    void setAdapter(android.widget.Adapter) -> setAdapter
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    void removeAllViews() -> removeAllViews
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.view.View getSelectedView() -> getSelectedView
    java.lang.Object getSelectedItem() -> getSelectedItem
    int getCount() -> getCount
    int getPositionForView(android.view.View) -> getPositionForView
    int getFirstVisiblePosition() -> getFirstVisiblePosition
    int getLastVisiblePosition() -> getLastVisiblePosition
    void setSelection(int) -> setSelection
    void setEmptyView(android.view.View) -> setEmptyView
    android.view.View getEmptyView() -> getEmptyView
    boolean isInFilterMode() -> isInFilterMode
    void setFocusable(boolean) -> setFocusable
    void setFocusableInTouchMode(boolean) -> setFocusableInTouchMode
    void checkFocus() -> checkFocus
    void updateEmptyStatus(boolean) -> updateEmptyStatus
    java.lang.Object getItemAtPosition(int) -> getItemAtPosition
    long getItemIdAtPosition(int) -> getItemIdAtPosition
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    void onDetachedFromWindow() -> onDetachedFromWindow
    void selectionChanged(int,int) -> selectionChanged
    void fireOnSelected() -> fireOnSelected
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean isScrollableForAccessibility() -> isScrollableForAccessibility
    boolean canAnimate() -> canAnimate
    void handleDataChanged() -> handleDataChanged
    void checkSelectionChanged() -> checkSelectionChanged
    int findSyncPosition() -> findSyncPosition
    int lookForSelectablePosition(int,boolean) -> lookForSelectablePosition
    void setSelectedPositionInt(int) -> setSelectedPositionInt
    void setNextSelectedPositionInt(int) -> setNextSelectedPositionInt
    void rememberSyncState() -> rememberSyncState
    void access$0(com.aviary.android.feather.widget.AviaryAdapterView,android.os.Parcelable) -> access$0
    android.os.Parcelable access$1(com.aviary.android.feather.widget.AviaryAdapterView) -> access$1
com.aviary.android.feather.widget.AviaryAdapterView$AdapterContextMenuInfo -> com.aviary.android.feather.widget.AviaryAdapterView$AdapterContextMenuInfo:
    android.view.View targetView -> targetView
    int position -> position
    long id -> id
com.aviary.android.feather.widget.AviaryAdapterView$AdapterDataSetObserver -> com.aviary.android.feather.widget.AviaryAdapterView$AdapterDataSetObserver:
    android.os.Parcelable mInstanceState -> mInstanceState
    com.aviary.android.feather.widget.AviaryAdapterView this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
    void clearSavedState() -> clearSavedState
com.aviary.android.feather.widget.AviaryAdapterView$OnItemClickListener -> com.aviary.android.feather.widget.AviaryAdapterView$OnItemClickListener:
    void onItemClick(com.aviary.android.feather.widget.AviaryAdapterView,android.view.View,int,long) -> onItemClick
com.aviary.android.feather.widget.AviaryAdapterView$OnItemLongClickListener -> com.aviary.android.feather.widget.AviaryAdapterView$OnItemLongClickListener:
    boolean onItemLongClick(com.aviary.android.feather.widget.AviaryAdapterView,android.view.View,int,long) -> onItemLongClick
com.aviary.android.feather.widget.AviaryAdapterView$OnItemSelectedListener -> com.aviary.android.feather.widget.AviaryAdapterView$OnItemSelectedListener:
    void onItemSelected(com.aviary.android.feather.widget.AviaryAdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(com.aviary.android.feather.widget.AviaryAdapterView) -> onNothingSelected
com.aviary.android.feather.widget.AviaryAdapterView$SelectionNotifier -> com.aviary.android.feather.widget.AviaryAdapterView$SelectionNotifier:
    com.aviary.android.feather.widget.AviaryAdapterView this$0 -> this$0
    void run() -> run
com.aviary.android.feather.widget.AviaryBadgeToolLayout -> com.aviary.android.feather.widget.AviaryBadgeToolLayout:
    java.lang.String LOG_TAG -> LOG_TAG
    android.view.View mBadgeView -> mBadgeView
    android.widget.ImageView mImageView -> mImageView
    android.widget.TextView mTextView -> mTextView
    com.aviary.android.feather.library.services.BadgeService mBadgeService -> mBadgeService
    void setTag(java.lang.Object) -> setTag
    void onTagChanged(java.lang.Object) -> onTagChanged
    void onFinishInflate() -> onFinishInflate
    void registerToService() -> registerToService
    void removeFromService() -> removeFromService
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void finalize() -> finalize
    void onToolBadgesUpdate(com.aviary.android.feather.library.services.BadgeService) -> onToolBadgesUpdate
    void onToolBadgeSingleUpdate(com.aviary.android.feather.library.services.BadgeService,com.aviary.android.feather.library.filters.FilterLoaderFactory$Filters) -> onToolBadgeSingleUpdate
    void hideBadge() -> hideBadge
    void showBadge() -> showBadge
com.aviary.android.feather.widget.AviaryBadgeToolLayout$ViewHolder -> com.aviary.android.feather.widget.AviaryBadgeToolLayout$ViewHolder:
    com.aviary.android.feather.library.content.ToolEntry entry -> entry
com.aviary.android.feather.widget.AviaryBottomBarViewFlipper -> com.aviary.android.feather.widget.AviaryBottomBarViewFlipper:
    android.view.View mLogo -> mLogo
    com.aviary.android.feather.widget.AviaryBottomBarViewFlipper$OnViewChangingStatusListener mListener -> mListener
    com.aviary.android.feather.widget.AviaryBottomBarViewFlipper$OnBottomBarItemClickListener mBottomClickListener -> mBottomClickListener
    void onFinishInflate() -> onFinishInflate
    void setOnViewChangingStatusListener(com.aviary.android.feather.widget.AviaryBottomBarViewFlipper$OnViewChangingStatusListener) -> setOnViewChangingStatusListener
    void setOnBottomBarItemClickListener(com.aviary.android.feather.widget.AviaryBottomBarViewFlipper$OnBottomBarItemClickListener) -> setOnBottomBarItemClickListener
    boolean open() -> open
    boolean close() -> close
    boolean opened() -> opened
    android.view.ViewGroup getContentPanel() -> getContentPanel
    it.sephiroth.android.library.widget.HListView getToolsListView() -> getToolsListView
    void toggleLogoVisibility(boolean) -> toggleLogoVisibility
    void onClick(android.view.View) -> onClick
    com.aviary.android.feather.widget.AviaryBottomBarViewFlipper$OnViewChangingStatusListener access$0(com.aviary.android.feather.widget.AviaryBottomBarViewFlipper) -> access$0
com.aviary.android.feather.widget.AviaryBottomBarViewFlipper$1 -> com.aviary.android.feather.widget.AviaryBottomBarViewFlipper$1:
    com.aviary.android.feather.widget.AviaryBottomBarViewFlipper this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.aviary.android.feather.widget.AviaryBottomBarViewFlipper$2 -> com.aviary.android.feather.widget.AviaryBottomBarViewFlipper$2:
    com.aviary.android.feather.widget.AviaryBottomBarViewFlipper this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.aviary.android.feather.widget.AviaryBottomBarViewFlipper$OnBottomBarItemClickListener -> com.aviary.android.feather.widget.AviaryBottomBarViewFlipper$OnBottomBarItemClickListener:
    void onBottomBarItemClick(int) -> onBottomBarItemClick
com.aviary.android.feather.widget.AviaryBottomBarViewFlipper$OnViewChangingStatusListener -> com.aviary.android.feather.widget.AviaryBottomBarViewFlipper$OnViewChangingStatusListener:
    void OnOpenStart() -> OnOpenStart
    void OnOpenEnd() -> OnOpenEnd
    void OnCloseStart() -> OnCloseStart
    void OnCloseEnd() -> OnCloseEnd
com.aviary.android.feather.widget.AviaryButton -> com.aviary.android.feather.widget.AviaryButton:
    void setTypeface(java.lang.String) -> setTypeface
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
com.aviary.android.feather.widget.AviaryEdgeEffect -> com.aviary.android.feather.widget.AviaryEdgeEffect:
    java.lang.String TAG -> TAG
    int RECEDE_TIME -> RECEDE_TIME
    int PULL_TIME -> PULL_TIME
    int PULL_DECAY_TIME -> PULL_DECAY_TIME
    float MAX_ALPHA -> MAX_ALPHA
    float HELD_EDGE_SCALE_Y -> HELD_EDGE_SCALE_Y
    float MAX_GLOW_HEIGHT -> MAX_GLOW_HEIGHT
    float PULL_GLOW_BEGIN -> PULL_GLOW_BEGIN
    float PULL_EDGE_BEGIN -> PULL_EDGE_BEGIN
    int MIN_VELOCITY -> MIN_VELOCITY
    float EPSILON -> EPSILON
    android.graphics.drawable.Drawable mEdge -> mEdge
    android.graphics.drawable.Drawable mGlow -> mGlow
    int mWidth -> mWidth
    int mX -> mX
    int mY -> mY
    int mEdgeMaxAlpha -> mEdgeMaxAlpha
    int mGlowMaxAlpha -> mGlowMaxAlpha
    float mEdgeAlpha -> mEdgeAlpha
    float mEdgeScaleY -> mEdgeScaleY
    float mGlowAlpha -> mGlowAlpha
    float mGlowScaleY -> mGlowScaleY
    float mEdgeAlphaStart -> mEdgeAlphaStart
    float mEdgeAlphaFinish -> mEdgeAlphaFinish
    float mEdgeScaleYStart -> mEdgeScaleYStart
    float mEdgeScaleYFinish -> mEdgeScaleYFinish
    float mGlowAlphaStart -> mGlowAlphaStart
    float mGlowAlphaFinish -> mGlowAlphaFinish
    float mGlowScaleYStart -> mGlowScaleYStart
    float mGlowScaleYFinish -> mGlowScaleYFinish
    long mStartTime -> mStartTime
    float mDuration -> mDuration
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    int STATE_IDLE -> STATE_IDLE
    int STATE_PULL -> STATE_PULL
    int STATE_ABSORB -> STATE_ABSORB
    int STATE_RECEDE -> STATE_RECEDE
    int STATE_PULL_DECAY -> STATE_PULL_DECAY
    int PULL_DISTANCE_EDGE_FACTOR -> PULL_DISTANCE_EDGE_FACTOR
    int PULL_DISTANCE_GLOW_FACTOR -> PULL_DISTANCE_GLOW_FACTOR
    float PULL_DISTANCE_ALPHA_GLOW_FACTOR -> PULL_DISTANCE_ALPHA_GLOW_FACTOR
    int VELOCITY_EDGE_FACTOR -> VELOCITY_EDGE_FACTOR
    int VELOCITY_GLOW_FACTOR -> VELOCITY_GLOW_FACTOR
    int mState -> mState
    float mPullDistance -> mPullDistance
    android.graphics.Rect mBounds -> mBounds
    int mEdgeHeight -> mEdgeHeight
    int mGlowHeight -> mGlowHeight
    int mGlowWidth -> mGlowWidth
    int mMaxEffectHeight -> mMaxEffectHeight
    void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    void setSize(int,int) -> setSize
    void setEdgeMaxAlpha(int) -> setEdgeMaxAlpha
    void setGlowMaxAlpha(int) -> setGlowMaxAlpha
    void setPosition(int,int) -> setPosition
    boolean isFinished() -> isFinished
    void finish() -> finish
    void onPull(float) -> onPull
    void onRelease() -> onRelease
    void onAbsorb(int) -> onAbsorb
    boolean draw(android.graphics.Canvas) -> draw
    android.graphics.Rect getBounds(boolean) -> getBounds
    void update() -> update
com.aviary.android.feather.widget.AviaryGallery -> com.aviary.android.feather.widget.AviaryGallery:
    int SCROLL_TO_FLING_UNCERTAINTY_TIMEOUT -> SCROLL_TO_FLING_UNCERTAINTY_TIMEOUT
    com.aviary.android.feather.widget.VibrationHelper mVibratorHelper -> mVibratorHelper
    boolean mAutoSelectChild -> mAutoSelectChild
    com.aviary.android.feather.widget.AviaryGallery$OnItemsScrollListener mItemsScrollListener -> mItemsScrollListener
    int mCenter -> mCenter
    int mAnimationDuration -> mAnimationDuration
    android.support.v4.widget.EdgeEffectCompat mEdgeGlowLeft -> mEdgeGlowLeft
    android.support.v4.widget.EdgeEffectCompat mEdgeGlowRight -> mEdgeGlowRight
    int mGravity -> mGravity
    android.view.GestureDetector mGestureDetector -> mGestureDetector
    int mDownTouchPosition -> mDownTouchPosition
    boolean isDown -> isDown
    com.aviary.android.feather.widget.ScrollerRunnable mScroller -> mScroller
    boolean mAutoScrollToCenter -> mAutoScrollToCenter
    int mTouchSlop -> mTouchSlop
    com.aviary.android.feather.widget.AviaryGallery$ScrollCompletedSelectionNotifier mScrollCompletedNotifier -> mScrollCompletedNotifier
    com.aviary.android.feather.widget.AviaryGallery$ScrollScrollSelectionNotifier mScrollScrollNotifier -> mScrollScrollNotifier
    int mRealSelectedPosition -> mRealSelectedPosition
    boolean mShouldCallbackDuringFling -> mShouldCallbackDuringFling
    boolean mShouldCallbackOnUnselectedItemClick -> mShouldCallbackOnUnselectedItemClick
    boolean mSuppressSelectionChanged -> mSuppressSelectionChanged
    boolean mReceivedInvokeKeyDown -> mReceivedInvokeKeyDown
    com.aviary.android.feather.widget.AviaryAdapterView$AdapterContextMenuInfo mContextMenuInfo -> mContextMenuInfo
    boolean mIsFirstScroll -> mIsFirstScroll
    int mLastMotionValue -> mLastMotionValue
    void setAutoSelectChild(boolean) -> setAutoSelectChild
    boolean getAutoSelectChild() -> getAutoSelectChild
    void setVibrationEnabled(boolean) -> setVibrationEnabled
    boolean getVibrationEnabled() -> getVibrationEnabled
    void setOnItemsScrollListener(com.aviary.android.feather.widget.AviaryGallery$OnItemsScrollListener) -> setOnItemsScrollListener
    void setOverScrollMode(int) -> setOverScrollMode
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void drawEdges(android.graphics.Canvas) -> drawEdges
    void setAutoScrollToCenter(boolean) -> setAutoScrollToCenter
    void setCallbackDuringFling(boolean) -> setCallbackDuringFling
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setCallbackOnUnselectedItemClick(boolean) -> setCallbackOnUnselectedItemClick
    void setAnimationDuration(int) -> setAnimationDuration
    int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getChildHeight(android.view.View) -> getChildHeight
    void trackMotionScroll(int) -> trackMotionScroll
    int getLimitedMotionScrollAmount(boolean,int) -> getLimitedMotionScrollAmount
    int getOverScrollDelta(int) -> getOverScrollDelta
    void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    void offsetChildrenLeftAndRight(int) -> offsetChildrenLeftAndRight
    int getCenterOfGallery() -> getCenterOfGallery
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    int getCenterOfView(android.view.View) -> getCenterOfView
    void detachOffScreenChildren(boolean) -> detachOffScreenChildren
    void scrollIntoSlots() -> scrollIntoSlots
    boolean isOverScrolled() -> isOverScrolled
    void onFinishedMovement() -> onFinishedMovement
    void setSelectionToCenterChild() -> setSelectionToCenterChild
    void layout(int,boolean,boolean) -> layout
    void fillToGalleryLeft() -> fillToGalleryLeft
    void fillToGalleryRight() -> fillToGalleryRight
    android.view.View makeAndAddView(int,int,int,boolean) -> makeAndAddView
    void invalidateViews() -> invalidateViews
    void setUpChild(android.view.View,int,int,boolean) -> setUpChild
    void layoutChildren() -> layoutChildren
    void forceChildLayout(android.view.View,android.view.ViewGroup$LayoutParams) -> forceChildLayout
    int calculateTop(android.view.View,boolean) -> calculateTop
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onDown(android.view.MotionEvent) -> onDown
    void onUp() -> onUp
    void onCancel() -> onCancel
    void onShowPress(android.view.MotionEvent) -> onShowPress
    void dispatchPress(android.view.View) -> dispatchPress
    void dispatchUnpress() -> dispatchUnpress
    void dispatchSetSelected(boolean) -> dispatchSetSelected
    void dispatchSetPressed(boolean) -> dispatchSetPressed
    android.view.ContextMenu$ContextMenuInfo getContextMenuInfo() -> getContextMenuInfo
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean movePrevious() -> movePrevious
    boolean moveNext() -> moveNext
    boolean scrollToChild(int) -> scrollToChild
    void setSelectedPositionInt(int,boolean) -> setSelectedPositionInt
    void fireVibration() -> fireVibration
    void setGravity(int) -> setGravity
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    void scrollCompleted() -> scrollCompleted
    void fireOnScrollCompleted() -> fireOnScrollCompleted
    void selectionChanged(int,int) -> selectionChanged
    void fireOnSelected() -> fireOnSelected
    int getMinX() -> getMinX
    int getMaxX() -> getMaxX
    int getSelectedItemPosition() -> getSelectedItemPosition
    int getCurrentSelectedItemPosition() -> getCurrentSelectedItemPosition
    void access$0(com.aviary.android.feather.widget.AviaryGallery) -> access$0
    void access$1(com.aviary.android.feather.widget.AviaryGallery) -> access$1
com.aviary.android.feather.widget.AviaryGallery$1 -> com.aviary.android.feather.widget.AviaryGallery$1:
    com.aviary.android.feather.widget.AviaryGallery this$0 -> this$0
    void run() -> run
com.aviary.android.feather.widget.AviaryGallery$OnItemsScrollListener -> com.aviary.android.feather.widget.AviaryGallery$OnItemsScrollListener:
    void onScrollStarted(com.aviary.android.feather.widget.AviaryAdapterView,android.view.View,int,long) -> onScrollStarted
    void onScroll(com.aviary.android.feather.widget.AviaryAdapterView,android.view.View,int,long) -> onScroll
    void onScrollFinished(com.aviary.android.feather.widget.AviaryAdapterView,android.view.View,int,long) -> onScrollFinished
com.aviary.android.feather.widget.AviaryGallery$ScrollCompletedSelectionNotifier -> com.aviary.android.feather.widget.AviaryGallery$ScrollCompletedSelectionNotifier:
    com.aviary.android.feather.widget.AviaryGallery this$0 -> this$0
    void run() -> run
com.aviary.android.feather.widget.AviaryGallery$ScrollScrollSelectionNotifier -> com.aviary.android.feather.widget.AviaryGallery$ScrollScrollSelectionNotifier:
    com.aviary.android.feather.widget.AviaryGallery this$0 -> this$0
    void run() -> run
com.aviary.android.feather.widget.AviaryGalleryTopIndicatorView -> com.aviary.android.feather.widget.AviaryGalleryTopIndicatorView:
com.aviary.android.feather.widget.AviaryHighlightImageButton -> com.aviary.android.feather.widget.AviaryHighlightImageButton:
    int mHighlightColorPressed -> mHighlightColorPressed
    int mHighlightColorChecked -> mHighlightColorChecked
    int mHighlightColorSelected -> mHighlightColorSelected
    android.graphics.PorterDuff$Mode mBlendMode -> mBlendMode
    android.graphics.ColorFilter mColorFilterTintPressed -> mColorFilterTintPressed
    android.graphics.ColorFilter mColorFilterTintChecked -> mColorFilterTintChecked
    android.graphics.ColorFilter mColorFilterTintSelected -> mColorFilterTintSelected
    int mGlowStatus -> mGlowStatus
    int mHighlightMode -> mHighlightMode
    int mGlowSize -> mGlowSize
    boolean mToggleEnabled -> mToggleEnabled
    boolean mUnToggleUserEnabled -> mUnToggleUserEnabled
    boolean mChecked -> mChecked
    boolean mBroadcasting -> mBroadcasting
    com.aviary.android.feather.widget.AviaryHighlightImageButton$OnCheckedChangeListener mOnCheckedChangeListener -> mOnCheckedChangeListener
    int[] CHECKED_STATE_SET -> CHECKED_STATE_SET
    java.lang.String LOG_TAG -> LOG_TAG
    boolean glowPressed(int) -> glowPressed
    boolean glowChecked(int) -> glowChecked
    boolean glowSelected(int) -> glowSelected
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageResource(int) -> setImageResource
    boolean onSetAlpha(int) -> onSetAlpha
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void setPressed(boolean) -> setPressed
    void setSelected(boolean) -> setSelected
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    void setChecked(boolean,boolean) -> setChecked
    void setOnCheckedChangeListener(com.aviary.android.feather.widget.AviaryHighlightImageButton$OnCheckedChangeListener) -> setOnCheckedChangeListener
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    void updateDrawable(android.graphics.drawable.Drawable,boolean,boolean,boolean) -> updateDrawable
    void toggle() -> toggle
    boolean performClick() -> performClick
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
com.aviary.android.feather.widget.AviaryHighlightImageButton$OnCheckedChangeListener -> com.aviary.android.feather.widget.AviaryHighlightImageButton$OnCheckedChangeListener:
    void onCheckedChanged(com.aviary.android.feather.widget.AviaryHighlightImageButton,boolean,boolean) -> onCheckedChanged
com.aviary.android.feather.widget.AviaryHighlightImageButton$SavedState -> com.aviary.android.feather.widget.AviaryHighlightImageButton$SavedState:
    boolean checked -> checked
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.aviary.android.feather.widget.AviaryHighlightImageButton$SavedState$1 -> com.aviary.android.feather.widget.AviaryHighlightImageButton$SavedState$1:
    com.aviary.android.feather.widget.AviaryHighlightImageButton$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.aviary.android.feather.widget.AviaryHighlightImageButton$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.aviary.android.feather.widget.AviaryImageRestoreSwitcher -> com.aviary.android.feather.widget.AviaryImageRestoreSwitcher:
    com.aviary.android.feather.common.log.LoggerFactory$Logger logger -> logger
    int DEFAULT_RESTORE_TIMEOUT -> DEFAULT_RESTORE_TIMEOUT
    boolean restoreEnabled -> restoreEnabled
    com.aviary.android.feather.widget.AviaryImageRestoreSwitcher$RestoreState status -> status
    com.aviary.android.feather.widget.AviaryImageRestoreSwitcher$OnRestoreStateListener mRestoreListener -> mRestoreListener
    android.view.GestureDetector$OnGestureListener mGestureListener -> mGestureListener
    android.view.ScaleGestureDetector$OnScaleGestureListener mScaleGestureListener -> mScaleGestureListener
    android.view.ScaleGestureDetector mScaleGestureDetector -> mScaleGestureDetector
    android.view.GestureDetector mGestureDetector -> mGestureDetector
    it.sephiroth.android.library.imagezoom.ImageViewTouch mDefaultView -> mDefaultView
    it.sephiroth.android.library.imagezoom.ImageViewTouch mRestoredView -> mRestoredView
    int mRestoreTimeout -> mRestoreTimeout
    com.aviary.android.feather.widget.AviaryImageRestoreSwitcher$CancelStatusRunnable mCancelStatusRunnable -> mCancelStatusRunnable
    int[] $SWITCH_TABLE$com$aviary$android$feather$widget$AviaryImageRestoreSwitcher$RestoreState -> $SWITCH_TABLE$com$aviary$android$feather$widget$AviaryImageRestoreSwitcher$RestoreState
    void onFinishInflate() -> onFinishInflate
    void setOnRestoreStateListener(com.aviary.android.feather.widget.AviaryImageRestoreSwitcher$OnRestoreStateListener) -> setOnRestoreStateListener
    void clearStatus() -> clearStatus
    void setRestoreEnabled(boolean) -> setRestoreEnabled
    boolean getRestoreEnabled() -> getRestoreEnabled
    void setDisplayedChild(int) -> setDisplayedChild
    boolean isRestoreEnabled() -> isRestoreEnabled
    boolean isValidScale() -> isValidScale
    com.aviary.android.feather.widget.AviaryImageRestoreSwitcher$RestoreState getStatus() -> getStatus
    boolean setStatus(com.aviary.android.feather.widget.AviaryImageRestoreSwitcher$RestoreState) -> setStatus
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onUp(android.view.MotionEvent) -> onUp
    it.sephiroth.android.library.imagezoom.ImageViewTouch getDefaultImageView() -> getDefaultImageView
    it.sephiroth.android.library.imagezoom.ImageViewTouch getRestoredImageView() -> getRestoredImageView
    boolean access$0(com.aviary.android.feather.widget.AviaryImageRestoreSwitcher,com.aviary.android.feather.widget.AviaryImageRestoreSwitcher$RestoreState) -> access$0
    int[] $SWITCH_TABLE$com$aviary$android$feather$widget$AviaryImageRestoreSwitcher$RestoreState() -> $SWITCH_TABLE$com$aviary$android$feather$widget$AviaryImageRestoreSwitcher$RestoreState
com.aviary.android.feather.widget.AviaryImageRestoreSwitcher$CancelStatusRunnable -> com.aviary.android.feather.widget.AviaryImageRestoreSwitcher$CancelStatusRunnable:
    com.aviary.android.feather.widget.AviaryImageRestoreSwitcher this$0 -> this$0
    void run() -> run
com.aviary.android.feather.widget.AviaryImageRestoreSwitcher$MyGestureListener -> com.aviary.android.feather.widget.AviaryImageRestoreSwitcher$MyGestureListener:
    com.aviary.android.feather.widget.AviaryImageRestoreSwitcher this$0 -> this$0
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
com.aviary.android.feather.widget.AviaryImageRestoreSwitcher$MyScaleGestureListener -> com.aviary.android.feather.widget.AviaryImageRestoreSwitcher$MyScaleGestureListener:
    com.aviary.android.feather.widget.AviaryImageRestoreSwitcher this$0 -> this$0
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
    boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    void onScaleEnd(android.view.ScaleGestureDetector) -> onScaleEnd
com.aviary.android.feather.widget.AviaryImageRestoreSwitcher$OnRestoreStateListener -> com.aviary.android.feather.widget.AviaryImageRestoreSwitcher$OnRestoreStateListener:
    boolean onRestoreBegin() -> onRestoreBegin
    void onRestoreChanged() -> onRestoreChanged
    void onRestoreEnd() -> onRestoreEnd
com.aviary.android.feather.widget.AviaryImageRestoreSwitcher$RestoreState -> com.aviary.android.feather.widget.AviaryImageRestoreSwitcher$RestoreState:
    com.aviary.android.feather.widget.AviaryImageRestoreSwitcher$RestoreState None -> None
    com.aviary.android.feather.widget.AviaryImageRestoreSwitcher$RestoreState Begin -> Begin
    com.aviary.android.feather.widget.AviaryImageRestoreSwitcher$RestoreState Applied_Begin -> Applied_Begin
    com.aviary.android.feather.widget.AviaryImageRestoreSwitcher$RestoreState Applied_End -> Applied_End
    com.aviary.android.feather.widget.AviaryImageRestoreSwitcher$RestoreState[] ENUM$VALUES -> ENUM$VALUES
    com.aviary.android.feather.widget.AviaryImageRestoreSwitcher$RestoreState[] values() -> values
    com.aviary.android.feather.widget.AviaryImageRestoreSwitcher$RestoreState valueOf(java.lang.String) -> valueOf
com.aviary.android.feather.widget.AviaryImageSwitcher -> com.aviary.android.feather.widget.AviaryImageSwitcher:
    boolean mSwitchEnabled -> mSwitchEnabled
    void setImageBitmap(android.graphics.Bitmap,android.graphics.Matrix) -> setImageBitmap
    void setImageDrawable(android.graphics.drawable.Drawable,android.graphics.Matrix) -> setImageDrawable
    void setSwitchEnabled(boolean) -> setSwitchEnabled
com.aviary.android.feather.widget.AviaryNavBarViewFlipper -> com.aviary.android.feather.widget.AviaryNavBarViewFlipper:
    android.widget.TextSwitcher mTextSwitcher -> mTextSwitcher
    android.widget.Button mButton2 -> mButton2
    android.widget.Button mButton1 -> mButton1
    android.widget.Button mButton3 -> mButton3
    com.aviary.android.feather.widget.AviaryNavBarViewFlipper$OnToolbarClickListener mListener -> mListener
    android.widget.ProgressBar mProgress1 -> mProgress1
    android.widget.ProgressBar mProgress2 -> mProgress2
    boolean mClickable -> mClickable
    com.aviary.android.feather.widget.AviaryNavBarViewFlipper$ViewState mStatus -> mStatus
    boolean mButtonSizeChanged -> mButtonSizeChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onFinishInflate() -> onFinishInflate
    void open() -> open
    void close() -> close
    void toggleRestore(boolean) -> toggleRestore
    boolean opened() -> opened
    boolean closed() -> closed
    boolean restored() -> restored
    void setClickable(boolean) -> setClickable
    boolean isClickable() -> isClickable
    void setOnToolbarClickListener(com.aviary.android.feather.widget.AviaryNavBarViewFlipper$OnToolbarClickListener) -> setOnToolbarClickListener
    void setApplyEnabled(boolean) -> setApplyEnabled
    void setApplyVisible(boolean) -> setApplyVisible
    void setApplyProgressVisible(boolean) -> setApplyProgressVisible
    boolean getApplyProgressVisible() -> getApplyProgressVisible
    void setDoneEnabled(boolean) -> setDoneEnabled
    void setDoneProgressVisible(boolean) -> setDoneProgressVisible
    boolean getDoneProgressVisible() -> getDoneProgressVisible
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(java.lang.CharSequence,boolean) -> setTitle
    void setTitle(int) -> setTitle
    void setTitle(int,boolean) -> setTitle
    android.view.View makeView() -> makeView
com.aviary.android.feather.widget.AviaryNavBarViewFlipper$1 -> com.aviary.android.feather.widget.AviaryNavBarViewFlipper$1:
    com.aviary.android.feather.widget.AviaryNavBarViewFlipper this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.aviary.android.feather.widget.AviaryNavBarViewFlipper$2 -> com.aviary.android.feather.widget.AviaryNavBarViewFlipper$2:
    com.aviary.android.feather.widget.AviaryNavBarViewFlipper this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.aviary.android.feather.widget.AviaryNavBarViewFlipper$3 -> com.aviary.android.feather.widget.AviaryNavBarViewFlipper$3:
    com.aviary.android.feather.widget.AviaryNavBarViewFlipper this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.aviary.android.feather.widget.AviaryNavBarViewFlipper$OnToolbarClickListener -> com.aviary.android.feather.widget.AviaryNavBarViewFlipper$OnToolbarClickListener:
    void onDoneClick() -> onDoneClick
    void onApplyClick() -> onApplyClick
    void onRestoreClick() -> onRestoreClick
com.aviary.android.feather.widget.AviaryNavBarViewFlipper$ViewState -> com.aviary.android.feather.widget.AviaryNavBarViewFlipper$ViewState:
    com.aviary.android.feather.widget.AviaryNavBarViewFlipper$ViewState$Status current -> current
    com.aviary.android.feather.widget.AviaryNavBarViewFlipper$ViewState$Status previous -> previous
    void setCurrent(com.aviary.android.feather.widget.AviaryNavBarViewFlipper$ViewState$Status) -> setCurrent
com.aviary.android.feather.widget.AviaryNavBarViewFlipper$ViewState$Status -> com.aviary.android.feather.widget.AviaryNavBarViewFlipper$ViewState$Status:
    com.aviary.android.feather.widget.AviaryNavBarViewFlipper$ViewState$Status Open -> Open
    com.aviary.android.feather.widget.AviaryNavBarViewFlipper$ViewState$Status Close -> Close
    com.aviary.android.feather.widget.AviaryNavBarViewFlipper$ViewState$Status Restore -> Restore
    com.aviary.android.feather.widget.AviaryNavBarViewFlipper$ViewState$Status[] ENUM$VALUES -> ENUM$VALUES
    com.aviary.android.feather.widget.AviaryNavBarViewFlipper$ViewState$Status[] values() -> values
    com.aviary.android.feather.widget.AviaryNavBarViewFlipper$ViewState$Status valueOf(java.lang.String) -> valueOf
com.aviary.android.feather.widget.AviarySeekBar -> com.aviary.android.feather.widget.AviarySeekBar:
    java.lang.String LOG_TAG -> LOG_TAG
    android.graphics.drawable.Drawable mSecondary -> mSecondary
    android.graphics.drawable.Drawable mSecondaryInverted -> mSecondaryInverted
    android.graphics.drawable.Drawable mSecondaryCenter -> mSecondaryCenter
    int mSecondaryMinWidth -> mSecondaryMinWidth
    int mSecondaryMinHeight -> mSecondaryMinHeight
    double mSecondaryCenterOffset -> mSecondaryCenterOffset
    int mBackgroundOffset -> mBackgroundOffset
    int mRealWidth -> mRealWidth
    android.graphics.drawable.Drawable mCurrentDrawable -> mCurrentDrawable
    void drawableStateChanged() -> drawableStateChanged
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onDraw(android.graphics.Canvas) -> onDraw
com.aviary.android.feather.widget.AviaryTextView -> com.aviary.android.feather.widget.AviaryTextView:
    void setTypeface(java.lang.String) -> setTypeface
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
com.aviary.android.feather.widget.AviaryToast -> com.aviary.android.feather.widget.AviaryToast:
    java.lang.String LOG_TAG -> LOG_TAG
    android.content.Context mContext -> mContext
    android.view.WindowManager mWindowManager -> mWindowManager
    android.view.View mNextView -> mNextView
    android.view.View mView -> mView
    int mDuration -> mDuration
    int mGravity -> mGravity
    int mX -> mX
    int mY -> mY
    com.aviary.android.feather.widget.AviaryToast$TN mTN -> mTN
    float mHorizontalMargin -> mHorizontalMargin
    float mVerticalMargin -> mVerticalMargin
    android.os.Handler mHandler -> mHandler
    com.aviary.android.feather.widget.AviaryToast$LayoutListener mLayoutListener -> mLayoutListener
    void setLayoutListener(com.aviary.android.feather.widget.AviaryToast$LayoutListener) -> setLayoutListener
    void setView(android.view.View) -> setView
    android.view.View getView() -> getView
    void show() -> show
    void hide() -> hide
    void update() -> update
    com.aviary.android.feather.widget.AviaryToast make(android.content.Context,int,int) -> make
    com.aviary.android.feather.widget.AviaryToast$LayoutListener access$0(com.aviary.android.feather.widget.AviaryToast) -> access$0
com.aviary.android.feather.widget.AviaryToast$LayoutListener -> com.aviary.android.feather.widget.AviaryToast$LayoutListener:
    void onShown(android.view.View) -> onShown
    void onHidden() -> onHidden
com.aviary.android.feather.widget.AviaryToast$TN -> com.aviary.android.feather.widget.AviaryToast$TN:
    java.lang.Runnable mShow -> mShow
    java.lang.Runnable mHide -> mHide
    android.view.WindowManager$LayoutParams mParams -> mParams
    android.view.WindowManager mWm -> mWm
    com.aviary.android.feather.widget.AviaryToast this$0 -> this$0
    void show() -> show
    void hide() -> hide
    void handleShow() -> handleShow
    void handleHide() -> handleHide
    void removeView() -> removeView
com.aviary.android.feather.widget.AviaryToast$TN$1 -> com.aviary.android.feather.widget.AviaryToast$TN$1:
    com.aviary.android.feather.widget.AviaryToast$TN this$1 -> this$1
    void run() -> run
com.aviary.android.feather.widget.AviaryToast$TN$2 -> com.aviary.android.feather.widget.AviaryToast$TN$2:
    com.aviary.android.feather.widget.AviaryToast$TN this$1 -> this$1
    void run() -> run
com.aviary.android.feather.widget.AviaryToggleButton -> com.aviary.android.feather.widget.AviaryToggleButton:
    void setTypeface(java.lang.String) -> setTypeface
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
com.aviary.android.feather.widget.AviaryWheel -> com.aviary.android.feather.widget.AviaryWheel:
    java.lang.String LOG_TAG -> LOG_TAG
    int INVALID_VALUE -> INVALID_VALUE
    double EDGE_HEIGHT -> EDGE_HEIGHT
    android.graphics.drawable.Drawable mShadowBottom -> mShadowBottom
    android.graphics.BitmapShader mShader -> mShader
    android.graphics.Matrix mShaderMatrix -> mShaderMatrix
    android.view.GestureDetector mGestureDetector -> mGestureDetector
    com.aviary.android.feather.widget.ScrollerRunnable mScroller -> mScroller
    double mCurrentValue -> mCurrentValue
    boolean mToLeft -> mToLeft
    boolean mLayoutCompleted -> mLayoutCompleted
    boolean mInLayout -> mInLayout
    android.graphics.drawable.Drawable mLinesIndicator -> mLinesIndicator
    android.graphics.drawable.Drawable mLinesSingle -> mLinesSingle
    android.graphics.Paint mLinesPaint -> mLinesPaint
    int mShaderWidth -> mShaderWidth
    int mLastMotionValue -> mLastMotionValue
    int mLineWidth -> mLineWidth
    int mMinX -> mMinX
    int mMaxX -> mMaxX
    int mNextValue -> mNextValue
    float mEdgeOffset -> mEdgeOffset
    com.aviary.android.feather.widget.AviaryEdgeEffect mEdgeLeft -> mEdgeLeft
    com.aviary.android.feather.widget.AviaryEdgeEffect mEdgeRight -> mEdgeRight
    android.graphics.Matrix mEdgeMatrixLeft -> mEdgeMatrixLeft
    android.graphics.Matrix mEdgeMatrixRight -> mEdgeMatrixRight
    int mEdgeStyle -> mEdgeStyle
    com.aviary.android.feather.widget.VibrationHelper mVibrationHelper -> mVibrationHelper
    com.aviary.android.feather.widget.AviaryWheel$OnWheelChangeListener mScrollListener -> mScrollListener
    float mScaledDensity -> mScaledDensity
    android.graphics.Paint debugPaint -> debugPaint
    int mHeightDiff -> mHeightDiff
    int HARD_LIMIT -> HARD_LIMIT
    float SHADER_MULTIPLIER -> SHADER_MULTIPLIER
    int MAX_DELTA -> MAX_DELTA
    float mOverscrollX -> mOverscrollX
    void init(android.content.Context,android.util.AttributeSet,int) -> init
    void setOnWheelChangeListener(com.aviary.android.feather.widget.AviaryWheel$OnWheelChangeListener) -> setOnWheelChangeListener
    void setValue(int) -> setValue
    int getValue() -> getValue
    int getPositionFromValue(double) -> getPositionFromValue
    double getValueFromPosition(int) -> getValueFromPosition
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void createShader(int,int) -> createShader
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    int getSuggestedMinimumHeight() -> getSuggestedMinimumHeight
    int getSuggestedMinimumWidth() -> getSuggestedMinimumWidth
    boolean onUp(android.view.MotionEvent) -> onUp
    void computeScroll() -> computeScroll
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    int getRange() -> getRange
    int getMaxX() -> getMaxX
    int getMinX() -> getMinX
    void scrollIntoSlots() -> scrollIntoSlots
    void onFinishedMovement() -> onFinishedMovement
    void trackMotionScroll(int) -> trackMotionScroll
    void trackMotionValue(int) -> trackMotionValue
    void scrollCompleted() -> scrollCompleted
    void scrollStarted() -> scrollStarted
    void scrollRunning() -> scrollRunning
    void setVibrationEnabled(boolean) -> setVibrationEnabled
    boolean getVibrationEnabled() -> getVibrationEnabled
com.aviary.android.feather.widget.AviaryWheel$OnWheelChangeListener -> com.aviary.android.feather.widget.AviaryWheel$OnWheelChangeListener:
    void onStartTrackingTouch(com.aviary.android.feather.widget.AviaryWheel) -> onStartTrackingTouch
    void OnValueChanged(com.aviary.android.feather.widget.AviaryWheel,int) -> OnValueChanged
    void onStopTrackingTouch(com.aviary.android.feather.widget.AviaryWheel) -> onStopTrackingTouch
com.aviary.android.feather.widget.AviaryWorkspace -> com.aviary.android.feather.widget.AviaryWorkspace:
    int INVALID_SCREEN -> INVALID_SCREEN
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int SNAP_VELOCITY -> SNAP_VELOCITY
    int mPreviousScreen -> mPreviousScreen
    int mDefaultScreen -> mDefaultScreen
    int mPaddingLeft -> mPaddingLeft
    int mPaddingTop -> mPaddingTop
    int mPaddingRight -> mPaddingRight
    int mPaddingBottom -> mPaddingBottom
    int mCurrentScreen -> mCurrentScreen
    int mNextScreen -> mNextScreen
    int mOldSelectedPosition -> mOldSelectedPosition
    android.widget.Scroller mScroller -> mScroller
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    float mLastMotionX -> mLastMotionX
    float mLastMotionX2 -> mLastMotionX2
    float mLastMotionY -> mLastMotionY
    int TOUCH_STATE_REST -> TOUCH_STATE_REST
    int TOUCH_STATE_SCROLLING -> TOUCH_STATE_SCROLLING
    int mTouchState -> mTouchState
    boolean mAllowLongPress -> mAllowLongPress
    int mTouchSlop -> mTouchSlop
    int mMaximumVelocity -> mMaximumVelocity
    int INVALID_POINTER -> INVALID_POINTER
    int mActivePointerId -> mActivePointerId
    com.aviary.android.feather.widget.AviaryWorkspaceIndicator mIndicator -> mIndicator
    float NANOTIME_DIV -> NANOTIME_DIV
    float SMOOTHING_SPEED -> SMOOTHING_SPEED
    float SMOOTHING_CONSTANT -> SMOOTHING_CONSTANT
    float BASELINE_FLING_VELOCITY -> BASELINE_FLING_VELOCITY
    float FLING_VELOCITY_INFLUENCE -> FLING_VELOCITY_INFLUENCE
    java.lang.String LOG_TAG -> LOG_TAG
    boolean LOG_ENABLED -> LOG_ENABLED
    float mSmoothingTime -> mSmoothingTime
    float mTouchX -> mTouchX
    android.view.animation.Interpolator mScrollInterpolator -> mScrollInterpolator
    android.widget.Adapter mAdapter -> mAdapter
    android.database.DataSetObserver mObserver -> mObserver
    boolean mDataChanged -> mDataChanged
    int mFirstPosition -> mFirstPosition
    int mItemCount -> mItemCount
    int mItemTypeCount -> mItemTypeCount
    java.util.List mRecycleBin -> mRecycleBin
    int mHeightMeasureSpec -> mHeightMeasureSpec
    int mWidthMeasureSpec -> mWidthMeasureSpec
    android.support.v4.widget.EdgeEffectCompat mEdgeGlowLeft -> mEdgeGlowLeft
    android.support.v4.widget.EdgeEffectCompat mEdgeGlowRight -> mEdgeGlowRight
    int mOverScrollMode -> mOverScrollMode
    boolean mAllowChildSelection -> mAllowChildSelection
    boolean mCacheEnabled -> mCacheEnabled
    com.aviary.android.feather.widget.AviaryWorkspace$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    android.view.View mOldSelectedChild -> mOldSelectedChild
    void setOnPageChangeListener(com.aviary.android.feather.widget.AviaryWorkspace$OnPageChangeListener) -> setOnPageChangeListener
    void initWorkspace(android.content.Context,android.util.AttributeSet,int) -> initWorkspace
    void setOverScroll(int) -> setOverScroll
    int getOverScroll() -> getOverScroll
    void setAllowChildSelection(boolean) -> setAllowChildSelection
    android.widget.Adapter getAdapter() -> getAdapter
    void setAdapter(android.widget.Adapter) -> setAdapter
    void reloadAdapter() -> reloadAdapter
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,int,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    boolean isDefaultScreenShowing() -> isDefaultScreenShowing
    int getCurrentScreen() -> getCurrentScreen
    int getTotalPages() -> getTotalPages
    void setCurrentScreen(int) -> setCurrentScreen
    void scrollTo(int,int) -> scrollTo
    void computeScroll() -> computeScroll
    void onFinishedAnimation(int) -> onFinishedAnimation
    void detachOffScreenChildren(boolean) -> detachOffScreenChildren
    void drawEdges(android.graphics.Canvas) -> drawEdges
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void handleDataChanged() -> handleDataChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    void checkSelectionChanged() -> checkSelectionChanged
    android.view.View makeAndAddView(int,int,int,boolean) -> makeAndAddView
    void setUpChild(android.view.View,int,int,boolean) -> setUpChild
    void layoutChildren() -> layoutChildren
    int calculateTop(android.view.View,boolean) -> calculateTop
    int getTotalWidth() -> getTotalWidth
    int getScreenScrollPositionX(int) -> getScreenScrollPositionX
    void fillToGalleryRight() -> fillToGalleryRight
    void fillToGalleryLeft() -> fillToGalleryLeft
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void resetList() -> resetList
    void emptyRecycler() -> emptyRecycler
    void setNextSelectedPositionInt(int) -> setNextSelectedPositionInt
    void setSelectedPositionInt(int) -> setSelectedPositionInt
    boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchUnhandledMove(android.view.View,int) -> dispatchUnhandledMove
    void setEnabled(boolean) -> setEnabled
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void focusableViewAvailable(android.view.View) -> focusableViewAvailable
    void enableChildrenCache(int,int) -> enableChildrenCache
    void clearChildrenCache() -> clearChildrenCache
    void setCacheEnabled(boolean) -> setCacheEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void acquireVelocityTrackerAndAddMovement(android.view.MotionEvent) -> acquireVelocityTrackerAndAddMovement
    void releaseVelocityTracker() -> releaseVelocityTracker
    void snapToScreen(int) -> snapToScreen
    void snapToScreen(int,int,boolean) -> snapToScreen
    void postUpdateIndicator(int,int) -> postUpdateIndicator
    void edgeReached(int,int,int) -> edgeReached
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void scrollLeft() -> scrollLeft
    void scrollRight() -> scrollRight
    int getScreenForView(android.view.View) -> getScreenForView
    android.view.View getViewForTag(java.lang.Object) -> getViewForTag
    boolean allowLongPress() -> allowLongPress
    void setAllowLongPress(boolean) -> setAllowLongPress
    void moveToDefaultScreen(boolean) -> moveToDefaultScreen
    void setIndicator(com.aviary.android.feather.widget.AviaryWorkspaceIndicator) -> setIndicator
    android.view.View getScreenAt(int) -> getScreenAt
    void access$0(com.aviary.android.feather.widget.AviaryWorkspace) -> access$0
    void access$1(com.aviary.android.feather.widget.AviaryWorkspace,android.view.View,boolean) -> access$1
    com.aviary.android.feather.widget.AviaryWorkspace$OnPageChangeListener access$2(com.aviary.android.feather.widget.AviaryWorkspace) -> access$2
    int access$3(com.aviary.android.feather.widget.AviaryWorkspace) -> access$3
    com.aviary.android.feather.widget.AviaryWorkspaceIndicator access$4(com.aviary.android.feather.widget.AviaryWorkspace) -> access$4
com.aviary.android.feather.widget.AviaryWorkspace$1 -> com.aviary.android.feather.widget.AviaryWorkspace$1:
    com.aviary.android.feather.widget.AviaryWorkspace this$0 -> this$0
    int val$previousScreen -> val$previousScreen
    void run() -> run
com.aviary.android.feather.widget.AviaryWorkspace$2 -> com.aviary.android.feather.widget.AviaryWorkspace$2:
    com.aviary.android.feather.widget.AviaryWorkspace this$0 -> this$0
    int val$screen -> val$screen
    int val$count -> val$count
    void run() -> run
com.aviary.android.feather.widget.AviaryWorkspace$OnPageChangeListener -> com.aviary.android.feather.widget.AviaryWorkspace$OnPageChangeListener:
    void onPageChanged(int,int) -> onPageChanged
com.aviary.android.feather.widget.AviaryWorkspace$RecycleBin -> com.aviary.android.feather.widget.AviaryWorkspace$RecycleBin:
    android.view.View[][] array -> array
    int[] start -> start
    int[] end -> end
    int maxSize -> maxSize
    boolean[] full -> full
    com.aviary.android.feather.widget.AviaryWorkspace this$0 -> this$0
    boolean isEmpty(int) -> isEmpty
    void add(int,android.view.View) -> add
    android.view.View remove(int) -> remove
    void clear() -> clear
com.aviary.android.feather.widget.AviaryWorkspace$SavedState -> com.aviary.android.feather.widget.AviaryWorkspace$SavedState:
    int currentScreen -> currentScreen
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.aviary.android.feather.widget.AviaryWorkspace$SavedState$1 -> com.aviary.android.feather.widget.AviaryWorkspace$SavedState$1:
    com.aviary.android.feather.widget.AviaryWorkspace$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.aviary.android.feather.widget.AviaryWorkspace$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.aviary.android.feather.widget.AviaryWorkspace$WorkspaceDataSetObserver -> com.aviary.android.feather.widget.AviaryWorkspace$WorkspaceDataSetObserver:
    com.aviary.android.feather.widget.AviaryWorkspace this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.aviary.android.feather.widget.AviaryWorkspaceIndicator -> com.aviary.android.feather.widget.AviaryWorkspaceIndicator:
    int mResId -> mResId
    int mSelected -> mSelected
    int mResWidth -> mResWidth
    int mResHeight -> mResHeight
    void init(android.content.Context,android.util.AttributeSet,int) -> init
    void onLayout(boolean,int,int,int,int) -> onLayout
    void resetView(int) -> resetView
    void setLevel(int,int) -> setLevel
com.aviary.android.feather.widget.CellLayout -> com.aviary.android.feather.widget.CellLayout:
    int DIRECTION_VERTICAL -> DIRECTION_VERTICAL
    int DIRECTION_HORIZONTAL -> DIRECTION_HORIZONTAL
    int mLayoutDirection -> mLayoutDirection
    int mCellWidth -> mCellWidth
    int mCellHeight -> mCellHeight
    int mStartPadding -> mStartPadding
    int mEndPadding -> mEndPadding
    int mTopPadding -> mTopPadding
    int mBottomPadding -> mBottomPadding
    int mAxisRows -> mAxisRows
    int mAxisCells -> mAxisCells
    int mWidthGap -> mWidthGap
    int mHeightGap -> mHeightGap
    int mCellPaddingH -> mCellPaddingH
    int mCellPaddingV -> mCellPaddingV
    com.aviary.android.feather.widget.CellLayout$CellInfo mCellInfo -> mCellInfo
    int[] mCellXY -> mCellXY
    boolean[][] mOccupied -> mOccupied
    boolean mLastDownOnOccupiedCell -> mLastDownOnOccupiedCell
    void resetCells() -> resetCells
    void setNumCols(int) -> setNumCols
    void setNumRows(int) -> setNumRows
    void removeAllViews() -> removeAllViews
    void cancelLongPress() -> cancelLongPress
    int getCountX() -> getCountX
    int getCountY() -> getCountY
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    com.aviary.android.feather.widget.CellLayout$CellInfo findVacantCell() -> findVacantCell
    com.aviary.android.feather.widget.CellLayout$CellInfo findVacantCell(int,int) -> findVacantCell
    boolean findVacantCell(int,int,int,int) -> findVacantCell
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void pointToCellExact(int,int,int[]) -> pointToCellExact
    void pointToCellRounded(int,int,int[]) -> pointToCellRounded
    void cellToPoint(int,int,int[]) -> cellToPoint
    int getCellWidth() -> getCellWidth
    int getCellHeight() -> getCellHeight
    int getLeftPadding() -> getLeftPadding
    int getTopPadding() -> getTopPadding
    int getRightPadding() -> getRightPadding
    int getBottomPadding() -> getBottomPadding
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setChildrenDrawingCacheEnabled(boolean) -> setChildrenDrawingCacheEnabled
    void setChildrenDrawnWithCacheEnabled(boolean) -> setChildrenDrawnWithCacheEnabled
    void setEnabled(boolean) -> setEnabled
    void cellToRect(int,int,int,int,android.graphics.RectF) -> cellToRect
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean lastDownOnOccupiedCell() -> lastDownOnOccupiedCell
com.aviary.android.feather.widget.CellLayout$CellInfo -> com.aviary.android.feather.widget.CellLayout$CellInfo:
    android.view.View cell -> cell
    int cellX -> cellX
    int cellY -> cellY
    int spanH -> spanH
    int spanV -> spanV
    int screen -> screen
    boolean valid -> valid
    android.graphics.Rect current -> current
    java.lang.String toString() -> toString
    void clearVacantCells() -> clearVacantCells
com.aviary.android.feather.widget.CellLayout$LayoutParams -> com.aviary.android.feather.widget.CellLayout$LayoutParams:
    int cellX -> cellX
    int cellY -> cellY
    int cellHSpan -> cellHSpan
    int cellVSpan -> cellVSpan
    int x -> x
    int y -> y
    boolean regenerateId -> regenerateId
    void setup(int,int,int,int,int,int) -> setup
com.aviary.android.feather.widget.CropImageView -> com.aviary.android.feather.widget.CropImageView:
    int GROW -> GROW
    int SHRINK -> SHRINK
    int mMotionEdge -> mMotionEdge
    com.aviary.android.feather.widget.HighlightView mHighlightView -> mHighlightView
    com.aviary.android.feather.widget.CropImageView$OnHighlightSingleTapUpConfirmedListener mHighlightSingleTapUpListener -> mHighlightSingleTapUpListener
    com.aviary.android.feather.widget.HighlightView mMotionHighlightView -> mMotionHighlightView
    int mCropMinSize -> mCropMinSize
    android.os.Handler mHandler -> mHandler
    int mHighlighStyle -> mHighlighStyle
    java.lang.Runnable onLayoutRunnable -> onLayoutRunnable
    android.graphics.Rect mRect1 -> mRect1
    android.graphics.Rect mRect2 -> mRect2
    double mAspectRatio -> mAspectRatio
    boolean mAspectRatioFixed -> mAspectRatioFixed
    void setOnHighlightSingleTapUpConfirmedListener(com.aviary.android.feather.widget.CropImageView$OnHighlightSingleTapUpConfirmedListener) -> setOnHighlightSingleTapUpConfirmedListener
    void setMinCropSize(int) -> setMinCropSize
    void init(android.content.Context,android.util.AttributeSet,int) -> init
    void setImageDrawable(android.graphics.drawable.Drawable,android.graphics.Matrix,float,float) -> setImageDrawable
    void onLayoutChanged(int,int,int,int) -> onLayoutChanged
    void postTranslate(float,float) -> postTranslate
    void postScale(float,float,float) -> postScale
    boolean ensureVisible(com.aviary.android.feather.widget.HighlightView) -> ensureVisible
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void setHighlightView(com.aviary.android.feather.widget.HighlightView) -> setHighlightView
    com.aviary.android.feather.widget.HighlightView getHighlightView() -> getHighlightView
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setImageBitmap(android.graphics.Bitmap,double,boolean) -> setImageBitmap
    void setAspectRatio(double,boolean) -> setAspectRatio
    void onDrawableChanged(android.graphics.drawable.Drawable) -> onDrawableChanged
    void updateCropView(boolean) -> updateCropView
    void updateAspectRatio(double,com.aviary.android.feather.widget.HighlightView,boolean) -> updateAspectRatio
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    com.aviary.android.feather.library.graphics.RectD computeFinalCropRect(double) -> computeFinalCropRect
    double getAspectRatio() -> getAspectRatio
    boolean getAspectRatioIsFixed() -> getAspectRatioIsFixed
    com.aviary.android.feather.widget.HighlightView access$0(com.aviary.android.feather.widget.CropImageView) -> access$0
    void access$1(com.aviary.android.feather.widget.CropImageView,com.aviary.android.feather.widget.HighlightView) -> access$1
    void access$2(com.aviary.android.feather.widget.CropImageView,int) -> access$2
    com.aviary.android.feather.widget.HighlightView access$3(com.aviary.android.feather.widget.CropImageView) -> access$3
    int access$4(com.aviary.android.feather.widget.CropImageView) -> access$4
    com.aviary.android.feather.widget.CropImageView$OnHighlightSingleTapUpConfirmedListener access$5(com.aviary.android.feather.widget.CropImageView) -> access$5
    boolean access$6(com.aviary.android.feather.widget.CropImageView) -> access$6
    float access$7(com.aviary.android.feather.widget.CropImageView,float,float) -> access$7
    void access$8(com.aviary.android.feather.widget.CropImageView,float,float,float,float) -> access$8
    android.view.ScaleGestureDetector access$9(com.aviary.android.feather.widget.CropImageView) -> access$9
    boolean access$10(com.aviary.android.feather.widget.CropImageView,com.aviary.android.feather.widget.HighlightView) -> access$10
    void access$11(com.aviary.android.feather.widget.CropImageView,float,float,double) -> access$11
    void access$12(com.aviary.android.feather.widget.CropImageView,float,float,float) -> access$12
    void access$13(com.aviary.android.feather.widget.CropImageView,int) -> access$13
com.aviary.android.feather.widget.CropImageView$1 -> com.aviary.android.feather.widget.CropImageView$1:
    com.aviary.android.feather.widget.CropImageView this$0 -> this$0
    void run() -> run
com.aviary.android.feather.widget.CropImageView$2 -> com.aviary.android.feather.widget.CropImageView$2:
    com.aviary.android.feather.widget.CropImageView this$0 -> this$0
    void run() -> run
com.aviary.android.feather.widget.CropImageView$3 -> com.aviary.android.feather.widget.CropImageView$3:
    com.aviary.android.feather.widget.CropImageView this$0 -> this$0
    void run() -> run
com.aviary.android.feather.widget.CropImageView$CropGestureListener -> com.aviary.android.feather.widget.CropImageView$CropGestureListener:
    com.aviary.android.feather.widget.CropImageView this$0 -> this$0
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.aviary.android.feather.widget.CropImageView$CropScaleListener -> com.aviary.android.feather.widget.CropImageView$CropScaleListener:
    com.aviary.android.feather.widget.CropImageView this$0 -> this$0
    boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    void onScaleEnd(android.view.ScaleGestureDetector) -> onScaleEnd
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
com.aviary.android.feather.widget.CropImageView$OnHighlightSingleTapUpConfirmedListener -> com.aviary.android.feather.widget.CropImageView$OnHighlightSingleTapUpConfirmedListener:
    void onSingleTapUpConfirmed() -> onSingleTapUpConfirmed
com.aviary.android.feather.widget.DrawableHighlightView -> com.aviary.android.feather.widget.DrawableHighlightView:
    java.lang.String LOG_TAG -> LOG_TAG
    int STATE_NONE -> STATE_NONE
    int STATE_SELECTED -> STATE_SELECTED
    int STATE_FOCUSED -> STATE_FOCUSED
    com.aviary.android.feather.widget.DrawableHighlightView$OnDeleteClickListener mDeleteClickListener -> mDeleteClickListener
    int NONE -> NONE
    int GROW_LEFT_EDGE -> GROW_LEFT_EDGE
    int GROW_RIGHT_EDGE -> GROW_RIGHT_EDGE
    int GROW_TOP_EDGE -> GROW_TOP_EDGE
    int GROW_BOTTOM_EDGE -> GROW_BOTTOM_EDGE
    int ROTATE -> ROTATE
    int MOVE -> MOVE
    int GROW -> GROW
    float HIT_TOLERANCE -> HIT_TOLERANCE
    boolean mHidden -> mHidden
    int mMode -> mMode
    int mState -> mState
    android.graphics.RectF mDrawRect -> mDrawRect
    android.graphics.RectF mTempRect -> mTempRect
    android.graphics.RectF mCropRect -> mCropRect
    android.graphics.Matrix mMatrix -> mMatrix
    com.aviary.android.feather.library.graphics.drawable.FeatherDrawable mContent -> mContent
    com.aviary.android.feather.library.graphics.drawable.EditableDrawable mEditableContent -> mEditableContent
    android.graphics.drawable.Drawable mAnchorRotate -> mAnchorRotate
    android.graphics.drawable.Drawable mAnchorDelete -> mAnchorDelete
    android.graphics.drawable.Drawable mBackgroundDrawable -> mBackgroundDrawable
    int mAnchorRotateWidth -> mAnchorRotateWidth
    int mAnchorRotateHeight -> mAnchorRotateHeight
    int mAnchorDeleteHeight -> mAnchorDeleteHeight
    int mAnchorDeleteWidth -> mAnchorDeleteWidth
    int mResizeEdgeMode -> mResizeEdgeMode
    boolean mRotateEnabled -> mRotateEnabled
    boolean mScaleEnabled -> mScaleEnabled
    boolean mMoveEnabled -> mMoveEnabled
    float mRotation -> mRotation
    float mRatio -> mRatio
    android.graphics.Matrix mRotateMatrix -> mRotateMatrix
    float[] fpoints -> fpoints
    int mPadding -> mPadding
    boolean mShowAnchors -> mShowAnchors
    com.aviary.android.feather.widget.DrawableHighlightView$AlignModeV mAlignVerticalMode -> mAlignVerticalMode
    it.sephiroth.android.library.imagezoom.ImageViewTouch mContext -> mContext
    int[] STATE_SET_NONE -> STATE_SET_NONE
    int[] STATE_SET_SELECTED -> STATE_SET_SELECTED
    int[] STATE_SET_SELECTED_PRESSED -> STATE_SET_SELECTED_PRESSED
    int[] STATE_SET_SELECTED_FOCUSED -> STATE_SET_SELECTED_FOCUSED
    android.graphics.RectF mInvalidateRectF -> mInvalidateRectF
    android.graphics.Rect mInvalidateRect -> mInvalidateRect
    void setAlignModeV(com.aviary.android.feather.widget.DrawableHighlightView$AlignModeV) -> setAlignModeV
    android.graphics.RectF computeLayout() -> computeLayout
    void dispose() -> dispose
    void copyBounds(android.graphics.RectF) -> copyBounds
    void draw(android.graphics.Canvas) -> draw
    void showAnchors(boolean) -> showAnchors
    void draw(android.graphics.Canvas,android.graphics.Matrix) -> draw
    android.graphics.Rect getCropRect() -> getCropRect
    android.graphics.RectF getCropRectF() -> getCropRectF
    android.graphics.Matrix getCropRotationMatrix() -> getCropRotationMatrix
    android.graphics.RectF getDisplayRect(android.graphics.Matrix,android.graphics.RectF) -> getDisplayRect
    android.graphics.RectF getDisplayRectF() -> getDisplayRectF
    android.graphics.RectF getDrawRect() -> getDrawRect
    int getHit(float,float) -> getHit
    void onSingleTapConfirmed(float,float) -> onSingleTapConfirmed
    android.graphics.Rect getInvalidationRect() -> getInvalidationRect
    android.graphics.Matrix getMatrix() -> getMatrix
    int getMode() -> getMode
    float getRotation() -> getRotation
    android.graphics.Matrix getRotationMatrix() -> getRotationMatrix
    void growBy(float) -> growBy
    void growBy(float,float,boolean) -> growBy
    void onMouseMove(int,android.view.MotionEvent,float,float) -> onMouseMove
    void onMove(float,float) -> onMove
    void invalidate() -> invalidate
    void moveBy(float,float) -> moveBy
    void rotateBy(float,float,float,float) -> rotateBy
    void onRotateAndGrow(double,float) -> onRotateAndGrow
    void setHidden(boolean) -> setHidden
    void setMinSize(float) -> setMinSize
    void setMode(int) -> setMode
    boolean isPressed() -> isPressed
    void updateDrawableState() -> updateDrawableState
    void setOnDeleteClickListener(com.aviary.android.feather.widget.DrawableHighlightView$OnDeleteClickListener) -> setOnDeleteClickListener
    void setSelected(boolean) -> setSelected
    boolean isSelected() -> isSelected
    void setFocused(boolean) -> setFocused
    boolean isFocused() -> isFocused
    void setup(android.content.Context,android.graphics.Matrix,android.graphics.Rect,android.graphics.RectF,boolean) -> setup
    void update(android.graphics.Matrix,android.graphics.Rect) -> update
    com.aviary.android.feather.library.graphics.drawable.FeatherDrawable getContent() -> getContent
    void updateRatio() -> updateRatio
    boolean forceUpdate() -> forceUpdate
    void setPadding(int) -> setPadding
    void onSizeChanged(com.aviary.android.feather.library.graphics.drawable.EditableDrawable,float,float,float,float) -> onSizeChanged
com.aviary.android.feather.widget.DrawableHighlightView$AlignModeV -> com.aviary.android.feather.widget.DrawableHighlightView$AlignModeV:
    com.aviary.android.feather.widget.DrawableHighlightView$AlignModeV Top -> Top
    com.aviary.android.feather.widget.DrawableHighlightView$AlignModeV Bottom -> Bottom
    com.aviary.android.feather.widget.DrawableHighlightView$AlignModeV Center -> Center
    com.aviary.android.feather.widget.DrawableHighlightView$AlignModeV[] ENUM$VALUES -> ENUM$VALUES
    com.aviary.android.feather.widget.DrawableHighlightView$AlignModeV[] values() -> values
    com.aviary.android.feather.widget.DrawableHighlightView$AlignModeV valueOf(java.lang.String) -> valueOf
com.aviary.android.feather.widget.DrawableHighlightView$OnDeleteClickListener -> com.aviary.android.feather.widget.DrawableHighlightView$OnDeleteClickListener:
    void onDeleteClick() -> onDeleteClick
com.aviary.android.feather.widget.EffectThumbLayout -> com.aviary.android.feather.widget.EffectThumbLayout:
    boolean mChecked -> mChecked
    boolean mOpened -> mOpened
    int mThumbAnimationDuration -> mThumbAnimationDuration
    android.view.View mHiddenView -> mHiddenView
    android.view.View mImageView -> mImageView
    void init(android.content.Context,android.util.AttributeSet,int) -> init
    boolean isOpened() -> isOpened
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    void toggle() -> toggle
    void setSelected(boolean) -> setSelected
    void open() -> open
    void close() -> close
    void setIsOpened(boolean) -> setIsOpened
    void postSetIsOpened(boolean) -> postSetIsOpened
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void postAnimateView(int,boolean) -> postAnimateView
    void animateView(int,boolean) -> animateView
    android.view.View access$0(com.aviary.android.feather.widget.EffectThumbLayout) -> access$0
    android.view.View access$1(com.aviary.android.feather.widget.EffectThumbLayout) -> access$1
    void access$2(com.aviary.android.feather.widget.EffectThumbLayout,boolean) -> access$2
    boolean access$3(com.aviary.android.feather.widget.EffectThumbLayout) -> access$3
com.aviary.android.feather.widget.EffectThumbLayout$1 -> com.aviary.android.feather.widget.EffectThumbLayout$1:
    com.aviary.android.feather.widget.EffectThumbLayout this$0 -> this$0
    boolean val$opened -> val$opened
    void run() -> run
com.aviary.android.feather.widget.EffectThumbLayout$2 -> com.aviary.android.feather.widget.EffectThumbLayout$2:
    com.aviary.android.feather.widget.EffectThumbLayout this$0 -> this$0
    int val$durationMs -> val$durationMs
    boolean val$isClosing -> val$isClosing
    void run() -> run
com.aviary.android.feather.widget.EffectThumbLayout$3 -> com.aviary.android.feather.widget.EffectThumbLayout$3:
    com.aviary.android.feather.widget.EffectThumbLayout this$0 -> this$0
    int val$durationMs -> val$durationMs
    long val$startTime -> val$startTime
    it.sephiroth.android.library.imagezoom.easing.Easing val$easing -> val$easing
    float val$endHeight -> val$endHeight
    boolean val$isClosing -> val$isClosing
    void run() -> run
com.aviary.android.feather.widget.HighlightView -> com.aviary.android.feather.widget.HighlightView:
    java.lang.String LOG_TAG -> LOG_TAG
    int GROW_NONE -> GROW_NONE
    int GROW_LEFT_EDGE -> GROW_LEFT_EDGE
    int GROW_RIGHT_EDGE -> GROW_RIGHT_EDGE
    int GROW_TOP_EDGE -> GROW_TOP_EDGE
    int GROW_BOTTOM_EDGE -> GROW_BOTTOM_EDGE
    int MOVE -> MOVE
    boolean mHidden -> mHidden
    int mParentWidth -> mParentWidth
    int mParentHeight -> mParentHeight
    android.os.Handler mHandler -> mHandler
    int mMinSize -> mMinSize
    com.aviary.android.feather.widget.HighlightView$Mode mMode -> mMode
    android.graphics.Rect mDrawRect -> mDrawRect
    com.aviary.android.feather.library.graphics.RectD mImageRect -> mImageRect
    com.aviary.android.feather.library.graphics.RectD mCropRect -> mCropRect
    android.graphics.Matrix mMatrix -> mMatrix
    boolean mMaintainAspectRatio -> mMaintainAspectRatio
    double mInitialAspectRatio -> mInitialAspectRatio
    android.graphics.drawable.Drawable mResizeDrawable -> mResizeDrawable
    android.graphics.Paint mOutlinePaint -> mOutlinePaint
    android.graphics.Paint mOutlinePaint2 -> mOutlinePaint2
    android.graphics.Paint mOutlineFill -> mOutlineFill
    android.graphics.Paint mLinesPaintShadow -> mLinesPaintShadow
    int mStrokeColor -> mStrokeColor
    int mStrokeColorPressed -> mStrokeColorPressed
    int mOutsideFillColor -> mOutsideFillColor
    int mOutsideFillColorPressed -> mOutsideFillColorPressed
    int mStrokeWidth -> mStrokeWidth
    int mStrokeWidth2 -> mStrokeWidth2
    int mInternalStrokeColor -> mInternalStrokeColor
    int mInternalStrokeColorPressed -> mInternalStrokeColorPressed
    int dWidth -> dWidth
    int dHeight -> dHeight
    int grid_rows -> grid_rows
    int grid_cols -> grid_cols
    android.graphics.Rect mViewDrawingRect -> mViewDrawingRect
    android.graphics.Path mPath -> mPath
    android.graphics.Path mLinesPath -> mLinesPath
    android.graphics.Path mInversePath -> mInversePath
    com.aviary.android.feather.library.graphics.RectD tmpRect2 -> tmpRect2
    android.graphics.Rect tmpRect4 -> tmpRect4
    android.graphics.RectF tmpDrawRect2F -> tmpDrawRect2F
    android.graphics.RectF tmpDrawRectF -> tmpDrawRectF
    android.graphics.RectF tmpDisplayRectF -> tmpDisplayRectF
    android.graphics.Rect tmpRectMotion -> tmpRectMotion
    com.aviary.android.feather.library.graphics.RectD tmpRectMotionD -> tmpRectMotionD
    android.graphics.RectF tempLayoutRectF -> tempLayoutRectF
    float hysteresis -> hysteresis
    boolean mRunning -> mRunning
    int animationDurationMs -> animationDurationMs
    it.sephiroth.android.library.imagezoom.easing.Easing mEasing -> mEasing
    void dispose() -> dispose
    void setMinSize(int) -> setMinSize
    void setHidden(boolean) -> setHidden
    void draw(android.graphics.Canvas) -> draw
    void setMode(com.aviary.android.feather.widget.HighlightView$Mode) -> setMode
    int getHit(float,float) -> getHit
    boolean isLeftEdge(int) -> isLeftEdge
    boolean isRightEdge(int) -> isRightEdge
    boolean isTopEdge(int) -> isTopEdge
    boolean isBottomEdge(int) -> isBottomEdge
    void handleMotion(int,float,float) -> handleMotion
    double calculateDy(double,double) -> calculateDy
    double calculateDx(double,double) -> calculateDx
    void growWithConstantAspectSize(int,double,double) -> growWithConstantAspectSize
    void growWithoutConstantAspectSize(int,double,double) -> growWithoutConstantAspectSize
    void moveBy(double,double) -> moveBy
    void moveBy(float,float) -> moveBy
    android.graphics.Rect getInvalidateRect() -> getInvalidateRect
    float getScale() -> getScale
    void adjustCropRect(com.aviary.android.feather.library.graphics.RectD) -> adjustCropRect
    com.aviary.android.feather.library.graphics.RectD adjustRealCropRect(android.graphics.Matrix,com.aviary.android.feather.library.graphics.RectD,com.aviary.android.feather.library.graphics.RectD) -> adjustRealCropRect
    void computeLayout(boolean,android.graphics.Rect) -> computeLayout
    void getDisplayRect(android.graphics.Matrix,com.aviary.android.feather.library.graphics.RectD,android.graphics.Rect) -> getDisplayRect
    void invalidate() -> invalidate
    boolean isRunning() -> isRunning
    void animateTo(android.view.View,android.graphics.Matrix,com.aviary.android.feather.library.graphics.RectD,com.aviary.android.feather.library.graphics.RectD,boolean) -> animateTo
    void setup(android.graphics.Matrix,com.aviary.android.feather.library.graphics.RectD,com.aviary.android.feather.library.graphics.RectD,boolean) -> setup
    void setAspectRatio(double) -> setAspectRatio
    void setMaintainAspectRatio(boolean) -> setMaintainAspectRatio
    void update(android.graphics.Matrix,android.graphics.Rect) -> update
    android.graphics.Matrix getMatrix() -> getMatrix
    android.graphics.Rect getDrawRect() -> getDrawRect
    com.aviary.android.feather.library.graphics.RectD getCropRectD() -> getCropRectD
    android.graphics.Rect getCropRect() -> getCropRect
    void onSizeChanged(com.aviary.android.feather.widget.CropImageView,int,int,int,int) -> onSizeChanged
    android.graphics.Rect access$0(com.aviary.android.feather.widget.HighlightView) -> access$0
    android.os.Handler access$1() -> access$1
    void access$2(com.aviary.android.feather.widget.HighlightView,boolean) -> access$2
com.aviary.android.feather.widget.HighlightView$1 -> com.aviary.android.feather.widget.HighlightView$1:
    com.aviary.android.feather.widget.HighlightView this$0 -> this$0
    long val$startTime -> val$startTime
    double val$pt1 -> val$pt1
    double val$pt2 -> val$pt2
    double val$pt3 -> val$pt3
    double val$pt4 -> val$pt4
    float[] val$topLeft -> val$topLeft
    float[] val$bottomRight -> val$bottomRight
    android.view.View val$parent -> val$parent
    boolean val$maintainAspectRatio -> val$maintainAspectRatio
    void run() -> run
com.aviary.android.feather.widget.HighlightView$Mode -> com.aviary.android.feather.widget.HighlightView$Mode:
    com.aviary.android.feather.widget.HighlightView$Mode None -> None
    com.aviary.android.feather.widget.HighlightView$Mode Move -> Move
    com.aviary.android.feather.widget.HighlightView$Mode Grow -> Grow
    com.aviary.android.feather.widget.HighlightView$Mode[] ENUM$VALUES -> ENUM$VALUES
    com.aviary.android.feather.widget.HighlightView$Mode[] values() -> values
    com.aviary.android.feather.widget.HighlightView$Mode valueOf(java.lang.String) -> valueOf
com.aviary.android.feather.widget.IAPBuyButton -> com.aviary.android.feather.widget.IAPBuyButton:
    android.widget.TextView mTextView -> mTextView
    android.view.View mProgress -> mProgress
    com.aviary.android.feather.widget.IAPDialogMain$PackOptionWithPrice mOption -> mOption
    long mPackId -> mPackId
    java.lang.Runnable checkDownloadStatus -> checkDownloadStatus
    int[] $SWITCH_TABLE$com$aviary$android$feather$cds$CdsUtils$PackOption -> $SWITCH_TABLE$com$aviary$android$feather$cds$CdsUtils$PackOption
    void onFinishInflate() -> onFinishInflate
    com.aviary.android.feather.widget.IAPDialogMain$PackOptionWithPrice getPackOption() -> getPackOption
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setPackOption(com.aviary.android.feather.widget.IAPDialogMain$PackOptionWithPrice,long) -> setPackOption
    int[] $SWITCH_TABLE$com$aviary$android$feather$cds$CdsUtils$PackOption() -> $SWITCH_TABLE$com$aviary$android$feather$cds$CdsUtils$PackOption
com.aviary.android.feather.widget.IAPBuyButton$1 -> com.aviary.android.feather.widget.IAPBuyButton$1:
    com.aviary.android.feather.widget.IAPBuyButton this$0 -> this$0
    void run() -> run
com.aviary.android.feather.widget.IAPDialogDetail -> com.aviary.android.feather.widget.IAPDialogDetail:
    android.database.ContentObserver mPackPurchasedContentObserver -> mPackPurchasedContentObserver
    android.database.ContentObserver mPackContentObserver -> mPackContentObserver
    com.aviary.android.feather.widget.IAPDialogMain$IAPUpdater mData -> mData
    com.aviary.android.feather.cds.PacksColumns$PackCursorWrapper mPack -> mPack
    com.aviary.android.feather.widget.IAPDialogMain mParent -> mParent
    java.util.HashMap mPriceMap -> mPriceMap
    int mMainLayoutResId -> mMainLayoutResId
    int mCellResId -> mCellResId
    android.view.View mErrorView -> mErrorView
    android.widget.TextView mErrorText -> mErrorText
    android.widget.TextView mRetryButton -> mRetryButton
    android.view.View mLoader -> mLoader
    com.aviary.android.feather.widget.AviaryTextView mTitle -> mTitle
    com.aviary.android.feather.widget.AviaryTextView mDescription -> mDescription
    com.aviary.android.feather.widget.IAPBuyButton mButtonContainer -> mButtonContainer
    com.aviary.android.feather.widget.AviaryWorkspace mWorkspace -> mWorkspace
    com.aviary.android.feather.widget.AviaryWorkspaceIndicator mWorkspaceIndicator -> mWorkspaceIndicator
    android.widget.ImageView mIcon -> mIcon
    android.view.View mHeadView -> mHeadView
    com.aviary.android.feather.library.services.IAPService mIapService -> mIapService
    com.squareup.picasso.Picasso mPicassoLibrary -> mPicassoLibrary
    com.aviary.android.feather.widget.IAPDialogDetail$WorkspaceAdapter mWorkspaceAdapter -> mWorkspaceAdapter
    android.view.View mBannerView -> mBannerView
    boolean mDownloadOnDemand -> mDownloadOnDemand
    boolean mAttached -> mAttached
    int mRows -> mRows
    int mCols -> mCols
    int mItemsPerPage -> mItemsPerPage
    com.aviary.android.feather.common.log.LoggerFactory$Logger logger -> logger
    int[] $SWITCH_TABLE$com$aviary$android$feather$cds$CdsUtils$PackOption -> $SWITCH_TABLE$com$aviary$android$feather$cds$CdsUtils$PackOption
    com.aviary.android.feather.widget.IAPDialogMain$IAPUpdater getData() -> getData
    void onAttachedToWindow() -> onAttachedToWindow
    void computeLayoutItems(android.content.res.Resources,java.lang.String) -> computeLayoutItems
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onClick(android.view.View) -> onClick
    void onDownloadStatusChanged(android.net.Uri) -> onDownloadStatusChanged
    void onPurchaseSuccess(long,java.lang.String,java.lang.String) -> onPurchaseSuccess
    void initWorkspace(com.aviary.android.feather.cds.PacksColumns$PackCursorWrapper) -> initWorkspace
    void update(com.aviary.android.feather.widget.IAPDialogMain$IAPUpdater,com.aviary.android.feather.widget.IAPDialogMain) -> update
    void registerContentObserver(long) -> registerContentObserver
    void unregisterContentObservers() -> unregisterContentObservers
    void onDownloadError() -> onDownloadError
    void onDownloadPreviewError(java.lang.String) -> onDownloadPreviewError
    void updatePlugin(boolean) -> updatePlugin
    void processPlugin() -> processPlugin
    void onPackOptionUpdated(com.aviary.android.feather.widget.IAPDialogMain$PackOptionWithPrice,com.aviary.android.feather.cds.PacksColumns$PackCursorWrapper) -> onPackOptionUpdated
    void determinePackOption(com.aviary.android.feather.cds.PacksColumns$PackCursorWrapper,boolean) -> determinePackOption
    void downloadPackIcon(com.aviary.android.feather.cds.PacksColumns$PackCursorWrapper,com.aviary.android.feather.cds.PacksContentColumns$ContentCursorWrapper) -> downloadPackIcon
    void downloadPackPreviews(com.aviary.android.feather.cds.PacksColumns$PackCursorWrapper) -> downloadPackPreviews
    void onPageChanged(int,int) -> onPageChanged
    boolean isValidContext() -> isValidContext
    com.aviary.android.feather.common.log.LoggerFactory$Logger access$0() -> access$0
    com.aviary.android.feather.widget.IAPDialogMain$IAPUpdater access$1(com.aviary.android.feather.widget.IAPDialogDetail) -> access$1
    com.aviary.android.feather.cds.PacksColumns$PackCursorWrapper access$2(com.aviary.android.feather.widget.IAPDialogDetail) -> access$2
    java.util.HashMap access$3(com.aviary.android.feather.widget.IAPDialogDetail) -> access$3
    void access$4(com.aviary.android.feather.widget.IAPDialogDetail,com.aviary.android.feather.cds.PacksColumns$PackCursorWrapper,boolean) -> access$4
    void access$5(com.aviary.android.feather.widget.IAPDialogDetail,boolean) -> access$5
    com.aviary.android.feather.widget.AviaryWorkspace access$6(com.aviary.android.feather.widget.IAPDialogDetail) -> access$6
    int access$7(com.aviary.android.feather.widget.IAPDialogDetail) -> access$7
    boolean access$8(com.aviary.android.feather.widget.IAPDialogDetail) -> access$8
    com.squareup.picasso.Picasso access$9(com.aviary.android.feather.widget.IAPDialogDetail) -> access$9
    android.view.View access$10(com.aviary.android.feather.widget.IAPDialogDetail) -> access$10
    void access$11(com.aviary.android.feather.widget.IAPDialogDetail,java.lang.String) -> access$11
    android.view.View access$12(com.aviary.android.feather.widget.IAPDialogDetail) -> access$12
    com.aviary.android.feather.library.services.IAPService access$13(com.aviary.android.feather.widget.IAPDialogDetail) -> access$13
    void access$14(com.aviary.android.feather.widget.IAPDialogDetail,com.aviary.android.feather.widget.IAPDialogMain$PackOptionWithPrice,com.aviary.android.feather.cds.PacksColumns$PackCursorWrapper) -> access$14
    int[] $SWITCH_TABLE$com$aviary$android$feather$cds$CdsUtils$PackOption() -> $SWITCH_TABLE$com$aviary$android$feather$cds$CdsUtils$PackOption
    void access$16(com.aviary.android.feather.widget.IAPDialogDetail,com.aviary.android.feather.cds.PacksColumns$PackCursorWrapper) -> access$16
com.aviary.android.feather.widget.IAPDialogDetail$1 -> com.aviary.android.feather.widget.IAPDialogDetail$1:
    com.aviary.android.feather.widget.IAPDialogDetail this$0 -> this$0
    void onChange(boolean) -> onChange
    void onChange(boolean,android.net.Uri) -> onChange
com.aviary.android.feather.widget.IAPDialogDetail$2 -> com.aviary.android.feather.widget.IAPDialogDetail$2:
    com.aviary.android.feather.widget.IAPDialogDetail this$0 -> this$0
    void onChange(boolean) -> onChange
    void onChange(boolean,android.net.Uri) -> onChange
com.aviary.android.feather.widget.IAPDialogDetail$3 -> com.aviary.android.feather.widget.IAPDialogDetail$3:
    com.aviary.android.feather.widget.IAPDialogDetail this$0 -> this$0
    void run() -> run
com.aviary.android.feather.widget.IAPDialogDetail$DeterminePackOptionAsyncTask -> com.aviary.android.feather.widget.IAPDialogDetail$DeterminePackOptionAsyncTask:
    com.aviary.android.feather.cds.billing.util.IabResult mResult -> mResult
    com.aviary.android.feather.cds.PacksColumns$PackCursorWrapper mPack -> mPack
    boolean mForceUpdate -> mForceUpdate
    com.aviary.android.feather.cds.billing.util.IabResult mIabResult -> mIabResult
    com.aviary.android.feather.widget.IAPDialogDetail this$0 -> this$0
    void PreExecute() -> PreExecute
    com.aviary.android.feather.widget.IAPDialogMain$PackOptionWithPrice doInBackground(com.aviary.android.feather.cds.PacksColumns$PackCursorWrapper[]) -> doInBackground
    void ProgressUpdate(com.aviary.android.feather.widget.IAPDialogMain$PackOptionWithPrice[]) -> ProgressUpdate
    void PostExecute(com.aviary.android.feather.widget.IAPDialogMain$PackOptionWithPrice) -> PostExecute
    void PostExecute(java.lang.Object) -> PostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void ProgressUpdate(java.lang.Object[]) -> ProgressUpdate
com.aviary.android.feather.widget.IAPDialogDetail$RemotePreviewDownloader -> com.aviary.android.feather.widget.IAPDialogDetail$RemotePreviewDownloader:
    com.aviary.android.feather.cds.PacksColumns$PackCursorWrapper mCurrentPack -> mCurrentPack
    java.lang.Throwable mError -> mError
    com.aviary.android.feather.widget.IAPDialogDetail this$0 -> this$0
    void PostExecute(java.lang.String) -> PostExecute
    void PreExecute() -> PreExecute
    java.lang.String doInBackground(java.lang.Long[]) -> doInBackground
    void PostExecute(java.lang.Object) -> PostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.aviary.android.feather.widget.IAPDialogDetail$WorkspaceAdapter -> com.aviary.android.feather.widget.IAPDialogDetail$WorkspaceAdapter:
    android.view.LayoutInflater mLayoutInflater -> mLayoutInflater
    int mResId -> mResId
    java.lang.String mBaseDir -> mBaseDir
    java.lang.String mFileExt -> mFileExt
    int mTargetDensity -> mTargetDensity
    int mInputDensity -> mInputDensity
    int columnIndexType -> columnIndexType
    int columnIndexDisplayName -> columnIndexDisplayName
    int columnIndexIdentifier -> columnIndexIdentifier
    com.aviary.android.feather.widget.IAPDialogDetail this$0 -> this$0
    int[] $SWITCH_TABLE$com$aviary$android$feather$cds$CdsUtils$Resolution -> $SWITCH_TABLE$com$aviary$android$feather$cds$CdsUtils$Resolution
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void recycleBitmaps() -> recycleBitmaps
    void initCursor(android.database.Cursor) -> initCursor
    void setContext(android.content.Context) -> setContext
    void setResourceId(int) -> setResourceId
    void setBaseDir(java.lang.String) -> setBaseDir
    java.lang.String getBaseDir() -> getBaseDir
    void setFileExt(java.lang.String) -> setFileExt
    int getCount() -> getCount
    int getRealCount() -> getRealCount
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void loadImage(int,int,android.widget.ImageView,boolean,int,int) -> loadImage
    int[] $SWITCH_TABLE$com$aviary$android$feather$cds$CdsUtils$Resolution() -> $SWITCH_TABLE$com$aviary$android$feather$cds$CdsUtils$Resolution
com.aviary.android.feather.widget.IAPDialogDetail$WorkspaceAdapter$1 -> com.aviary.android.feather.widget.IAPDialogDetail$WorkspaceAdapter$1:
    com.aviary.android.feather.widget.IAPDialogDetail$WorkspaceAdapter this$1 -> this$1
    int val$imageTag -> val$imageTag
    android.widget.ImageView val$imageView -> val$imageView
    void onSuccess() -> onSuccess
    void onError() -> onError
com.aviary.android.feather.widget.IAPDialogList -> com.aviary.android.feather.widget.IAPDialogList:
    com.aviary.android.feather.common.log.LoggerFactory$Logger logger -> logger
    boolean mAttached -> mAttached
    com.aviary.android.feather.widget.IAPDialogMain$IAPUpdater mData -> mData
    com.aviary.android.feather.cds.IAPWrapper mWrapper -> mWrapper
    com.aviary.android.feather.widget.IAPDialogList$ListAdapter mAdapter -> mAdapter
    com.haarman.listviewanimations.swinginadapters.AnimationAdapter mAnimationAdapter -> mAnimationAdapter
    java.util.HashMap priceMap -> priceMap
    boolean mScrollStateChanged -> mScrollStateChanged
    android.widget.TextView mSummaryText -> mSummaryText
    com.aviary.android.feather.widget.IAPDialogMain mParent -> mParent
    android.widget.ListView mList -> mList
    android.widget.Button mRestoreAllButton -> mRestoreAllButton
    android.view.View mListProgress -> mListProgress
    com.aviary.android.feather.widget.IAPDialogList$onPackSelectedListener mPackSelectedListener -> mPackSelectedListener
    com.squareup.picasso.Picasso mPicassoLibrary -> mPicassoLibrary
    com.aviary.android.feather.library.services.LocalDataService mDataService -> mDataService
    android.database.ContentObserver mPackPurchasedContentObserver -> mPackPurchasedContentObserver
    android.database.ContentObserver mServiceFinishedContentObserver -> mServiceFinishedContentObserver
    int[] $SWITCH_TABLE$com$aviary$android$feather$cds$AviaryCds$PackType -> $SWITCH_TABLE$com$aviary$android$feather$cds$AviaryCds$PackType
    void update(com.aviary.android.feather.widget.IAPDialogMain$IAPUpdater,com.aviary.android.feather.widget.IAPDialogMain) -> update
    void onDownloadStatusChanged(android.net.Uri) -> onDownloadStatusChanged
    void onPurchaseSuccess(long,java.lang.String,java.lang.String) -> onPurchaseSuccess
    void initializeWrapper() -> initializeWrapper
    com.aviary.android.feather.widget.IAPDialogMain$IAPUpdater getData() -> getData
    void onRestoreAll() -> onRestoreAll
    void displayProgressNotification() -> displayProgressNotification
    void setOnPackSelectedListener(com.aviary.android.feather.widget.IAPDialogList$onPackSelectedListener) -> setOnPackSelectedListener
    java.lang.String getPackTypeString(com.aviary.android.feather.cds.AviaryCds$PackType) -> getPackTypeString
    void processList(com.aviary.android.feather.cds.AviaryCds$PackType,boolean) -> processList
    android.database.Cursor createCursor(com.aviary.android.feather.cds.AviaryCds$PackType) -> createCursor
    java.lang.String getPackType(int) -> getPackType
    void registerContentObservers(com.aviary.android.feather.cds.AviaryCds$PackType) -> registerContentObservers
    void unregisterContentObservers() -> unregisterContentObservers
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onFinishInflate() -> onFinishInflate
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    void onClick(android.view.View) -> onClick
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    java.util.HashMap getPackOptionsFromInventory(com.aviary.android.feather.cds.IAPWrapper,java.util.HashMap) -> getPackOptionsFromInventory
    boolean isValidContext() -> isValidContext
    com.aviary.android.feather.widget.IAPDialogMain$IAPUpdater access$0(com.aviary.android.feather.widget.IAPDialogList) -> access$0
    java.util.HashMap access$1(com.aviary.android.feather.widget.IAPDialogList) -> access$1
    com.aviary.android.feather.widget.IAPDialogMain access$2(com.aviary.android.feather.widget.IAPDialogList) -> access$2
    void access$3(com.aviary.android.feather.widget.IAPDialogList,com.aviary.android.feather.widget.IAPDialogMain$IAPUpdater) -> access$3
    com.squareup.picasso.Picasso access$4(com.aviary.android.feather.widget.IAPDialogList) -> access$4
    java.lang.String access$5(com.aviary.android.feather.widget.IAPDialogList,com.aviary.android.feather.cds.AviaryCds$PackType) -> access$5
    void access$6(com.aviary.android.feather.widget.IAPDialogList,boolean) -> access$6
    boolean access$7(com.aviary.android.feather.widget.IAPDialogList) -> access$7
    com.aviary.android.feather.cds.IAPWrapper access$8(com.aviary.android.feather.widget.IAPDialogList) -> access$8
    android.database.Cursor access$9(com.aviary.android.feather.widget.IAPDialogList,com.aviary.android.feather.cds.AviaryCds$PackType) -> access$9
    java.util.HashMap access$10(com.aviary.android.feather.cds.IAPWrapper,java.util.HashMap) -> access$10
    com.aviary.android.feather.widget.IAPDialogList$ListAdapter access$11(com.aviary.android.feather.widget.IAPDialogList) -> access$11
    android.view.View access$12(com.aviary.android.feather.widget.IAPDialogList) -> access$12
    int[] $SWITCH_TABLE$com$aviary$android$feather$cds$AviaryCds$PackType() -> $SWITCH_TABLE$com$aviary$android$feather$cds$AviaryCds$PackType
com.aviary.android.feather.widget.IAPDialogList$1 -> com.aviary.android.feather.widget.IAPDialogList$1:
    com.aviary.android.feather.widget.IAPDialogList this$0 -> this$0
    void onChange(boolean) -> onChange
    void onChange(boolean,android.net.Uri) -> onChange
com.aviary.android.feather.widget.IAPDialogList$2 -> com.aviary.android.feather.widget.IAPDialogList$2:
    com.aviary.android.feather.widget.IAPDialogList this$0 -> this$0
    void onChange(boolean) -> onChange
    void onChange(boolean,android.net.Uri) -> onChange
com.aviary.android.feather.widget.IAPDialogList$3 -> com.aviary.android.feather.widget.IAPDialogList$3:
    com.aviary.android.feather.widget.IAPDialogList this$0 -> this$0
    boolean val$update -> val$update
    com.aviary.android.feather.cds.AviaryCds$PackType val$packType -> val$packType
    void run() -> run
com.aviary.android.feather.widget.IAPDialogList$4 -> com.aviary.android.feather.widget.IAPDialogList$4:
    com.aviary.android.feather.widget.IAPDialogList this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.aviary.android.feather.widget.IAPDialogList$DeterminePackOptionAsyncTask -> com.aviary.android.feather.widget.IAPDialogList$DeterminePackOptionAsyncTask:
    com.aviary.android.feather.cds.billing.util.IabResult mResult -> mResult
    com.aviary.android.feather.cds.PacksColumns$PackCursorWrapper mPack -> mPack
    java.lang.ref.WeakReference mTargetView -> mTargetView
    com.aviary.android.feather.cds.billing.util.IabResult mIabResult -> mIabResult
    com.aviary.android.feather.widget.IAPDialogList this$0 -> this$0
    void onPackOptionUpdated(com.aviary.android.feather.widget.IAPDialogMain$PackOptionWithPrice,com.aviary.android.feather.cds.PacksColumns$PackCursorWrapper) -> onPackOptionUpdated
    void PreExecute() -> PreExecute
    void ProgressUpdate(com.aviary.android.feather.widget.IAPDialogMain$PackOptionWithPrice[]) -> ProgressUpdate
    void PostExecute(com.aviary.android.feather.widget.IAPDialogMain$PackOptionWithPrice) -> PostExecute
    com.aviary.android.feather.widget.IAPDialogMain$PackOptionWithPrice doInBackground(java.lang.Long[]) -> doInBackground
    void PostExecute(java.lang.Object) -> PostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void ProgressUpdate(java.lang.Object[]) -> ProgressUpdate
com.aviary.android.feather.widget.IAPDialogList$ListAdapter -> com.aviary.android.feather.widget.IAPDialogList$ListAdapter:
    android.graphics.drawable.BitmapDrawable mFolderIcon -> mFolderIcon
    java.lang.String mPackTypeText -> mPackTypeText
    int idColumnIndex -> idColumnIndex
    int displayNameColumnIndex -> displayNameColumnIndex
    int iconPackColumnIndex -> iconPackColumnIndex
    int identifierColumnIndex -> identifierColumnIndex
    int itemsCountColumnIndex -> itemsCountColumnIndex
    int mMaxImageSize -> mMaxImageSize
    java.lang.String[] itemsCursorProjectionIn -> itemsCursorProjectionIn
    com.aviary.android.feather.widget.IAPDialogList this$0 -> this$0
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void initCursor(android.database.Cursor) -> initCursor
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    com.aviary.android.feather.widget.IAPDialogList access$0(com.aviary.android.feather.widget.IAPDialogList$ListAdapter) -> access$0
com.aviary.android.feather.widget.IAPDialogList$ListAdapter$1 -> com.aviary.android.feather.widget.IAPDialogList$ListAdapter$1:
    com.aviary.android.feather.widget.IAPDialogList$ListAdapter this$1 -> this$1
    com.aviary.android.feather.widget.IAPDialogList$ListAdapter$ViewHolder val$holder -> val$holder
    java.lang.String val$iconPath -> val$iconPath
    void onSuccess() -> onSuccess
    void onError() -> onError
com.aviary.android.feather.widget.IAPDialogList$ListAdapter$2 -> com.aviary.android.feather.widget.IAPDialogList$ListAdapter$2:
    com.aviary.android.feather.widget.IAPDialogList$ListAdapter this$1 -> this$1
    int[] $SWITCH_TABLE$com$aviary$android$feather$cds$CdsUtils$PackOption -> $SWITCH_TABLE$com$aviary$android$feather$cds$CdsUtils$PackOption
    void onClick(android.view.View) -> onClick
    int[] $SWITCH_TABLE$com$aviary$android$feather$cds$CdsUtils$PackOption() -> $SWITCH_TABLE$com$aviary$android$feather$cds$CdsUtils$PackOption
com.aviary.android.feather.widget.IAPDialogList$ListAdapter$ViewHolder -> com.aviary.android.feather.widget.IAPDialogList$ListAdapter$ViewHolder:
    long packid -> packid
    java.lang.String identifier -> identifier
    android.widget.TextView title -> title
    android.widget.TextView text -> text
    android.widget.ImageView icon -> icon
    com.aviary.android.feather.widget.IAPBuyButton buttonContainer -> buttonContainer
    com.aviary.android.feather.common.threading.FutureListener listener -> listener
    com.aviary.android.feather.widget.IAPDialogList$ListAdapter this$1 -> this$1
com.aviary.android.feather.widget.IAPDialogList$ListAdapter$ViewHolder$1 -> com.aviary.android.feather.widget.IAPDialogList$ListAdapter$ViewHolder$1:
    com.aviary.android.feather.widget.IAPDialogList$ListAdapter$ViewHolder this$2 -> this$2
    void onFutureDone(com.aviary.android.feather.common.threading.Future) -> onFutureDone
com.aviary.android.feather.widget.IAPDialogList$ListAnimator -> com.aviary.android.feather.widget.IAPDialogList$ListAnimator:
    com.aviary.android.feather.widget.IAPDialogList this$0 -> this$0
    com.nineoldandroids.animation.Animator getAnimator(android.view.ViewGroup,android.view.View) -> getAnimator
com.aviary.android.feather.widget.IAPDialogList$QueryInventoryAsyncTask -> com.aviary.android.feather.widget.IAPDialogList$QueryInventoryAsyncTask:
    com.aviary.android.feather.cds.billing.util.IabResult mIabResult -> mIabResult
    android.database.Cursor mCursor -> mCursor
    com.aviary.android.feather.widget.IAPDialogList this$0 -> this$0
    int[] $SWITCH_TABLE$com$aviary$android$feather$cds$CdsUtils$PackOption -> $SWITCH_TABLE$com$aviary$android$feather$cds$CdsUtils$PackOption
    void PreExecute() -> PreExecute
    java.util.HashMap doInBackground(com.aviary.android.feather.cds.AviaryCds$PackType[]) -> doInBackground
    void PostExecute(java.util.HashMap) -> PostExecute
    void PostExecute(java.lang.Object) -> PostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    int[] $SWITCH_TABLE$com$aviary$android$feather$cds$CdsUtils$PackOption() -> $SWITCH_TABLE$com$aviary$android$feather$cds$CdsUtils$PackOption
com.aviary.android.feather.widget.IAPDialogList$onPackSelectedListener -> com.aviary.android.feather.widget.IAPDialogList$onPackSelectedListener:
    void onPackSelected(long,com.aviary.android.feather.cds.AviaryCds$PackType) -> onPackSelected
com.aviary.android.feather.widget.IAPDialogMain -> com.aviary.android.feather.widget.IAPDialogMain:
    com.aviary.android.feather.common.log.LoggerFactory$Logger logger -> logger
    java.util.HashMap privatePriceMap -> privatePriceMap
    com.aviary.android.feather.widget.IAPDialogMain$OnCloseListener mCloseListener -> mCloseListener
    android.view.ViewGroup mView -> mView
    com.aviary.android.feather.widget.IAPDialogMain$IAPUpdater mData -> mData
    android.widget.ViewAnimator mViewAnimator -> mViewAnimator
    com.aviary.android.feather.AviaryMainController mController -> mController
    com.aviary.android.feather.library.services.IAPService mIAPService -> mIAPService
    android.database.ContentObserver mDownloadStatusObserver -> mDownloadStatusObserver
    java.lang.Runnable mHideRunnable -> mHideRunnable
    com.aviary.android.feather.widget.IAPDialogMain create(com.aviary.android.feather.AviaryMainController$FeatherContext,com.aviary.android.feather.widget.IAPDialogMain$IAPUpdater) -> create
    void initController() -> initController
    com.aviary.android.feather.AviaryMainController getController() -> getController
    boolean onBackPressed() -> onBackPressed
    java.util.HashMap getPriceMap(com.aviary.android.feather.cds.AviaryCds$PackType) -> getPriceMap
    void onDownloadStatusChanged(android.net.Uri) -> onDownloadStatusChanged
    void onPurchaseSuccess(com.aviary.android.feather.cds.billing.util.Purchase,long,java.lang.String,java.lang.String,java.lang.String) -> onPurchaseSuccess
    void update(com.aviary.android.feather.widget.IAPDialogMain$IAPUpdater) -> update
    void update(com.aviary.android.feather.widget.IAPDialogMain$IAPUpdater,boolean) -> update
    void displayChild(int,boolean) -> displayChild
    com.aviary.android.feather.widget.IAPDialogList getListView() -> getListView
    com.aviary.android.feather.widget.IAPDialogDetail getDetailView() -> getDetailView
    com.aviary.android.feather.widget.IAPDialogMain$IAPUpdater getData() -> getData
    void launchPackPurchaseFlow(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> launchPackPurchaseFlow
    void trackBeginPurchaseFlow(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean) -> trackBeginPurchaseFlow
    void trackEndPurchaseFlow(android.content.Context,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> trackEndPurchaseFlow
    void sendReceipt(java.lang.String,boolean,boolean) -> sendReceipt
    void sendReceipt(com.aviary.android.feather.cds.billing.util.Purchase,java.lang.String) -> sendReceipt
    boolean requestPackDownload(long) -> requestPackDownload
    boolean requestPackDownload(long,boolean) -> requestPackDownload
    boolean requestPackDownload(long,long,boolean) -> requestPackDownload
    android.view.ViewGroup addToParent(android.view.ViewGroup,int) -> addToParent
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean removeFromParent() -> removeFromParent
    void dismiss(boolean) -> dismiss
    void hide() -> hide
    boolean isValid() -> isValid
    android.content.Context getContext() -> getContext
    void handleHide() -> handleHide
    void setOnCloseListener(com.aviary.android.feather.widget.IAPDialogMain$OnCloseListener) -> setOnCloseListener
    void onPackSelected(long,com.aviary.android.feather.cds.AviaryCds$PackType) -> onPackSelected
    void trackPackSelected(long) -> trackPackSelected
    com.aviary.android.feather.widget.IAPDialogMain$PackOptionWithPrice getFromInventory(com.aviary.android.feather.cds.IAPWrapper,java.lang.String) -> getFromInventory
    void access$0(com.aviary.android.feather.widget.IAPDialogMain,android.net.Uri) -> access$0
    void access$1(com.aviary.android.feather.widget.IAPDialogMain) -> access$1
    void access$2(com.aviary.android.feather.widget.IAPDialogMain,com.aviary.android.feather.cds.billing.util.Purchase,long,java.lang.String,java.lang.String,java.lang.String) -> access$2
    boolean access$3(com.aviary.android.feather.widget.IAPDialogMain) -> access$3
com.aviary.android.feather.widget.IAPDialogMain$1 -> com.aviary.android.feather.widget.IAPDialogMain$1:
    com.aviary.android.feather.widget.IAPDialogMain this$0 -> this$0
    void onChange(boolean) -> onChange
    void onChange(boolean,android.net.Uri) -> onChange
com.aviary.android.feather.widget.IAPDialogMain$2 -> com.aviary.android.feather.widget.IAPDialogMain$2:
    com.aviary.android.feather.widget.IAPDialogMain this$0 -> this$0
    void run() -> run
com.aviary.android.feather.widget.IAPDialogMain$3 -> com.aviary.android.feather.widget.IAPDialogMain$3:
    com.aviary.android.feather.widget.IAPDialogMain this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.aviary.android.feather.widget.IAPDialogMain$4 -> com.aviary.android.feather.widget.IAPDialogMain$4:
    com.aviary.android.feather.widget.IAPDialogMain this$0 -> this$0
    long val$packId -> val$packId
    java.lang.String val$identifier -> val$identifier
    java.lang.String val$packType -> val$packType
    java.lang.String val$price -> val$price
    java.lang.String val$whereFrom -> val$whereFrom
    void onIabPurchaseFinished(com.aviary.android.feather.cds.billing.util.IabResult,com.aviary.android.feather.cds.billing.util.Purchase) -> onIabPurchaseFinished
com.aviary.android.feather.widget.IAPDialogMain$5 -> com.aviary.android.feather.widget.IAPDialogMain$5:
    com.aviary.android.feather.widget.IAPDialogMain this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.aviary.android.feather.widget.IAPDialogMain$IAPUpdater -> com.aviary.android.feather.widget.IAPDialogMain$IAPUpdater:
    long packId -> packId
    com.aviary.android.feather.cds.AviaryCds$PackType packType -> packType
    long getPackId() -> getPackId
    com.aviary.android.feather.cds.AviaryCds$PackType getPackType() -> getPackType
    java.lang.Object clone() -> clone
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    void access$0(com.aviary.android.feather.widget.IAPDialogMain$IAPUpdater,long) -> access$0
    void access$1(com.aviary.android.feather.widget.IAPDialogMain$IAPUpdater,com.aviary.android.feather.cds.AviaryCds$PackType) -> access$1
    long access$2(com.aviary.android.feather.widget.IAPDialogMain$IAPUpdater) -> access$2
    com.aviary.android.feather.cds.AviaryCds$PackType access$3(com.aviary.android.feather.widget.IAPDialogMain$IAPUpdater) -> access$3
com.aviary.android.feather.widget.IAPDialogMain$IAPUpdater$Builder -> com.aviary.android.feather.widget.IAPDialogMain$IAPUpdater$Builder:
    com.aviary.android.feather.widget.IAPDialogMain$IAPUpdater result -> result
    com.aviary.android.feather.widget.IAPDialogMain$IAPUpdater$Builder setPackId(long) -> setPackId
    com.aviary.android.feather.widget.IAPDialogMain$IAPUpdater$Builder setPackType(com.aviary.android.feather.cds.AviaryCds$PackType) -> setPackType
    com.aviary.android.feather.widget.IAPDialogMain$IAPUpdater build() -> build
com.aviary.android.feather.widget.IAPDialogMain$OnCloseListener -> com.aviary.android.feather.widget.IAPDialogMain$OnCloseListener:
    void onClose() -> onClose
com.aviary.android.feather.widget.IAPDialogMain$PackOptionWithPrice -> com.aviary.android.feather.widget.IAPDialogMain$PackOptionWithPrice:
    java.lang.String price -> price
    com.aviary.android.feather.cds.CdsUtils$PackOption option -> option
    java.lang.String toString() -> toString
com.aviary.android.feather.widget.ImageViewDrawableOverlay -> com.aviary.android.feather.widget.ImageViewDrawableOverlay:
    java.util.List mOverlayViews -> mOverlayViews
    com.aviary.android.feather.widget.DrawableHighlightView mOverlayView -> mOverlayView
    com.aviary.android.feather.widget.ImageViewDrawableOverlay$OnDrawableEventListener mDrawableListener -> mDrawableListener
    boolean mForceSingleSelection -> mForceSingleSelection
    com.aviary.android.feather.library.services.drag.DropTarget$DropTargetListener mDropTargetListener -> mDropTargetListener
    android.graphics.Paint mDropPaint -> mDropPaint
    android.graphics.Rect mTempRect -> mTempRect
    boolean mScaleWithContent -> mScaleWithContent
    int mOverlayStyleId -> mOverlayStyleId
    boolean mScrollStarted -> mScrollStarted
    float mLastMotionScrollX -> mLastMotionScrollX
    float mLastMotionScrollY -> mLastMotionScrollY
    void init(android.content.Context,android.util.AttributeSet,int) -> init
    int getOverlayStyleId() -> getOverlayStyleId
    void setScaleWithContent(boolean) -> setScaleWithContent
    boolean getScaleWithContent() -> getScaleWithContent
    void setForceSingleSelection(boolean) -> setForceSingleSelection
    void setDropTargetListener(com.aviary.android.feather.library.services.drag.DropTarget$DropTargetListener) -> setDropTargetListener
    void setOnDrawableEventListener(com.aviary.android.feather.widget.ImageViewDrawableOverlay$OnDrawableEventListener) -> setOnDrawableEventListener
    void setImageDrawable(android.graphics.drawable.Drawable,android.graphics.Matrix,float,float) -> setImageDrawable
    void onLayoutChanged(int,int,int,int) -> onLayoutChanged
    void postTranslate(float,float) -> postTranslate
    void postScale(float,float,float) -> postScale
    void ensureVisible(com.aviary.android.feather.widget.DrawableHighlightView,float,float) -> ensureVisible
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onUp(android.view.MotionEvent) -> onUp
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onDraw(android.graphics.Canvas) -> onDraw
    void clearOverlays() -> clearOverlays
    boolean addHighlightView(com.aviary.android.feather.widget.DrawableHighlightView) -> addHighlightView
    int getHighlightCount() -> getHighlightCount
    com.aviary.android.feather.widget.DrawableHighlightView getHighlightViewAt(int) -> getHighlightViewAt
    boolean removeHightlightView(com.aviary.android.feather.widget.DrawableHighlightView) -> removeHightlightView
    void onZoomAnimationCompleted(float) -> onZoomAnimationCompleted
    com.aviary.android.feather.widget.DrawableHighlightView getSelectedHighlightView() -> getSelectedHighlightView
    void commit(android.graphics.Canvas) -> commit
    com.aviary.android.feather.widget.DrawableHighlightView checkSelection(android.view.MotionEvent) -> checkSelection
    void setSelectedHighlightView(com.aviary.android.feather.widget.DrawableHighlightView) -> setSelectedHighlightView
    void onDrop(com.aviary.android.feather.library.services.DragControllerService$DragSource,int,int,int,int,com.aviary.android.feather.library.services.drag.DragView,java.lang.Object) -> onDrop
    void onDragEnter(com.aviary.android.feather.library.services.DragControllerService$DragSource,int,int,int,int,com.aviary.android.feather.library.services.drag.DragView,java.lang.Object) -> onDragEnter
    void onDragOver(com.aviary.android.feather.library.services.DragControllerService$DragSource,int,int,int,int,com.aviary.android.feather.library.services.drag.DragView,java.lang.Object) -> onDragOver
    void onDragExit(com.aviary.android.feather.library.services.DragControllerService$DragSource,int,int,int,int,com.aviary.android.feather.library.services.drag.DragView,java.lang.Object) -> onDragExit
    boolean acceptDrop(com.aviary.android.feather.library.services.DragControllerService$DragSource,int,int,int,int,com.aviary.android.feather.library.services.drag.DragView,java.lang.Object) -> acceptDrop
    android.graphics.Rect estimateDropLocation(com.aviary.android.feather.library.services.DragControllerService$DragSource,int,int,int,int,com.aviary.android.feather.library.services.drag.DragView,java.lang.Object,android.graphics.Rect) -> estimateDropLocation
com.aviary.android.feather.widget.ImageViewDrawableOverlay$OnDrawableEventListener -> com.aviary.android.feather.widget.ImageViewDrawableOverlay$OnDrawableEventListener:
    void onFocusChange(com.aviary.android.feather.widget.DrawableHighlightView,com.aviary.android.feather.widget.DrawableHighlightView) -> onFocusChange
    void onDown(com.aviary.android.feather.widget.DrawableHighlightView) -> onDown
    void onMove(com.aviary.android.feather.widget.DrawableHighlightView) -> onMove
    void onClick(com.aviary.android.feather.widget.DrawableHighlightView) -> onClick
com.aviary.android.feather.widget.ImageViewSpotDraw -> com.aviary.android.feather.widget.ImageViewSpotDraw:
    boolean mPaintEnabled -> mPaintEnabled
    android.graphics.Paint mPaint -> mPaint
    float mCurrentScale -> mCurrentScale
    float mBrushSize -> mBrushSize
    android.graphics.Path tmpPath -> tmpPath
    android.graphics.Canvas mCanvas -> mCanvas
    com.aviary.android.feather.widget.ImageViewSpotDraw$TouchMode mTouchMode -> mTouchMode
    float mX -> mX
    float mY -> mY
    float mStartX -> mStartX
    float mStartY -> mStartY
    android.graphics.Matrix mIdentityMatrix -> mIdentityMatrix
    android.graphics.Matrix mInvertedMatrix -> mInvertedMatrix
    float TOUCH_TOLERANCE -> TOUCH_TOLERANCE
    com.aviary.android.feather.widget.ImageViewSpotDraw$OnDrawListener mDrawListener -> mDrawListener
    double mRestiction -> mRestiction
    boolean mMoved -> mMoved
    void setOnDrawStartListener(com.aviary.android.feather.widget.ImageViewSpotDraw$OnDrawListener) -> setOnDrawStartListener
    void init(android.content.Context,android.util.AttributeSet,int) -> init
    void setDrawLimit(double) -> setDrawLimit
    void setBrushSize(float) -> setBrushSize
    com.aviary.android.feather.widget.ImageViewSpotDraw$TouchMode getDrawMode() -> getDrawMode
    void setDrawMode(com.aviary.android.feather.widget.ImageViewSpotDraw$TouchMode) -> setDrawMode
    void onDrawModeChanged() -> onDrawModeChanged
    android.graphics.Paint getPaint() -> getPaint
    void setPaint(android.graphics.Paint) -> setPaint
    void setPaintEnabled(boolean) -> setPaintEnabled
    void onDraw(android.graphics.Canvas) -> onDraw
    android.graphics.RectF getImageRect() -> getImageRect
    void onDrawableChanged(android.graphics.drawable.Drawable) -> onDrawableChanged
    void onLayoutChanged(int,int,int,int) -> onLayoutChanged
    void touch_start(float,float) -> touch_start
    void touch_move(float,float) -> touch_move
    void touch_up() -> touch_up
    float[] getMatrixValues(android.graphics.Matrix) -> getMatrixValues
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.aviary.android.feather.widget.ImageViewSpotDraw$OnDrawListener -> com.aviary.android.feather.widget.ImageViewSpotDraw$OnDrawListener:
    void onDrawStart(float[],int) -> onDrawStart
    void onDrawing(float[],int) -> onDrawing
    void onDrawEnd() -> onDrawEnd
com.aviary.android.feather.widget.ImageViewSpotDraw$TouchMode -> com.aviary.android.feather.widget.ImageViewSpotDraw$TouchMode:
    com.aviary.android.feather.widget.ImageViewSpotDraw$TouchMode IMAGE -> IMAGE
    com.aviary.android.feather.widget.ImageViewSpotDraw$TouchMode DRAW -> DRAW
    com.aviary.android.feather.widget.ImageViewSpotDraw$TouchMode[] ENUM$VALUES -> ENUM$VALUES
    com.aviary.android.feather.widget.ImageViewSpotDraw$TouchMode[] values() -> values
    com.aviary.android.feather.widget.ImageViewSpotDraw$TouchMode valueOf(java.lang.String) -> valueOf
com.aviary.android.feather.widget.ImageViewTiltiShiftTouch -> com.aviary.android.feather.widget.ImageViewTiltiShiftTouch:
    int DEFAULT_FADEOUT_TIMEOUT -> DEFAULT_FADEOUT_TIMEOUT
    float BRUSH_MULTIPLIER -> BRUSH_MULTIPLIER
    int mForeColor -> mForeColor
    int mBackColor -> mBackColor
    android.graphics.Paint mPaint -> mPaint
    android.graphics.Paint mCrossPaint -> mCrossPaint
    boolean mCrossEnabled -> mCrossEnabled
    int mPaintAlpha -> mPaintAlpha
    int mBackPaintAlpha -> mBackPaintAlpha
    int mPaintAlphaDefault -> mPaintAlphaDefault
    int mBackPaintAlphaDefault -> mBackPaintAlphaDefault
    int mFadeOutTimeout -> mFadeOutTimeout
    int mFadeOutDuration -> mFadeOutDuration
    float mCurrentScale -> mCurrentScale
    int INVALID_POINTER_ID -> INVALID_POINTER_ID
    android.graphics.RectF mDrawingRect -> mDrawingRect
    android.graphics.Matrix mDrawingMatrix -> mDrawingMatrix
    android.graphics.Matrix mCenterMatrix -> mCenterMatrix
    android.graphics.Matrix mIdentityMatrix -> mIdentityMatrix
    android.graphics.Matrix mInvertedMatrix -> mInvertedMatrix
    com.aviary.android.feather.library.graphics.CircleF mDrawingCircle -> mDrawingCircle
    android.graphics.RectF mShapeRect -> mShapeRect
    android.graphics.RectF mShapeRectInverted -> mShapeRectInverted
    android.graphics.PointF mFirstPointOriginal -> mFirstPointOriginal
    android.graphics.PointF mSecondPointOriginal -> mSecondPointOriginal
    android.graphics.PointF mCenterPoint -> mCenterPoint
    float mCurrentDistance -> mCurrentDistance
    float mCurrentAngle -> mCurrentAngle
    int mActivePointerId -> mActivePointerId
    int mActivePointerIndex -> mActivePointerIndex
    boolean mInitializedTouch -> mInitializedTouch
    android.graphics.PointF mOldCenter -> mOldCenter
    float mOldDistance -> mOldDistance
    float mOldAngle -> mOldAngle
    com.aviary.android.feather.widget.ImageViewTiltiShiftTouch$OnTiltShiftDrawListener mDrawListener -> mDrawListener
    com.aviary.android.feather.widget.ImageViewTiltiShiftTouch$TiltShiftDrawMode mTiltShiftDrawMode -> mTiltShiftDrawMode
    int mMaxShapeSize -> mMaxShapeSize
    int mMinShapeSize -> mMinShapeSize
    float mMinShapeSizePixels -> mMinShapeSizePixels
    int mDefaultShapeSize -> mDefaultShapeSize
    android.graphics.Path mPath -> mPath
    android.graphics.Path mCrossPath -> mCrossPath
    android.graphics.RectF mBitmapRect -> mBitmapRect
    android.graphics.RectF mThisRectF -> mThisRectF
    float mBitmapRectSideLength -> mBitmapRectSideLength
    float mDrawingRectLength -> mDrawingRectLength
    float[] mPoints -> mPoints
    com.aviary.android.feather.widget.ImageViewTiltiShiftTouch$FadeOutRunnable mFadeOut -> mFadeOut
    boolean mPointCloudEnabled -> mPointCloudEnabled
    com.aviary.android.feather.library.utils.EasingManager mManager -> mManager
    com.aviary.android.feather.widget.PointCloud mPointCloud -> mPointCloud
    int mPointWaveDuration -> mPointWaveDuration
    float mPointCluodInnerRadius -> mPointCluodInnerRadius
    float mPointCloudOuterRadius -> mPointCloudOuterRadius
    com.aviary.android.feather.library.graphics.LineF firstLine -> firstLine
    com.aviary.android.feather.library.graphics.LineF secondLine -> secondLine
    void setOnDrawStartListener(com.aviary.android.feather.widget.ImageViewTiltiShiftTouch$OnTiltShiftDrawListener) -> setOnDrawStartListener
    void init(android.content.Context,android.util.AttributeSet,int) -> init
    void setPointWaveEnabled(boolean) -> setPointWaveEnabled
    void setShapeLimits(int,int) -> setShapeLimits
    void setPaintStrokeWidth(int,int) -> setPaintStrokeWidth
    void setPaintStrokeColor(int,int) -> setPaintStrokeColor
    void resetWave(android.graphics.RectF) -> resetWave
    void setCrossHairSize(int,int) -> setCrossHairSize
    void setFadeoutTimeout(int) -> setFadeoutTimeout
    void setFadeoutDuration(int) -> setFadeoutDuration
    void setTiltShiftDrawMode(com.aviary.android.feather.widget.ImageViewTiltiShiftTouch$TiltShiftDrawMode) -> setTiltShiftDrawMode
    com.aviary.android.feather.widget.ImageViewTiltiShiftTouch$TiltShiftDrawMode getTiltShiftDrawMode() -> getTiltShiftDrawMode
    void initializeTouch(float,float,float,float) -> initializeTouch
    void onDrawModeChanged() -> onDrawModeChanged
    android.graphics.RectF getImageRect() -> getImageRect
    void onDraw(android.graphics.Canvas) -> onDraw
    void touch_down() -> touch_down
    void touch_move(android.graphics.PointF,float,float,boolean) -> touch_move
    void touch_up() -> touch_up
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void checkLimits() -> checkLimits
    float[] getMatrixValues(android.graphics.Matrix) -> getMatrixValues
    void onImageMatrixChanged() -> onImageMatrixChanged
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void updateBitmapRect() -> updateBitmapRect
    void fadeOutShape(long) -> fadeOutShape
    void fadeInShape() -> fadeInShape
    boolean access$0(com.aviary.android.feather.widget.ImageViewTiltiShiftTouch) -> access$0
    com.aviary.android.feather.widget.PointCloud access$1(com.aviary.android.feather.widget.ImageViewTiltiShiftTouch) -> access$1
com.aviary.android.feather.widget.ImageViewTiltiShiftTouch$1 -> com.aviary.android.feather.widget.ImageViewTiltiShiftTouch$1:
    com.aviary.android.feather.widget.ImageViewTiltiShiftTouch this$0 -> this$0
    void onEasingValueChanged(double,double) -> onEasingValueChanged
    void onEasingStarted(double) -> onEasingStarted
    void onEasingFinished(double) -> onEasingFinished
com.aviary.android.feather.widget.ImageViewTiltiShiftTouch$FadeOutRunnable -> com.aviary.android.feather.widget.ImageViewTiltiShiftTouch$FadeOutRunnable:
    boolean initialized -> initialized
    int startAlpha -> startAlpha
    int startAlpha2 -> startAlpha2
    long startTime -> startTime
    it.sephiroth.android.library.imagezoom.easing.Easing mFadeoutEasing -> mFadeoutEasing
    com.aviary.android.feather.widget.ImageViewTiltiShiftTouch this$0 -> this$0
    void run() -> run
com.aviary.android.feather.widget.ImageViewTiltiShiftTouch$OnTiltShiftDrawListener -> com.aviary.android.feather.widget.ImageViewTiltiShiftTouch$OnTiltShiftDrawListener:
    void onDrawStart(float[],com.aviary.android.feather.widget.ImageViewTiltiShiftTouch$TiltShiftDrawMode,float,float,float,float,float,float) -> onDrawStart
    void onDrawing(float[],float,float,float,float,float,float) -> onDrawing
    void onDrawEnd() -> onDrawEnd
com.aviary.android.feather.widget.ImageViewTiltiShiftTouch$TiltShiftDrawMode -> com.aviary.android.feather.widget.ImageViewTiltiShiftTouch$TiltShiftDrawMode:
    com.aviary.android.feather.widget.ImageViewTiltiShiftTouch$TiltShiftDrawMode Radial -> Radial
    com.aviary.android.feather.widget.ImageViewTiltiShiftTouch$TiltShiftDrawMode Linear -> Linear
    com.aviary.android.feather.widget.ImageViewTiltiShiftTouch$TiltShiftDrawMode None -> None
    com.aviary.android.feather.widget.ImageViewTiltiShiftTouch$TiltShiftDrawMode[] ENUM$VALUES -> ENUM$VALUES
    com.aviary.android.feather.widget.ImageViewTiltiShiftTouch$TiltShiftDrawMode[] values() -> values
    com.aviary.android.feather.widget.ImageViewTiltiShiftTouch$TiltShiftDrawMode valueOf(java.lang.String) -> valueOf
com.aviary.android.feather.widget.ImageViewTouchAndDraw -> com.aviary.android.feather.widget.ImageViewTouchAndDraw:
    android.graphics.Paint mPaint -> mPaint
    android.graphics.Path tmpPath -> tmpPath
    android.graphics.Canvas mCanvas -> mCanvas
    com.aviary.android.feather.widget.ImageViewTouchAndDraw$TouchMode mTouchMode -> mTouchMode
    float mX -> mX
    float mY -> mY
    android.graphics.Matrix mIdentityMatrix -> mIdentityMatrix
    android.graphics.Matrix mInvertedMatrix -> mInvertedMatrix
    android.graphics.Bitmap mCopy -> mCopy
    float TOUCH_TOLERANCE -> TOUCH_TOLERANCE
    com.aviary.android.feather.widget.ImageViewTouchAndDraw$OnDrawStartListener mDrawListener -> mDrawListener
    com.aviary.android.feather.widget.ImageViewTouchAndDraw$OnDrawPathListener mDrawPathListener -> mDrawPathListener
    void setOnDrawStartListener(com.aviary.android.feather.widget.ImageViewTouchAndDraw$OnDrawStartListener) -> setOnDrawStartListener
    void setOnDrawPathListener(com.aviary.android.feather.widget.ImageViewTouchAndDraw$OnDrawPathListener) -> setOnDrawPathListener
    void init(android.content.Context,android.util.AttributeSet,int) -> init
    com.aviary.android.feather.widget.ImageViewTouchAndDraw$TouchMode getDrawMode() -> getDrawMode
    void setDrawMode(com.aviary.android.feather.widget.ImageViewTouchAndDraw$TouchMode) -> setDrawMode
    void onDrawModeChanged() -> onDrawModeChanged
    float getDrawingScale() -> getDrawingScale
    void onLayoutChanged(int,int,int,int) -> onLayoutChanged
    android.graphics.Paint getPaint() -> getPaint
    void setPaint(android.graphics.Paint) -> setPaint
    void onDraw(android.graphics.Canvas) -> onDraw
    void commit(android.graphics.Canvas) -> commit
    void onDrawableChanged(android.graphics.drawable.Drawable) -> onDrawableChanged
    void touch_start(float,float) -> touch_start
    void touch_move(float,float) -> touch_move
    void touch_up() -> touch_up
    float[] getMatrixValues(android.graphics.Matrix) -> getMatrixValues
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    android.graphics.Bitmap getOverlayBitmap() -> getOverlayBitmap
com.aviary.android.feather.widget.ImageViewTouchAndDraw$OnDrawPathListener -> com.aviary.android.feather.widget.ImageViewTouchAndDraw$OnDrawPathListener:
    void onStart() -> onStart
    void onMoveTo(float,float) -> onMoveTo
    void onLineTo(float,float) -> onLineTo
    void onQuadTo(float,float,float,float) -> onQuadTo
    void onEnd() -> onEnd
com.aviary.android.feather.widget.ImageViewTouchAndDraw$OnDrawStartListener -> com.aviary.android.feather.widget.ImageViewTouchAndDraw$OnDrawStartListener:
    void onDrawStart() -> onDrawStart
com.aviary.android.feather.widget.ImageViewTouchAndDraw$TouchMode -> com.aviary.android.feather.widget.ImageViewTouchAndDraw$TouchMode:
    com.aviary.android.feather.widget.ImageViewTouchAndDraw$TouchMode IMAGE -> IMAGE
    com.aviary.android.feather.widget.ImageViewTouchAndDraw$TouchMode DRAW -> DRAW
    com.aviary.android.feather.widget.ImageViewTouchAndDraw$TouchMode[] ENUM$VALUES -> ENUM$VALUES
    com.aviary.android.feather.widget.ImageViewTouchAndDraw$TouchMode[] values() -> values
    com.aviary.android.feather.widget.ImageViewTouchAndDraw$TouchMode valueOf(java.lang.String) -> valueOf
com.aviary.android.feather.widget.PointCloud -> com.aviary.android.feather.widget.PointCloud:
    java.lang.String TAG -> TAG
    float MIN_POINT_SIZE -> MIN_POINT_SIZE
    float MAX_POINT_SIZE -> MAX_POINT_SIZE
    int INNER_POINTS -> INNER_POINTS
    java.util.ArrayList mPointCloud1 -> mPointCloud1
    java.util.ArrayList mPointCloud2 -> mPointCloud2
    android.graphics.drawable.Drawable mDrawable -> mDrawable
    float mCenterX -> mCenterX
    float mRotation -> mRotation
    float mCenterY -> mCenterY
    android.graphics.Paint mPaint -> mPaint
    float mScale -> mScale
    float mOuterRadius -> mOuterRadius
    float PI -> PI
    com.aviary.android.feather.widget.PointCloud$WaveManager waveManager -> waveManager
    void setCenter(float,float) -> setCenter
    void setRotation(float) -> setRotation
    void makePointCloud(float,float,android.graphics.RectF) -> makePointCloud
    void setScale(float) -> setScale
    float getScale() -> getScale
    float hypot(float,float) -> hypot
    float max(float,float) -> max
    int getAlphaForPoint(com.aviary.android.feather.widget.PointCloud$Point,boolean) -> getAlphaForPoint
    float interp(float,float,float) -> interp
    void draw(android.graphics.Canvas) -> draw
com.aviary.android.feather.widget.PointCloud$Point -> com.aviary.android.feather.widget.PointCloud$Point:
    float x -> x
    float y -> y
    float radius -> radius
com.aviary.android.feather.widget.PointCloud$WaveManager -> com.aviary.android.feather.widget.PointCloud$WaveManager:
    float radius -> radius
    float width -> width
    float alpha -> alpha
    com.aviary.android.feather.widget.PointCloud$WaveType type -> type
    void setRadius(float) -> setRadius
    void setType(com.aviary.android.feather.widget.PointCloud$WaveType) -> setType
    com.aviary.android.feather.widget.PointCloud$WaveType getType() -> getType
    float getRadius() -> getRadius
    void setAlpha(float) -> setAlpha
    float getAlpha() -> getAlpha
    float access$0(com.aviary.android.feather.widget.PointCloud$WaveManager) -> access$0
    float access$1(com.aviary.android.feather.widget.PointCloud$WaveManager) -> access$1
    float access$2(com.aviary.android.feather.widget.PointCloud$WaveManager) -> access$2
com.aviary.android.feather.widget.PointCloud$WaveType -> com.aviary.android.feather.widget.PointCloud$WaveType:
    com.aviary.android.feather.widget.PointCloud$WaveType Circle -> Circle
    com.aviary.android.feather.widget.PointCloud$WaveType Line -> Line
    com.aviary.android.feather.widget.PointCloud$WaveType[] ENUM$VALUES -> ENUM$VALUES
    com.aviary.android.feather.widget.PointCloud$WaveType[] values() -> values
    com.aviary.android.feather.widget.PointCloud$WaveType valueOf(java.lang.String) -> valueOf
com.aviary.android.feather.widget.ScrollerRunnable -> com.aviary.android.feather.widget.ScrollerRunnable:
    int mLastFlingX -> mLastFlingX
    boolean mShouldStopFling -> mShouldStopFling
    com.aviary.android.feather.widget.ScrollerRunnable$ScrollableView mParent -> mParent
    int mAnimationDuration -> mAnimationDuration
    int mPreviousX -> mPreviousX
    boolean mHasMore -> mHasMore
    android.widget.OverScroller mScroller -> mScroller
    int mOverscrollDistance -> mOverscrollDistance
    int getLastFlingX() -> getLastFlingX
    void startCommon() -> startCommon
    void stop(boolean) -> stop
    void endFling(boolean) -> endFling
    void startUsingDistance(int,int) -> startUsingDistance
    void startUsingVelocity(int,int) -> startUsingVelocity
    int getPreviousX() -> getPreviousX
    boolean hasMore() -> hasMore
    float getCurrVelocity() -> getCurrVelocity
    boolean isFinished() -> isFinished
    boolean springBack(int,int,int,int,int,int) -> springBack
    boolean computeScrollOffset() -> computeScrollOffset
    int getCurrX() -> getCurrX
    void abortAnimation() -> abortAnimation
    void run() -> run
com.aviary.android.feather.widget.ScrollerRunnable$ScrollableView -> com.aviary.android.feather.widget.ScrollerRunnable$ScrollableView:
    boolean removeCallbacks(java.lang.Runnable) -> removeCallbacks
    boolean post(java.lang.Runnable) -> post
    void scrollIntoSlots() -> scrollIntoSlots
    void trackMotionScroll(int) -> trackMotionScroll
    int getMinX() -> getMinX
    int getMaxX() -> getMaxX
com.aviary.android.feather.widget.VibrationHelper -> com.aviary.android.feather.widget.VibrationHelper:
    java.lang.String LOG_TAG -> LOG_TAG
    int MSG_VIBRATE -> MSG_VIBRATE
    boolean mEnabled -> mEnabled
    android.os.Vibrator mVibrator -> mVibrator
    com.aviary.android.feather.widget.VibrationHelper$VibrationHandler mHandler -> mHandler
    boolean isAvailable() -> isAvailable
    void initialize(android.content.Context) -> initialize
    void setEnabled(boolean) -> setEnabled
    boolean enabled() -> enabled
    void vibrate(int) -> vibrate
    android.os.Vibrator access$0() -> access$0
com.aviary.android.feather.widget.VibrationHelper$VibrationHandler -> com.aviary.android.feather.widget.VibrationHelper$VibrationHandler:
    void handleMessage(android.os.Message) -> handleMessage
com.aviary.android.feather.widget.VibrationWidget -> com.aviary.android.feather.widget.VibrationWidget:
    void setVibrationEnabled(boolean) -> setVibrationEnabled
    boolean getVibrationEnabled() -> getVibrationEnabled
com.buihha.audiorecorder.DataEncodeThread -> com.buihha.audiorecorder.DataEncodeThread:
    java.lang.String TAG -> TAG
    int PROCESS_STOP -> PROCESS_STOP
    com.buihha.audiorecorder.DataEncodeThread$StopHandler handler -> handler
    byte[] buffer -> buffer
    byte[] mp3Buffer -> mp3Buffer
    com.buihha.audiorecorder.RingBuffer ringBuffer -> ringBuffer
    java.io.FileOutputStream os -> os
    int bufferSize -> bufferSize
    java.util.concurrent.CountDownLatch handlerInitLatch -> handlerInitLatch
    void run() -> run
    android.os.Handler getHandler() -> getHandler
    void onMarkerReached(android.media.AudioRecord) -> onMarkerReached
    void onPeriodicNotification(android.media.AudioRecord) -> onPeriodicNotification
    int processData() -> processData
    void flushAndRelease() -> flushAndRelease
    int access$0(com.buihha.audiorecorder.DataEncodeThread) -> access$0
    void access$1(com.buihha.audiorecorder.DataEncodeThread) -> access$1
com.buihha.audiorecorder.DataEncodeThread$StopHandler -> com.buihha.audiorecorder.DataEncodeThread$StopHandler:
    java.lang.ref.WeakReference encodeThread -> encodeThread
    void handleMessage(android.os.Message) -> handleMessage
com.buihha.audiorecorder.MainActivity -> com.buihha.audiorecorder.MainActivity:
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
com.buihha.audiorecorder.MainActivity$1 -> com.buihha.audiorecorder.MainActivity$1:
    com.buihha.audiorecorder.MainActivity this$0 -> this$0
    com.buihha.audiorecorder.Mp3Recorder val$recorder -> val$recorder
    void onClick(android.view.View) -> onClick
com.buihha.audiorecorder.MainActivity$2 -> com.buihha.audiorecorder.MainActivity$2:
    com.buihha.audiorecorder.MainActivity this$0 -> this$0
    com.buihha.audiorecorder.Mp3Recorder val$recorder -> val$recorder
    void onClick(android.view.View) -> onClick
com.buihha.audiorecorder.Mp3Recorder -> com.buihha.audiorecorder.Mp3Recorder:
    java.lang.String TAG -> TAG
    java.lang.String fileName -> fileName
    int DEFAULT_SAMPLING_RATE -> DEFAULT_SAMPLING_RATE
    int FRAME_COUNT -> FRAME_COUNT
    int BIT_RATE -> BIT_RATE
    android.media.AudioRecord audioRecord -> audioRecord
    int bufferSize -> bufferSize
    java.io.File mp3File -> mp3File
    com.buihha.audiorecorder.RingBuffer ringBuffer -> ringBuffer
    byte[] buffer -> buffer
    java.io.FileOutputStream os -> os
    com.buihha.audiorecorder.DataEncodeThread encodeThread -> encodeThread
    int samplingRate -> samplingRate
    int channelConfig -> channelConfig
    com.buihha.audiorecorder.PCMFormat audioFormat -> audioFormat
    boolean isRecording -> isRecording
    void startRecording() -> startRecording
    void stopRecording() -> stopRecording
    void initAudioRecorder() -> initAudioRecorder
    void access$0(com.buihha.audiorecorder.Mp3Recorder,boolean) -> access$0
    boolean access$1(com.buihha.audiorecorder.Mp3Recorder) -> access$1
    android.media.AudioRecord access$2(com.buihha.audiorecorder.Mp3Recorder) -> access$2
    byte[] access$3(com.buihha.audiorecorder.Mp3Recorder) -> access$3
    int access$4(com.buihha.audiorecorder.Mp3Recorder) -> access$4
    com.buihha.audiorecorder.RingBuffer access$5(com.buihha.audiorecorder.Mp3Recorder) -> access$5
    java.io.FileOutputStream access$6(com.buihha.audiorecorder.Mp3Recorder) -> access$6
    void access$7(com.buihha.audiorecorder.Mp3Recorder,android.media.AudioRecord) -> access$7
    com.buihha.audiorecorder.DataEncodeThread access$8(com.buihha.audiorecorder.Mp3Recorder) -> access$8
    java.lang.String access$9() -> access$9
com.buihha.audiorecorder.Mp3Recorder$1 -> com.buihha.audiorecorder.Mp3Recorder$1:
    com.buihha.audiorecorder.Mp3Recorder this$0 -> this$0
    void run() -> run
com.buihha.audiorecorder.PCMFormat -> com.buihha.audiorecorder.PCMFormat:
    com.buihha.audiorecorder.PCMFormat PCM_8BIT -> PCM_8BIT
    com.buihha.audiorecorder.PCMFormat PCM_16BIT -> PCM_16BIT
    int bytesPerFrame -> bytesPerFrame
    int audioFormat -> audioFormat
    com.buihha.audiorecorder.PCMFormat[] ENUM$VALUES -> ENUM$VALUES
    int getBytesPerFrame() -> getBytesPerFrame
    void setBytesPerFrame(int) -> setBytesPerFrame
    int getAudioFormat() -> getAudioFormat
    void setAudioFormat(int) -> setAudioFormat
    com.buihha.audiorecorder.PCMFormat[] values() -> values
    com.buihha.audiorecorder.PCMFormat valueOf(java.lang.String) -> valueOf
com.buihha.audiorecorder.R -> com.buihha.audiorecorder.R:
com.buihha.audiorecorder.R$drawable -> com.buihha.audiorecorder.R$drawable:
    int ic_launcher -> ic_launcher
com.buihha.audiorecorder.R$id -> com.buihha.audiorecorder.R$id:
    int menu_settings -> menu_settings
    int record -> record
    int stop -> stop
com.buihha.audiorecorder.R$layout -> com.buihha.audiorecorder.R$layout:
    int activity_main -> activity_main
com.buihha.audiorecorder.R$menu -> com.buihha.audiorecorder.R$menu:
    int activity_main -> activity_main
com.buihha.audiorecorder.R$string -> com.buihha.audiorecorder.R$string:
    int app_name -> app_name
    int hello_world -> hello_world
    int menu_settings -> menu_settings
com.buihha.audiorecorder.R$style -> com.buihha.audiorecorder.R$style:
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
com.buihha.audiorecorder.RingBuffer -> com.buihha.audiorecorder.RingBuffer:
    byte[] buffer -> buffer
    int size -> size
    int rp -> rp
    int wp -> wp
    int checkSpace(boolean) -> checkSpace
    int read(byte[],int) -> read
    int write(byte[],int) -> write
com.buihha.audiorecorder.SimpleLame -> com.buihha.audiorecorder.SimpleLame:
    void close() -> close
    int encode(short[],short[],int,byte[]) -> encode
    int flush(byte[]) -> flush
    void init(int,int,int,int) -> init
    void init(int,int,int,int,int) -> init
com.costum.android.widget.LoadMoreListView -> com.costum.android.widget.LoadMoreListView:
    java.lang.String TAG -> TAG
    android.widget.AbsListView$OnScrollListener mOnScrollListener -> mOnScrollListener
    android.view.LayoutInflater mInflater -> mInflater
    android.widget.RelativeLayout mFooterView -> mFooterView
    android.widget.ProgressBar mProgressBarLoadMore -> mProgressBarLoadMore
    com.costum.android.widget.LoadMoreListView$OnLoadMoreListener mOnLoadMoreListener -> mOnLoadMoreListener
    boolean mIsLoadingMore -> mIsLoadingMore
    int mCurrentScrollState -> mCurrentScrollState
    void init(android.content.Context) -> init
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void setOnLoadMoreListener(com.costum.android.widget.LoadMoreListView$OnLoadMoreListener) -> setOnLoadMoreListener
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onLoadMore() -> onLoadMore
    void onLoadMoreComplete() -> onLoadMoreComplete
com.costum.android.widget.LoadMoreListView$OnLoadMoreListener -> com.costum.android.widget.LoadMoreListView$OnLoadMoreListener:
    void onLoadMore() -> onLoadMore
com.costum.android.widget.PullAndLoadListView -> com.costum.android.widget.PullAndLoadListView:
    com.costum.android.widget.PullAndLoadListView$OnLoadMoreListener mOnLoadMoreListener -> mOnLoadMoreListener
    boolean mIsLoadingMore -> mIsLoadingMore
    android.widget.RelativeLayout mFooterView -> mFooterView
    android.widget.ProgressBar mProgressBarLoadMore -> mProgressBarLoadMore
    void initComponent(android.content.Context) -> initComponent
    void setOnLoadMoreListener(com.costum.android.widget.PullAndLoadListView$OnLoadMoreListener) -> setOnLoadMoreListener
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onLoadMore() -> onLoadMore
    void onLoadMoreComplete() -> onLoadMoreComplete
com.costum.android.widget.PullAndLoadListView$OnLoadMoreListener -> com.costum.android.widget.PullAndLoadListView$OnLoadMoreListener:
    void onLoadMore() -> onLoadMore
com.costum.android.widget.PullToRefreshListView -> com.costum.android.widget.PullToRefreshListView:
    int TAP_TO_REFRESH -> TAP_TO_REFRESH
    int PULL_TO_REFRESH -> PULL_TO_REFRESH
    int RELEASE_TO_REFRESH -> RELEASE_TO_REFRESH
    int REFRESHING -> REFRESHING
    java.lang.String TAG -> TAG
    com.costum.android.widget.PullToRefreshListView$OnRefreshListener mOnRefreshListener -> mOnRefreshListener
    android.widget.AbsListView$OnScrollListener mOnScrollListener -> mOnScrollListener
    android.view.LayoutInflater mInflater -> mInflater
    android.widget.RelativeLayout mRefreshView -> mRefreshView
    android.widget.TextView mRefreshViewText -> mRefreshViewText
    android.widget.ImageView mRefreshViewImage -> mRefreshViewImage
    android.widget.ProgressBar mRefreshViewProgress -> mRefreshViewProgress
    android.widget.TextView mRefreshViewLastUpdated -> mRefreshViewLastUpdated
    int mCurrentScrollState -> mCurrentScrollState
    int mRefreshState -> mRefreshState
    android.view.animation.RotateAnimation mFlipAnimation -> mFlipAnimation
    android.view.animation.RotateAnimation mReverseFlipAnimation -> mReverseFlipAnimation
    int mRefreshViewHeight -> mRefreshViewHeight
    int mRefreshOriginalTopPadding -> mRefreshOriginalTopPadding
    int mLastMotionY -> mLastMotionY
    boolean mBounceHack -> mBounceHack
    void init(android.content.Context) -> init
    void onAttachedToWindow() -> onAttachedToWindow
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void setOnRefreshListener(com.costum.android.widget.PullToRefreshListView$OnRefreshListener) -> setOnRefreshListener
    void setLastUpdated(java.lang.CharSequence) -> setLastUpdated
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void applyHeaderPadding(android.view.MotionEvent) -> applyHeaderPadding
    void resetHeaderPadding() -> resetHeaderPadding
    void resetHeader() -> resetHeader
    void measureView(android.view.View) -> measureView
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void prepareForRefresh() -> prepareForRefresh
    void onRefresh() -> onRefresh
    void onRefreshComplete(java.lang.CharSequence) -> onRefreshComplete
    void onRefreshComplete() -> onRefreshComplete
com.costum.android.widget.PullToRefreshListView$OnClickRefreshListener -> com.costum.android.widget.PullToRefreshListView$OnClickRefreshListener:
    com.costum.android.widget.PullToRefreshListView this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.costum.android.widget.PullToRefreshListView$OnRefreshListener -> com.costum.android.widget.PullToRefreshListView$OnRefreshListener:
    void onRefresh() -> onRefresh
com.emilsjolander.components.stickylistheaders.AdapterWrapper -> com.emilsjolander.components.stickylistheaders.a:
    com.emilsjolander.components.stickylistheaders.StickyListHeadersAdapter mDelegate -> a
    java.util.List mHeaderCache -> b
    android.content.Context mContext -> c
    android.graphics.drawable.Drawable mDivider -> d
    int mDividerHeight -> e
    com.emilsjolander.components.stickylistheaders.AdapterWrapper$OnHeaderClickListener mOnHeaderClickListener -> f
    android.database.DataSetObserver mDataSetObserver -> g
    void setDivider(android.graphics.drawable.Drawable) -> a
    void setDividerHeight(int) -> a
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean isEmpty() -> isEmpty
    void recycleHeaderIfExists(com.emilsjolander.components.stickylistheaders.WrapperView) -> a
    android.view.View configureHeader(com.emilsjolander.components.stickylistheaders.WrapperView,int) -> a
    android.view.View popHeader() -> a
    boolean previousPositionHasSameHeader(int) -> b
    com.emilsjolander.components.stickylistheaders.WrapperView getView(int,android.view.View,android.view.ViewGroup) -> a
    void setOnHeaderClickListener(com.emilsjolander.components.stickylistheaders.AdapterWrapper$OnHeaderClickListener) -> a
    boolean equals(java.lang.Object) -> equals
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    int hashCode() -> hashCode
    void notifyDataSetChanged() -> notifyDataSetChanged
    void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    java.lang.String toString() -> toString
    android.view.View getHeaderView(int,android.view.View,android.view.ViewGroup) -> getHeaderView
    long getHeaderId(int) -> getHeaderId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.util.List access$1(com.emilsjolander.components.stickylistheaders.AdapterWrapper) -> a
    void access$2(com.emilsjolander.components.stickylistheaders.AdapterWrapper) -> b
    void access$3(com.emilsjolander.components.stickylistheaders.AdapterWrapper) -> c
    com.emilsjolander.components.stickylistheaders.AdapterWrapper$OnHeaderClickListener access$4(com.emilsjolander.components.stickylistheaders.AdapterWrapper) -> d
com.emilsjolander.components.stickylistheaders.AdapterWrapper$1 -> com.emilsjolander.components.stickylistheaders.b:
    com.emilsjolander.components.stickylistheaders.AdapterWrapper this$0 -> a
    void onInvalidated() -> onInvalidated
    void onChanged() -> onChanged
com.emilsjolander.components.stickylistheaders.AdapterWrapper$2 -> com.emilsjolander.components.stickylistheaders.c:
    com.emilsjolander.components.stickylistheaders.AdapterWrapper this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.emilsjolander.components.stickylistheaders.AdapterWrapper$OnHeaderClickListener -> com.emilsjolander.components.stickylistheaders.d:
    void onHeaderClick(android.view.View,int,long) -> a
com.emilsjolander.components.stickylistheaders.CheckableWrapperView -> com.emilsjolander.components.stickylistheaders.e:
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    void toggle() -> toggle
com.emilsjolander.components.stickylistheaders.SectionIndexerAdapterWrapper -> com.emilsjolander.components.stickylistheaders.f:
    android.widget.SectionIndexer mSectionIndexerDelegate -> b
    int getPositionForSection(int) -> getPositionForSection
    int getSectionForPosition(int) -> getSectionForPosition
    java.lang.Object[] getSections() -> getSections
com.emilsjolander.components.stickylistheaders.StickyListHeadersAdapter -> com.emilsjolander.components.stickylistheaders.StickyListHeadersAdapter:
    android.view.View getHeaderView(int,android.view.View,android.view.ViewGroup) -> getHeaderView
    long getHeaderId(int) -> getHeaderId
com.emilsjolander.components.stickylistheaders.StickyListHeadersListView -> com.emilsjolander.components.stickylistheaders.StickyListHeadersListView:
    android.widget.AbsListView$OnScrollListener mOnScrollListenerDelegate -> mOnScrollListenerDelegate
    boolean mAreHeadersSticky -> mAreHeadersSticky
    int mHeaderBottomPosition -> mHeaderBottomPosition
    android.view.View mHeader -> mHeader
    int mDividerHeight -> mDividerHeight
    android.graphics.drawable.Drawable mDivider -> mDivider
    java.lang.Boolean mClippingToPadding -> mClippingToPadding
    android.graphics.Rect mClippingRect -> mClippingRect
    java.lang.Long mCurrentHeaderId -> mCurrentHeaderId
    com.emilsjolander.components.stickylistheaders.AdapterWrapper mAdapter -> mAdapter
    float mHeaderDownY -> mHeaderDownY
    boolean mHeaderBeingPressed -> mHeaderBeingPressed
    com.emilsjolander.components.stickylistheaders.StickyListHeadersListView$OnHeaderClickListener mOnHeaderClickListener -> mOnHeaderClickListener
    java.lang.Integer mHeaderPosition -> mHeaderPosition
    android.view.ViewConfiguration mViewConfig -> mViewConfig
    java.util.ArrayList mFooterViews -> mFooterViews
    boolean mDrawingListUnderStickyHeader -> mDrawingListUnderStickyHeader
    android.graphics.Rect mSelectorRect -> mSelectorRect
    java.lang.reflect.Field mSelectorPositionField -> mSelectorPositionField
    com.emilsjolander.components.stickylistheaders.AdapterWrapper$OnHeaderClickListener mAdapterHeaderClickListener -> mAdapterHeaderClickListener
    android.database.DataSetObserver mDataSetChangedObserver -> mDataSetChangedObserver
    android.widget.AbsListView$OnScrollListener mOnScrollListener -> mOnScrollListener
    void onLayout(boolean,int,int,int,int) -> onLayout
    void reset() -> reset
    boolean performItemClick(android.view.View,int,long) -> performItemClick
    void setSelectionFromTop(int,int) -> setSelectionFromTop
    void smoothScrollToPositionFromTop(int,int) -> smoothScrollToPositionFromTop
    void smoothScrollToPositionFromTop(int,int,int) -> smoothScrollToPositionFromTop
    boolean hasStickyHeaderAtPosition(int) -> hasStickyHeaderAtPosition
    void setDivider(android.graphics.drawable.Drawable) -> setDivider
    void setDividerHeight(int) -> setDividerHeight
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void setAreHeadersSticky(boolean) -> setAreHeadersSticky
    boolean getAreHeadersSticky() -> getAreHeadersSticky
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    com.emilsjolander.components.stickylistheaders.AdapterWrapper wrapAdapter(android.widget.ListAdapter) -> wrapAdapter
    com.emilsjolander.components.stickylistheaders.StickyListHeadersAdapter getWrappedAdapter() -> getWrappedAdapter
    android.view.View getWrappedView(int) -> getWrappedView
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void positionSelectorRect() -> positionSelectorRect
    int getSelectorPosition() -> getSelectorPosition
    void drawStickyHeader(android.graphics.Canvas) -> drawStickyHeader
    void measureHeader() -> measureHeader
    boolean isScrollBarOverlay() -> isScrollBarOverlay
    int getHeaderHeight() -> getHeaderHeight
    void setClipToPadding(boolean) -> setClipToPadding
    void scrollChanged(int) -> scrollChanged
    void addFooterView(android.view.View) -> addFooterView
    boolean removeFooterView(android.view.View) -> removeFooterView
    void updateHeaderVisibilities() -> updateHeaderVisibilities
    int fixedFirstVisibleItem(int) -> fixedFirstVisibleItem
    void setOnHeaderClickListener(com.emilsjolander.components.stickylistheaders.StickyListHeadersListView$OnHeaderClickListener) -> setOnHeaderClickListener
    void setDrawingListUnderStickyHeader(boolean) -> setDrawingListUnderStickyHeader
    boolean isDrawingListUnderStickyHeader() -> isDrawingListUnderStickyHeader
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    com.emilsjolander.components.stickylistheaders.StickyListHeadersListView$OnHeaderClickListener access$0(com.emilsjolander.components.stickylistheaders.StickyListHeadersListView) -> access$0
    void access$1(com.emilsjolander.components.stickylistheaders.StickyListHeadersListView) -> access$1
    android.widget.AbsListView$OnScrollListener access$2(com.emilsjolander.components.stickylistheaders.StickyListHeadersListView) -> access$2
    void access$3(com.emilsjolander.components.stickylistheaders.StickyListHeadersListView,int) -> access$3
com.emilsjolander.components.stickylistheaders.StickyListHeadersListView$1 -> com.emilsjolander.components.stickylistheaders.g:
    com.emilsjolander.components.stickylistheaders.StickyListHeadersListView this$0 -> a
    void onHeaderClick(android.view.View,int,long) -> a
com.emilsjolander.components.stickylistheaders.StickyListHeadersListView$2 -> com.emilsjolander.components.stickylistheaders.h:
    com.emilsjolander.components.stickylistheaders.StickyListHeadersListView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.emilsjolander.components.stickylistheaders.StickyListHeadersListView$3 -> com.emilsjolander.components.stickylistheaders.i:
    com.emilsjolander.components.stickylistheaders.StickyListHeadersListView this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.emilsjolander.components.stickylistheaders.StickyListHeadersListView$OnHeaderClickListener -> com.emilsjolander.components.stickylistheaders.j:
    void onHeaderClick(com.emilsjolander.components.stickylistheaders.StickyListHeadersListView,android.view.View,int,long,boolean) -> a
com.emilsjolander.components.stickylistheaders.WrapperView -> com.emilsjolander.components.stickylistheaders.k:
    android.view.View mItem -> a
    android.graphics.drawable.Drawable mDivider -> b
    int mDividerHeight -> c
    android.view.View mHeader -> d
    int mItemTop -> e
    void update(android.view.View,android.view.View,android.graphics.drawable.Drawable,int) -> a
    boolean hasHeader() -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
com.haarman.listviewanimations.ArrayAdapter -> com.haarman.listviewanimations.ArrayAdapter:
    java.util.List mItems -> mItems
    android.widget.BaseAdapter mDataSetChangedSlavedAdapter -> mDataSetChangedSlavedAdapter
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    void add(java.lang.Object) -> add
    void add(int,java.lang.Object) -> add
    void addAll(java.util.Collection) -> addAll
    void addAll(java.lang.Object[]) -> addAll
    void addAll(int,java.util.Collection) -> addAll
    void addAll(int,java.lang.Object[]) -> addAll
    void clear() -> clear
    void set(int,java.lang.Object) -> set
    void remove(java.lang.Object) -> remove
    void remove(int) -> remove
    void removePositions(java.util.Collection) -> removePositions
    void removeAll(java.util.Collection) -> removeAll
    void retainAll(java.util.Collection) -> retainAll
    int indexOf(java.lang.Object) -> indexOf
    void swapItems(int,int) -> swapItems
    void propagateNotifyDataSetChanged(android.widget.BaseAdapter) -> propagateNotifyDataSetChanged
    void notifyDataSetChanged() -> notifyDataSetChanged
com.haarman.listviewanimations.BaseAdapterDecorator -> com.haarman.listviewanimations.BaseAdapterDecorator:
    android.widget.BaseAdapter mDecoratedBaseAdapter -> mDecoratedBaseAdapter
    android.widget.AbsListView mListView -> mListView
    boolean mIsParentHorizontalScrollContainer -> mIsParentHorizontalScrollContainer
    int mResIdTouchChild -> mResIdTouchChild
    void setAbsListView(android.widget.AbsListView) -> setAbsListView
    android.widget.AbsListView getAbsListView() -> getAbsListView
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean hasStableIds() -> hasStableIds
    boolean isEmpty() -> isEmpty
    boolean isEnabled(int) -> isEnabled
    void notifyDataSetChanged() -> notifyDataSetChanged
    void notifyDataSetChanged(java.lang.Boolean) -> notifyDataSetChanged
    void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    int getPositionForSection(int) -> getPositionForSection
    int getSectionForPosition(int) -> getSectionForPosition
    java.lang.Object[] getSections() -> getSections
    android.widget.BaseAdapter getDecoratedBaseAdapter() -> getDecoratedBaseAdapter
    void swapItems(int,int) -> swapItems
    void setIsParentHorizontalScrollContainer(boolean) -> setIsParentHorizontalScrollContainer
    boolean isParentHorizontalScrollContainer() -> isParentHorizontalScrollContainer
    void setTouchChild(int) -> setTouchChild
    int getTouchChild() -> getTouchChild
com.haarman.listviewanimations.itemmanipulation.AnimateDismissAdapter -> com.haarman.listviewanimations.itemmanipulation.AnimateDismissAdapter:
    com.haarman.listviewanimations.itemmanipulation.OnDismissCallback mCallback -> mCallback
    void animateDismiss(int) -> animateDismiss
    void animateDismiss(java.util.Collection) -> animateDismiss
    void invokeCallback(java.util.Collection) -> invokeCallback
    java.util.List getVisibleViewsForPositions(java.util.Collection) -> getVisibleViewsForPositions
    com.nineoldandroids.animation.Animator createAnimatorForView(android.view.View) -> createAnimatorForView
    void access$0(com.haarman.listviewanimations.itemmanipulation.AnimateDismissAdapter,java.util.Collection) -> access$0
com.haarman.listviewanimations.itemmanipulation.AnimateDismissAdapter$1 -> com.haarman.listviewanimations.itemmanipulation.a:
    com.haarman.listviewanimations.itemmanipulation.AnimateDismissAdapter this$0 -> a
    java.util.List val$positionsCopy -> b
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> a
com.haarman.listviewanimations.itemmanipulation.AnimateDismissAdapter$2 -> com.haarman.listviewanimations.itemmanipulation.b:
    com.haarman.listviewanimations.itemmanipulation.AnimateDismissAdapter this$0 -> a
    android.view.ViewGroup$LayoutParams val$lp -> b
    android.view.View val$view -> c
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> b
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> c
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> a
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> d
com.haarman.listviewanimations.itemmanipulation.AnimateDismissAdapter$3 -> com.haarman.listviewanimations.itemmanipulation.c:
    com.haarman.listviewanimations.itemmanipulation.AnimateDismissAdapter this$0 -> a
    android.view.ViewGroup$LayoutParams val$lp -> b
    android.view.View val$view -> c
    void onAnimationUpdate(com.nineoldandroids.animation.ValueAnimator) -> a
com.haarman.listviewanimations.itemmanipulation.ExpandableListItemAdapter -> com.haarman.listviewanimations.itemmanipulation.ExpandableListItemAdapter:
    int DEFAULTTITLEPARENTRESID -> DEFAULTTITLEPARENTRESID
    int DEFAULTCONTENTPARENTRESID -> DEFAULTCONTENTPARENTRESID
    android.content.Context mContext -> mContext
    int mViewLayoutResId -> mViewLayoutResId
    int mTitleParentResId -> mTitleParentResId
    int mContentParentResId -> mContentParentResId
    int mActionViewResId -> mActionViewResId
    java.util.List mVisibleIds -> mVisibleIds
    int mLimit -> mLimit
    java.util.Map mExpandedViews -> mExpandedViews
    void setActionViewResId(int) -> setActionViewResId
    void setLimit(int) -> setLimit
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.ViewGroup createView(android.view.ViewGroup) -> createView
    android.view.View getTitleView(int,android.view.View,android.view.ViewGroup) -> getTitleView
    android.view.View getContentView(int,android.view.View,android.view.ViewGroup) -> getContentView
    int access$0(com.haarman.listviewanimations.itemmanipulation.ExpandableListItemAdapter) -> access$0
    java.util.List access$1(com.haarman.listviewanimations.itemmanipulation.ExpandableListItemAdapter) -> access$1
    java.util.Map access$2(com.haarman.listviewanimations.itemmanipulation.ExpandableListItemAdapter) -> access$2
com.haarman.listviewanimations.itemmanipulation.ExpandableListItemAdapter$ExpandCollapseHelper -> com.haarman.listviewanimations.itemmanipulation.d:
    void animateCollapsing(android.view.View) -> a
    void animateExpanding(android.view.View) -> b
    com.nineoldandroids.animation.ValueAnimator createHeightAnimator(android.view.View,int,int) -> a
com.haarman.listviewanimations.itemmanipulation.ExpandableListItemAdapter$ExpandCollapseHelper$1 -> com.haarman.listviewanimations.itemmanipulation.e:
    android.view.View val$view -> a
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> a
com.haarman.listviewanimations.itemmanipulation.ExpandableListItemAdapter$ExpandCollapseHelper$2 -> com.haarman.listviewanimations.itemmanipulation.f:
    android.view.View val$view -> a
    void onAnimationUpdate(com.nineoldandroids.animation.ValueAnimator) -> a
com.haarman.listviewanimations.itemmanipulation.ExpandableListItemAdapter$RootView -> com.haarman.listviewanimations.itemmanipulation.g:
    android.view.ViewGroup mTitleViewGroup -> a
    android.view.ViewGroup mContentViewGroup -> b
    void init() -> a
com.haarman.listviewanimations.itemmanipulation.ExpandableListItemAdapter$TitleViewOnClickListener -> com.haarman.listviewanimations.itemmanipulation.h:
    android.view.View mContentParent -> b
    com.haarman.listviewanimations.itemmanipulation.ExpandableListItemAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.haarman.listviewanimations.itemmanipulation.ExpandableListItemAdapter$ViewHolder -> com.haarman.listviewanimations.itemmanipulation.i:
    android.view.ViewGroup titleParent -> a
    android.view.ViewGroup contentParent -> b
    android.view.View titleView -> c
    android.view.View contentView -> d
com.haarman.listviewanimations.itemmanipulation.OnDismissCallback -> com.haarman.listviewanimations.itemmanipulation.j:
    void onDismiss(android.widget.AbsListView,int[]) -> a
com.haarman.listviewanimations.itemmanipulation.SwipeDismissAdapter -> com.haarman.listviewanimations.itemmanipulation.SwipeDismissAdapter:
    com.haarman.listviewanimations.itemmanipulation.OnDismissCallback mCallback -> mCallback
    com.haarman.listviewanimations.itemmanipulation.SwipeDismissListViewTouchListener mSwipeDismissListViewTouchListener -> mSwipeDismissListViewTouchListener
    com.haarman.listviewanimations.itemmanipulation.SwipeOnScrollListener mOnScroll -> mOnScroll
    com.haarman.listviewanimations.itemmanipulation.SwipeDismissListViewTouchListener createListViewTouchListener(android.widget.AbsListView) -> createListViewTouchListener
    void setAbsListView(android.widget.AbsListView) -> setAbsListView
    void setIsParentHorizontalScrollContainer(boolean) -> setIsParentHorizontalScrollContainer
    void notifyDataSetChanged() -> notifyDataSetChanged
    void setTouchChild(int) -> setTouchChild
com.haarman.listviewanimations.itemmanipulation.SwipeDismissListViewTouchListener -> com.haarman.listviewanimations.itemmanipulation.k:
    int mSlop -> c
    int mMinFlingVelocity -> d
    int mMaxFlingVelocity -> e
    long mAnimationTime -> a
    android.widget.AbsListView mListView -> f
    com.haarman.listviewanimations.itemmanipulation.OnDismissCallback mCallback -> g
    int mViewWidth -> h
    java.util.List mPendingDismisses -> b
    int mDismissAnimationRefCount -> i
    float mDownX -> j
    float mDownY -> k
    boolean mSwiping -> l
    boolean mSwipeInitiated -> m
    android.view.VelocityTracker mVelocityTracker -> n
    boolean mPaused -> o
    com.haarman.listviewanimations.itemmanipulation.SwipeDismissListViewTouchListener$PendingDismissData mCurrentDismissData -> p
    int mVirtualListCount -> q
    boolean mDisallowSwipe -> r
    boolean mIsParentHorizontalScrollContainer -> s
    int mResIdOfTouchChild -> t
    boolean mTouchChildTouched -> u
    void disallowSwipe() -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean isSwiping() -> b
    com.haarman.listviewanimations.itemmanipulation.SwipeDismissListViewTouchListener$PendingDismissData createPendingDismissData(int,android.view.View) -> a
    boolean handleDownEvent(android.view.MotionEvent) -> a
    android.graphics.Rect getChildViewRect(android.view.View,android.view.View) -> a
    boolean handleMoveEvent(android.view.MotionEvent) -> b
    boolean handleUpEvent(android.view.MotionEvent) -> c
    void onDismiss(com.haarman.listviewanimations.itemmanipulation.SwipeDismissListViewTouchListener$PendingDismissData) -> a
    void performDismiss(com.haarman.listviewanimations.itemmanipulation.SwipeDismissListViewTouchListener$PendingDismissData) -> b
    void recycleDismissedViewsItems(java.util.List) -> a
    void finalizeDismiss() -> c
    void setIsParentHorizontalScrollContainer(boolean) -> a
    void setTouchChild(int) -> a
    void notifyDataSetChanged() -> d
com.haarman.listviewanimations.itemmanipulation.SwipeDismissListViewTouchListener$1 -> com.haarman.listviewanimations.itemmanipulation.l:
    com.haarman.listviewanimations.itemmanipulation.SwipeDismissListViewTouchListener this$0 -> a
    com.haarman.listviewanimations.itemmanipulation.SwipeDismissListViewTouchListener$PendingDismissData val$pendingDismissData -> b
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> a
com.haarman.listviewanimations.itemmanipulation.SwipeDismissListViewTouchListener$2 -> com.haarman.listviewanimations.itemmanipulation.m:
    com.haarman.listviewanimations.itemmanipulation.SwipeDismissListViewTouchListener this$0 -> a
    android.view.ViewGroup$LayoutParams val$lp -> b
    com.haarman.listviewanimations.itemmanipulation.SwipeDismissListViewTouchListener$PendingDismissData val$data -> c
    void onAnimationUpdate(com.nineoldandroids.animation.ValueAnimator) -> a
com.haarman.listviewanimations.itemmanipulation.SwipeDismissListViewTouchListener$3 -> com.haarman.listviewanimations.itemmanipulation.n:
    com.haarman.listviewanimations.itemmanipulation.SwipeDismissListViewTouchListener this$0 -> a
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> a
com.haarman.listviewanimations.itemmanipulation.SwipeDismissListViewTouchListener$PendingDismissData -> com.haarman.listviewanimations.itemmanipulation.o:
    int position -> a
    android.view.View view -> b
    com.haarman.listviewanimations.itemmanipulation.SwipeDismissListViewTouchListener this$0 -> c
    int compareTo(com.haarman.listviewanimations.itemmanipulation.SwipeDismissListViewTouchListener$PendingDismissData) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compareTo(java.lang.Object) -> compareTo
com.haarman.listviewanimations.itemmanipulation.SwipeOnScrollListener -> com.haarman.listviewanimations.itemmanipulation.p:
    com.haarman.listviewanimations.itemmanipulation.SwipeDismissListViewTouchListener mTouchListener -> a
    void setTouchListener(com.haarman.listviewanimations.itemmanipulation.SwipeDismissListViewTouchListener) -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.haarman.listviewanimations.itemmanipulation.SwipeOnTouchListener -> com.haarman.listviewanimations.itemmanipulation.q:
    boolean isSwiping() -> b
com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoAdapter -> com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoAdapter:
    int ANIMATION_DURATION -> ANIMATION_DURATION
    java.lang.String EXTRA_ACTIVE_REMOVED_ID -> EXTRA_ACTIVE_REMOVED_ID
    int mUndoLayoutId -> mUndoLayoutId
    int mUndoActionId -> mUndoActionId
    int mCountDownTextViewResId -> mCountDownTextViewResId
    int mAutoDeleteDelayMillis -> mAutoDeleteDelayMillis
    long mDismissStartMillis -> mDismissStartMillis
    com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoView mCurrentRemovedView -> mCurrentRemovedView
    long mCurrentRemovedId -> mCurrentRemovedId
    java.util.Map mActiveAnimators -> mActiveAnimators
    android.os.Handler mHandler -> mHandler
    com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoAdapter$CountDownRunnable mCountDownRunnable -> mCountDownRunnable
    com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoAdapter$DeleteItemCallback mDeleteItemCallback -> mDeleteItemCallback
    com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoAdapter$CountDownFormatter mCountDownFormatter -> mCountDownFormatter
    com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoListViewTouchListener mContextualUndoListViewTouchListener -> mContextualUndoListViewTouchListener
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setAbsListView(android.widget.AbsListView) -> setAbsListView
    void onViewSwiped(android.view.View,int) -> onViewSwiped
    void startAutoDeleteTimer() -> startAutoDeleteTimer
    void restoreViewPosition(android.view.View) -> restoreViewPosition
    void removePreviousContextualUndoIfPresent() -> removePreviousContextualUndoIfPresent
    void setCurrentRemovedView(com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoView) -> setCurrentRemovedView
    void clearCurrentRemovedView() -> clearCurrentRemovedView
    void onListScrolled() -> onListScrolled
    void performRemovalIfNecessary() -> performRemovalIfNecessary
    void setDeleteItemCallback(com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoAdapter$DeleteItemCallback) -> setDeleteItemCallback
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void swipeViewAtPosition(int) -> swipeViewAtPosition
    void swipeView(android.view.View,int) -> swipeView
    void setIsParentHorizontalScrollContainer(boolean) -> setIsParentHorizontalScrollContainer
    void setTouchChild(int) -> setTouchChild
    int access$0(com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoAdapter) -> access$0
    long access$1(com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoAdapter) -> access$1
    com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoAdapter$CountDownFormatter access$2(com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoAdapter) -> access$2
    com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoView access$3(com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoAdapter) -> access$3
    void access$4(com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoAdapter) -> access$4
    android.os.Handler access$5(com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoAdapter) -> access$5
    java.util.Map access$6(com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoAdapter) -> access$6
    void access$7(com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoAdapter,android.view.View) -> access$7
    com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoAdapter$DeleteItemCallback access$8(com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoAdapter) -> access$8
    void access$9(com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoAdapter) -> access$9
com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoAdapter$1 -> com.haarman.listviewanimations.itemmanipulation.contextualundo.a:
    com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoAdapter this$0 -> a
    android.view.View val$view -> b
    int val$dismissPosition -> c
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> a
com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoAdapter$CountDownFormatter -> com.haarman.listviewanimations.itemmanipulation.contextualundo.b:
    java.lang.String getCountDownString(long) -> a
com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoAdapter$CountDownRunnable -> com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoAdapter$CountDownRunnable:
    com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoAdapter this$0 -> this$0
    void run() -> run
com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoAdapter$DeleteItemCallback -> com.haarman.listviewanimations.itemmanipulation.contextualundo.c:
    void deleteItem(int) -> a
com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoAdapter$RecycleViewListener -> com.haarman.listviewanimations.itemmanipulation.contextualundo.d:
    com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoAdapter this$0 -> a
    void onMovedToScrapHeap(android.view.View) -> onMovedToScrapHeap
com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoAdapter$RemoveViewAnimatorListenerAdapter -> com.haarman.listviewanimations.itemmanipulation.contextualundo.e:
    android.view.View mDismissView -> b
    int mOriginalHeight -> c
    com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoAdapter this$0 -> a
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> a
    void restoreViewDimension(android.view.View) -> a
    void deleteCurrentItem() -> a
com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoAdapter$RemoveViewAnimatorUpdateListener -> com.haarman.listviewanimations.itemmanipulation.contextualundo.f:
    android.view.View mDismissView -> b
    android.view.ViewGroup$LayoutParams mLayoutParams -> c
    com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoAdapter this$0 -> a
    void onAnimationUpdate(com.nineoldandroids.animation.ValueAnimator) -> a
com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoAdapter$UndoListener -> com.haarman.listviewanimations.itemmanipulation.contextualundo.g:
    com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoView mContextualUndoView -> b
    com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
    void moveViewOffScreen() -> a
    void animateViewComingBack() -> b
com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoListViewTouchListener -> com.haarman.listviewanimations.itemmanipulation.contextualundo.h:
    int mSlop -> a
    int mMinFlingVelocity -> b
    int mMaxFlingVelocity -> c
    long mAnimationTime -> d
    android.widget.AbsListView mListView -> e
    com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoListViewTouchListener$Callback mCallback -> f
    int mViewWidth -> g
    float mDownX -> h
    float mDownY -> i
    boolean mSwiping -> j
    android.view.VelocityTracker mVelocityTracker -> k
    int mDownPosition -> l
    android.view.View mDownView -> m
    boolean mPaused -> n
    boolean mDisallowSwipe -> o
    boolean mIsParentHorizontalScrollContainer -> p
    int mResIdOfTouchChild -> q
    boolean mTouchChildTouched -> r
    void setEnabled(boolean) -> a
    android.widget.AbsListView$OnScrollListener makeScrollListener() -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean isSwiping() -> b
    android.graphics.Rect getChildViewRect(android.view.View,android.view.View) -> a
    void setIsParentHorizontalScrollContainer(boolean) -> b
    void setTouchChild(int) -> a
    boolean access$0(com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoListViewTouchListener) -> a
    com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoListViewTouchListener$Callback access$1(com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoListViewTouchListener) -> b
    void access$2(com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoListViewTouchListener,boolean) -> a
com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoListViewTouchListener$1 -> com.haarman.listviewanimations.itemmanipulation.contextualundo.i:
    com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoListViewTouchListener this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoListViewTouchListener$2 -> com.haarman.listviewanimations.itemmanipulation.contextualundo.j:
    com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoListViewTouchListener this$0 -> a
    android.view.View val$downView -> b
    int val$downPosition -> c
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> a
com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoListViewTouchListener$Callback -> com.haarman.listviewanimations.itemmanipulation.contextualundo.k:
    void onViewSwiped(android.view.View,int) -> onViewSwiped
    void onListScrolled() -> onListScrolled
com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoView -> com.haarman.listviewanimations.itemmanipulation.contextualundo.ContextualUndoView:
    android.view.View mUndoView -> mUndoView
    android.view.View mContentView -> mContentView
    android.widget.TextView mCountDownTV -> mCountDownTV
    long mItemId -> mItemId
    void initUndo(int,int) -> initUndo
    void updateCountDownTimer(java.lang.String) -> updateCountDownTimer
    void updateContentView(android.view.View) -> updateContentView
    android.view.View getContentView() -> getContentView
    void setItemId(long) -> setItemId
    long getItemId() -> getItemId
    boolean isContentDisplayed() -> isContentDisplayed
    void displayUndo() -> displayUndo
    void displayContentView() -> displayContentView
com.haarman.listviewanimations.swinginadapters.AnimationAdapter -> com.haarman.listviewanimations.swinginadapters.AnimationAdapter:
    long DEFAULTANIMATIONDELAYMILLIS -> DEFAULTANIMATIONDELAYMILLIS
    long DEFAULTANIMATIONDURATIONMILLIS -> DEFAULTANIMATIONDURATIONMILLIS
    long INITIALDELAYMILLIS -> INITIALDELAYMILLIS
    android.util.SparseArray mAnimators -> mAnimators
    long mAnimationStartMillis -> mAnimationStartMillis
    int mFirstAnimatedPosition -> mFirstAnimatedPosition
    int mLastAnimatedPosition -> mLastAnimatedPosition
    boolean mHasParentAnimationAdapter -> mHasParentAnimationAdapter
    boolean mShouldAnimate -> mShouldAnimate
    void reset() -> reset
    void setShouldAnimate(boolean) -> setShouldAnimate
    void setShouldAnimateFromPosition(int) -> setShouldAnimateFromPosition
    void setShouldAnimateNotVisible() -> setShouldAnimateNotVisible
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    boolean cancelExistingAnimation(int,android.view.View) -> cancelExistingAnimation
    void animateViewIfNecessary(int,android.view.View,android.view.ViewGroup) -> animateViewIfNecessary
    void animateView(int,android.view.ViewGroup,android.view.View,boolean) -> animateView
    void hideView(android.view.View) -> hideView
    com.nineoldandroids.animation.Animator[] concatAnimators(com.nineoldandroids.animation.Animator[],com.nineoldandroids.animation.Animator[],com.nineoldandroids.animation.Animator) -> concatAnimators
    long calculateAnimationDelay(boolean) -> calculateAnimationDelay
    void setHasParentAnimationAdapter(boolean) -> setHasParentAnimationAdapter
    long getInitialDelayMillis() -> getInitialDelayMillis
    long getAnimationDelayMillis() -> getAnimationDelayMillis
    long getAnimationDurationMillis() -> getAnimationDurationMillis
    com.nineoldandroids.animation.Animator[] getAnimators(android.view.ViewGroup,android.view.View) -> getAnimators
com.haarman.listviewanimations.swinginadapters.AnimationAdapter$AnimationInfo -> com.haarman.listviewanimations.swinginadapters.a:
    int position -> a
    com.nineoldandroids.animation.Animator animator -> b
    com.haarman.listviewanimations.swinginadapters.AnimationAdapter this$0 -> c
com.haarman.listviewanimations.swinginadapters.ResourceAnimationAdapter -> com.haarman.listviewanimations.swinginadapters.ResourceAnimationAdapter:
    android.content.Context mContext -> mContext
    com.nineoldandroids.animation.Animator[] getAnimators(android.view.ViewGroup,android.view.View) -> getAnimators
    int getAnimationResourceId() -> getAnimationResourceId
com.haarman.listviewanimations.swinginadapters.SingleAnimationAdapter -> com.haarman.listviewanimations.swinginadapters.SingleAnimationAdapter:
    com.nineoldandroids.animation.Animator[] getAnimators(android.view.ViewGroup,android.view.View) -> getAnimators
    com.nineoldandroids.animation.Animator getAnimator(android.view.ViewGroup,android.view.View) -> getAnimator
com.haarman.listviewanimations.swinginadapters.prepared.AlphaInAnimationAdapter -> com.haarman.listviewanimations.swinginadapters.prepared.AlphaInAnimationAdapter:
    long getAnimationDelayMillis() -> getAnimationDelayMillis
    long getAnimationDurationMillis() -> getAnimationDurationMillis
    com.nineoldandroids.animation.Animator[] getAnimators(android.view.ViewGroup,android.view.View) -> getAnimators
com.haarman.listviewanimations.swinginadapters.prepared.ScaleInAnimationAdapter -> com.haarman.listviewanimations.swinginadapters.prepared.ScaleInAnimationAdapter:
    float DEFAULTSCALEFROM -> DEFAULTSCALEFROM
    float mScaleFrom -> mScaleFrom
    long mAnimationDelayMillis -> mAnimationDelayMillis
    long mAnimationDurationMillis -> mAnimationDurationMillis
    long getAnimationDelayMillis() -> getAnimationDelayMillis
    long getAnimationDurationMillis() -> getAnimationDurationMillis
    com.nineoldandroids.animation.Animator[] getAnimators(android.view.ViewGroup,android.view.View) -> getAnimators
com.haarman.listviewanimations.swinginadapters.prepared.SwingBottomInAnimationAdapter -> com.haarman.listviewanimations.swinginadapters.prepared.SwingBottomInAnimationAdapter:
    long mAnimationDelayMillis -> mAnimationDelayMillis
    long mAnimationDurationMillis -> mAnimationDurationMillis
    long getAnimationDelayMillis() -> getAnimationDelayMillis
    long getAnimationDurationMillis() -> getAnimationDurationMillis
    com.nineoldandroids.animation.Animator getAnimator(android.view.ViewGroup,android.view.View) -> getAnimator
com.haarman.listviewanimations.swinginadapters.prepared.SwingLeftInAnimationAdapter -> com.haarman.listviewanimations.swinginadapters.prepared.SwingLeftInAnimationAdapter:
    long mAnimationDelayMillis -> mAnimationDelayMillis
    long mAnimationDurationMillis -> mAnimationDurationMillis
    long getAnimationDelayMillis() -> getAnimationDelayMillis
    long getAnimationDurationMillis() -> getAnimationDurationMillis
    com.nineoldandroids.animation.Animator getAnimator(android.view.ViewGroup,android.view.View) -> getAnimator
com.haarman.listviewanimations.swinginadapters.prepared.SwingRightInAnimationAdapter -> com.haarman.listviewanimations.swinginadapters.prepared.SwingRightInAnimationAdapter:
    long mAnimationDelayMillis -> mAnimationDelayMillis
    long mAnimationDurationMillis -> mAnimationDurationMillis
    long getAnimationDelayMillis() -> getAnimationDelayMillis
    long getAnimationDurationMillis() -> getAnimationDurationMillis
    com.nineoldandroids.animation.Animator getAnimator(android.view.ViewGroup,android.view.View) -> getAnimator
com.haarman.listviewanimations.view.DynamicListView -> com.haarman.listviewanimations.view.DynamicListView:
    int SMOOTH_SCROLL_AMOUNT_AT_EDGE -> SMOOTH_SCROLL_AMOUNT_AT_EDGE
    int MOVE_DURATION -> MOVE_DURATION
    int mLastEventY -> mLastEventY
    int mLastEventX -> mLastEventX
    int mDownY -> mDownY
    int mDownX -> mDownX
    int mTotalOffset -> mTotalOffset
    boolean mCellIsMobile -> mCellIsMobile
    boolean mIsMobileScrolling -> mIsMobileScrolling
    int mSmoothScrollAmountAtEdge -> mSmoothScrollAmountAtEdge
    int INVALID_ID -> INVALID_ID
    long mAboveItemId -> mAboveItemId
    long mMobileItemId -> mMobileItemId
    long mBelowItemId -> mBelowItemId
    android.graphics.drawable.Drawable mHoverCell -> mHoverCell
    android.graphics.Rect mHoverCellCurrentBounds -> mHoverCellCurrentBounds
    android.graphics.Rect mHoverCellOriginalBounds -> mHoverCellOriginalBounds
    int INVALID_POINTER_ID -> INVALID_POINTER_ID
    int mActivePointerId -> mActivePointerId
    boolean mIsWaitingForScrollFinish -> mIsWaitingForScrollFinish
    int mScrollState -> mScrollState
    android.view.View$OnTouchListener mOnTouchListener -> mOnTouchListener
    boolean mIsParentHorizontalScrollContainer -> mIsParentHorizontalScrollContainer
    int mResIdOfDynamicTouchChild -> mResIdOfDynamicTouchChild
    boolean mDynamicTouchChildTouched -> mDynamicTouchChildTouched
    int mSlop -> mSlop
    boolean mSkipCallingOnTouchListener -> mSkipCallingOnTouchListener
    com.haarman.listviewanimations.view.DynamicListView$OnHoverCellListener mOnHoverCellListener -> mOnHoverCellListener
    android.widget.AdapterView$OnItemLongClickListener mOnItemLongClickListener -> mOnItemLongClickListener
    com.nineoldandroids.animation.TypeEvaluator sBoundEvaluator -> sBoundEvaluator
    android.widget.AbsListView$OnScrollListener mScrollListener -> mScrollListener
    void init(android.content.Context) -> init
    void makeCellMobile() -> makeCellMobile
    android.graphics.drawable.BitmapDrawable getAndAddHoverView(android.view.View) -> getAndAddHoverView
    android.graphics.Bitmap getBitmapFromView(android.view.View) -> getBitmapFromView
    void updateNeighborViewsForID(long) -> updateNeighborViewsForID
    android.view.View getViewForID(long) -> getViewForID
    int getPositionForID(long) -> getPositionForID
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void setOnTouchListener(android.view.View$OnTouchListener) -> setOnTouchListener
    void setOnHoverCellListener(com.haarman.listviewanimations.view.DynamicListView$OnHoverCellListener) -> setOnHoverCellListener
    android.graphics.Rect getChildViewRect(android.view.View,android.view.View) -> getChildViewRect
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void handleCellSwitch() -> handleCellSwitch
    void swapElements(int,int) -> swapElements
    void touchEventsEnded() -> touchEventsEnded
    void touchEventsCancelled() -> touchEventsCancelled
    void handleMobileCellScroll() -> handleMobileCellScroll
    boolean handleMobileCellScroll(android.graphics.Rect) -> handleMobileCellScroll
    void setIsParentHorizontalScrollContainer(boolean) -> setIsParentHorizontalScrollContainer
    boolean isParentHorizontalScrollContainer() -> isParentHorizontalScrollContainer
    void setDynamicTouchChild(int) -> setDynamicTouchChild
    int access$0(com.haarman.listviewanimations.view.DynamicListView) -> access$0
    void access$1(com.haarman.listviewanimations.view.DynamicListView,boolean) -> access$1
    void access$2(com.haarman.listviewanimations.view.DynamicListView) -> access$2
    void access$3(com.haarman.listviewanimations.view.DynamicListView,int) -> access$3
    boolean access$4(com.haarman.listviewanimations.view.DynamicListView) -> access$4
    boolean access$5(com.haarman.listviewanimations.view.DynamicListView) -> access$5
    void access$6(com.haarman.listviewanimations.view.DynamicListView) -> access$6
    boolean access$7(com.haarman.listviewanimations.view.DynamicListView) -> access$7
    void access$8(com.haarman.listviewanimations.view.DynamicListView) -> access$8
    long access$9(com.haarman.listviewanimations.view.DynamicListView) -> access$9
    void access$10(com.haarman.listviewanimations.view.DynamicListView,long) -> access$10
    void access$11(com.haarman.listviewanimations.view.DynamicListView) -> access$11
    int access$12(com.haarman.listviewanimations.view.DynamicListView) -> access$12
    void access$13(com.haarman.listviewanimations.view.DynamicListView,int) -> access$13
    void access$14(com.haarman.listviewanimations.view.DynamicListView,long) -> access$14
    void access$15(com.haarman.listviewanimations.view.DynamicListView,long) -> access$15
    void access$16(com.haarman.listviewanimations.view.DynamicListView,long) -> access$16
    void access$17(com.haarman.listviewanimations.view.DynamicListView,android.graphics.drawable.Drawable) -> access$17
com.haarman.listviewanimations.view.DynamicListView$1 -> com.haarman.listviewanimations.view.a:
    com.haarman.listviewanimations.view.DynamicListView this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.haarman.listviewanimations.view.DynamicListView$2 -> com.haarman.listviewanimations.view.b:
    android.graphics.Rect evaluate(float,android.graphics.Rect,android.graphics.Rect) -> a
    int interpolate(int,int,float) -> a
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> a
com.haarman.listviewanimations.view.DynamicListView$3 -> com.haarman.listviewanimations.view.c:
    int mPreviousFirstVisibleItem -> b
    int mPreviousVisibleItemCount -> c
    int mCurrentFirstVisibleItem -> d
    int mCurrentVisibleItemCount -> e
    int mCurrentScrollState -> f
    com.haarman.listviewanimations.view.DynamicListView this$0 -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void isScrollCompleted() -> c
    void checkAndHandleFirstVisibleCellChange() -> a
    void checkAndHandleLastVisibleCellChange() -> b
com.haarman.listviewanimations.view.DynamicListView$4 -> com.haarman.listviewanimations.view.d:
    com.haarman.listviewanimations.view.DynamicListView this$0 -> a
    android.view.ViewTreeObserver val$observer -> b
    long val$switchItemID -> c
    int val$deltaY -> d
    int val$switchViewStartTop -> e
    boolean onPreDraw() -> onPreDraw
com.haarman.listviewanimations.view.DynamicListView$5 -> com.haarman.listviewanimations.view.e:
    com.haarman.listviewanimations.view.DynamicListView this$0 -> a
    void onAnimationUpdate(com.nineoldandroids.animation.ValueAnimator) -> a
com.haarman.listviewanimations.view.DynamicListView$6 -> com.haarman.listviewanimations.view.f:
    com.haarman.listviewanimations.view.DynamicListView this$0 -> a
    android.view.View val$mobileView -> b
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> b
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> a
com.haarman.listviewanimations.view.DynamicListView$OnHoverCellListener -> com.haarman.listviewanimations.view.g:
    android.graphics.drawable.Drawable onHoverCellCreated(android.graphics.drawable.Drawable) -> a
com.haarman.listviewanimations.view.DynamicListView$Swappable -> com.haarman.listviewanimations.view.h:
    void swapItems(int,int) -> swapItems
com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder -> com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder:
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer mTrans -> mTrans
    android.view.animation.Interpolator lin -> lin
    void initTransformer() -> initTransformer
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer zoom(int,int,int,int,int,int) -> zoom
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer zoom(int,int,int,int,int,int,android.view.animation.Interpolator) -> zoom
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer rotate(int,int,int,int) -> rotate
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer rotate(int,int,int,int,android.view.animation.Interpolator) -> rotate
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer translate(int,int,int,int) -> translate
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer translate(int,int,int,int,android.view.animation.Interpolator) -> translate
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer concatTransformer(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer) -> concatTransformer
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer access$0(com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder) -> access$0
com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder$1 -> com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder$1:
    float getInterpolation(float) -> getInterpolation
com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder$2 -> com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder$2:
    com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder this$0 -> this$0
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder$3 -> com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder$3:
    com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder this$0 -> this$0
    android.view.animation.Interpolator val$interp -> val$interp
    int val$openedX -> val$openedX
    int val$closedX -> val$closedX
    int val$openedY -> val$openedY
    int val$closedY -> val$closedY
    int val$px -> val$px
    int val$py -> val$py
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder$4 -> com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder$4:
    com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder this$0 -> this$0
    android.view.animation.Interpolator val$interp -> val$interp
    int val$openedDeg -> val$openedDeg
    int val$closedDeg -> val$closedDeg
    int val$px -> val$px
    int val$py -> val$py
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder$5 -> com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder$5:
    com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder this$0 -> this$0
    android.view.animation.Interpolator val$interp -> val$interp
    int val$openedX -> val$openedX
    int val$closedX -> val$closedX
    int val$openedY -> val$openedY
    int val$closedY -> val$closedY
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder$6 -> com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder$6:
    com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder this$0 -> this$0
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer val$t -> val$t
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove -> com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    android.view.View mContent -> mContent
    int mCurItem -> mCurItem
    android.widget.Scroller mScroller -> mScroller
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mScrolling -> mScrolling
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mTouchSlop -> mTouchSlop
    float mInitialMotionX -> mInitialMotionX
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind mViewBehind -> mViewBehind
    boolean mEnabled -> mEnabled
    com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnClosedListener mClosedListener -> mClosedListener
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenedListener mOpenedListener -> mOpenedListener
    java.util.List mIgnoredViews -> mIgnoredViews
    int mTouchMode -> mTouchMode
    boolean mQuickReturn -> mQuickReturn
    float mScrollX -> mScrollX
    void initCustomViewAbove() -> initCustomViewAbove
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    void setOnPageChangeListener(com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener) -> setOnPageChangeListener
    void setOnOpenedListener(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenedListener) -> setOnOpenedListener
    void setOnClosedListener(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnClosedListener) -> setOnClosedListener
    com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener setInternalPageChangeListener(com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener) -> setInternalPageChangeListener
    void addIgnoredView(android.view.View) -> addIgnoredView
    void removeIgnoredView(android.view.View) -> removeIgnoredView
    void clearIgnoredViews() -> clearIgnoredViews
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    int getDestScrollX(int) -> getDestScrollX
    int getLeftBound() -> getLeftBound
    int getRightBound() -> getRightBound
    int getContentLeft() -> getContentLeft
    boolean isMenuOpen() -> isMenuOpen
    boolean isInIgnoredView(android.view.MotionEvent) -> isInIgnoredView
    int getBehindWidth() -> getBehindWidth
    int getChildWidth(int) -> getChildWidth
    boolean isSlidingEnabled() -> isSlidingEnabled
    void setSlidingEnabled(boolean) -> setSlidingEnabled
    void smoothScrollTo(int,int) -> smoothScrollTo
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> getContent
    void setCustomViewBehind(com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind) -> setCustomViewBehind
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setAboveOffset(int) -> setAboveOffset
    void computeScroll() -> computeScroll
    void pageScrolled(int) -> pageScrolled
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll() -> completeScroll
    void setTouchMode(int) -> setTouchMode
    int getTouchMode() -> getTouchMode
    boolean thisTouchAllowed(android.view.MotionEvent) -> thisTouchAllowed
    boolean thisSlideAllowed(float) -> thisSlideAllowed
    int getPointerIndex(android.view.MotionEvent,int) -> getPointerIndex
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void determineDrag(android.view.MotionEvent) -> determineDrag
    void scrollTo(int,int) -> scrollTo
    int determineTargetPage(float,int,int) -> determineTargetPage
    float getPercentOpen() -> getPercentOpen
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void startDrag() -> startDrag
    void endDrag() -> endDrag
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    boolean pageLeft() -> pageLeft
    boolean pageRight() -> pageRight
    com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind access$0(com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove) -> access$0
com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$1 -> com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$1:
    float getInterpolation(float) -> getInterpolation
com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$2 -> com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$2:
    com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove this$0 -> this$0
    void onPageSelected(int) -> onPageSelected
com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener -> com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$SimpleOnPageChangeListener -> com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind -> com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind:
    java.lang.String TAG -> TAG
    int MARGIN_THRESHOLD -> MARGIN_THRESHOLD
    int mTouchMode -> mTouchMode
    com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove mViewAbove -> mViewAbove
    android.view.View mContent -> mContent
    android.view.View mSecondaryContent -> mSecondaryContent
    int mMarginThreshold -> mMarginThreshold
    int mWidthOffset -> mWidthOffset
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer mTransformer -> mTransformer
    boolean mChildrenEnabled -> mChildrenEnabled
    int mMode -> mMode
    boolean mFadeEnabled -> mFadeEnabled
    android.graphics.Paint mFadePaint -> mFadePaint
    float mScrollScale -> mScrollScale
    android.graphics.drawable.Drawable mShadowDrawable -> mShadowDrawable
    android.graphics.drawable.Drawable mSecondaryShadowDrawable -> mSecondaryShadowDrawable
    int mShadowWidth -> mShadowWidth
    float mFadeDegree -> mFadeDegree
    boolean mSelectorEnabled -> mSelectorEnabled
    android.graphics.Bitmap mSelectorDrawable -> mSelectorDrawable
    android.view.View mSelectedView -> mSelectedView
    void setCustomViewAbove(com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove) -> setCustomViewAbove
    void setCanvasTransformer(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer) -> setCanvasTransformer
    void setWidthOffset(int) -> setWidthOffset
    void setMarginThreshold(int) -> setMarginThreshold
    int getMarginThreshold() -> getMarginThreshold
    int getBehindWidth() -> getBehindWidth
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> getContent
    void setSecondaryContent(android.view.View) -> setSecondaryContent
    android.view.View getSecondaryContent() -> getSecondaryContent
    void setChildrenEnabled(boolean) -> setChildrenEnabled
    void scrollTo(int,int) -> scrollTo
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void setMode(int) -> setMode
    int getMode() -> getMode
    void setScrollScale(float) -> setScrollScale
    float getScrollScale() -> getScrollScale
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setSecondaryShadowDrawable(android.graphics.drawable.Drawable) -> setSecondaryShadowDrawable
    void setShadowWidth(int) -> setShadowWidth
    void setFadeEnabled(boolean) -> setFadeEnabled
    void setFadeDegree(float) -> setFadeDegree
    int getMenuPage(int) -> getMenuPage
    void scrollBehindTo(android.view.View,int,int) -> scrollBehindTo
    int getMenuLeft(android.view.View,int) -> getMenuLeft
    int getAbsLeftBound(android.view.View) -> getAbsLeftBound
    int getAbsRightBound(android.view.View) -> getAbsRightBound
    boolean marginTouchAllowed(android.view.View,int) -> marginTouchAllowed
    void setTouchMode(int) -> setTouchMode
    boolean menuOpenTouchAllowed(android.view.View,int,float) -> menuOpenTouchAllowed
    boolean menuTouchInQuickReturn(android.view.View,int,float) -> menuTouchInQuickReturn
    boolean menuClosedSlideAllowed(float) -> menuClosedSlideAllowed
    boolean menuOpenSlideAllowed(float) -> menuOpenSlideAllowed
    void drawShadow(android.view.View,android.graphics.Canvas) -> drawShadow
    void drawFade(android.view.View,android.graphics.Canvas,float) -> drawFade
    void drawSelector(android.view.View,android.graphics.Canvas,float) -> drawSelector
    void setSelectorEnabled(boolean) -> setSelectorEnabled
    void setSelectedView(android.view.View) -> setSelectedView
    int getSelectorTop() -> getSelectorTop
    void setSelectorBitmap(android.graphics.Bitmap) -> setSelectorBitmap
com.jeremyfeinstein.slidingmenu.lib.MenuInterface -> com.jeremyfeinstein.slidingmenu.lib.MenuInterface:
    void scrollBehindTo(int,int,com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind,float) -> scrollBehindTo
    int getMenuLeft(com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind,android.view.View) -> getMenuLeft
    int getAbsLeftBound(com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind,android.view.View) -> getAbsLeftBound
    int getAbsRightBound(com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind,android.view.View) -> getAbsRightBound
    boolean marginTouchAllowed(android.view.View,int,int) -> marginTouchAllowed
    boolean menuOpenTouchAllowed(android.view.View,int,int) -> menuOpenTouchAllowed
    boolean menuTouchInQuickReturn(android.view.View,int,int) -> menuTouchInQuickReturn
    boolean menuClosedSlideAllowed(int) -> menuClosedSlideAllowed
    boolean menuOpenSlideAllowed(int) -> menuOpenSlideAllowed
    void drawShadow(android.graphics.Canvas,android.graphics.drawable.Drawable,int) -> drawShadow
    void drawFade(android.graphics.Canvas,int,com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind,android.view.View) -> drawFade
    void drawSelector(android.view.View,android.graphics.Canvas,float) -> drawSelector
com.jeremyfeinstein.slidingmenu.lib.R -> com.jeremyfeinstein.slidingmenu.lib.R:
com.jeremyfeinstein.slidingmenu.lib.R$attr -> com.jeremyfeinstein.slidingmenu.lib.R$attr:
    int behindOffset -> behindOffset
    int behindScrollScale -> behindScrollScale
    int behindWidth -> behindWidth
    int fadeDegree -> fadeDegree
    int fadeEnabled -> fadeEnabled
    int mode -> mode
    int selectorDrawable -> selectorDrawable
    int selectorEnabled -> selectorEnabled
    int shadowDrawable -> shadowDrawable
    int shadowWidth -> shadowWidth
    int touchModeAbove -> touchModeAbove
    int touchModeBehind -> touchModeBehind
    int viewAbove -> viewAbove
    int viewBehind -> viewBehind
com.jeremyfeinstein.slidingmenu.lib.R$id -> com.jeremyfeinstein.slidingmenu.lib.R$id:
    int fullscreen -> fullscreen
    int left -> left
    int margin -> margin
    int none -> none
    int right -> right
    int selected_view -> selected_view
    int slidingmenumain -> slidingmenumain
com.jeremyfeinstein.slidingmenu.lib.R$layout -> com.jeremyfeinstein.slidingmenu.lib.R$layout:
    int slidingmenumain -> slidingmenumain
com.jeremyfeinstein.slidingmenu.lib.R$styleable -> com.jeremyfeinstein.slidingmenu.lib.R$styleable:
    int[] SlidingMenu -> SlidingMenu
    int SlidingMenu_behindOffset -> SlidingMenu_behindOffset
    int SlidingMenu_behindScrollScale -> SlidingMenu_behindScrollScale
    int SlidingMenu_behindWidth -> SlidingMenu_behindWidth
    int SlidingMenu_fadeDegree -> SlidingMenu_fadeDegree
    int SlidingMenu_fadeEnabled -> SlidingMenu_fadeEnabled
    int SlidingMenu_mode -> SlidingMenu_mode
    int SlidingMenu_selectorDrawable -> SlidingMenu_selectorDrawable
    int SlidingMenu_selectorEnabled -> SlidingMenu_selectorEnabled
    int SlidingMenu_shadowDrawable -> SlidingMenu_shadowDrawable
    int SlidingMenu_shadowWidth -> SlidingMenu_shadowWidth
    int SlidingMenu_touchModeAbove -> SlidingMenu_touchModeAbove
    int SlidingMenu_touchModeBehind -> SlidingMenu_touchModeBehind
    int SlidingMenu_viewAbove -> SlidingMenu_viewAbove
    int SlidingMenu_viewBehind -> SlidingMenu_viewBehind
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu -> com.jeremyfeinstein.slidingmenu.lib.SlidingMenu:
    java.lang.String TAG -> TAG
    int SLIDING_WINDOW -> SLIDING_WINDOW
    int SLIDING_CONTENT -> SLIDING_CONTENT
    boolean mActionbarOverlay -> mActionbarOverlay
    int TOUCHMODE_MARGIN -> TOUCHMODE_MARGIN
    int TOUCHMODE_FULLSCREEN -> TOUCHMODE_FULLSCREEN
    int TOUCHMODE_NONE -> TOUCHMODE_NONE
    int LEFT -> LEFT
    int RIGHT -> RIGHT
    int LEFT_RIGHT -> LEFT_RIGHT
    com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove mViewAbove -> mViewAbove
    com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind mViewBehind -> mViewBehind
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenListener mOpenListener -> mOpenListener
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenListener mSecondaryOpenListner -> mSecondaryOpenListner
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnCloseListener mCloseListener -> mCloseListener
    void attachToActivity(android.app.Activity,int) -> attachToActivity
    void attachToActivity(android.app.Activity,int,boolean) -> attachToActivity
    void setContent(int) -> setContent
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> getContent
    void setMenu(int) -> setMenu
    void setMenu(android.view.View) -> setMenu
    android.view.View getMenu() -> getMenu
    void setSecondaryMenu(int) -> setSecondaryMenu
    void setSecondaryMenu(android.view.View) -> setSecondaryMenu
    android.view.View getSecondaryMenu() -> getSecondaryMenu
    void setSlidingEnabled(boolean) -> setSlidingEnabled
    boolean isSlidingEnabled() -> isSlidingEnabled
    void setMode(int) -> setMode
    int getMode() -> getMode
    void setStatic(boolean) -> setStatic
    void showMenu() -> showMenu
    void showMenu(boolean) -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void showSecondaryMenu(boolean) -> showSecondaryMenu
    void showContent() -> showContent
    void showContent(boolean) -> showContent
    void toggle() -> toggle
    void toggle(boolean) -> toggle
    boolean isMenuShowing() -> isMenuShowing
    boolean isSecondaryMenuShowing() -> isSecondaryMenuShowing
    int getBehindOffset() -> getBehindOffset
    void setBehindOffset(int) -> setBehindOffset
    void setBehindOffsetRes(int) -> setBehindOffsetRes
    void setAboveOffset(int) -> setAboveOffset
    void setAboveOffsetRes(int) -> setAboveOffsetRes
    void setBehindWidth(int) -> setBehindWidth
    void setBehindWidthRes(int) -> setBehindWidthRes
    float getBehindScrollScale() -> getBehindScrollScale
    int getTouchmodeMarginThreshold() -> getTouchmodeMarginThreshold
    void setTouchmodeMarginThreshold(int) -> setTouchmodeMarginThreshold
    void setBehindScrollScale(float) -> setBehindScrollScale
    void setBehindCanvasTransformer(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer) -> setBehindCanvasTransformer
    int getTouchModeAbove() -> getTouchModeAbove
    void setTouchModeAbove(int) -> setTouchModeAbove
    void setTouchModeBehind(int) -> setTouchModeBehind
    void setShadowDrawable(int) -> setShadowDrawable
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setSecondaryShadowDrawable(int) -> setSecondaryShadowDrawable
    void setSecondaryShadowDrawable(android.graphics.drawable.Drawable) -> setSecondaryShadowDrawable
    void setShadowWidthRes(int) -> setShadowWidthRes
    void setShadowWidth(int) -> setShadowWidth
    void setFadeEnabled(boolean) -> setFadeEnabled
    void setFadeDegree(float) -> setFadeDegree
    void setSelectorEnabled(boolean) -> setSelectorEnabled
    void setSelectedView(android.view.View) -> setSelectedView
    void setSelectorDrawable(int) -> setSelectorDrawable
    void setSelectorBitmap(android.graphics.Bitmap) -> setSelectorBitmap
    void addIgnoredView(android.view.View) -> addIgnoredView
    void removeIgnoredView(android.view.View) -> removeIgnoredView
    void clearIgnoredViews() -> clearIgnoredViews
    void setOnOpenListener(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenListener) -> setOnOpenListener
    void setSecondaryOnOpenListner(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenListener) -> setSecondaryOnOpenListner
    void setOnCloseListener(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnCloseListener) -> setOnCloseListener
    void setOnOpenedListener(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenedListener) -> setOnOpenedListener
    void setOnClosedListener(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnClosedListener) -> setOnClosedListener
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    void manageLayers(float) -> manageLayers
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenListener access$0(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu) -> access$0
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnCloseListener access$1(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu) -> access$1
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenListener access$2(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu) -> access$2
    java.lang.String access$3() -> access$3
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$1 -> com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$1:
    int POSITION_OPEN -> POSITION_OPEN
    int POSITION_CLOSE -> POSITION_CLOSE
    int POSITION_SECONDARY_OPEN -> POSITION_SECONDARY_OPEN
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu this$0 -> this$0
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$2 -> com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$2:
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu this$0 -> this$0
    int val$layerType -> val$layerType
    void run() -> run
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer -> com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer:
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnCloseListener -> com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnCloseListener:
    void onClose() -> onClose
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnClosedListener -> com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnClosedListener:
    void onClosed() -> onClosed
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenListener -> com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenListener:
    void onOpen() -> onOpen
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenedListener -> com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenedListener:
    void onOpened() -> onOpened
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$SavedState -> com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$SavedState:
    int mItem -> mItem
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getItem() -> getItem
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$SavedState$1 -> com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$SavedState$1:
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivity -> com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivity:
    com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper mHelper -> mHelper
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(int) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityBase -> com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityBase:
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(int) -> setBehindContentView
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper -> com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper:
    android.app.Activity mActivity -> mActivity
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu mSlidingMenu -> mSlidingMenu
    android.view.View mViewAbove -> mViewAbove
    android.view.View mViewBehind -> mViewBehind
    boolean mBroadcasting -> mBroadcasting
    boolean mOnPostCreateCalled -> mOnPostCreateCalled
    boolean mEnableSlide -> mEnableSlide
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void registerAboveContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> registerAboveContentView
    void setContentView(android.view.View) -> setContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu access$0(com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper) -> access$0
com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper$1 -> com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper$1:
    com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper this$0 -> this$0
    boolean val$open -> val$open
    boolean val$secondary -> val$secondary
    void run() -> run
com.jeremyfeinstein.slidingmenu.lib.app.SlidingFragmentActivity -> com.jeremyfeinstein.slidingmenu.lib.app.SlidingFragmentActivity:
    com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper mHelper -> mHelper
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(int) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.jeremyfeinstein.slidingmenu.lib.app.SlidingListActivity -> com.jeremyfeinstein.slidingmenu.lib.app.SlidingListActivity:
    com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper mHelper -> mHelper
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(int) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.jeremyfeinstein.slidingmenu.lib.app.SlidingPreferenceActivity -> com.jeremyfeinstein.slidingmenu.lib.app.SlidingPreferenceActivity:
    com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper mHelper -> mHelper
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(int) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.nineoldandroids.animation.Animator -> com.nineoldandroids.a.a:
    java.util.ArrayList mListeners -> a
    void start() -> a
    void cancel() -> b
    void end() -> c
    com.nineoldandroids.animation.Animator setDuration(long) -> a
    boolean isRunning() -> d
    boolean isStarted() -> e
    void addListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> a
    void removeListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> b
    java.util.ArrayList getListeners() -> f
    com.nineoldandroids.animation.Animator clone() -> g
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Animator$AnimatorListener -> com.nineoldandroids.a.b:
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> b
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> a
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> d
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> c
com.nineoldandroids.animation.AnimatorInflater -> com.nineoldandroids.a.c:
    int[] AnimatorSet -> a
    int[] PropertyAnimator -> b
    int[] Animator -> c
    com.nineoldandroids.animation.Animator loadAnimator(android.content.Context,int) -> a
    com.nineoldandroids.animation.Animator createAnimatorFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser) -> a
    com.nineoldandroids.animation.Animator createAnimatorFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,com.nineoldandroids.animation.AnimatorSet,int) -> a
    com.nineoldandroids.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.util.AttributeSet) -> a
    com.nineoldandroids.animation.ValueAnimator loadAnimator(android.content.Context,android.util.AttributeSet,com.nineoldandroids.animation.ValueAnimator) -> a
com.nineoldandroids.animation.AnimatorListenerAdapter -> com.nineoldandroids.a.d:
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> d
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> a
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> c
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> b
com.nineoldandroids.animation.AnimatorSet -> com.nineoldandroids.a.e:
    java.util.ArrayList mPlayingSet -> c
    java.util.HashMap mNodeMap -> d
    java.util.ArrayList mNodes -> e
    java.util.ArrayList mSortedNodes -> f
    boolean mNeedsSort -> g
    com.nineoldandroids.animation.AnimatorSet$AnimatorSetListener mSetListener -> h
    boolean mTerminated -> b
    boolean mStarted -> i
    long mStartDelay -> j
    com.nineoldandroids.animation.ValueAnimator mDelayAnim -> k
    long mDuration -> l
    void playTogether(com.nineoldandroids.animation.Animator[]) -> a
    void playSequentially(com.nineoldandroids.animation.Animator[]) -> b
    com.nineoldandroids.animation.AnimatorSet$Builder play(com.nineoldandroids.animation.Animator) -> a
    void cancel() -> b
    void end() -> c
    boolean isRunning() -> d
    boolean isStarted() -> e
    void setStartDelay(long) -> b
    com.nineoldandroids.animation.AnimatorSet setDuration(long) -> c
    void start() -> a
    com.nineoldandroids.animation.AnimatorSet clone() -> h
    void sortNodes() -> i
    com.nineoldandroids.animation.Animator clone() -> g
    com.nineoldandroids.animation.Animator setDuration(long) -> a
    java.lang.Object clone() -> clone
    java.util.ArrayList access$000(com.nineoldandroids.animation.AnimatorSet) -> a
    java.util.HashMap access$100(com.nineoldandroids.animation.AnimatorSet) -> b
    java.util.ArrayList access$200(com.nineoldandroids.animation.AnimatorSet) -> c
    boolean access$302(com.nineoldandroids.animation.AnimatorSet,boolean) -> a
    java.util.ArrayList access$400(com.nineoldandroids.animation.AnimatorSet) -> d
com.nineoldandroids.animation.AnimatorSet$1 -> com.nineoldandroids.a.f:
    boolean canceled -> a
    java.util.ArrayList val$nodesToStart -> b
    com.nineoldandroids.animation.AnimatorSet this$0 -> c
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> d
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> a
com.nineoldandroids.animation.AnimatorSet$AnimatorSetListener -> com.nineoldandroids.a.g:
    com.nineoldandroids.animation.AnimatorSet mAnimatorSet -> b
    com.nineoldandroids.animation.AnimatorSet this$0 -> a
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> d
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> a
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> c
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> b
com.nineoldandroids.animation.AnimatorSet$Builder -> com.nineoldandroids.a.h:
    com.nineoldandroids.animation.AnimatorSet$Node mCurrentNode -> b
    com.nineoldandroids.animation.AnimatorSet this$0 -> a
    com.nineoldandroids.animation.AnimatorSet$Builder with(com.nineoldandroids.animation.Animator) -> a
    com.nineoldandroids.animation.AnimatorSet$Builder before(com.nineoldandroids.animation.Animator) -> b
com.nineoldandroids.animation.AnimatorSet$Dependency -> com.nineoldandroids.a.i:
    com.nineoldandroids.animation.AnimatorSet$Node node -> a
    int rule -> b
com.nineoldandroids.animation.AnimatorSet$DependencyListener -> com.nineoldandroids.a.j:
    com.nineoldandroids.animation.AnimatorSet mAnimatorSet -> a
    com.nineoldandroids.animation.AnimatorSet$Node mNode -> b
    int mRule -> c
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> d
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> a
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> c
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> b
    void startIfReady(com.nineoldandroids.animation.Animator) -> e
com.nineoldandroids.animation.AnimatorSet$Node -> com.nineoldandroids.a.k:
    com.nineoldandroids.animation.Animator animation -> a
    java.util.ArrayList dependencies -> b
    java.util.ArrayList tmpDependencies -> c
    java.util.ArrayList nodeDependencies -> d
    java.util.ArrayList nodeDependents -> e
    boolean done -> f
    void addDependency(com.nineoldandroids.animation.AnimatorSet$Dependency) -> a
    com.nineoldandroids.animation.AnimatorSet$Node clone() -> a
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.ArgbEvaluator -> com.nineoldandroids.a.l:
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> a
com.nineoldandroids.animation.FloatEvaluator -> com.nineoldandroids.a.m:
    java.lang.Float evaluate(float,java.lang.Number,java.lang.Number) -> a
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> a
com.nineoldandroids.animation.FloatKeyframeSet -> com.nineoldandroids.a.n:
    float firstValue -> g
    float lastValue -> h
    float deltaValue -> i
    boolean firstTime -> j
    java.lang.Object getValue(float) -> a
    com.nineoldandroids.animation.FloatKeyframeSet clone() -> a
    float getFloatValue(float) -> b
    com.nineoldandroids.animation.KeyframeSet clone() -> b
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.IntEvaluator -> com.nineoldandroids.a.o:
    java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer) -> a
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> a
com.nineoldandroids.animation.IntKeyframeSet -> com.nineoldandroids.a.p:
    int firstValue -> g
    int lastValue -> h
    int deltaValue -> i
    boolean firstTime -> j
    java.lang.Object getValue(float) -> a
    com.nineoldandroids.animation.IntKeyframeSet clone() -> a
    int getIntValue(float) -> b
    com.nineoldandroids.animation.KeyframeSet clone() -> b
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Keyframe -> com.nineoldandroids.a.q:
    float mFraction -> a
    java.lang.Class mValueType -> b
    android.view.animation.Interpolator mInterpolator -> d
    boolean mHasValue -> c
    com.nineoldandroids.animation.Keyframe ofInt(float,int) -> a
    com.nineoldandroids.animation.Keyframe ofInt(float) -> a
    com.nineoldandroids.animation.Keyframe ofFloat(float,float) -> a
    com.nineoldandroids.animation.Keyframe ofFloat(float) -> b
    com.nineoldandroids.animation.Keyframe ofObject(float,java.lang.Object) -> a
    com.nineoldandroids.animation.Keyframe ofObject(float) -> c
    boolean hasValue() -> a
    java.lang.Object getValue() -> b
    void setValue(java.lang.Object) -> a
    float getFraction() -> c
    android.view.animation.Interpolator getInterpolator() -> d
    void setInterpolator(android.view.animation.Interpolator) -> a
    com.nineoldandroids.animation.Keyframe clone() -> e
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Keyframe$FloatKeyframe -> com.nineoldandroids.a.r:
    float mValue -> d
    float getFloatValue() -> f
    java.lang.Object getValue() -> b
    void setValue(java.lang.Object) -> a
    com.nineoldandroids.animation.Keyframe$FloatKeyframe clone() -> g
    com.nineoldandroids.animation.Keyframe clone() -> e
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Keyframe$IntKeyframe -> com.nineoldandroids.a.s:
    int mValue -> d
    int getIntValue() -> f
    java.lang.Object getValue() -> b
    void setValue(java.lang.Object) -> a
    com.nineoldandroids.animation.Keyframe$IntKeyframe clone() -> g
    com.nineoldandroids.animation.Keyframe clone() -> e
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Keyframe$ObjectKeyframe -> com.nineoldandroids.a.t:
    java.lang.Object mValue -> d
    java.lang.Object getValue() -> b
    void setValue(java.lang.Object) -> a
    com.nineoldandroids.animation.Keyframe$ObjectKeyframe clone() -> f
    com.nineoldandroids.animation.Keyframe clone() -> e
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.KeyframeSet -> com.nineoldandroids.a.u:
    int mNumKeyframes -> a
    com.nineoldandroids.animation.Keyframe mFirstKeyframe -> b
    com.nineoldandroids.animation.Keyframe mLastKeyframe -> c
    android.view.animation.Interpolator mInterpolator -> d
    java.util.ArrayList mKeyframes -> e
    com.nineoldandroids.animation.TypeEvaluator mEvaluator -> f
    com.nineoldandroids.animation.KeyframeSet ofInt(int[]) -> a
    com.nineoldandroids.animation.KeyframeSet ofFloat(float[]) -> a
    com.nineoldandroids.animation.KeyframeSet ofObject(java.lang.Object[]) -> a
    void setEvaluator(com.nineoldandroids.animation.TypeEvaluator) -> a
    com.nineoldandroids.animation.KeyframeSet clone() -> b
    java.lang.Object getValue(float) -> a
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.ObjectAnimator -> com.nineoldandroids.a.v:
    java.util.Map PROXY_PROPERTIES -> h
    java.lang.Object mTarget -> i
    java.lang.String mPropertyName -> j
    com.nineoldandroids.util.Property mProperty -> k
    void setPropertyName(java.lang.String) -> a
    void setProperty(com.nineoldandroids.util.Property) -> a
    com.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[]) -> a
    com.nineoldandroids.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,com.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> a
    void setIntValues(int[]) -> a
    void setFloatValues(float[]) -> a
    void setObjectValues(java.lang.Object[]) -> a
    void start() -> a
    void initAnimation() -> h
    com.nineoldandroids.animation.ObjectAnimator setDuration(long) -> b
    void animateValue(float) -> a
    com.nineoldandroids.animation.ObjectAnimator clone() -> i
    java.lang.String toString() -> toString
    com.nineoldandroids.animation.ValueAnimator clone() -> j
    com.nineoldandroids.animation.ValueAnimator setDuration(long) -> c
    com.nineoldandroids.animation.Animator clone() -> g
    com.nineoldandroids.animation.Animator setDuration(long) -> a
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.PreHoneycombCompat -> com.nineoldandroids.a.w:
    com.nineoldandroids.util.Property ALPHA -> a
    com.nineoldandroids.util.Property PIVOT_X -> b
    com.nineoldandroids.util.Property PIVOT_Y -> c
    com.nineoldandroids.util.Property TRANSLATION_X -> d
    com.nineoldandroids.util.Property TRANSLATION_Y -> e
    com.nineoldandroids.util.Property ROTATION -> f
    com.nineoldandroids.util.Property ROTATION_X -> g
    com.nineoldandroids.util.Property ROTATION_Y -> h
    com.nineoldandroids.util.Property SCALE_X -> i
    com.nineoldandroids.util.Property SCALE_Y -> j
    com.nineoldandroids.util.Property SCROLL_X -> k
    com.nineoldandroids.util.Property SCROLL_Y -> l
    com.nineoldandroids.util.Property X -> m
    com.nineoldandroids.util.Property Y -> n
com.nineoldandroids.animation.PreHoneycombCompat$1 -> com.nineoldandroids.a.x:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$10 -> com.nineoldandroids.a.y:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$11 -> com.nineoldandroids.a.z:
    void setValue(android.view.View,int) -> a
    java.lang.Integer get(android.view.View) -> a
    void setValue(java.lang.Object,int) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$12 -> com.nineoldandroids.a.aa:
    void setValue(android.view.View,int) -> a
    java.lang.Integer get(android.view.View) -> a
    void setValue(java.lang.Object,int) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$13 -> com.nineoldandroids.a.ab:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$14 -> com.nineoldandroids.a.ac:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$2 -> com.nineoldandroids.a.ad:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$3 -> com.nineoldandroids.a.ae:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$4 -> com.nineoldandroids.a.af:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$5 -> com.nineoldandroids.a.ag:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$6 -> com.nineoldandroids.a.ah:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$7 -> com.nineoldandroids.a.ai:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$8 -> com.nineoldandroids.a.aj:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$9 -> com.nineoldandroids.a.ak:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PropertyValuesHolder -> com.nineoldandroids.a.al:
    java.lang.String mPropertyName -> a
    com.nineoldandroids.util.Property mProperty -> b
    java.lang.reflect.Method mSetter -> c
    java.lang.reflect.Method mGetter -> h
    java.lang.Class mValueType -> d
    com.nineoldandroids.animation.KeyframeSet mKeyframeSet -> e
    com.nineoldandroids.animation.TypeEvaluator sIntEvaluator -> i
    com.nineoldandroids.animation.TypeEvaluator sFloatEvaluator -> j
    java.lang.Class[] FLOAT_VARIANTS -> k
    java.lang.Class[] INTEGER_VARIANTS -> l
    java.lang.Class[] DOUBLE_VARIANTS -> m
    java.util.HashMap sSetterPropertyMap -> n
    java.util.HashMap sGetterPropertyMap -> o
    java.util.concurrent.locks.ReentrantReadWriteLock mPropertyMapLock -> f
    java.lang.Object[] mTmpValueArray -> g
    com.nineoldandroids.animation.TypeEvaluator mEvaluator -> p
    java.lang.Object mAnimatedValue -> q
    com.nineoldandroids.animation.PropertyValuesHolder ofInt(java.lang.String,int[]) -> a
    com.nineoldandroids.animation.PropertyValuesHolder ofInt(com.nineoldandroids.util.Property,int[]) -> a
    com.nineoldandroids.animation.PropertyValuesHolder ofFloat(java.lang.String,float[]) -> a
    com.nineoldandroids.animation.PropertyValuesHolder ofFloat(com.nineoldandroids.util.Property,float[]) -> a
    com.nineoldandroids.animation.PropertyValuesHolder ofObject(java.lang.String,com.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> a
    com.nineoldandroids.animation.PropertyValuesHolder ofObject(com.nineoldandroids.util.Property,com.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> a
    void setIntValues(int[]) -> a
    void setFloatValues(float[]) -> a
    void setObjectValues(java.lang.Object[]) -> a
    java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class) -> a
    java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class) -> a
    void setupSetter(java.lang.Class) -> a
    void setupGetter(java.lang.Class) -> b
    void setupSetterAndGetter(java.lang.Object) -> a
    com.nineoldandroids.animation.PropertyValuesHolder clone() -> a
    void setAnimatedValue(java.lang.Object) -> b
    void init() -> b
    void setEvaluator(com.nineoldandroids.animation.TypeEvaluator) -> a
    void calculateValue(float) -> a
    void setPropertyName(java.lang.String) -> a
    void setProperty(com.nineoldandroids.util.Property) -> a
    java.lang.String getPropertyName() -> c
    java.lang.Object getAnimatedValue() -> d
    java.lang.String toString() -> toString
    java.lang.String getMethodName(java.lang.String,java.lang.String) -> a
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.PropertyValuesHolder$1 -> com.nineoldandroids.a.am:
com.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder -> com.nineoldandroids.a.an:
    com.nineoldandroids.util.FloatProperty mFloatProperty -> j
    com.nineoldandroids.animation.FloatKeyframeSet mFloatKeyframeSet -> h
    float mFloatAnimatedValue -> i
    void setFloatValues(float[]) -> a
    void calculateValue(float) -> a
    java.lang.Object getAnimatedValue() -> d
    com.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder clone() -> e
    void setAnimatedValue(java.lang.Object) -> b
    void setupSetter(java.lang.Class) -> a
    com.nineoldandroids.animation.PropertyValuesHolder clone() -> a
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder -> com.nineoldandroids.a.ao:
    com.nineoldandroids.util.IntProperty mIntProperty -> j
    com.nineoldandroids.animation.IntKeyframeSet mIntKeyframeSet -> h
    int mIntAnimatedValue -> i
    void setIntValues(int[]) -> a
    void calculateValue(float) -> a
    java.lang.Object getAnimatedValue() -> d
    com.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder clone() -> e
    void setAnimatedValue(java.lang.Object) -> b
    void setupSetter(java.lang.Class) -> a
    com.nineoldandroids.animation.PropertyValuesHolder clone() -> a
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.TypeEvaluator -> com.nineoldandroids.a.ap:
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> a
com.nineoldandroids.animation.ValueAnimator -> com.nineoldandroids.a.aq:
    long mStartTime -> b
    long mSeekTime -> c
    java.lang.ThreadLocal sAnimationHandler -> h
    java.lang.ThreadLocal sAnimations -> i
    java.lang.ThreadLocal sPendingAnimations -> j
    java.lang.ThreadLocal sDelayedAnims -> k
    java.lang.ThreadLocal sEndingAnims -> l
    java.lang.ThreadLocal sReadyAnims -> m
    android.view.animation.Interpolator sDefaultInterpolator -> n
    com.nineoldandroids.animation.TypeEvaluator sIntEvaluator -> o
    com.nineoldandroids.animation.TypeEvaluator sFloatEvaluator -> p
    boolean mPlayingBackwards -> q
    int mCurrentIteration -> r
    float mCurrentFraction -> s
    boolean mStartedDelay -> t
    long mDelayStartTime -> u
    int mPlayingState -> d
    boolean mRunning -> v
    boolean mStarted -> w
    boolean mInitialized -> e
    long mDuration -> x
    long mStartDelay -> y
    long sFrameDelay -> z
    int mRepeatCount -> A
    int mRepeatMode -> B
    android.view.animation.Interpolator mInterpolator -> C
    java.util.ArrayList mUpdateListeners -> D
    com.nineoldandroids.animation.PropertyValuesHolder[] mValues -> f
    java.util.HashMap mValuesMap -> g
    com.nineoldandroids.animation.ValueAnimator ofInt(int[]) -> b
    com.nineoldandroids.animation.ValueAnimator ofFloat(float[]) -> b
    void setIntValues(int[]) -> a
    void setFloatValues(float[]) -> a
    void setObjectValues(java.lang.Object[]) -> a
    void setValues(com.nineoldandroids.animation.PropertyValuesHolder[]) -> a
    void initAnimation() -> h
    com.nineoldandroids.animation.ValueAnimator setDuration(long) -> c
    void setCurrentPlayTime(long) -> d
    long getCurrentPlayTime() -> k
    void setStartDelay(long) -> e
    java.lang.Object getAnimatedValue() -> l
    void setRepeatCount(int) -> a
    void setRepeatMode(int) -> b
    void addUpdateListener(com.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener) -> a
    void setInterpolator(android.view.animation.Interpolator) -> a
    void setEvaluator(com.nineoldandroids.animation.TypeEvaluator) -> a
    void start(boolean) -> a
    void start() -> a
    void cancel() -> b
    void end() -> c
    boolean isRunning() -> d
    boolean isStarted() -> e
    void endAnimation() -> i
    void startAnimation() -> t
    boolean delayedAnimationFrame(long) -> b
    boolean animationFrame(long) -> f
    float getAnimatedFraction() -> m
    void animateValue(float) -> a
    com.nineoldandroids.animation.ValueAnimator clone() -> j
    java.lang.String toString() -> toString
    com.nineoldandroids.animation.Animator clone() -> g
    com.nineoldandroids.animation.Animator setDuration(long) -> a
    java.lang.Object clone() -> clone
    java.lang.ThreadLocal access$000() -> n
    java.lang.ThreadLocal access$100() -> o
    java.lang.ThreadLocal access$200() -> p
    long access$300(com.nineoldandroids.animation.ValueAnimator) -> a
    void access$400(com.nineoldandroids.animation.ValueAnimator) -> b
    java.lang.ThreadLocal access$500() -> q
    java.lang.ThreadLocal access$600() -> r
    boolean access$700(com.nineoldandroids.animation.ValueAnimator,long) -> a
    boolean access$802(com.nineoldandroids.animation.ValueAnimator,boolean) -> a
    void access$900(com.nineoldandroids.animation.ValueAnimator) -> c
    long access$1000() -> s
com.nineoldandroids.animation.ValueAnimator$1 -> com.nineoldandroids.a.ar:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$2 -> com.nineoldandroids.a.as:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$3 -> com.nineoldandroids.a.at:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$4 -> com.nineoldandroids.a.au:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$5 -> com.nineoldandroids.a.av:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$AnimationHandler -> com.nineoldandroids.a.aw:
    void handleMessage(android.os.Message) -> handleMessage
com.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener -> com.nineoldandroids.a.ax:
    void onAnimationUpdate(com.nineoldandroids.animation.ValueAnimator) -> a
com.nineoldandroids.util.FloatProperty -> com.nineoldandroids.b.a:
    void setValue(java.lang.Object,float) -> a
    void set(java.lang.Object,java.lang.Float) -> a
    void set(java.lang.Object,java.lang.Object) -> a
com.nineoldandroids.util.IntProperty -> com.nineoldandroids.b.b:
    void setValue(java.lang.Object,int) -> a
    void set(java.lang.Object,java.lang.Integer) -> a
    void set(java.lang.Object,java.lang.Object) -> a
com.nineoldandroids.util.Property -> com.nineoldandroids.b.c:
    java.lang.String mName -> a
    java.lang.Class mType -> b
    void set(java.lang.Object,java.lang.Object) -> a
    java.lang.Object get(java.lang.Object) -> a
    java.lang.String getName() -> a
com.nineoldandroids.view.ViewHelper -> com.nineoldandroids.view.a:
    void setAlpha(android.view.View,float) -> a
    void setTranslationX(android.view.View,float) -> b
    void setTranslationY(android.view.View,float) -> c
com.nineoldandroids.view.ViewHelper$Honeycomb -> com.nineoldandroids.view.b:
    void setAlpha(android.view.View,float) -> a
    void setTranslationX(android.view.View,float) -> b
    void setTranslationY(android.view.View,float) -> c
com.nineoldandroids.view.ViewPropertyAnimator -> com.nineoldandroids.view.c:
    java.util.WeakHashMap ANIMATORS -> a
    com.nineoldandroids.view.ViewPropertyAnimator animate(android.view.View) -> a
    com.nineoldandroids.view.ViewPropertyAnimator setDuration(long) -> a
    com.nineoldandroids.view.ViewPropertyAnimator setListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> a
    com.nineoldandroids.view.ViewPropertyAnimator translationX(float) -> a
    com.nineoldandroids.view.ViewPropertyAnimator alpha(float) -> b
com.nineoldandroids.view.ViewPropertyAnimatorHC -> com.nineoldandroids.view.d:
    java.lang.ref.WeakReference mView -> b
    long mDuration -> c
    boolean mDurationSet -> d
    long mStartDelay -> e
    boolean mStartDelaySet -> f
    android.view.animation.Interpolator mInterpolator -> g
    boolean mInterpolatorSet -> h
    com.nineoldandroids.animation.Animator$AnimatorListener mListener -> i
    com.nineoldandroids.view.ViewPropertyAnimatorHC$AnimatorEventListener mAnimatorEventListener -> j
    java.util.ArrayList mPendingAnimations -> a
    java.lang.Runnable mAnimationStarter -> k
    java.util.HashMap mAnimatorMap -> l
    com.nineoldandroids.view.ViewPropertyAnimator setDuration(long) -> a
    com.nineoldandroids.view.ViewPropertyAnimator setListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> a
    com.nineoldandroids.view.ViewPropertyAnimator translationX(float) -> a
    com.nineoldandroids.view.ViewPropertyAnimator alpha(float) -> b
    void startAnimation() -> a
    void animateProperty(int,float) -> a
    void animatePropertyBy(int,float,float) -> a
    void setValue(int,float) -> b
    float getValue(int) -> a
    void access$100(com.nineoldandroids.view.ViewPropertyAnimatorHC) -> a
    com.nineoldandroids.animation.Animator$AnimatorListener access$200(com.nineoldandroids.view.ViewPropertyAnimatorHC) -> b
    java.util.HashMap access$300(com.nineoldandroids.view.ViewPropertyAnimatorHC) -> c
    com.nineoldandroids.animation.Animator$AnimatorListener access$202(com.nineoldandroids.view.ViewPropertyAnimatorHC,com.nineoldandroids.animation.Animator$AnimatorListener) -> a
    java.lang.ref.WeakReference access$400(com.nineoldandroids.view.ViewPropertyAnimatorHC) -> d
    void access$500(com.nineoldandroids.view.ViewPropertyAnimatorHC,int,float) -> a
com.nineoldandroids.view.ViewPropertyAnimatorHC$1 -> com.nineoldandroids.view.ViewPropertyAnimatorHC$1:
    com.nineoldandroids.view.ViewPropertyAnimatorHC this$0 -> this$0
    void run() -> run
com.nineoldandroids.view.ViewPropertyAnimatorHC$AnimatorEventListener -> com.nineoldandroids.view.e:
    com.nineoldandroids.view.ViewPropertyAnimatorHC this$0 -> a
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> b
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> d
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> c
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> a
    void onAnimationUpdate(com.nineoldandroids.animation.ValueAnimator) -> a
com.nineoldandroids.view.ViewPropertyAnimatorHC$NameValuesHolder -> com.nineoldandroids.view.f:
    int mNameConstant -> a
    float mFromValue -> b
    float mDeltaValue -> c
com.nineoldandroids.view.ViewPropertyAnimatorHC$PropertyBundle -> com.nineoldandroids.view.g:
    int mPropertyMask -> a
    java.util.ArrayList mNameValuesHolder -> b
    boolean cancel(int) -> a
com.nineoldandroids.view.ViewPropertyAnimatorICS -> com.nineoldandroids.view.h:
    java.lang.ref.WeakReference mNative -> a
    com.nineoldandroids.view.ViewPropertyAnimator setDuration(long) -> a
    com.nineoldandroids.view.ViewPropertyAnimator setListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> a
    com.nineoldandroids.view.ViewPropertyAnimator translationX(float) -> a
    com.nineoldandroids.view.ViewPropertyAnimator alpha(float) -> b
com.nineoldandroids.view.ViewPropertyAnimatorICS$1 -> com.nineoldandroids.view.i:
    com.nineoldandroids.animation.Animator$AnimatorListener val$listener -> a
    com.nineoldandroids.view.ViewPropertyAnimatorICS this$0 -> b
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
com.nineoldandroids.view.ViewPropertyAnimatorPreHC -> com.nineoldandroids.view.j:
    com.nineoldandroids.view.animation.AnimatorProxy mProxy -> b
    java.lang.ref.WeakReference mView -> c
    long mDuration -> d
    boolean mDurationSet -> e
    long mStartDelay -> f
    boolean mStartDelaySet -> g
    android.view.animation.Interpolator mInterpolator -> h
    boolean mInterpolatorSet -> i
    com.nineoldandroids.animation.Animator$AnimatorListener mListener -> j
    com.nineoldandroids.view.ViewPropertyAnimatorPreHC$AnimatorEventListener mAnimatorEventListener -> k
    java.util.ArrayList mPendingAnimations -> a
    java.lang.Runnable mAnimationStarter -> l
    java.util.HashMap mAnimatorMap -> m
    com.nineoldandroids.view.ViewPropertyAnimator setDuration(long) -> a
    com.nineoldandroids.view.ViewPropertyAnimator setListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> a
    com.nineoldandroids.view.ViewPropertyAnimator translationX(float) -> a
    com.nineoldandroids.view.ViewPropertyAnimator alpha(float) -> b
    void startAnimation() -> a
    void animateProperty(int,float) -> a
    void animatePropertyBy(int,float,float) -> a
    void setValue(int,float) -> b
    float getValue(int) -> a
    void access$100(com.nineoldandroids.view.ViewPropertyAnimatorPreHC) -> a
    com.nineoldandroids.animation.Animator$AnimatorListener access$200(com.nineoldandroids.view.ViewPropertyAnimatorPreHC) -> b
    java.util.HashMap access$300(com.nineoldandroids.view.ViewPropertyAnimatorPreHC) -> c
    com.nineoldandroids.animation.Animator$AnimatorListener access$202(com.nineoldandroids.view.ViewPropertyAnimatorPreHC,com.nineoldandroids.animation.Animator$AnimatorListener) -> a
    java.lang.ref.WeakReference access$400(com.nineoldandroids.view.ViewPropertyAnimatorPreHC) -> d
    void access$500(com.nineoldandroids.view.ViewPropertyAnimatorPreHC,int,float) -> a
com.nineoldandroids.view.ViewPropertyAnimatorPreHC$1 -> com.nineoldandroids.view.ViewPropertyAnimatorPreHC$1:
    com.nineoldandroids.view.ViewPropertyAnimatorPreHC this$0 -> this$0
    void run() -> run
com.nineoldandroids.view.ViewPropertyAnimatorPreHC$AnimatorEventListener -> com.nineoldandroids.view.k:
    com.nineoldandroids.view.ViewPropertyAnimatorPreHC this$0 -> a
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> b
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> d
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> c
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> a
    void onAnimationUpdate(com.nineoldandroids.animation.ValueAnimator) -> a
com.nineoldandroids.view.ViewPropertyAnimatorPreHC$NameValuesHolder -> com.nineoldandroids.view.l:
    int mNameConstant -> a
    float mFromValue -> b
    float mDeltaValue -> c
com.nineoldandroids.view.ViewPropertyAnimatorPreHC$PropertyBundle -> com.nineoldandroids.view.m:
    int mPropertyMask -> a
    java.util.ArrayList mNameValuesHolder -> b
    boolean cancel(int) -> a
com.nineoldandroids.view.animation.AnimatorProxy -> com.nineoldandroids.view.a.a:
    boolean NEEDS_PROXY -> a
    java.util.WeakHashMap PROXIES -> b
    java.lang.ref.WeakReference mView -> c
    android.graphics.Camera mCamera -> d
    boolean mHasPivot -> e
    float mAlpha -> f
    float mPivotX -> g
    float mPivotY -> h
    float mRotationX -> i
    float mRotationY -> j
    float mRotationZ -> k
    float mScaleX -> l
    float mScaleY -> m
    float mTranslationX -> n
    float mTranslationY -> o
    android.graphics.RectF mBefore -> p
    android.graphics.RectF mAfter -> q
    android.graphics.Matrix mTempMatrix -> r
    com.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View) -> a
    float getAlpha() -> a
    void setAlpha(float) -> a
    float getPivotX() -> b
    void setPivotX(float) -> b
    float getPivotY() -> c
    void setPivotY(float) -> c
    float getRotation() -> d
    void setRotation(float) -> d
    float getRotationX() -> e
    void setRotationX(float) -> e
    float getRotationY() -> f
    void setRotationY(float) -> f
    float getScaleX() -> g
    void setScaleX(float) -> g
    float getScaleY() -> h
    void setScaleY(float) -> h
    int getScrollX() -> i
    void setScrollX(int) -> a
    int getScrollY() -> j
    void setScrollY(int) -> b
    float getTranslationX() -> k
    void setTranslationX(float) -> i
    float getTranslationY() -> l
    void setTranslationY(float) -> j
    float getX() -> m
    void setX(float) -> k
    float getY() -> n
    void setY(float) -> l
    void prepareForUpdate() -> o
    void invalidateAfterUpdate() -> p
    void computeRect(android.graphics.RectF,android.view.View) -> a
    void transformMatrix(android.graphics.Matrix,android.view.View) -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.nostra13.universalimageloader.cache.disc.BaseDiscCache -> com.nostra13.universalimageloader.cache.disc.a:
    java.io.File cacheDir -> a
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator fileNameGenerator -> b
    java.io.File get(java.lang.String) -> a
    void clear() -> a
com.nostra13.universalimageloader.cache.disc.DiscCacheAware -> com.nostra13.universalimageloader.cache.disc.b:
    void put(java.lang.String,java.io.File) -> a
    java.io.File get(java.lang.String) -> a
    void clear() -> a
com.nostra13.universalimageloader.cache.disc.LimitedDiscCache -> com.nostra13.universalimageloader.cache.disc.c:
    java.util.concurrent.atomic.AtomicInteger cacheSize -> b
    int sizeLimit -> c
    java.util.Map lastUsageDates -> d
    void calculateCacheSizeAndFillUsageMap() -> b
    void put(java.lang.String,java.io.File) -> a
    java.io.File get(java.lang.String) -> a
    void clear() -> a
    int removeNext() -> c
    int getSize(java.io.File) -> a
    java.util.Map access$000(com.nostra13.universalimageloader.cache.disc.LimitedDiscCache) -> a
    java.util.concurrent.atomic.AtomicInteger access$100(com.nostra13.universalimageloader.cache.disc.LimitedDiscCache) -> b
com.nostra13.universalimageloader.cache.disc.LimitedDiscCache$1 -> com.nostra13.universalimageloader.cache.disc.LimitedDiscCache$1:
    com.nostra13.universalimageloader.cache.disc.LimitedDiscCache this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.cache.disc.impl.FileCountLimitedDiscCache -> com.nostra13.universalimageloader.cache.disc.a.a:
    int getSize(java.io.File) -> a
com.nostra13.universalimageloader.cache.disc.impl.TotalSizeLimitedDiscCache -> com.nostra13.universalimageloader.cache.disc.a.b:
    int getSize(java.io.File) -> a
com.nostra13.universalimageloader.cache.disc.impl.UnlimitedDiscCache -> com.nostra13.universalimageloader.cache.disc.a.c:
    void put(java.lang.String,java.io.File) -> a
com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator -> com.nostra13.universalimageloader.cache.disc.b.a:
    java.lang.String generate(java.lang.String) -> a
com.nostra13.universalimageloader.cache.disc.naming.HashCodeFileNameGenerator -> com.nostra13.universalimageloader.cache.disc.b.b:
    java.lang.String generate(java.lang.String) -> a
com.nostra13.universalimageloader.cache.memory.MemoryCacheAware -> com.nostra13.universalimageloader.cache.a.a:
    boolean put(java.lang.Object,java.lang.Object) -> a
    java.lang.Object get(java.lang.Object) -> a
    void remove(java.lang.Object) -> b
    java.util.Collection keys() -> a
    void clear() -> b
com.nostra13.universalimageloader.cache.memory.impl.FuzzyKeyMemoryCache -> com.nostra13.universalimageloader.cache.a.a.a:
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware cache -> a
    java.util.Comparator keyComparator -> b
    boolean put(java.lang.Object,java.lang.Object) -> a
    java.lang.Object get(java.lang.Object) -> a
    void remove(java.lang.Object) -> b
    void clear() -> b
    java.util.Collection keys() -> a
com.nostra13.universalimageloader.cache.memory.impl.LruMemoryCache -> com.nostra13.universalimageloader.cache.a.a.b:
    java.util.LinkedHashMap map -> a
    int maxSize -> b
    int size -> c
    android.graphics.Bitmap get(java.lang.String) -> a
    boolean put(java.lang.String,android.graphics.Bitmap) -> a
    void trimToSize(int) -> a
    void remove(java.lang.String) -> b
    java.util.Collection keys() -> a
    void clear() -> b
    int sizeOf(java.lang.String,android.graphics.Bitmap) -> b
    java.lang.String toString() -> toString
    void remove(java.lang.Object) -> b
    java.lang.Object get(java.lang.Object) -> a
    boolean put(java.lang.Object,java.lang.Object) -> a
com.nostra13.universalimageloader.core.DefaultConfigurationFactory -> com.nostra13.universalimageloader.core.DefaultConfigurationFactory:
    java.util.concurrent.Executor createExecutor(int,int,com.nostra13.universalimageloader.core.assist.QueueProcessingType) -> createExecutor
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator createFileNameGenerator() -> createFileNameGenerator
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware createDiscCache(android.content.Context,com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator,int,int) -> createDiscCache
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware createReserveDiscCache(java.io.File) -> createReserveDiscCache
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware createMemoryCache(int) -> createMemoryCache
    com.nostra13.universalimageloader.core.download.ImageDownloader createImageDownloader(android.content.Context) -> createImageDownloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder createImageDecoder(boolean) -> createImageDecoder
    com.nostra13.universalimageloader.core.display.BitmapDisplayer createBitmapDisplayer() -> createBitmapDisplayer
    java.util.concurrent.ThreadFactory createThreadFactory(int) -> createThreadFactory
com.nostra13.universalimageloader.core.DefaultConfigurationFactory$DefaultThreadFactory -> com.nostra13.universalimageloader.core.DefaultConfigurationFactory$DefaultThreadFactory:
    java.util.concurrent.atomic.AtomicInteger poolNumber -> poolNumber
    java.lang.ThreadGroup group -> group
    java.util.concurrent.atomic.AtomicInteger threadNumber -> threadNumber
    java.lang.String namePrefix -> namePrefix
    int threadPriority -> threadPriority
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.nostra13.universalimageloader.core.DisplayBitmapTask -> com.nostra13.universalimageloader.core.DisplayBitmapTask:
    java.lang.String LOG_DISPLAY_IMAGE_IN_IMAGEAWARE -> LOG_DISPLAY_IMAGE_IN_IMAGEAWARE
    java.lang.String LOG_TASK_CANCELLED_IMAGEAWARE_REUSED -> LOG_TASK_CANCELLED_IMAGEAWARE_REUSED
    java.lang.String LOG_TASK_CANCELLED_IMAGEAWARE_COLLECTED -> LOG_TASK_CANCELLED_IMAGEAWARE_COLLECTED
    android.graphics.Bitmap bitmap -> bitmap
    java.lang.String imageUri -> imageUri
    com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware -> imageAware
    java.lang.String memoryCacheKey -> memoryCacheKey
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> displayer
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener listener -> listener
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    com.nostra13.universalimageloader.core.assist.LoadedFrom loadedFrom -> loadedFrom
    boolean loggingEnabled -> loggingEnabled
    void run() -> run
    boolean isViewWasReused() -> isViewWasReused
    void setLoggingEnabled(boolean) -> setLoggingEnabled
com.nostra13.universalimageloader.core.DisplayImageOptions -> com.nostra13.universalimageloader.core.DisplayImageOptions:
    int imageResOnLoading -> imageResOnLoading
    int imageResForEmptyUri -> imageResForEmptyUri
    int imageResOnFail -> imageResOnFail
    android.graphics.drawable.Drawable imageOnLoading -> imageOnLoading
    android.graphics.drawable.Drawable imageForEmptyUri -> imageForEmptyUri
    android.graphics.drawable.Drawable imageOnFail -> imageOnFail
    boolean resetViewBeforeLoading -> resetViewBeforeLoading
    boolean cacheInMemory -> cacheInMemory
    boolean cacheOnDisc -> cacheOnDisc
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> imageScaleType
    android.graphics.BitmapFactory$Options decodingOptions -> decodingOptions
    int delayBeforeLoading -> delayBeforeLoading
    boolean considerExifParams -> considerExifParams
    java.lang.Object extraForDownloader -> extraForDownloader
    com.nostra13.universalimageloader.core.process.BitmapProcessor preProcessor -> preProcessor
    com.nostra13.universalimageloader.core.process.BitmapProcessor postProcessor -> postProcessor
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> displayer
    android.os.Handler handler -> handler
    boolean isSyncLoading -> isSyncLoading
    boolean shouldShowImageOnLoading() -> shouldShowImageOnLoading
    boolean shouldShowImageForEmptyUri() -> shouldShowImageForEmptyUri
    boolean shouldShowImageOnFail() -> shouldShowImageOnFail
    boolean shouldPreProcess() -> shouldPreProcess
    boolean shouldPostProcess() -> shouldPostProcess
    boolean shouldDelayBeforeLoading() -> shouldDelayBeforeLoading
    android.graphics.drawable.Drawable getImageOnLoading(android.content.res.Resources) -> getImageOnLoading
    android.graphics.drawable.Drawable getImageForEmptyUri(android.content.res.Resources) -> getImageForEmptyUri
    android.graphics.drawable.Drawable getImageOnFail(android.content.res.Resources) -> getImageOnFail
    boolean isResetViewBeforeLoading() -> isResetViewBeforeLoading
    boolean isCacheInMemory() -> isCacheInMemory
    boolean isCacheOnDisc() -> isCacheOnDisc
    com.nostra13.universalimageloader.core.assist.ImageScaleType getImageScaleType() -> getImageScaleType
    android.graphics.BitmapFactory$Options getDecodingOptions() -> getDecodingOptions
    int getDelayBeforeLoading() -> getDelayBeforeLoading
    boolean isConsiderExifParams() -> isConsiderExifParams
    java.lang.Object getExtraForDownloader() -> getExtraForDownloader
    com.nostra13.universalimageloader.core.process.BitmapProcessor getPreProcessor() -> getPreProcessor
    com.nostra13.universalimageloader.core.process.BitmapProcessor getPostProcessor() -> getPostProcessor
    com.nostra13.universalimageloader.core.display.BitmapDisplayer getDisplayer() -> getDisplayer
    android.os.Handler getHandler() -> getHandler
    boolean isSyncLoading() -> isSyncLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions createSimple() -> createSimple
    int access$1900(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$1900
    int access$2000(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2000
    int access$2100(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2100
    android.graphics.drawable.Drawable access$2200(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2200
    android.graphics.drawable.Drawable access$2300(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2300
    android.graphics.drawable.Drawable access$2400(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2400
    boolean access$2500(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2500
    boolean access$2600(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2600
    boolean access$2700(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2700
    com.nostra13.universalimageloader.core.assist.ImageScaleType access$2800(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2800
    android.graphics.BitmapFactory$Options access$2900(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2900
    int access$3000(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3000
    boolean access$3100(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3100
    java.lang.Object access$3200(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3200
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$3300(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3300
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$3400(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3400
    com.nostra13.universalimageloader.core.display.BitmapDisplayer access$3500(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3500
    android.os.Handler access$3600(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3600
    boolean access$3700(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3700
com.nostra13.universalimageloader.core.DisplayImageOptions$1 -> com.nostra13.universalimageloader.core.DisplayImageOptions$1:
com.nostra13.universalimageloader.core.DisplayImageOptions$Builder -> com.nostra13.universalimageloader.core.DisplayImageOptions$Builder:
    int imageResOnLoading -> imageResOnLoading
    int imageResForEmptyUri -> imageResForEmptyUri
    int imageResOnFail -> imageResOnFail
    android.graphics.drawable.Drawable imageOnLoading -> imageOnLoading
    android.graphics.drawable.Drawable imageForEmptyUri -> imageForEmptyUri
    android.graphics.drawable.Drawable imageOnFail -> imageOnFail
    boolean resetViewBeforeLoading -> resetViewBeforeLoading
    boolean cacheInMemory -> cacheInMemory
    boolean cacheOnDisc -> cacheOnDisc
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> imageScaleType
    android.graphics.BitmapFactory$Options decodingOptions -> decodingOptions
    int delayBeforeLoading -> delayBeforeLoading
    boolean considerExifParams -> considerExifParams
    java.lang.Object extraForDownloader -> extraForDownloader
    com.nostra13.universalimageloader.core.process.BitmapProcessor preProcessor -> preProcessor
    com.nostra13.universalimageloader.core.process.BitmapProcessor postProcessor -> postProcessor
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> displayer
    android.os.Handler handler -> handler
    boolean isSyncLoading -> isSyncLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showStubImage(int) -> showStubImage
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnLoading(int) -> showImageOnLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnLoading(android.graphics.drawable.Drawable) -> showImageOnLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageForEmptyUri(int) -> showImageForEmptyUri
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageForEmptyUri(android.graphics.drawable.Drawable) -> showImageForEmptyUri
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnFail(int) -> showImageOnFail
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnFail(android.graphics.drawable.Drawable) -> showImageOnFail
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder resetViewBeforeLoading() -> resetViewBeforeLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder resetViewBeforeLoading(boolean) -> resetViewBeforeLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheInMemory() -> cacheInMemory
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheInMemory(boolean) -> cacheInMemory
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheOnDisc() -> cacheOnDisc
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheOnDisc(boolean) -> cacheOnDisc
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder imageScaleType(com.nostra13.universalimageloader.core.assist.ImageScaleType) -> imageScaleType
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder bitmapConfig(android.graphics.Bitmap$Config) -> bitmapConfig
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder decodingOptions(android.graphics.BitmapFactory$Options) -> decodingOptions
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder delayBeforeLoading(int) -> delayBeforeLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder extraForDownloader(java.lang.Object) -> extraForDownloader
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder considerExifParams(boolean) -> considerExifParams
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder preProcessor(com.nostra13.universalimageloader.core.process.BitmapProcessor) -> preProcessor
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder postProcessor(com.nostra13.universalimageloader.core.process.BitmapProcessor) -> postProcessor
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder displayer(com.nostra13.universalimageloader.core.display.BitmapDisplayer) -> displayer
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder syncLoading(boolean) -> syncLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder handler(android.os.Handler) -> handler
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cloneFrom(com.nostra13.universalimageloader.core.DisplayImageOptions) -> cloneFrom
    com.nostra13.universalimageloader.core.DisplayImageOptions build() -> build
    int access$000(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$000
    int access$100(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$100
    int access$200(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$200
    android.graphics.drawable.Drawable access$300(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$300
    android.graphics.drawable.Drawable access$400(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$400
    android.graphics.drawable.Drawable access$500(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$500
    boolean access$600(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$600
    boolean access$700(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$700
    boolean access$800(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$800
    com.nostra13.universalimageloader.core.assist.ImageScaleType access$900(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$900
    android.graphics.BitmapFactory$Options access$1000(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1000
    int access$1100(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1100
    boolean access$1200(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1200
    java.lang.Object access$1300(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1300
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$1400(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1400
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$1500(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1500
    com.nostra13.universalimageloader.core.display.BitmapDisplayer access$1600(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1600
    android.os.Handler access$1700(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1700
    boolean access$1800(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1800
com.nostra13.universalimageloader.core.ImageLoader -> com.nostra13.universalimageloader.core.ImageLoader:
    java.lang.String TAG -> TAG
    java.lang.String LOG_INIT_CONFIG -> LOG_INIT_CONFIG
    java.lang.String LOG_DESTROY -> LOG_DESTROY
    java.lang.String LOG_LOAD_IMAGE_FROM_MEMORY_CACHE -> LOG_LOAD_IMAGE_FROM_MEMORY_CACHE
    java.lang.String WARNING_RE_INIT_CONFIG -> WARNING_RE_INIT_CONFIG
    java.lang.String ERROR_WRONG_ARGUMENTS -> ERROR_WRONG_ARGUMENTS
    java.lang.String ERROR_NOT_INIT -> ERROR_NOT_INIT
    java.lang.String ERROR_INIT_CONFIG_WITH_NULL -> ERROR_INIT_CONFIG_WITH_NULL
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> configuration
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener emptyListener -> emptyListener
    com.nostra13.universalimageloader.core.ImageLoader instance -> instance
    com.nostra13.universalimageloader.core.ImageLoader getInstance() -> getInstance
    void init(com.nostra13.universalimageloader.core.ImageLoaderConfiguration) -> init
    boolean isInited() -> isInited
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware) -> displayImage
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> displayImage
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions) -> displayImage
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> displayImage
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener,com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener,com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener) -> displayImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener,com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener) -> loadImage
    android.graphics.Bitmap loadImageSync(java.lang.String) -> loadImageSync
    android.graphics.Bitmap loadImageSync(java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions) -> loadImageSync
    android.graphics.Bitmap loadImageSync(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize) -> loadImageSync
    android.graphics.Bitmap loadImageSync(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions) -> loadImageSync
    void checkConfiguration() -> checkConfiguration
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware getMemoryCache() -> getMemoryCache
    void clearMemoryCache() -> clearMemoryCache
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware getDiscCache() -> getDiscCache
    void clearDiscCache() -> clearDiscCache
    java.lang.String getLoadingUriForView(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> getLoadingUriForView
    java.lang.String getLoadingUriForView(android.widget.ImageView) -> getLoadingUriForView
    void cancelDisplayTask(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> cancelDisplayTask
    void cancelDisplayTask(android.widget.ImageView) -> cancelDisplayTask
    void denyNetworkDownloads(boolean) -> denyNetworkDownloads
    void handleSlowNetwork(boolean) -> handleSlowNetwork
    void pause() -> pause
    void resume() -> resume
    void stop() -> stop
    void destroy() -> destroy
    android.os.Handler defineHandler(com.nostra13.universalimageloader.core.DisplayImageOptions) -> defineHandler
com.nostra13.universalimageloader.core.ImageLoaderConfiguration -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration:
    android.content.res.Resources resources -> resources
    int maxImageWidthForMemoryCache -> maxImageWidthForMemoryCache
    int maxImageHeightForMemoryCache -> maxImageHeightForMemoryCache
    int maxImageWidthForDiscCache -> maxImageWidthForDiscCache
    int maxImageHeightForDiscCache -> maxImageHeightForDiscCache
    android.graphics.Bitmap$CompressFormat imageCompressFormatForDiscCache -> imageCompressFormatForDiscCache
    int imageQualityForDiscCache -> imageQualityForDiscCache
    com.nostra13.universalimageloader.core.process.BitmapProcessor processorForDiscCache -> processorForDiscCache
    java.util.concurrent.Executor taskExecutor -> taskExecutor
    java.util.concurrent.Executor taskExecutorForCachedImages -> taskExecutorForCachedImages
    boolean customExecutor -> customExecutor
    boolean customExecutorForCachedImages -> customExecutorForCachedImages
    int threadPoolSize -> threadPoolSize
    int threadPriority -> threadPriority
    com.nostra13.universalimageloader.core.assist.QueueProcessingType tasksProcessingType -> tasksProcessingType
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware memoryCache -> memoryCache
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware discCache -> discCache
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> decoder
    com.nostra13.universalimageloader.core.DisplayImageOptions defaultDisplayImageOptions -> defaultDisplayImageOptions
    boolean writeLogs -> writeLogs
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware reserveDiscCache -> reserveDiscCache
    com.nostra13.universalimageloader.core.download.ImageDownloader networkDeniedDownloader -> networkDeniedDownloader
    com.nostra13.universalimageloader.core.download.ImageDownloader slowNetworkDownloader -> slowNetworkDownloader
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration createDefault(android.content.Context) -> createDefault
    com.nostra13.universalimageloader.core.assist.ImageSize getMaxImageSize() -> getMaxImageSize
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$1 -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration$1:
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder:
    java.lang.String WARNING_OVERLAP_DISC_CACHE_PARAMS -> WARNING_OVERLAP_DISC_CACHE_PARAMS
    java.lang.String WARNING_OVERLAP_DISC_CACHE_NAME_GENERATOR -> WARNING_OVERLAP_DISC_CACHE_NAME_GENERATOR
    java.lang.String WARNING_OVERLAP_MEMORY_CACHE -> WARNING_OVERLAP_MEMORY_CACHE
    java.lang.String WARNING_OVERLAP_EXECUTOR -> WARNING_OVERLAP_EXECUTOR
    int DEFAULT_THREAD_POOL_SIZE -> DEFAULT_THREAD_POOL_SIZE
    int DEFAULT_THREAD_PRIORITY -> DEFAULT_THREAD_PRIORITY
    com.nostra13.universalimageloader.core.assist.QueueProcessingType DEFAULT_TASK_PROCESSING_TYPE -> DEFAULT_TASK_PROCESSING_TYPE
    android.content.Context context -> context
    int maxImageWidthForMemoryCache -> maxImageWidthForMemoryCache
    int maxImageHeightForMemoryCache -> maxImageHeightForMemoryCache
    int maxImageWidthForDiscCache -> maxImageWidthForDiscCache
    int maxImageHeightForDiscCache -> maxImageHeightForDiscCache
    android.graphics.Bitmap$CompressFormat imageCompressFormatForDiscCache -> imageCompressFormatForDiscCache
    int imageQualityForDiscCache -> imageQualityForDiscCache
    com.nostra13.universalimageloader.core.process.BitmapProcessor processorForDiscCache -> processorForDiscCache
    java.util.concurrent.Executor taskExecutor -> taskExecutor
    java.util.concurrent.Executor taskExecutorForCachedImages -> taskExecutorForCachedImages
    boolean customExecutor -> customExecutor
    boolean customExecutorForCachedImages -> customExecutorForCachedImages
    int threadPoolSize -> threadPoolSize
    int threadPriority -> threadPriority
    boolean denyCacheImageMultipleSizesInMemory -> denyCacheImageMultipleSizesInMemory
    com.nostra13.universalimageloader.core.assist.QueueProcessingType tasksProcessingType -> tasksProcessingType
    int memoryCacheSize -> memoryCacheSize
    int discCacheSize -> discCacheSize
    int discCacheFileCount -> discCacheFileCount
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware memoryCache -> memoryCache
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware discCache -> discCache
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator discCacheFileNameGenerator -> discCacheFileNameGenerator
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> decoder
    com.nostra13.universalimageloader.core.DisplayImageOptions defaultDisplayImageOptions -> defaultDisplayImageOptions
    boolean writeLogs -> writeLogs
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCacheExtraOptions(int,int) -> memoryCacheExtraOptions
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheExtraOptions(int,int,android.graphics.Bitmap$CompressFormat,int,com.nostra13.universalimageloader.core.process.BitmapProcessor) -> discCacheExtraOptions
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder taskExecutor(java.util.concurrent.Executor) -> taskExecutor
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder taskExecutorForCachedImages(java.util.concurrent.Executor) -> taskExecutorForCachedImages
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder threadPoolSize(int) -> threadPoolSize
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder threadPriority(int) -> threadPriority
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder denyCacheImageMultipleSizesInMemory() -> denyCacheImageMultipleSizesInMemory
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder tasksProcessingOrder(com.nostra13.universalimageloader.core.assist.QueueProcessingType) -> tasksProcessingOrder
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCacheSize(int) -> memoryCacheSize
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCacheSizePercentage(int) -> memoryCacheSizePercentage
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCache(com.nostra13.universalimageloader.cache.memory.MemoryCacheAware) -> memoryCache
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheSize(int) -> discCacheSize
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheFileCount(int) -> discCacheFileCount
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheFileNameGenerator(com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator) -> discCacheFileNameGenerator
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder imageDownloader(com.nostra13.universalimageloader.core.download.ImageDownloader) -> imageDownloader
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder imageDecoder(com.nostra13.universalimageloader.core.decode.ImageDecoder) -> imageDecoder
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCache(com.nostra13.universalimageloader.cache.disc.DiscCacheAware) -> discCache
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder defaultDisplayImageOptions(com.nostra13.universalimageloader.core.DisplayImageOptions) -> defaultDisplayImageOptions
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder writeDebugLogs() -> writeDebugLogs
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration build() -> build
    void initEmptyFieldsWithDefaultValues() -> initEmptyFieldsWithDefaultValues
    android.content.Context access$000(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$000
    int access$100(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$100
    int access$200(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$200
    int access$300(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$300
    int access$400(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$400
    android.graphics.Bitmap$CompressFormat access$500(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$500
    int access$600(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$600
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$700(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$700
    java.util.concurrent.Executor access$800(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$800
    java.util.concurrent.Executor access$900(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$900
    int access$1000(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1000
    int access$1100(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1100
    com.nostra13.universalimageloader.core.assist.QueueProcessingType access$1200(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1200
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware access$1300(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1300
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware access$1400(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1400
    com.nostra13.universalimageloader.core.DisplayImageOptions access$1500(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1500
    boolean access$1600(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1600
    com.nostra13.universalimageloader.core.download.ImageDownloader access$1700(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1700
    com.nostra13.universalimageloader.core.decode.ImageDecoder access$1800(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1800
    boolean access$1900(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1900
    boolean access$2000(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$2000
com.nostra13.universalimageloader.core.ImageLoaderEngine -> com.nostra13.universalimageloader.core.ImageLoaderEngine:
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> configuration
    java.util.concurrent.Executor taskExecutor -> taskExecutor
    java.util.concurrent.Executor taskExecutorForCachedImages -> taskExecutorForCachedImages
    java.util.concurrent.Executor taskDistributor -> taskDistributor
    java.util.Map cacheKeysForImageAwares -> cacheKeysForImageAwares
    java.util.Map uriLocks -> uriLocks
    java.util.concurrent.atomic.AtomicBoolean paused -> paused
    java.util.concurrent.atomic.AtomicBoolean networkDenied -> networkDenied
    java.util.concurrent.atomic.AtomicBoolean slowNetwork -> slowNetwork
    java.lang.Object pauseLock -> pauseLock
    void submit(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask) -> submit
    void submit(com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask) -> submit
    void initExecutorsIfNeed() -> initExecutorsIfNeed
    java.util.concurrent.Executor createTaskExecutor() -> createTaskExecutor
    java.lang.String getLoadingUriForView(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> getLoadingUriForView
    void prepareDisplayTaskFor(com.nostra13.universalimageloader.core.imageaware.ImageAware,java.lang.String) -> prepareDisplayTaskFor
    void cancelDisplayTaskFor(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> cancelDisplayTaskFor
    void denyNetworkDownloads(boolean) -> denyNetworkDownloads
    void handleSlowNetwork(boolean) -> handleSlowNetwork
    void pause() -> pause
    void resume() -> resume
    void stop() -> stop
    void fireCallback(java.lang.Runnable) -> fireCallback
    java.util.concurrent.locks.ReentrantLock getLockForUri(java.lang.String) -> getLockForUri
    java.util.concurrent.atomic.AtomicBoolean getPause() -> getPause
    java.lang.Object getPauseLock() -> getPauseLock
    boolean isNetworkDenied() -> isNetworkDenied
    boolean isSlowNetwork() -> isSlowNetwork
    void access$000(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> access$000
    java.util.concurrent.Executor access$100(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> access$100
    java.util.concurrent.Executor access$200(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> access$200
com.nostra13.universalimageloader.core.ImageLoaderEngine$1 -> com.nostra13.universalimageloader.core.ImageLoaderEngine$1:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask val$task -> val$task
    com.nostra13.universalimageloader.core.ImageLoaderEngine this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.core.ImageLoadingInfo -> com.nostra13.universalimageloader.core.ImageLoadingInfo:
    java.lang.String uri -> uri
    java.lang.String memoryCacheKey -> memoryCacheKey
    com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware -> imageAware
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> targetSize
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> options
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener listener -> listener
    com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener progressListener -> progressListener
    java.util.concurrent.locks.ReentrantLock loadFromUriLock -> loadFromUriLock
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask:
    java.lang.String LOG_WAITING_FOR_RESUME -> LOG_WAITING_FOR_RESUME
    java.lang.String LOG_RESUME_AFTER_PAUSE -> LOG_RESUME_AFTER_PAUSE
    java.lang.String LOG_DELAY_BEFORE_LOADING -> LOG_DELAY_BEFORE_LOADING
    java.lang.String LOG_START_DISPLAY_IMAGE_TASK -> LOG_START_DISPLAY_IMAGE_TASK
    java.lang.String LOG_WAITING_FOR_IMAGE_LOADED -> LOG_WAITING_FOR_IMAGE_LOADED
    java.lang.String LOG_GET_IMAGE_FROM_MEMORY_CACHE_AFTER_WAITING -> LOG_GET_IMAGE_FROM_MEMORY_CACHE_AFTER_WAITING
    java.lang.String LOG_LOAD_IMAGE_FROM_NETWORK -> LOG_LOAD_IMAGE_FROM_NETWORK
    java.lang.String LOG_LOAD_IMAGE_FROM_DISC_CACHE -> LOG_LOAD_IMAGE_FROM_DISC_CACHE
    java.lang.String LOG_RESIZE_CACHED_IMAGE_FILE -> LOG_RESIZE_CACHED_IMAGE_FILE
    java.lang.String LOG_PREPROCESS_IMAGE -> LOG_PREPROCESS_IMAGE
    java.lang.String LOG_POSTPROCESS_IMAGE -> LOG_POSTPROCESS_IMAGE
    java.lang.String LOG_CACHE_IMAGE_IN_MEMORY -> LOG_CACHE_IMAGE_IN_MEMORY
    java.lang.String LOG_CACHE_IMAGE_ON_DISC -> LOG_CACHE_IMAGE_ON_DISC
    java.lang.String LOG_PROCESS_IMAGE_BEFORE_CACHE_ON_DISC -> LOG_PROCESS_IMAGE_BEFORE_CACHE_ON_DISC
    java.lang.String LOG_TASK_CANCELLED_IMAGEAWARE_REUSED -> LOG_TASK_CANCELLED_IMAGEAWARE_REUSED
    java.lang.String LOG_TASK_CANCELLED_IMAGEAWARE_COLLECTED -> LOG_TASK_CANCELLED_IMAGEAWARE_COLLECTED
    java.lang.String LOG_TASK_INTERRUPTED -> LOG_TASK_INTERRUPTED
    java.lang.String ERROR_PRE_PROCESSOR_NULL -> ERROR_PRE_PROCESSOR_NULL
    java.lang.String ERROR_POST_PROCESSOR_NULL -> ERROR_POST_PROCESSOR_NULL
    java.lang.String ERROR_PROCESSOR_FOR_DISC_CACHE_NULL -> ERROR_PROCESSOR_FOR_DISC_CACHE_NULL
    int BUFFER_SIZE -> BUFFER_SIZE
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo -> imageLoadingInfo
    android.os.Handler handler -> handler
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> configuration
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    com.nostra13.universalimageloader.core.download.ImageDownloader networkDeniedDownloader -> networkDeniedDownloader
    com.nostra13.universalimageloader.core.download.ImageDownloader slowNetworkDownloader -> slowNetworkDownloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> decoder
    boolean writeLogs -> writeLogs
    java.lang.String uri -> uri
    java.lang.String memoryCacheKey -> memoryCacheKey
    com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware -> imageAware
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> targetSize
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> options
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener listener -> listener
    com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener progressListener -> progressListener
    com.nostra13.universalimageloader.core.assist.LoadedFrom loadedFrom -> loadedFrom
    void run() -> run
    boolean waitIfPaused() -> waitIfPaused
    boolean delayIfNeed() -> delayIfNeed
    android.graphics.Bitmap tryLoadBitmap() -> tryLoadBitmap
    java.io.File getImageFileInDiscCache() -> getImageFileInDiscCache
    android.graphics.Bitmap decodeImage(java.lang.String) -> decodeImage
    boolean tryCacheImageOnDisc(java.io.File) -> tryCacheImageOnDisc
    boolean downloadImage(java.io.File) -> downloadImage
    boolean resizeAndSaveImage(java.io.File,int,int) -> resizeAndSaveImage
    boolean onBytesCopied(int,int) -> onBytesCopied
    boolean fireProgressEvent(int,int) -> fireProgressEvent
    void fireFailEvent(com.nostra13.universalimageloader.core.assist.FailReason$FailType,java.lang.Throwable) -> fireFailEvent
    void fireCancelEvent() -> fireCancelEvent
    com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader() -> getDownloader
    void checkTaskNotActual() -> checkTaskNotActual
    boolean isTaskNotActual() -> isTaskNotActual
    void checkViewCollected() -> checkViewCollected
    boolean isViewCollected() -> isViewCollected
    void checkViewReused() -> checkViewReused
    boolean isViewReused() -> isViewReused
    void checkTaskInterrupted() -> checkTaskInterrupted
    boolean isTaskInterrupted() -> isTaskInterrupted
    java.lang.String getLoadingUri() -> getLoadingUri
    void log(java.lang.String) -> log
    void log(java.lang.String,java.lang.Object[]) -> log
    void runTask(java.lang.Runnable,boolean,android.os.Handler,com.nostra13.universalimageloader.core.ImageLoaderEngine) -> runTask
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration access$000(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask) -> access$000
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$1 -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$1:
    int val$current -> val$current
    int val$total -> val$total
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$2 -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$2:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType val$failType -> val$failType
    java.lang.Throwable val$failCause -> val$failCause
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$3 -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$3:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> this$0
com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask -> com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask:
    java.lang.String LOG_POSTPROCESS_IMAGE -> LOG_POSTPROCESS_IMAGE
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    android.graphics.Bitmap bitmap -> bitmap
    com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo -> imageLoadingInfo
    android.os.Handler handler -> handler
    void run() -> run
com.nostra13.universalimageloader.core.assist.ContentLengthInputStream -> com.nostra13.universalimageloader.core.assist.ContentLengthInputStream:
    java.io.InputStream stream -> stream
    int length -> length
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
    boolean markSupported() -> markSupported
com.nostra13.universalimageloader.core.assist.FailReason -> com.nostra13.universalimageloader.core.assist.FailReason:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType type -> type
    java.lang.Throwable cause -> cause
    com.nostra13.universalimageloader.core.assist.FailReason$FailType getType() -> getType
    java.lang.Throwable getCause() -> getCause
com.nostra13.universalimageloader.core.assist.FailReason$FailType -> com.nostra13.universalimageloader.core.assist.FailReason$FailType:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType IO_ERROR -> IO_ERROR
    com.nostra13.universalimageloader.core.assist.FailReason$FailType DECODING_ERROR -> DECODING_ERROR
    com.nostra13.universalimageloader.core.assist.FailReason$FailType NETWORK_DENIED -> NETWORK_DENIED
    com.nostra13.universalimageloader.core.assist.FailReason$FailType OUT_OF_MEMORY -> OUT_OF_MEMORY
    com.nostra13.universalimageloader.core.assist.FailReason$FailType UNKNOWN -> UNKNOWN
    com.nostra13.universalimageloader.core.assist.FailReason$FailType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.FailReason$FailType[] values() -> values
    com.nostra13.universalimageloader.core.assist.FailReason$FailType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.FlushedInputStream -> com.nostra13.universalimageloader.core.assist.FlushedInputStream:
    long skip(long) -> skip
com.nostra13.universalimageloader.core.assist.ImageScaleType -> com.nostra13.universalimageloader.core.assist.ImageScaleType:
    com.nostra13.universalimageloader.core.assist.ImageScaleType NONE -> NONE
    com.nostra13.universalimageloader.core.assist.ImageScaleType IN_SAMPLE_POWER_OF_2 -> IN_SAMPLE_POWER_OF_2
    com.nostra13.universalimageloader.core.assist.ImageScaleType IN_SAMPLE_INT -> IN_SAMPLE_INT
    com.nostra13.universalimageloader.core.assist.ImageScaleType EXACTLY -> EXACTLY
    com.nostra13.universalimageloader.core.assist.ImageScaleType EXACTLY_STRETCHED -> EXACTLY_STRETCHED
    com.nostra13.universalimageloader.core.assist.ImageScaleType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.ImageScaleType[] values() -> values
    com.nostra13.universalimageloader.core.assist.ImageScaleType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.ImageSize -> com.nostra13.universalimageloader.core.assist.ImageSize:
    int TO_STRING_MAX_LENGHT -> TO_STRING_MAX_LENGHT
    java.lang.String SEPARATOR -> SEPARATOR
    int width -> width
    int height -> height
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ImageSize scaleDown(int) -> scaleDown
    com.nostra13.universalimageloader.core.assist.ImageSize scale(float) -> scale
    java.lang.String toString() -> toString
com.nostra13.universalimageloader.core.assist.LoadedFrom -> com.nostra13.universalimageloader.core.assist.LoadedFrom:
    com.nostra13.universalimageloader.core.assist.LoadedFrom NETWORK -> NETWORK
    com.nostra13.universalimageloader.core.assist.LoadedFrom DISC_CACHE -> DISC_CACHE
    com.nostra13.universalimageloader.core.assist.LoadedFrom MEMORY_CACHE -> MEMORY_CACHE
    com.nostra13.universalimageloader.core.assist.LoadedFrom[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.LoadedFrom[] values() -> values
    com.nostra13.universalimageloader.core.assist.LoadedFrom valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.QueueProcessingType -> com.nostra13.universalimageloader.core.assist.QueueProcessingType:
    com.nostra13.universalimageloader.core.assist.QueueProcessingType FIFO -> FIFO
    com.nostra13.universalimageloader.core.assist.QueueProcessingType LIFO -> LIFO
    com.nostra13.universalimageloader.core.assist.QueueProcessingType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.QueueProcessingType[] values() -> values
    com.nostra13.universalimageloader.core.assist.QueueProcessingType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.ViewScaleType -> com.nostra13.universalimageloader.core.assist.ViewScaleType:
    com.nostra13.universalimageloader.core.assist.ViewScaleType FIT_INSIDE -> FIT_INSIDE
    com.nostra13.universalimageloader.core.assist.ViewScaleType CROP -> CROP
    com.nostra13.universalimageloader.core.assist.ViewScaleType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.ViewScaleType[] values() -> values
    com.nostra13.universalimageloader.core.assist.ViewScaleType valueOf(java.lang.String) -> valueOf
    com.nostra13.universalimageloader.core.assist.ViewScaleType fromImageView(android.widget.ImageView) -> fromImageView
com.nostra13.universalimageloader.core.assist.ViewScaleType$1 -> com.nostra13.universalimageloader.core.assist.ViewScaleType$1:
    int[] $SwitchMap$android$widget$ImageView$ScaleType -> $SwitchMap$android$widget$ImageView$ScaleType
com.nostra13.universalimageloader.core.assist.deque.BlockingDeque -> com.nostra13.universalimageloader.core.assist.deque.BlockingDeque:
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    void putFirst(java.lang.Object) -> putFirst
    void putLast(java.lang.Object) -> putLast
    boolean offerFirst(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerFirst
    boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerLast
    java.lang.Object takeFirst() -> takeFirst
    java.lang.Object takeLast() -> takeLast
    java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit) -> pollFirst
    java.lang.Object pollLast(long,java.util.concurrent.TimeUnit) -> pollLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    int size() -> size
    java.util.Iterator iterator() -> iterator
    void push(java.lang.Object) -> push
com.nostra13.universalimageloader.core.assist.deque.Deque -> com.nostra13.universalimageloader.core.assist.deque.Deque:
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object removeLast() -> removeLast
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object peekFirst() -> peekFirst
    java.lang.Object peekLast() -> peekLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    void push(java.lang.Object) -> push
    java.lang.Object pop() -> pop
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    int size() -> size
    java.util.Iterator iterator() -> iterator
    java.util.Iterator descendingIterator() -> descendingIterator
com.nostra13.universalimageloader.core.assist.deque.LIFOLinkedBlockingDeque -> com.nostra13.universalimageloader.core.assist.deque.LIFOLinkedBlockingDeque:
    long serialVersionUID -> serialVersionUID
    boolean offer(java.lang.Object) -> offer
    java.lang.Object remove() -> remove
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque:
    long serialVersionUID -> serialVersionUID
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node first -> first
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node last -> last
    int count -> count
    int capacity -> capacity
    java.util.concurrent.locks.ReentrantLock lock -> lock
    java.util.concurrent.locks.Condition notEmpty -> notEmpty
    java.util.concurrent.locks.Condition notFull -> notFull
    boolean linkFirst(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> linkFirst
    boolean linkLast(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> linkLast
    java.lang.Object unlinkFirst() -> unlinkFirst
    java.lang.Object unlinkLast() -> unlinkLast
    void unlink(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> unlink
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    void putFirst(java.lang.Object) -> putFirst
    void putLast(java.lang.Object) -> putLast
    boolean offerFirst(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerFirst
    boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerLast
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object removeLast() -> removeLast
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.lang.Object takeFirst() -> takeFirst
    java.lang.Object takeLast() -> takeLast
    java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit) -> pollFirst
    java.lang.Object pollLast(long,java.util.concurrent.TimeUnit) -> pollLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object peekFirst() -> peekFirst
    java.lang.Object peekLast() -> peekLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    int remainingCapacity() -> remainingCapacity
    int drainTo(java.util.Collection) -> drainTo
    int drainTo(java.util.Collection,int) -> drainTo
    void push(java.lang.Object) -> push
    java.lang.Object pop() -> pop
    boolean remove(java.lang.Object) -> remove
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.String toString() -> toString
    void clear() -> clear
    java.util.Iterator iterator() -> iterator
    java.util.Iterator descendingIterator() -> descendingIterator
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$1 -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$1:
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$AbstractItr -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$AbstractItr:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node next -> next
    java.lang.Object nextItem -> nextItem
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node lastRet -> lastRet
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> this$0
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> firstNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> nextNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node succ(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> succ
    void advance() -> advance
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$DescendingItr -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$DescendingItr:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> this$0
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> firstNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> nextNode
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Itr -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Itr:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> this$0
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> firstNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> nextNode
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node:
    java.lang.Object item -> item
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node prev -> prev
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node next -> next
com.nostra13.universalimageloader.core.decode.BaseImageDecoder -> com.nostra13.universalimageloader.core.decode.BaseImageDecoder:
    java.lang.String LOG_SABSAMPLE_IMAGE -> LOG_SABSAMPLE_IMAGE
    java.lang.String LOG_SCALE_IMAGE -> LOG_SCALE_IMAGE
    java.lang.String LOG_ROTATE_IMAGE -> LOG_ROTATE_IMAGE
    java.lang.String LOG_FLIP_IMAGE -> LOG_FLIP_IMAGE
    java.lang.String ERROR_CANT_DECODE_IMAGE -> ERROR_CANT_DECODE_IMAGE
    boolean loggingEnabled -> loggingEnabled
    android.graphics.Bitmap decode(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> decode
    java.io.InputStream getImageStream(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> getImageStream
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo defineImageSizeAndRotation(java.io.InputStream,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> defineImageSizeAndRotation
    boolean canDefineExifParams(java.lang.String,java.lang.String) -> canDefineExifParams
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo defineExifOrientation(java.lang.String) -> defineExifOrientation
    android.graphics.BitmapFactory$Options prepareDecodingOptions(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> prepareDecodingOptions
    java.io.InputStream resetStream(java.io.InputStream,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> resetStream
    android.graphics.Bitmap considerExactScaleAndOrientaiton(android.graphics.Bitmap,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo,int,boolean) -> considerExactScaleAndOrientaiton
com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo -> com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo:
    int rotation -> rotation
    boolean flipHorizontal -> flipHorizontal
com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo -> com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo:
    com.nostra13.universalimageloader.core.assist.ImageSize imageSize -> imageSize
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo exif -> exif
com.nostra13.universalimageloader.core.decode.ImageDecoder -> com.nostra13.universalimageloader.core.decode.ImageDecoder:
    android.graphics.Bitmap decode(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> decode
com.nostra13.universalimageloader.core.decode.ImageDecodingInfo -> com.nostra13.universalimageloader.core.decode.ImageDecodingInfo:
    java.lang.String imageKey -> imageKey
    java.lang.String imageUri -> imageUri
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> targetSize
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> imageScaleType
    com.nostra13.universalimageloader.core.assist.ViewScaleType viewScaleType -> viewScaleType
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    java.lang.Object extraForDownloader -> extraForDownloader
    boolean considerExifParams -> considerExifParams
    android.graphics.BitmapFactory$Options decodingOptions -> decodingOptions
    void copyOptions(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions
    void copyOptions10(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions10
    void copyOptions11(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions11
    java.lang.String getImageKey() -> getImageKey
    java.lang.String getImageUri() -> getImageUri
    com.nostra13.universalimageloader.core.assist.ImageSize getTargetSize() -> getTargetSize
    com.nostra13.universalimageloader.core.assist.ImageScaleType getImageScaleType() -> getImageScaleType
    com.nostra13.universalimageloader.core.assist.ViewScaleType getViewScaleType() -> getViewScaleType
    com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader() -> getDownloader
    java.lang.Object getExtraForDownloader() -> getExtraForDownloader
    boolean shouldConsiderExifParams() -> shouldConsiderExifParams
    android.graphics.BitmapFactory$Options getDecodingOptions() -> getDecodingOptions
com.nostra13.universalimageloader.core.display.BitmapDisplayer -> com.nostra13.universalimageloader.core.display.BitmapDisplayer:
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
com.nostra13.universalimageloader.core.display.FadeInBitmapDisplayer -> com.nostra13.universalimageloader.core.display.FadeInBitmapDisplayer:
    int durationMillis -> durationMillis
    boolean animateFromNetwork -> animateFromNetwork
    boolean animateFromDisc -> animateFromDisc
    boolean animateFromMemory -> animateFromMemory
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
    void animate(android.view.View,int) -> animate
com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer -> com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer:
    int cornerRadius -> cornerRadius
    int margin -> margin
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable -> com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable:
    float cornerRadius -> cornerRadius
    int margin -> margin
    android.graphics.RectF mRect -> mRect
    android.graphics.RectF mBitmapRect -> mBitmapRect
    android.graphics.BitmapShader bitmapShader -> bitmapShader
    android.graphics.Paint paint -> paint
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void draw(android.graphics.Canvas) -> draw
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
com.nostra13.universalimageloader.core.display.RoundedVignetteBitmapDisplayer -> com.nostra13.universalimageloader.core.display.RoundedVignetteBitmapDisplayer:
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
com.nostra13.universalimageloader.core.display.RoundedVignetteBitmapDisplayer$RoundedVignetteDrawable -> com.nostra13.universalimageloader.core.display.RoundedVignetteBitmapDisplayer$RoundedVignetteDrawable:
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
com.nostra13.universalimageloader.core.display.SimpleBitmapDisplayer -> com.nostra13.universalimageloader.core.display.SimpleBitmapDisplayer:
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
com.nostra13.universalimageloader.core.download.BaseImageDownloader -> com.nostra13.universalimageloader.core.download.BaseImageDownloader:
    int DEFAULT_HTTP_CONNECT_TIMEOUT -> DEFAULT_HTTP_CONNECT_TIMEOUT
    int DEFAULT_HTTP_READ_TIMEOUT -> DEFAULT_HTTP_READ_TIMEOUT
    int BUFFER_SIZE -> BUFFER_SIZE
    java.lang.String ALLOWED_URI_CHARS -> ALLOWED_URI_CHARS
    int MAX_REDIRECT_COUNT -> MAX_REDIRECT_COUNT
    java.lang.String CONTENT_CONTACTS_URI_PREFIX -> CONTENT_CONTACTS_URI_PREFIX
    java.lang.String ERROR_UNSUPPORTED_SCHEME -> ERROR_UNSUPPORTED_SCHEME
    android.content.Context context -> context
    int connectTimeout -> connectTimeout
    int readTimeout -> readTimeout
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
    java.io.InputStream getStreamFromNetwork(java.lang.String,java.lang.Object) -> getStreamFromNetwork
    java.net.HttpURLConnection createConnection(java.lang.String,java.lang.Object) -> createConnection
    java.io.InputStream getStreamFromFile(java.lang.String,java.lang.Object) -> getStreamFromFile
    java.io.InputStream getStreamFromContent(java.lang.String,java.lang.Object) -> getStreamFromContent
    java.io.InputStream getStreamFromAssets(java.lang.String,java.lang.Object) -> getStreamFromAssets
    java.io.InputStream getStreamFromDrawable(java.lang.String,java.lang.Object) -> getStreamFromDrawable
    java.io.InputStream getStreamFromOtherSource(java.lang.String,java.lang.Object) -> getStreamFromOtherSource
com.nostra13.universalimageloader.core.download.BaseImageDownloader$1 -> com.nostra13.universalimageloader.core.download.BaseImageDownloader$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme
com.nostra13.universalimageloader.core.download.HttpClientImageDownloader -> com.nostra13.universalimageloader.core.download.HttpClientImageDownloader:
    org.apache.http.client.HttpClient httpClient -> httpClient
    java.io.InputStream getStreamFromNetwork(java.lang.String,java.lang.Object) -> getStreamFromNetwork
com.nostra13.universalimageloader.core.download.ImageDownloader -> com.nostra13.universalimageloader.core.download.ImageDownloader:
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme -> com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme:
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme HTTP -> HTTP
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme HTTPS -> HTTPS
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme FILE -> FILE
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme CONTENT -> CONTENT
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme ASSETS -> ASSETS
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme DRAWABLE -> DRAWABLE
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme UNKNOWN -> UNKNOWN
    java.lang.String scheme -> scheme
    java.lang.String uriPrefix -> uriPrefix
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme[] values() -> values
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme valueOf(java.lang.String) -> valueOf
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme ofUri(java.lang.String) -> ofUri
    boolean belongsTo(java.lang.String) -> belongsTo
    java.lang.String wrap(java.lang.String) -> wrap
    java.lang.String crop(java.lang.String) -> crop
com.nostra13.universalimageloader.core.download.NetworkDeniedImageDownloader -> com.nostra13.universalimageloader.core.download.NetworkDeniedImageDownloader:
    com.nostra13.universalimageloader.core.download.ImageDownloader wrappedDownloader -> wrappedDownloader
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
com.nostra13.universalimageloader.core.download.NetworkDeniedImageDownloader$1 -> com.nostra13.universalimageloader.core.download.NetworkDeniedImageDownloader$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme
com.nostra13.universalimageloader.core.download.SlowNetworkImageDownloader -> com.nostra13.universalimageloader.core.download.SlowNetworkImageDownloader:
    com.nostra13.universalimageloader.core.download.ImageDownloader wrappedDownloader -> wrappedDownloader
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
com.nostra13.universalimageloader.core.download.SlowNetworkImageDownloader$1 -> com.nostra13.universalimageloader.core.download.SlowNetworkImageDownloader$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme
com.nostra13.universalimageloader.core.imageaware.ImageAware -> com.nostra13.universalimageloader.core.imageaware.ImageAware:
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> getScaleType
    android.view.View getWrappedView() -> getWrappedView
    boolean isCollected() -> isCollected
    int getId() -> getId
    boolean setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    boolean setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
com.nostra13.universalimageloader.core.imageaware.ImageNonViewAware -> com.nostra13.universalimageloader.core.imageaware.ImageNonViewAware:
    java.lang.String imageUri -> imageUri
    com.nostra13.universalimageloader.core.assist.ImageSize imageSize -> imageSize
    com.nostra13.universalimageloader.core.assist.ViewScaleType scaleType -> scaleType
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> getScaleType
    android.view.View getWrappedView() -> getWrappedView
    boolean isCollected() -> isCollected
    int getId() -> getId
    boolean setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    boolean setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
com.nostra13.universalimageloader.core.imageaware.ImageViewAware -> com.nostra13.universalimageloader.core.imageaware.ImageViewAware:
    java.lang.String WARN_CANT_SET_DRAWABLE -> WARN_CANT_SET_DRAWABLE
    java.lang.String WARN_CANT_SET_BITMAP -> WARN_CANT_SET_BITMAP
    java.lang.ref.Reference imageViewRef -> imageViewRef
    boolean checkActualViewSize -> checkActualViewSize
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> getScaleType
    android.widget.ImageView getWrappedView() -> getWrappedView
    boolean isCollected() -> isCollected
    int getId() -> getId
    int getImageViewFieldValue(java.lang.Object,java.lang.String) -> getImageViewFieldValue
    boolean setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    boolean setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    android.view.View getWrappedView() -> getWrappedView
com.nostra13.universalimageloader.core.listener.ImageLoadingListener -> com.nostra13.universalimageloader.core.listener.ImageLoadingListener:
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener -> com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener:
    void onProgressUpdate(java.lang.String,android.view.View,int,int) -> onProgressUpdate
com.nostra13.universalimageloader.core.listener.PauseOnScrollListener -> com.nostra13.universalimageloader.core.listener.PauseOnScrollListener:
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> imageLoader
    boolean pauseOnScroll -> pauseOnScroll
    boolean pauseOnFling -> pauseOnFling
    android.widget.AbsListView$OnScrollListener externalListener -> externalListener
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.nostra13.universalimageloader.core.listener.SimpleImageLoadingListener -> com.nostra13.universalimageloader.core.listener.SimpleImageLoadingListener:
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.nostra13.universalimageloader.core.listener.SyncImageLoadingListener -> com.nostra13.universalimageloader.core.listener.SyncImageLoadingListener:
    android.graphics.Bitmap loadedImage -> loadedImage
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    android.graphics.Bitmap getLoadedBitmap() -> getLoadedBitmap
com.nostra13.universalimageloader.core.process.BitmapProcessor -> com.nostra13.universalimageloader.core.process.BitmapProcessor:
    android.graphics.Bitmap process(android.graphics.Bitmap) -> process
com.nostra13.universalimageloader.utils.ImageSizeUtils -> com.nostra13.universalimageloader.a.a:
    com.nostra13.universalimageloader.core.assist.ImageSize maxBitmapSize -> a
    com.nostra13.universalimageloader.core.assist.ImageSize defineTargetSizeForView(com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.ImageSize) -> a
    int computeImageSampleSize(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ViewScaleType,boolean) -> a
    int computeMinImageSampleSize(com.nostra13.universalimageloader.core.assist.ImageSize) -> a
    float computeImageScale(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ViewScaleType,boolean) -> b
com.nostra13.universalimageloader.utils.ImageSizeUtils$1 -> com.nostra13.universalimageloader.a.b:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$assist$ViewScaleType -> a
com.nostra13.universalimageloader.utils.IoUtils -> com.nostra13.universalimageloader.a.c:
    boolean copyStream(java.io.InputStream,java.io.OutputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener) -> a
    boolean copyStream(java.io.InputStream,java.io.OutputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int) -> a
    boolean shouldStopLoading(com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int,int) -> a
    void readAndCloseStream(java.io.InputStream) -> a
    void closeSilently(java.io.Closeable) -> a
com.nostra13.universalimageloader.utils.IoUtils$CopyListener -> com.nostra13.universalimageloader.a.d:
    boolean onBytesCopied(int,int) -> onBytesCopied
com.nostra13.universalimageloader.utils.L -> com.nostra13.universalimageloader.a.e:
    boolean DISABLED -> a
    void d(java.lang.String,java.lang.Object[]) -> a
    void i(java.lang.String,java.lang.Object[]) -> b
    void w(java.lang.String,java.lang.Object[]) -> c
    void e(java.lang.Throwable) -> a
    void e(java.lang.String,java.lang.Object[]) -> d
    void log(int,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> a
com.nostra13.universalimageloader.utils.MemoryCacheUtils -> com.nostra13.universalimageloader.a.f:
    java.lang.String generateKey(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize) -> a
    java.util.Comparator createFuzzyKeyComparator() -> a
com.nostra13.universalimageloader.utils.MemoryCacheUtils$1 -> com.nostra13.universalimageloader.a.g:
    int compare(java.lang.String,java.lang.String) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.nostra13.universalimageloader.utils.StorageUtils -> com.nostra13.universalimageloader.a.h:
    java.io.File getCacheDirectory(android.content.Context) -> a
    java.io.File getCacheDirectory(android.content.Context,boolean) -> a
    java.io.File getIndividualCacheDirectory(android.content.Context) -> b
    java.io.File getOwnCacheDirectory(android.content.Context,java.lang.String) -> a
    java.io.File getExternalCacheDir(android.content.Context) -> c
    boolean hasExternalStoragePermission(android.content.Context) -> d
com.polites.android.Animation -> com.polites.android.Animation:
    boolean update(com.polites.android.GestureImageView,long) -> update
com.polites.android.Animator -> com.polites.android.Animator:
    com.polites.android.GestureImageView view -> view
    com.polites.android.Animation animation -> animation
    boolean running -> running
    boolean active -> active
    long lastTime -> lastTime
    void run() -> run
    void finish() -> finish
    void play(com.polites.android.Animation) -> play
    void activate() -> activate
    void cancel() -> cancel
com.polites.android.FlingAnimation -> com.polites.android.FlingAnimation:
    float velocityX -> velocityX
    float velocityY -> velocityY
    float factor -> factor
    float threshold -> threshold
    com.polites.android.FlingAnimationListener listener -> listener
    boolean update(com.polites.android.GestureImageView,long) -> update
    void setVelocityX(float) -> setVelocityX
    void setVelocityY(float) -> setVelocityY
    void setFactor(float) -> setFactor
    void setListener(com.polites.android.FlingAnimationListener) -> setListener
com.polites.android.FlingAnimationListener -> com.polites.android.FlingAnimationListener:
    void onMove(float,float) -> onMove
    void onComplete() -> onComplete
com.polites.android.FlingListener -> com.polites.android.FlingListener:
    float velocityX -> velocityX
    float velocityY -> velocityY
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    float getVelocityX() -> getVelocityX
    float getVelocityY() -> getVelocityY
com.polites.android.GestureImageView -> com.polites.android.GestureImageView:
    java.lang.String GLOBAL_NS -> GLOBAL_NS
    java.lang.String LOCAL_NS -> LOCAL_NS
    java.util.concurrent.Semaphore drawLock -> drawLock
    com.polites.android.Animator animator -> animator
    android.graphics.drawable.Drawable drawable -> drawable
    float x -> x
    float y -> y
    boolean layout -> layout
    float scaleAdjust -> scaleAdjust
    float startingScale -> startingScale
    float scale -> scale
    float maxScale -> maxScale
    float minScale -> minScale
    float fitScaleHorizontal -> fitScaleHorizontal
    float fitScaleVertical -> fitScaleVertical
    float rotation -> rotation
    float centerX -> centerX
    float centerY -> centerY
    java.lang.Float startX -> startX
    java.lang.Float startY -> startY
    int hWidth -> hWidth
    int hHeight -> hHeight
    int resId -> resId
    boolean recycle -> recycle
    boolean strict -> strict
    int displayHeight -> displayHeight
    int displayWidth -> displayWidth
    int alpha -> alpha
    android.graphics.ColorFilter colorFilter -> colorFilter
    int deviceOrientation -> deviceOrientation
    int imageOrientation -> imageOrientation
    com.polites.android.GestureImageViewListener gestureImageViewListener -> gestureImageViewListener
    com.polites.android.GestureImageViewTouchListener gestureImageViewTouchListener -> gestureImageViewTouchListener
    android.view.View$OnTouchListener customOnTouchListener -> customOnTouchListener
    android.view.View$OnClickListener onClickListener -> onClickListener
    int[] $SWITCH_TABLE$android$widget$ImageView$ScaleType -> $SWITCH_TABLE$android$widget$ImageView$ScaleType
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setupCanvas(int,int,int) -> setupCanvas
    void computeCropScale(int,int,int,int) -> computeCropScale
    void computeStartingScale(int,int,int,int) -> computeStartingScale
    boolean isRecycled() -> isRecycled
    void recycle() -> recycle
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean waitForDraw(long) -> waitForDraw
    void onAttachedToWindow() -> onAttachedToWindow
    void animationStart(com.polites.android.Animation) -> animationStart
    void animationStop() -> animationStop
    void onDetachedFromWindow() -> onDetachedFromWindow
    void initImage() -> initImage
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageResource(int) -> setImageResource
    int getScaledWidth() -> getScaledWidth
    int getScaledHeight() -> getScaledHeight
    int getImageWidth() -> getImageWidth
    int getImageHeight() -> getImageHeight
    void moveBy(float,float) -> moveBy
    void setPosition(float,float) -> setPosition
    void redraw() -> redraw
    void setMinScale(float) -> setMinScale
    void setMaxScale(float) -> setMaxScale
    void setScale(float) -> setScale
    float getScale() -> getScale
    float getImageX() -> getImageX
    float getImageY() -> getImageY
    boolean isStrict() -> isStrict
    void setStrict(boolean) -> setStrict
    boolean isRecycle() -> isRecycle
    void setRecycle(boolean) -> setRecycle
    void reset() -> reset
    void setRotation(float) -> setRotation
    void setGestureImageViewListener(com.polites.android.GestureImageViewListener) -> setGestureImageViewListener
    com.polites.android.GestureImageViewListener getGestureImageViewListener() -> getGestureImageViewListener
    android.graphics.drawable.Drawable getDrawable() -> getDrawable
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setImageURI(android.net.Uri) -> setImageURI
    android.graphics.Matrix getImageMatrix() -> getImageMatrix
    void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    void setAdjustViewBounds(boolean) -> setAdjustViewBounds
    void setImageLevel(int) -> setImageLevel
    void setImageMatrix(android.graphics.Matrix) -> setImageMatrix
    void setImageState(int[],boolean) -> setImageState
    void setSelected(boolean) -> setSelected
    void setOnTouchListener(android.view.View$OnTouchListener) -> setOnTouchListener
    float getCenterX() -> getCenterX
    float getCenterY() -> getCenterY
    boolean isLandscape() -> isLandscape
    boolean isPortrait() -> isPortrait
    void setStartingScale(float) -> setStartingScale
    void setStartingPosition(float,float) -> setStartingPosition
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    boolean isOrientationAligned() -> isOrientationAligned
    int getDeviceOrientation() -> getDeviceOrientation
    android.view.View$OnTouchListener access$0(com.polites.android.GestureImageView) -> access$0
    com.polites.android.GestureImageViewTouchListener access$1(com.polites.android.GestureImageView) -> access$1
    int[] $SWITCH_TABLE$android$widget$ImageView$ScaleType() -> $SWITCH_TABLE$android$widget$ImageView$ScaleType
com.polites.android.GestureImageView$1 -> com.polites.android.GestureImageView$1:
    com.polites.android.GestureImageView this$0 -> this$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.polites.android.GestureImageViewListener -> com.polites.android.GestureImageViewListener:
    void onTouch(float,float) -> onTouch
    void onScale(float) -> onScale
    void onPosition(float,float) -> onPosition
com.polites.android.GestureImageViewTouchListener -> com.polites.android.GestureImageViewTouchListener:
    com.polites.android.GestureImageView image -> image
    android.view.View$OnClickListener onClickListener -> onClickListener
    android.graphics.PointF current -> current
    android.graphics.PointF last -> last
    android.graphics.PointF next -> next
    android.graphics.PointF midpoint -> midpoint
    com.polites.android.VectorF scaleVector -> scaleVector
    com.polites.android.VectorF pinchVector -> pinchVector
    boolean touched -> touched
    boolean inZoom -> inZoom
    float initialDistance -> initialDistance
    float lastScale -> lastScale
    float currentScale -> currentScale
    float boundaryLeft -> boundaryLeft
    float boundaryTop -> boundaryTop
    float boundaryRight -> boundaryRight
    float boundaryBottom -> boundaryBottom
    float maxScale -> maxScale
    float minScale -> minScale
    float fitScaleHorizontal -> fitScaleHorizontal
    float fitScaleVertical -> fitScaleVertical
    int canvasWidth -> canvasWidth
    int canvasHeight -> canvasHeight
    float centerX -> centerX
    float centerY -> centerY
    float startingScale -> startingScale
    boolean canDragX -> canDragX
    boolean canDragY -> canDragY
    boolean multiTouch -> multiTouch
    int displayWidth -> displayWidth
    int displayHeight -> displayHeight
    int imageWidth -> imageWidth
    int imageHeight -> imageHeight
    com.polites.android.FlingListener flingListener -> flingListener
    com.polites.android.FlingAnimation flingAnimation -> flingAnimation
    com.polites.android.ZoomAnimation zoomAnimation -> zoomAnimation
    com.polites.android.MoveAnimation moveAnimation -> moveAnimation
    android.view.GestureDetector tapDetector -> tapDetector
    android.view.GestureDetector flingDetector -> flingDetector
    com.polites.android.GestureImageViewListener imageListener -> imageListener
    void startFling() -> startFling
    void startZoom(android.view.MotionEvent) -> startZoom
    void stopAnimations() -> stopAnimations
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void handleUp() -> handleUp
    void handleScale(float,float,float) -> handleScale
    boolean handleDrag(float,float) -> handleDrag
    void reset() -> reset
    float getMaxScale() -> getMaxScale
    void setMaxScale(float) -> setMaxScale
    float getMinScale() -> getMinScale
    void setMinScale(float) -> setMinScale
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void setCanvasWidth(int) -> setCanvasWidth
    void setCanvasHeight(int) -> setCanvasHeight
    void setFitScaleHorizontal(float) -> setFitScaleHorizontal
    void setFitScaleVertical(float) -> setFitScaleVertical
    void boundCoordinates() -> boundCoordinates
    void calculateBoundaries() -> calculateBoundaries
    android.graphics.PointF access$0(com.polites.android.GestureImageViewTouchListener) -> access$0
    float access$1(com.polites.android.GestureImageViewTouchListener) -> access$1
    float access$2(com.polites.android.GestureImageViewTouchListener) -> access$2
    void access$3(com.polites.android.GestureImageViewTouchListener,boolean) -> access$3
    void access$4(com.polites.android.GestureImageViewTouchListener,android.view.MotionEvent) -> access$4
    boolean access$5(com.polites.android.GestureImageViewTouchListener) -> access$5
    android.view.View$OnClickListener access$6(com.polites.android.GestureImageViewTouchListener) -> access$6
com.polites.android.GestureImageViewTouchListener$1 -> com.polites.android.GestureImageViewTouchListener$1:
    com.polites.android.GestureImageViewTouchListener this$0 -> this$0
    void onMove(float,float) -> onMove
    void onComplete() -> onComplete
com.polites.android.GestureImageViewTouchListener$2 -> com.polites.android.GestureImageViewTouchListener$2:
    com.polites.android.GestureImageViewTouchListener this$0 -> this$0
    void onZoom(float,float,float) -> onZoom
    void onComplete() -> onComplete
com.polites.android.GestureImageViewTouchListener$3 -> com.polites.android.GestureImageViewTouchListener$3:
    com.polites.android.GestureImageViewTouchListener this$0 -> this$0
    com.polites.android.GestureImageView val$image -> val$image
    void onMove(float,float) -> onMove
com.polites.android.GestureImageViewTouchListener$4 -> com.polites.android.GestureImageViewTouchListener$4:
    com.polites.android.GestureImageViewTouchListener this$0 -> this$0
    com.polites.android.GestureImageView val$image -> val$image
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
com.polites.android.MathUtils -> com.polites.android.MathUtils:
    float distance(android.view.MotionEvent) -> distance
    float distance(android.graphics.PointF,android.graphics.PointF) -> distance
    float distance(float,float,float,float) -> distance
    void midpoint(android.view.MotionEvent,android.graphics.PointF) -> midpoint
    void midpoint(float,float,float,float,android.graphics.PointF) -> midpoint
    void rotate(android.graphics.PointF,android.graphics.PointF,float) -> rotate
    float angle(android.graphics.PointF,android.graphics.PointF) -> angle
    float angle(float,float,float,float) -> angle
com.polites.android.MoveAnimation -> com.polites.android.MoveAnimation:
    boolean firstFrame -> firstFrame
    float startX -> startX
    float startY -> startY
    float targetX -> targetX
    float targetY -> targetY
    long animationTimeMS -> animationTimeMS
    long totalTime -> totalTime
    com.polites.android.MoveAnimationListener moveAnimationListener -> moveAnimationListener
    boolean update(com.polites.android.GestureImageView,long) -> update
    void reset() -> reset
    float getTargetX() -> getTargetX
    void setTargetX(float) -> setTargetX
    float getTargetY() -> getTargetY
    void setTargetY(float) -> setTargetY
    long getAnimationTimeMS() -> getAnimationTimeMS
    void setAnimationTimeMS(long) -> setAnimationTimeMS
    void setMoveAnimationListener(com.polites.android.MoveAnimationListener) -> setMoveAnimationListener
com.polites.android.MoveAnimationListener -> com.polites.android.MoveAnimationListener:
    void onMove(float,float) -> onMove
com.polites.android.VectorF -> com.polites.android.VectorF:
    float angle -> angle
    float length -> length
    android.graphics.PointF start -> start
    android.graphics.PointF end -> end
    void calculateEndPoint() -> calculateEndPoint
    void setStart(android.graphics.PointF) -> setStart
    void setEnd(android.graphics.PointF) -> setEnd
    void set(android.view.MotionEvent) -> set
    float calculateLength() -> calculateLength
    float calculateAngle() -> calculateAngle
com.polites.android.ZoomAnimation -> com.polites.android.ZoomAnimation:
    boolean firstFrame -> firstFrame
    float touchX -> touchX
    float touchY -> touchY
    float zoom -> zoom
    float startX -> startX
    float startY -> startY
    float startScale -> startScale
    float xDiff -> xDiff
    float yDiff -> yDiff
    float scaleDiff -> scaleDiff
    long animationLengthMS -> animationLengthMS
    long totalTime -> totalTime
    com.polites.android.ZoomAnimationListener zoomAnimationListener -> zoomAnimationListener
    boolean update(com.polites.android.GestureImageView,long) -> update
    void reset() -> reset
    float getZoom() -> getZoom
    void setZoom(float) -> setZoom
    float getTouchX() -> getTouchX
    void setTouchX(float) -> setTouchX
    float getTouchY() -> getTouchY
    void setTouchY(float) -> setTouchY
    long getAnimationLengthMS() -> getAnimationLengthMS
    void setAnimationLengthMS(long) -> setAnimationLengthMS
    com.polites.android.ZoomAnimationListener getZoomAnimationListener() -> getZoomAnimationListener
    void setZoomAnimationListener(com.polites.android.ZoomAnimationListener) -> setZoomAnimationListener
com.polites.android.ZoomAnimationListener -> com.polites.android.ZoomAnimationListener:
    void onZoom(float,float,float) -> onZoom
    void onComplete() -> onComplete
com.sina.sso.RemoteSSO -> com.sina.a.a:
    java.lang.String getPackageName() -> a
    java.lang.String getActivityName() -> b
    java.lang.String getLoginUserName() -> c
com.sina.sso.RemoteSSO$Stub -> com.sina.a.b:
    com.sina.sso.RemoteSSO asInterface(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.sina.sso.RemoteSSO$Stub$Proxy -> com.sina.a.c:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getPackageName() -> a
    java.lang.String getActivityName() -> b
    java.lang.String getLoginUserName() -> c
com.sina.weibo.sdk.BuildConfig -> com.sina.weibo.sdk.BuildConfig:
    boolean DEBUG -> DEBUG
com.sina.weibo.sdk.R -> com.sina.weibo.sdk.R:
com.sina.weibo.sdk.R$color -> com.sina.weibo.sdk.R$color:
    int com_sina_weibo_sdk_blue -> com_sina_weibo_sdk_blue
    int com_sina_weibo_sdk_loginview_text_color -> com_sina_weibo_sdk_loginview_text_color
com.sina.weibo.sdk.R$dimen -> com.sina.weibo.sdk.R$dimen:
    int activity_horizontal_margin -> activity_horizontal_margin
    int activity_vertical_margin -> activity_vertical_margin
    int com_sina_weibo_sdk_loginview_compound_drawable_padding -> com_sina_weibo_sdk_loginview_compound_drawable_padding
    int com_sina_weibo_sdk_loginview_padding -> com_sina_weibo_sdk_loginview_padding
    int com_sina_weibo_sdk_loginview_padding_bottom -> com_sina_weibo_sdk_loginview_padding_bottom
    int com_sina_weibo_sdk_loginview_padding_left -> com_sina_weibo_sdk_loginview_padding_left
    int com_sina_weibo_sdk_loginview_padding_right -> com_sina_weibo_sdk_loginview_padding_right
    int com_sina_weibo_sdk_loginview_padding_top -> com_sina_weibo_sdk_loginview_padding_top
    int com_sina_weibo_sdk_loginview_text_size -> com_sina_weibo_sdk_loginview_text_size
com.sina.weibo.sdk.R$drawable -> com.sina.weibo.sdk.R$drawable:
    int com_sina_weibo_sdk_button_blue -> com_sina_weibo_sdk_button_blue
    int com_sina_weibo_sdk_button_grey -> com_sina_weibo_sdk_button_grey
    int com_sina_weibo_sdk_login_button_with_account_text -> com_sina_weibo_sdk_login_button_with_account_text
    int com_sina_weibo_sdk_login_button_with_frame_logo -> com_sina_weibo_sdk_login_button_with_frame_logo
    int com_sina_weibo_sdk_login_button_with_original_logo -> com_sina_weibo_sdk_login_button_with_original_logo
    int ic_com_sina_weibo_sdk_button_blue_focused -> ic_com_sina_weibo_sdk_button_blue_focused
    int ic_com_sina_weibo_sdk_button_blue_normal -> ic_com_sina_weibo_sdk_button_blue_normal
    int ic_com_sina_weibo_sdk_button_blue_pressed -> ic_com_sina_weibo_sdk_button_blue_pressed
    int ic_com_sina_weibo_sdk_button_grey_focused -> ic_com_sina_weibo_sdk_button_grey_focused
    int ic_com_sina_weibo_sdk_button_grey_normal -> ic_com_sina_weibo_sdk_button_grey_normal
    int ic_com_sina_weibo_sdk_button_grey_pressed -> ic_com_sina_weibo_sdk_button_grey_pressed
    int ic_com_sina_weibo_sdk_login_button_with_frame_logo_focused -> ic_com_sina_weibo_sdk_login_button_with_frame_logo_focused
    int ic_com_sina_weibo_sdk_login_button_with_frame_logo_normal -> ic_com_sina_weibo_sdk_login_button_with_frame_logo_normal
    int ic_com_sina_weibo_sdk_login_button_with_frame_logo_pressed -> ic_com_sina_weibo_sdk_login_button_with_frame_logo_pressed
    int ic_com_sina_weibo_sdk_login_with_account_text_focused -> ic_com_sina_weibo_sdk_login_with_account_text_focused
    int ic_com_sina_weibo_sdk_login_with_account_text_normal -> ic_com_sina_weibo_sdk_login_with_account_text_normal
    int ic_com_sina_weibo_sdk_login_with_account_text_pressed -> ic_com_sina_weibo_sdk_login_with_account_text_pressed
    int ic_com_sina_weibo_sdk_login_with_text -> ic_com_sina_weibo_sdk_login_with_text
    int ic_com_sina_weibo_sdk_logo -> ic_com_sina_weibo_sdk_logo
com.sina.weibo.sdk.R$string -> com.sina.weibo.sdk.R$string:
    int com_sina_weibo_sdk_login -> com_sina_weibo_sdk_login
    int com_sina_weibo_sdk_login_with_weibo_account -> com_sina_weibo_sdk_login_with_weibo_account
    int com_sina_weibo_sdk_logout -> com_sina_weibo_sdk_logout
com.sina.weibo.sdk.R$style -> com.sina.weibo.sdk.R$style:
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
    int com_sina_weibo_sdk_loginview_default_style -> com_sina_weibo_sdk_loginview_default_style
    int com_sina_weibo_sdk_loginview_silver_style -> com_sina_weibo_sdk_loginview_silver_style
com.sina.weibo.sdk.api.BaseMediaObject -> com.sina.weibo.sdk.api.BaseMediaObject:
    int MEDIA_TYPE_TEXT -> MEDIA_TYPE_TEXT
    int MEDIA_TYPE_IMAGE -> MEDIA_TYPE_IMAGE
    int MEDIA_TYPE_MUSIC -> MEDIA_TYPE_MUSIC
    int MEDIA_TYPE_VIDEO -> MEDIA_TYPE_VIDEO
    int MEDIA_TYPE_WEBPAGE -> MEDIA_TYPE_WEBPAGE
    int MEDIA_TYPE_VOICE -> MEDIA_TYPE_VOICE
    int MEDIA_TYPE_CMD -> MEDIA_TYPE_CMD
    java.lang.String actionUrl -> actionUrl
    java.lang.String schema -> schema
    java.lang.String identify -> identify
    java.lang.String title -> title
    java.lang.String description -> description
    byte[] thumbData -> thumbData
    void setThumbImage(android.graphics.Bitmap) -> setThumbImage
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int getObjType() -> getObjType
    boolean checkArgs() -> checkArgs
    com.sina.weibo.sdk.api.BaseMediaObject toExtraMediaObject(java.lang.String) -> toExtraMediaObject
    java.lang.String toExtraMediaString() -> toExtraMediaString
com.sina.weibo.sdk.api.CmdObject -> com.sina.weibo.sdk.api.CmdObject:
    java.lang.String cmd -> cmd
    java.lang.String CMD_HOME -> CMD_HOME
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> checkArgs
    int getObjType() -> getObjType
    com.sina.weibo.sdk.api.BaseMediaObject toExtraMediaObject(java.lang.String) -> toExtraMediaObject
    java.lang.String toExtraMediaString() -> toExtraMediaString
com.sina.weibo.sdk.api.CmdObject$1 -> com.sina.weibo.sdk.api.CmdObject$1:
    com.sina.weibo.sdk.api.CmdObject createFromParcel(android.os.Parcel) -> createFromParcel
    com.sina.weibo.sdk.api.CmdObject[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.ImageObject -> com.sina.weibo.sdk.api.ImageObject:
    int DATA_SIZE -> DATA_SIZE
    byte[] imageData -> imageData
    java.lang.String imagePath -> imagePath
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void setImageObject(android.graphics.Bitmap) -> setImageObject
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> checkArgs
    int getObjType() -> getObjType
    com.sina.weibo.sdk.api.BaseMediaObject toExtraMediaObject(java.lang.String) -> toExtraMediaObject
    java.lang.String toExtraMediaString() -> toExtraMediaString
com.sina.weibo.sdk.api.ImageObject$1 -> com.sina.weibo.sdk.api.ImageObject$1:
    com.sina.weibo.sdk.api.ImageObject createFromParcel(android.os.Parcel) -> createFromParcel
    com.sina.weibo.sdk.api.ImageObject[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.MusicObject -> com.sina.weibo.sdk.api.MusicObject:
    java.lang.String EXTRA_KEY_DEFAULTTEXT -> EXTRA_KEY_DEFAULTTEXT
    java.lang.String defaultText -> defaultText
    java.lang.String h5Url -> h5Url
    java.lang.String dataUrl -> dataUrl
    java.lang.String dataHdUrl -> dataHdUrl
    int duration -> duration
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> checkArgs
    int getObjType() -> getObjType
    com.sina.weibo.sdk.api.BaseMediaObject toExtraMediaObject(java.lang.String) -> toExtraMediaObject
    java.lang.String toExtraMediaString() -> toExtraMediaString
com.sina.weibo.sdk.api.MusicObject$1 -> com.sina.weibo.sdk.api.MusicObject$1:
    com.sina.weibo.sdk.api.MusicObject createFromParcel(android.os.Parcel) -> createFromParcel
    com.sina.weibo.sdk.api.MusicObject[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.TextObject -> com.sina.weibo.sdk.api.TextObject:
    java.lang.String text -> text
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> checkArgs
    int getObjType() -> getObjType
    com.sina.weibo.sdk.api.BaseMediaObject toExtraMediaObject(java.lang.String) -> toExtraMediaObject
    java.lang.String toExtraMediaString() -> toExtraMediaString
com.sina.weibo.sdk.api.TextObject$1 -> com.sina.weibo.sdk.api.TextObject$1:
    com.sina.weibo.sdk.api.TextObject createFromParcel(android.os.Parcel) -> createFromParcel
    com.sina.weibo.sdk.api.TextObject[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.VideoObject -> com.sina.weibo.sdk.api.VideoObject:
    java.lang.String EXTRA_KEY_DEFAULTTEXT -> EXTRA_KEY_DEFAULTTEXT
    java.lang.String defaultText -> defaultText
    java.lang.String h5Url -> h5Url
    java.lang.String dataUrl -> dataUrl
    java.lang.String dataHdUrl -> dataHdUrl
    int duration -> duration
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> checkArgs
    int getObjType() -> getObjType
    com.sina.weibo.sdk.api.BaseMediaObject toExtraMediaObject(java.lang.String) -> toExtraMediaObject
    java.lang.String toExtraMediaString() -> toExtraMediaString
com.sina.weibo.sdk.api.VideoObject$1 -> com.sina.weibo.sdk.api.VideoObject$1:
    com.sina.weibo.sdk.api.VideoObject createFromParcel(android.os.Parcel) -> createFromParcel
    com.sina.weibo.sdk.api.VideoObject[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.VoiceObject -> com.sina.weibo.sdk.api.VoiceObject:
    java.lang.String EXTRA_KEY_DEFAULTTEXT -> EXTRA_KEY_DEFAULTTEXT
    java.lang.String defaultText -> defaultText
    java.lang.String h5Url -> h5Url
    java.lang.String dataUrl -> dataUrl
    java.lang.String dataHdUrl -> dataHdUrl
    int duration -> duration
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> checkArgs
    int getObjType() -> getObjType
    com.sina.weibo.sdk.api.BaseMediaObject toExtraMediaObject(java.lang.String) -> toExtraMediaObject
    java.lang.String toExtraMediaString() -> toExtraMediaString
com.sina.weibo.sdk.api.VoiceObject$1 -> com.sina.weibo.sdk.api.VoiceObject$1:
    com.sina.weibo.sdk.api.VoiceObject createFromParcel(android.os.Parcel) -> createFromParcel
    com.sina.weibo.sdk.api.VoiceObject[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.WebpageObject -> com.sina.weibo.sdk.api.WebpageObject:
    java.lang.String EXTRA_KEY_DEFAULTTEXT -> EXTRA_KEY_DEFAULTTEXT
    java.lang.String defaultText -> defaultText
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> checkArgs
    int getObjType() -> getObjType
    com.sina.weibo.sdk.api.BaseMediaObject toExtraMediaObject(java.lang.String) -> toExtraMediaObject
    java.lang.String toExtraMediaString() -> toExtraMediaString
com.sina.weibo.sdk.api.WebpageObject$1 -> com.sina.weibo.sdk.api.WebpageObject$1:
    com.sina.weibo.sdk.api.WebpageObject createFromParcel(android.os.Parcel) -> createFromParcel
    com.sina.weibo.sdk.api.WebpageObject[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.WeiboMessage -> com.sina.weibo.sdk.api.WeiboMessage:
    com.sina.weibo.sdk.api.BaseMediaObject mediaObject -> mediaObject
    android.os.Bundle toBundle(android.os.Bundle) -> toBundle
    com.sina.weibo.sdk.api.WeiboMessage toObject(android.os.Bundle) -> toObject
    boolean checkArgs() -> checkArgs
com.sina.weibo.sdk.api.WeiboMultiMessage -> com.sina.weibo.sdk.api.WeiboMultiMessage:
    java.lang.String TAG -> TAG
    com.sina.weibo.sdk.api.TextObject textObject -> textObject
    com.sina.weibo.sdk.api.ImageObject imageObject -> imageObject
    com.sina.weibo.sdk.api.BaseMediaObject mediaObject -> mediaObject
    android.os.Bundle toBundle(android.os.Bundle) -> toBundle
    com.sina.weibo.sdk.api.WeiboMultiMessage toObject(android.os.Bundle) -> toObject
    boolean checkArgs() -> checkArgs
com.sina.weibo.sdk.api.share.ApiUtils -> com.sina.weibo.sdk.api.share.ApiUtils:
    java.lang.String TAG -> TAG
    int BUILD_INT -> BUILD_INT
    int BUILD_INT_VER_2_2 -> BUILD_INT_VER_2_2
    int BUILD_INT_VER_2_3 -> BUILD_INT_VER_2_3
    int BUILD_INT_VER_2_5 -> BUILD_INT_VER_2_5
    java.lang.String WEIBO_IDENTITY_ACTION -> WEIBO_IDENTITY_ACTION
    android.net.Uri WEIBO_NAME_URI -> WEIBO_NAME_URI
    java.lang.String WEIBO_SIGN -> WEIBO_SIGN
    boolean isWeiboAppSupportAPI(int) -> isWeiboAppSupportAPI
    com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo queryWeiboInfoByPackage(android.content.Context,java.lang.String) -> queryWeiboInfoByPackage
    com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo queryWeiboInfo(android.content.Context) -> queryWeiboInfo
    boolean validateWeiboSign(android.content.Context,java.lang.String) -> validateWeiboSign
    boolean containSign(android.content.pm.Signature[],java.lang.String) -> containSign
    com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo queryWeiboInfoByProvider(android.content.Context) -> queryWeiboInfoByProvider
    com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo queryWeiboInfoByFile(android.content.Context) -> queryWeiboInfoByFile
    com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo queryWeiboInfoByAsset(android.content.Context,java.lang.String) -> queryWeiboInfoByAsset
com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo -> com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo:
    java.lang.String packageName -> packageName
    int supportApi -> supportApi
    java.lang.String toString() -> toString
com.sina.weibo.sdk.api.share.Base -> com.sina.weibo.sdk.api.share.Base:
    java.lang.String transaction -> transaction
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    int getType() -> getType
    boolean check(android.content.Context,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> check
com.sina.weibo.sdk.api.share.BaseRequest -> com.sina.weibo.sdk.api.share.BaseRequest:
    java.lang.String packageName -> packageName
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
com.sina.weibo.sdk.api.share.BaseResponse -> com.sina.weibo.sdk.api.share.BaseResponse:
    int errCode -> errCode
    java.lang.String errMsg -> errMsg
    java.lang.String reqPackageName -> reqPackageName
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
com.sina.weibo.sdk.api.share.IVersionCheckHandler -> com.sina.weibo.sdk.api.share.IVersionCheckHandler:
    boolean check(android.content.Context,com.sina.weibo.sdk.api.WeiboMessage) -> check
    boolean check(android.content.Context,com.sina.weibo.sdk.api.WeiboMultiMessage) -> check
com.sina.weibo.sdk.api.share.IWeiboDownloadListener -> com.sina.weibo.sdk.api.share.IWeiboDownloadListener:
    void onCancel() -> onCancel
com.sina.weibo.sdk.api.share.IWeiboHandler -> com.sina.weibo.sdk.api.share.IWeiboHandler:
com.sina.weibo.sdk.api.share.IWeiboHandler$Request -> com.sina.weibo.sdk.api.share.IWeiboHandler$Request:
    void onRequest(com.sina.weibo.sdk.api.share.BaseRequest) -> onRequest
com.sina.weibo.sdk.api.share.IWeiboHandler$Response -> com.sina.weibo.sdk.api.share.IWeiboHandler$Response:
    void onResponse(com.sina.weibo.sdk.api.share.BaseResponse) -> onResponse
com.sina.weibo.sdk.api.share.IWeiboShareAPI -> com.sina.weibo.sdk.api.share.IWeiboShareAPI:
    boolean isWeiboAppInstalled() -> isWeiboAppInstalled
    boolean isWeiboAppSupportAPI() -> isWeiboAppSupportAPI
    int getWeiboAppSupportAPI() -> getWeiboAppSupportAPI
    boolean registerApp() -> registerApp
    boolean handleWeiboResponse(android.content.Intent,com.sina.weibo.sdk.api.share.IWeiboHandler$Response) -> handleWeiboResponse
    boolean handleWeiboRequest(android.content.Intent,com.sina.weibo.sdk.api.share.IWeiboHandler$Request) -> handleWeiboRequest
    boolean launchWeibo() -> launchWeibo
    boolean sendRequest(com.sina.weibo.sdk.api.share.BaseRequest) -> sendRequest
    boolean sendResponse(com.sina.weibo.sdk.api.share.BaseResponse) -> sendResponse
    void registerWeiboDownloadListener(com.sina.weibo.sdk.api.share.IWeiboDownloadListener) -> registerWeiboDownloadListener
    boolean checkEnvironment(boolean) -> checkEnvironment
com.sina.weibo.sdk.api.share.ProvideMessageForWeiboRequest -> com.sina.weibo.sdk.api.share.ProvideMessageForWeiboRequest:
    int getType() -> getType
    boolean check(android.content.Context,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> check
com.sina.weibo.sdk.api.share.ProvideMessageForWeiboResponse -> com.sina.weibo.sdk.api.share.ProvideMessageForWeiboResponse:
    com.sina.weibo.sdk.api.WeiboMessage message -> message
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean check(android.content.Context,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> check
com.sina.weibo.sdk.api.share.ProvideMultiMessageForWeiboResponse -> com.sina.weibo.sdk.api.share.ProvideMultiMessageForWeiboResponse:
    com.sina.weibo.sdk.api.WeiboMultiMessage multiMessage -> multiMessage
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean check(android.content.Context,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> check
com.sina.weibo.sdk.api.share.SendMessageToWeiboRequest -> com.sina.weibo.sdk.api.share.SendMessageToWeiboRequest:
    com.sina.weibo.sdk.api.WeiboMessage message -> message
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean check(android.content.Context,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> check
com.sina.weibo.sdk.api.share.SendMessageToWeiboResponse -> com.sina.weibo.sdk.api.share.SendMessageToWeiboResponse:
    int getType() -> getType
    boolean check(android.content.Context,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> check
com.sina.weibo.sdk.api.share.SendMultiMessageToWeiboRequest -> com.sina.weibo.sdk.api.share.SendMultiMessageToWeiboRequest:
    com.sina.weibo.sdk.api.WeiboMultiMessage multiMessage -> multiMessage
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean check(android.content.Context,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> check
com.sina.weibo.sdk.api.share.VersionCheckHandler -> com.sina.weibo.sdk.api.share.VersionCheckHandler:
    java.lang.String TAG -> TAG
    java.lang.String mPackageName -> mPackageName
    void setPackageName(java.lang.String) -> setPackageName
    boolean check(android.content.Context,com.sina.weibo.sdk.api.WeiboMessage) -> check
    boolean check(android.content.Context,com.sina.weibo.sdk.api.WeiboMultiMessage) -> check
com.sina.weibo.sdk.api.share.WeiboDownloader -> com.sina.weibo.sdk.api.share.WeiboDownloader:
    java.lang.String TITLE_CHINESS -> TITLE_CHINESS
    java.lang.String PROMPT_CHINESS -> PROMPT_CHINESS
    java.lang.String OK_CHINESS -> OK_CHINESS
    java.lang.String CANCEL_CHINESS -> CANCEL_CHINESS
    java.lang.String TITLE_ENGLISH -> TITLE_ENGLISH
    java.lang.String PROMPT_ENGLISH -> PROMPT_ENGLISH
    java.lang.String OK_ENGLISH -> OK_ENGLISH
    java.lang.String CANCEL_ENGLISH -> CANCEL_ENGLISH
    android.app.Dialog createDownloadConfirmDialog(android.content.Context,com.sina.weibo.sdk.api.share.IWeiboDownloadListener) -> createDownloadConfirmDialog
    void downloadWeibo(android.content.Context) -> downloadWeibo
    void access$0(android.content.Context) -> access$0
com.sina.weibo.sdk.api.share.WeiboDownloader$1 -> com.sina.weibo.sdk.api.share.WeiboDownloader$1:
    android.content.Context val$context -> val$context
    void onClick(android.content.DialogInterface,int) -> onClick
com.sina.weibo.sdk.api.share.WeiboDownloader$2 -> com.sina.weibo.sdk.api.share.WeiboDownloader$2:
    com.sina.weibo.sdk.api.share.IWeiboDownloadListener val$listener -> val$listener
    void onClick(android.content.DialogInterface,int) -> onClick
com.sina.weibo.sdk.api.share.WeiboShareAPIImpl -> com.sina.weibo.sdk.api.share.WeiboShareAPIImpl:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    java.lang.String mAppKey -> mAppKey
    com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo mWeiboInfo -> mWeiboInfo
    boolean mNeedDownloadWeibo -> mNeedDownloadWeibo
    com.sina.weibo.sdk.api.share.IWeiboDownloadListener mDownloadListener -> mDownloadListener
    android.app.Dialog mDownloadConfirmDialog -> mDownloadConfirmDialog
    boolean isWeiboAppInstalled() -> isWeiboAppInstalled
    boolean isWeiboAppSupportAPI() -> isWeiboAppSupportAPI
    int getWeiboAppSupportAPI() -> getWeiboAppSupportAPI
    boolean registerApp() -> registerApp
    boolean handleWeiboResponse(android.content.Intent,com.sina.weibo.sdk.api.share.IWeiboHandler$Response) -> handleWeiboResponse
    boolean handleWeiboRequest(android.content.Intent,com.sina.weibo.sdk.api.share.IWeiboHandler$Request) -> handleWeiboRequest
    boolean launchWeibo() -> launchWeibo
    boolean sendRequest(com.sina.weibo.sdk.api.share.BaseRequest) -> sendRequest
    boolean sendResponse(com.sina.weibo.sdk.api.share.BaseResponse) -> sendResponse
    void registerWeiboDownloadListener(com.sina.weibo.sdk.api.share.IWeiboDownloadListener) -> registerWeiboDownloadListener
    boolean checkEnvironment(boolean) -> checkEnvironment
    boolean launchWeiboActivity(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle) -> launchWeiboActivity
    void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle) -> sendBroadcast
com.sina.weibo.sdk.api.share.WeiboShareSDK -> com.sina.weibo.sdk.api.share.WeiboShareSDK:
    com.sina.weibo.sdk.api.share.IWeiboShareAPI createWeiboAPI(android.content.Context,java.lang.String,boolean) -> createWeiboAPI
    com.sina.weibo.sdk.api.share.IWeiboShareAPI createWeiboAPI(android.content.Context,java.lang.String) -> createWeiboAPI
com.sina.weibo.sdk.auth.Oauth2AccessToken -> com.sina.weibo.sdk.auth.Oauth2AccessToken:
    java.lang.String KEY_UID -> KEY_UID
    java.lang.String KEY_ACCESS_TOKEN -> KEY_ACCESS_TOKEN
    java.lang.String KEY_EXPIRES_IN -> KEY_EXPIRES_IN
    java.lang.String KEY_REFRESH_TOKEN -> KEY_REFRESH_TOKEN
    java.lang.String mUid -> mUid
    java.lang.String mAccessToken -> mAccessToken
    java.lang.String mRefreshToken -> mRefreshToken
    long mExpiresTime -> mExpiresTime
    com.sina.weibo.sdk.auth.Oauth2AccessToken parseAccessToken(java.lang.String) -> parseAccessToken
    com.sina.weibo.sdk.auth.Oauth2AccessToken parseAccessToken(android.os.Bundle) -> parseAccessToken
    boolean isSessionValid() -> isSessionValid
    android.os.Bundle toBundle() -> toBundle
    java.lang.String toString() -> toString
    java.lang.String getUid() -> getUid
    void setUid(java.lang.String) -> setUid
    java.lang.String getToken() -> getToken
    void setToken(java.lang.String) -> setToken
    java.lang.String getRefreshToken() -> getRefreshToken
    void setRefreshToken(java.lang.String) -> setRefreshToken
    long getExpiresTime() -> getExpiresTime
    void setExpiresTime(long) -> setExpiresTime
    void setExpiresIn(java.lang.String) -> setExpiresIn
    java.lang.String getString(android.os.Bundle,java.lang.String,java.lang.String) -> getString
com.sina.weibo.sdk.auth.WeiboAuth -> com.sina.weibo.sdk.auth.WeiboAuth:
    java.lang.String TAG -> TAG
    java.lang.String OAUTH2_BASE_URL -> OAUTH2_BASE_URL
    int OBTAIN_AUTH_CODE -> OBTAIN_AUTH_CODE
    int OBTAIN_AUTH_TOKEN -> OBTAIN_AUTH_TOKEN
    android.content.Context mContext -> mContext
    com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo mAuthInfo -> mAuthInfo
    com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo getAuthInfo() -> getAuthInfo
    void setAuthInfo(com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo) -> setAuthInfo
    void anthorize(com.sina.weibo.sdk.auth.WeiboAuthListener) -> anthorize
    void authorize(com.sina.weibo.sdk.auth.WeiboAuthListener,int) -> authorize
    void startDialog(com.sina.weibo.sdk.auth.WeiboAuthListener,int) -> startDialog
com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo -> com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo:
    java.lang.String mAppKey -> mAppKey
    java.lang.String mRedirectUrl -> mRedirectUrl
    java.lang.String mScope -> mScope
    java.lang.String mPackageName -> mPackageName
    java.lang.String mKeyHash -> mKeyHash
    android.os.Bundle mBundle -> mBundle
    java.lang.String getAppKey() -> getAppKey
    java.lang.String getRedirectUrl() -> getRedirectUrl
    java.lang.String getScope() -> getScope
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getKeyHash() -> getKeyHash
    android.os.Bundle getAuthBundle() -> getAuthBundle
    void initAuthBundle() -> initAuthBundle
    java.lang.String access$0(com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo) -> access$0
    java.lang.String access$1(com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo) -> access$1
    java.lang.String access$2(com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo) -> access$2
    java.lang.String access$3(com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo) -> access$3
    java.lang.String access$4(com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo) -> access$4
com.sina.weibo.sdk.auth.WeiboAuthListener -> com.sina.weibo.sdk.auth.WeiboAuthListener:
    void onComplete(android.os.Bundle) -> onComplete
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> onWeiboException
    void onCancel() -> onCancel
com.sina.weibo.sdk.auth.WeiboDialog -> com.sina.weibo.sdk.auth.WeiboDialog:
    java.lang.String TAG -> TAG
    int WEBVIEW_CONTAINER_MARGIN_TOP -> WEBVIEW_CONTAINER_MARGIN_TOP
    int WEBVIEW_MARGIN -> WEBVIEW_MARGIN
    android.content.Context mContext -> mContext
    android.widget.RelativeLayout mRootContainer -> mRootContainer
    android.widget.RelativeLayout mWebViewContainer -> mWebViewContainer
    android.app.ProgressDialog mLoadingDlg -> mLoadingDlg
    android.webkit.WebView mWebView -> mWebView
    boolean mIsDetached -> mIsDetached
    java.lang.String mAuthUrl -> mAuthUrl
    com.sina.weibo.sdk.auth.WeiboAuthListener mListener -> mListener
    com.sina.weibo.sdk.auth.WeiboAuth mWeibo -> mWeibo
    int theme -> theme
    void onBackPressed() -> onBackPressed
    void dismiss() -> dismiss
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onCreate(android.os.Bundle) -> onCreate
    void initWindow() -> initWindow
    void initLoadingDlg() -> initLoadingDlg
    void initWebView() -> initWebView
    void initCloseButton() -> initCloseButton
    void handleRedirectUrl(java.lang.String) -> handleRedirectUrl
    com.sina.weibo.sdk.auth.WeiboAuthListener access$0(com.sina.weibo.sdk.auth.WeiboDialog) -> access$0
    com.sina.weibo.sdk.auth.WeiboAuth access$1(com.sina.weibo.sdk.auth.WeiboDialog) -> access$1
    void access$2(com.sina.weibo.sdk.auth.WeiboDialog,java.lang.String) -> access$2
    boolean access$3(com.sina.weibo.sdk.auth.WeiboDialog) -> access$3
    android.app.ProgressDialog access$4(com.sina.weibo.sdk.auth.WeiboDialog) -> access$4
    android.webkit.WebView access$5(com.sina.weibo.sdk.auth.WeiboDialog) -> access$5
com.sina.weibo.sdk.auth.WeiboDialog$1 -> com.sina.weibo.sdk.auth.WeiboDialog$1:
    com.sina.weibo.sdk.auth.WeiboDialog this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.sina.weibo.sdk.auth.WeiboDialog$WeiboWebViewClient -> com.sina.weibo.sdk.auth.WeiboDialog$WeiboWebViewClient:
    boolean isCallBacked -> isCallBacked
    com.sina.weibo.sdk.auth.WeiboDialog this$0 -> this$0
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.sina.weibo.sdk.auth.sso.SsoHandler -> com.sina.weibo.sdk.auth.sso.SsoHandler:
    java.lang.String TAG -> TAG
    java.lang.String DEFAULT_SINA_WEIBO_PACKAGE_NAME -> DEFAULT_SINA_WEIBO_PACKAGE_NAME
    java.lang.String DEFAULT_WEIBO_REMOTE_SSO_SERVICE_NAME -> DEFAULT_WEIBO_REMOTE_SSO_SERVICE_NAME
    int REQUEST_CODE_SSO_AUTH -> REQUEST_CODE_SSO_AUTH
    com.sina.weibo.sdk.auth.WeiboAuth mWeiboAuth -> mWeiboAuth
    com.sina.weibo.sdk.auth.WeiboAuthListener mAuthListener -> mAuthListener
    android.app.Activity mAuthActivity -> mAuthActivity
    int mSSOAuthRequestCode -> mSSOAuthRequestCode
    android.content.ServiceConnection mConnection -> mConnection
    void authorize(com.sina.weibo.sdk.auth.WeiboAuthListener) -> authorize
    void authorize(com.sina.weibo.sdk.auth.WeiboAuthListener,java.lang.String) -> authorize
    void authorize(int,com.sina.weibo.sdk.auth.WeiboAuthListener,java.lang.String) -> authorize
    void authorizeCallBack(int,int,android.content.Intent) -> authorizeCallBack
    android.content.ComponentName isServiceExisted(android.content.Context,java.lang.String) -> isServiceExisted
    boolean bindRemoteSSOService(android.content.Context,java.lang.String) -> bindRemoteSSOService
    boolean startSingleSignOn(java.lang.String,java.lang.String) -> startSingleSignOn
    com.sina.weibo.sdk.auth.WeiboAuth access$0(com.sina.weibo.sdk.auth.sso.SsoHandler) -> access$0
    com.sina.weibo.sdk.auth.WeiboAuthListener access$1(com.sina.weibo.sdk.auth.sso.SsoHandler) -> access$1
    android.app.Activity access$2(com.sina.weibo.sdk.auth.sso.SsoHandler) -> access$2
    android.content.ServiceConnection access$3(com.sina.weibo.sdk.auth.sso.SsoHandler) -> access$3
    boolean access$4(com.sina.weibo.sdk.auth.sso.SsoHandler,java.lang.String,java.lang.String) -> access$4
com.sina.weibo.sdk.auth.sso.SsoHandler$1 -> com.sina.weibo.sdk.auth.sso.SsoHandler$1:
    com.sina.weibo.sdk.auth.sso.SsoHandler this$0 -> this$0
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
com.sina.weibo.sdk.codestyle.CodingRuler -> com.sina.weibo.sdk.codestyle.CodingRuler:
    java.lang.String ACTION_MAIN -> ACTION_MAIN
    int MSG_AUTH_NONE -> MSG_AUTH_NONE
    int MSG_AUTH_SUCCESS -> MSG_AUTH_SUCCESS
    int MSG_AUTH_FAILED -> MSG_AUTH_FAILED
    java.lang.Object mObject0 -> mObject0
    java.lang.Object mObject1 -> mObject1
    java.lang.Object mObject2 -> mObject2
    java.lang.Object mObject3 -> mObject3
    java.lang.Object mObject4 -> mObject4
    void doSomething(int,float,java.lang.String) -> doSomething
    void doSomething() -> doSomething
    void doSomethingInternal(int,float) -> doSomethingInternal
    void conditionFun() -> conditionFun
    void switchFun() -> switchFun
    void circulationFun() -> circulationFun
    void exceptionFun() -> exceptionFun
    void otherFun() -> otherFun
com.sina.weibo.sdk.codestyle.SampleCode -> com.sina.weibo.sdk.codestyle.SampleCode:
    java.lang.String ACTION_MAIN -> ACTION_MAIN
    int MSG_AUTH_NONE -> MSG_AUTH_NONE
    int MSG_AUTH_SUCCESS -> MSG_AUTH_SUCCESS
    int MSG_AUTH_FAILED -> MSG_AUTH_FAILED
    java.lang.Object mObject0 -> mObject0
    java.lang.Object mObject1 -> mObject1
    java.lang.Object mObject2 -> mObject2
    java.lang.Object mObject3 -> mObject3
    java.lang.Object mObject4 -> mObject4
    void doSomething(int,float,java.lang.String) -> doSomething
    void doSomething() -> doSomething
    void doSomethingInternal(int,float) -> doSomethingInternal
com.sina.weibo.sdk.constant.WBAuthErrorCode -> com.sina.weibo.sdk.constant.WBAuthErrorCode:
    int redirect_uri_mismatch -> redirect_uri_mismatch
    int invalid_request -> invalid_request
    int invalid_client -> invalid_client
    int invalid_grant -> invalid_grant
    int unauthorized_client -> unauthorized_client
    int expired_token -> expired_token
    int unsupported_grant_type -> unsupported_grant_type
    int unsupported_response_type -> unsupported_response_type
    int access_denied -> access_denied
    int temporarily_unavailable -> temporarily_unavailable
    int appkey_permission_denied -> appkey_permission_denied
com.sina.weibo.sdk.constant.WBConstants -> com.sina.weibo.sdk.constant.WBConstants:
    java.lang.String AUTH_PARAMS_CLIENT_ID -> AUTH_PARAMS_CLIENT_ID
    java.lang.String AUTH_PARAMS_RESPONSE_TYPE -> AUTH_PARAMS_RESPONSE_TYPE
    java.lang.String AUTH_PARAMS_REDIRECT_URL -> AUTH_PARAMS_REDIRECT_URL
    java.lang.String AUTH_PARAMS_DISPLAY -> AUTH_PARAMS_DISPLAY
    java.lang.String AUTH_PARAMS_SCOPE -> AUTH_PARAMS_SCOPE
    java.lang.String AUTH_PARAMS_PACKAGE_NAME -> AUTH_PARAMS_PACKAGE_NAME
    java.lang.String AUTH_PARAMS_KEY_HASH -> AUTH_PARAMS_KEY_HASH
    java.lang.String AUTH_PARAMS_CLIENT_SECRET -> AUTH_PARAMS_CLIENT_SECRET
    java.lang.String AUTH_PARAMS_GRANT_TYPE -> AUTH_PARAMS_GRANT_TYPE
    java.lang.String AUTH_PARAMS_CODE -> AUTH_PARAMS_CODE
    java.lang.String AUTH_ACCESS_TOKEN -> AUTH_ACCESS_TOKEN
    java.lang.String SSO_APP_KEY -> SSO_APP_KEY
    java.lang.String SSO_REDIRECT_URL -> SSO_REDIRECT_URL
    java.lang.String SSO_USER_SCOPE -> SSO_USER_SCOPE
    java.lang.String SSO_PACKAGE_NAME -> SSO_PACKAGE_NAME
    java.lang.String SSO_KEY_HASH -> SSO_KEY_HASH
    int WEIBO_SDK_VERSION -> WEIBO_SDK_VERSION
    java.lang.String WEIBO_SDK_VERSION_NAME -> WEIBO_SDK_VERSION_NAME
    java.lang.String ACTION_WEIBO_REGISTER -> ACTION_WEIBO_REGISTER
    java.lang.String ACTION_WEIBO_RESPONSE -> ACTION_WEIBO_RESPONSE
    java.lang.String ACTION_WEIBO_SDK_PERMISSION -> ACTION_WEIBO_SDK_PERMISSION
    java.lang.String ACTIVITY_WEIBO -> ACTIVITY_WEIBO
    java.lang.String ACTIVITY_REQ_SDK -> ACTIVITY_REQ_SDK
    java.lang.String ACTIVITY_RESP_SDK -> ACTIVITY_RESP_SDK
    java.lang.String ACTIVITY_WEIBO_PAY -> ACTIVITY_WEIBO_PAY
    java.lang.String ACTIVITY_WEIBO_PAY_REQ -> ACTIVITY_WEIBO_PAY_REQ
    int SDK_ACTIVITY_FOR_RESULT_CODE -> SDK_ACTIVITY_FOR_RESULT_CODE
    java.lang.String WEIBO_DOWNLOAD_URL -> WEIBO_DOWNLOAD_URL
    int COMMAND_TO_WEIBO -> COMMAND_TO_WEIBO
    int COMMAND_FROM_WEIBO -> COMMAND_FROM_WEIBO
    int COMMAND_SSO -> COMMAND_SSO
    int COMMAND_PAY -> COMMAND_PAY
    java.lang.String COMMAND_TYPE_KEY -> COMMAND_TYPE_KEY
    java.lang.String TRAN -> TRAN
    java.lang.String SIGN -> SIGN
    int WEIBO_FLAG_SDK -> WEIBO_FLAG_SDK
com.sina.weibo.sdk.constant.WBConstants$Base -> com.sina.weibo.sdk.constant.WBConstants$Base:
    java.lang.String SDK_VER -> SDK_VER
    java.lang.String APP_PKG -> APP_PKG
    java.lang.String APP_KEY -> APP_KEY
com.sina.weibo.sdk.constant.WBConstants$ErrorCode -> com.sina.weibo.sdk.constant.WBConstants$ErrorCode:
    int ERR_OK -> ERR_OK
    int ERR_CANCEL -> ERR_CANCEL
    int ERR_FAIL -> ERR_FAIL
com.sina.weibo.sdk.constant.WBConstants$Media -> com.sina.weibo.sdk.constant.WBConstants$Media:
    java.lang.String SDK_VER -> SDK_VER
    java.lang.String TITLE -> TITLE
    java.lang.String DESC -> DESC
    java.lang.String THUMB_DATA -> THUMB_DATA
    java.lang.String URL -> URL
com.sina.weibo.sdk.constant.WBConstants$Msg -> com.sina.weibo.sdk.constant.WBConstants$Msg:
    java.lang.String TEXT -> TEXT
    java.lang.String IMAGE -> IMAGE
    java.lang.String MEDIA -> MEDIA
    java.lang.String TEXT_EXTRA -> TEXT_EXTRA
    java.lang.String IMAGE_EXTRA -> IMAGE_EXTRA
    java.lang.String MEDIA_EXTRA -> MEDIA_EXTRA
    java.lang.String IDENTIFY -> IDENTIFY
com.sina.weibo.sdk.constant.WBConstants$Response -> com.sina.weibo.sdk.constant.WBConstants$Response:
    java.lang.String ERRCODE -> ERRCODE
    java.lang.String ERRMSG -> ERRMSG
com.sina.weibo.sdk.constant.WBConstants$SDK -> com.sina.weibo.sdk.constant.WBConstants$SDK:
    java.lang.String FLAG -> FLAG
com.sina.weibo.sdk.exception.WeiboAuthException -> com.sina.weibo.sdk.exception.WeiboAuthException:
    long serialVersionUID -> serialVersionUID
    java.lang.String DEFAULT_AUTH_ERROR_CODE -> DEFAULT_AUTH_ERROR_CODE
    java.lang.String DEFAULT_AUTH_ERROR_DESC -> DEFAULT_AUTH_ERROR_DESC
    java.lang.String DEFAULT_AUTH_ERROR_TYPE -> DEFAULT_AUTH_ERROR_TYPE
    java.lang.String mErrorType -> mErrorType
    java.lang.String mErrorCode -> mErrorCode
    java.lang.String getErrorType() -> getErrorType
    java.lang.String getErrorCode() -> getErrorCode
com.sina.weibo.sdk.exception.WeiboDialogException -> com.sina.weibo.sdk.exception.WeiboDialogException:
    long serialVersionUID -> serialVersionUID
    int mErrorCode -> mErrorCode
    java.lang.String mFailingUrl -> mFailingUrl
    int getErrorCode() -> getErrorCode
    java.lang.String getFailingUrl() -> getFailingUrl
com.sina.weibo.sdk.exception.WeiboException -> com.sina.weibo.sdk.exception.WeiboException:
    long serialVersionUID -> serialVersionUID
com.sina.weibo.sdk.exception.WeiboHttpException -> com.sina.weibo.sdk.exception.WeiboHttpException:
    long serialVersionUID -> serialVersionUID
    int mStatusCode -> mStatusCode
    int getStatusCode() -> getStatusCode
com.sina.weibo.sdk.exception.WeiboShareException -> com.sina.weibo.sdk.exception.WeiboShareException:
    long serialVersionUID -> serialVersionUID
com.sina.weibo.sdk.net.AsyncWeiboRunner -> com.sina.weibo.sdk.net.AsyncWeiboRunner:
    void requestByThread(java.lang.String,com.sina.weibo.sdk.net.WeiboParameters,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> requestByThread
    java.lang.String request(java.lang.String,com.sina.weibo.sdk.net.WeiboParameters,java.lang.String) -> request
    void requestAsync(java.lang.String,com.sina.weibo.sdk.net.WeiboParameters,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> requestAsync
com.sina.weibo.sdk.net.AsyncWeiboRunner$1 -> com.sina.weibo.sdk.net.AsyncWeiboRunner$1:
    java.lang.String val$url -> val$url
    java.lang.String val$httpMethod -> val$httpMethod
    com.sina.weibo.sdk.net.WeiboParameters val$params -> val$params
    com.sina.weibo.sdk.net.RequestListener val$listener -> val$listener
    void run() -> run
com.sina.weibo.sdk.net.AsyncWeiboRunner$AsyncTaskResult -> com.sina.weibo.sdk.net.AsyncWeiboRunner$AsyncTaskResult:
    java.lang.Object result -> result
    com.sina.weibo.sdk.exception.WeiboException error -> error
    java.lang.Object getResult() -> getResult
    com.sina.weibo.sdk.exception.WeiboException getError() -> getError
com.sina.weibo.sdk.net.AsyncWeiboRunner$RequestRunner -> com.sina.weibo.sdk.net.AsyncWeiboRunner$RequestRunner:
    java.lang.String mUrl -> mUrl
    com.sina.weibo.sdk.net.WeiboParameters mParams -> mParams
    java.lang.String mHttpMethod -> mHttpMethod
    com.sina.weibo.sdk.net.RequestListener mListener -> mListener
    com.sina.weibo.sdk.net.AsyncWeiboRunner$AsyncTaskResult doInBackground(java.lang.Void[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.sina.weibo.sdk.net.AsyncWeiboRunner$AsyncTaskResult) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.sina.weibo.sdk.net.HttpManager -> com.sina.weibo.sdk.net.HttpManager:
    java.lang.String BOUNDARY -> BOUNDARY
    java.lang.String MP_BOUNDARY -> MP_BOUNDARY
    java.lang.String END_MP_BOUNDARY -> END_MP_BOUNDARY
    java.lang.String MULTIPART_FORM_DATA -> MULTIPART_FORM_DATA
    java.lang.String HTTP_METHOD_POST -> HTTP_METHOD_POST
    java.lang.String HTTP_METHOD_GET -> HTTP_METHOD_GET
    int CONNECTION_TIMEOUT -> CONNECTION_TIMEOUT
    int SOCKET_TIMEOUT -> SOCKET_TIMEOUT
    int BUFFER_SIZE -> BUFFER_SIZE
    org.apache.http.conn.ssl.SSLSocketFactory sSSLSocketFactory -> sSSLSocketFactory
    java.lang.String openUrl(java.lang.String,java.lang.String,com.sina.weibo.sdk.net.WeiboParameters) -> openUrl
    org.apache.http.HttpResponse requestHttpExecute(java.lang.String,java.lang.String,com.sina.weibo.sdk.net.WeiboParameters) -> requestHttpExecute
    org.apache.http.client.HttpClient getNewHttpClient() -> getNewHttpClient
    void buildParams(java.io.OutputStream,com.sina.weibo.sdk.net.WeiboParameters) -> buildParams
    java.lang.String readRsponse(org.apache.http.HttpResponse) -> readRsponse
    java.lang.String getBoundry() -> getBoundry
    org.apache.http.conn.ssl.SSLSocketFactory getSSLSocketFactory() -> getSSLSocketFactory
com.sina.weibo.sdk.net.HttpManager$MySSLSocketFactory -> com.sina.weibo.sdk.net.HttpManager$MySSLSocketFactory:
    javax.net.ssl.SSLContext sslContext -> sslContext
    javax.net.ssl.TrustManager[] createTrustManagers(java.security.KeyStore) -> createTrustManagers
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
com.sina.weibo.sdk.net.NetStateManager -> com.sina.weibo.sdk.net.NetStateManager:
    android.content.Context mContext -> mContext
    com.sina.weibo.sdk.net.NetStateManager$NetState CUR_NETSTATE -> CUR_NETSTATE
    org.apache.http.HttpHost getAPN() -> getAPN
    void access$0(android.content.Context) -> access$0
com.sina.weibo.sdk.net.NetStateManager$NetState -> com.sina.weibo.sdk.net.NetStateManager$NetState:
    com.sina.weibo.sdk.net.NetStateManager$NetState Mobile -> Mobile
    com.sina.weibo.sdk.net.NetStateManager$NetState WIFI -> WIFI
    com.sina.weibo.sdk.net.NetStateManager$NetState NOWAY -> NOWAY
    com.sina.weibo.sdk.net.NetStateManager$NetState[] ENUM$VALUES -> ENUM$VALUES
    com.sina.weibo.sdk.net.NetStateManager$NetState[] values() -> values
    com.sina.weibo.sdk.net.NetStateManager$NetState valueOf(java.lang.String) -> valueOf
com.sina.weibo.sdk.net.NetStateManager$NetStateReceive -> com.sina.weibo.sdk.net.NetStateManager$NetStateReceive:
    com.sina.weibo.sdk.net.NetStateManager this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.sina.weibo.sdk.net.RequestListener -> com.sina.weibo.sdk.net.RequestListener:
    void onComplete(java.lang.String) -> onComplete
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> onWeiboException
com.sina.weibo.sdk.net.WeiboParameters -> com.sina.weibo.sdk.net.WeiboParameters:
    java.lang.String DEFAULT_CHARSET -> DEFAULT_CHARSET
    java.util.LinkedHashMap mParams -> mParams
    java.util.LinkedHashMap getParams() -> getParams
    void setParams(java.util.LinkedHashMap) -> setParams
    void add(java.lang.String,java.lang.String) -> add
    void add(java.lang.String,int) -> add
    void add(java.lang.String,long) -> add
    void add(java.lang.String,java.lang.Object) -> add
    void put(java.lang.String,java.lang.String) -> put
    void put(java.lang.String,int) -> put
    void put(java.lang.String,long) -> put
    void put(java.lang.String,android.graphics.Bitmap) -> put
    void put(java.lang.String,java.lang.Object) -> put
    java.lang.Object get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
    java.util.Set keySet() -> keySet
    boolean containsKey(java.lang.String) -> containsKey
    boolean containsValue(java.lang.String) -> containsValue
    int size() -> size
    java.lang.String encodeUrl() -> encodeUrl
    boolean hasBinaryData() -> hasBinaryData
com.sina.weibo.sdk.openapi.AbsOpenAPI -> com.sina.weibo.sdk.openapi.AbsOpenAPI:
    java.lang.String TAG -> TAG
    java.lang.String API_SERVER -> API_SERVER
    java.lang.String HTTPMETHOD_POST -> HTTPMETHOD_POST
    java.lang.String HTTPMETHOD_GET -> HTTPMETHOD_GET
    java.lang.String KEY_ACCESS_TOKEN -> KEY_ACCESS_TOKEN
    com.sina.weibo.sdk.auth.Oauth2AccessToken mAccessToken -> mAccessToken
    void requestAsync(java.lang.String,com.sina.weibo.sdk.net.WeiboParameters,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> requestAsync
    java.lang.String requestSync(java.lang.String,com.sina.weibo.sdk.net.WeiboParameters,java.lang.String) -> requestSync
com.sina.weibo.sdk.openapi.CommentsAPI -> com.sina.weibo.sdk.openapi.CommentsAPI:
    int AUTHOR_FILTER_ALL -> AUTHOR_FILTER_ALL
    int AUTHOR_FILTER_ATTENTIONS -> AUTHOR_FILTER_ATTENTIONS
    int AUTHOR_FILTER_STRANGER -> AUTHOR_FILTER_STRANGER
    int SRC_FILTER_ALL -> SRC_FILTER_ALL
    int SRC_FILTER_WEIBO -> SRC_FILTER_WEIBO
    int SRC_FILTER_WEIQUN -> SRC_FILTER_WEIQUN
    int READ_API_TO_ME -> READ_API_TO_ME
    int READ_API_BY_ME -> READ_API_BY_ME
    int READ_API_SHOW -> READ_API_SHOW
    int READ_API_TIMELINE -> READ_API_TIMELINE
    int READ_API_MENTIONS -> READ_API_MENTIONS
    int READ_API_SHOW_BATCH -> READ_API_SHOW_BATCH
    int WRITE_API_CREATE -> WRITE_API_CREATE
    int WRITE_API_DESTROY -> WRITE_API_DESTROY
    int WRITE_API_SDESTROY_BATCH -> WRITE_API_SDESTROY_BATCH
    int WRITE_API_REPLY -> WRITE_API_REPLY
    java.lang.String API_BASE_URL -> API_BASE_URL
    android.util.SparseArray sAPIList -> sAPIList
    void show(long,long,long,int,int,int,com.sina.weibo.sdk.net.RequestListener) -> show
    void byME(long,long,int,int,int,com.sina.weibo.sdk.net.RequestListener) -> byME
    void toME(long,long,int,int,int,int,com.sina.weibo.sdk.net.RequestListener) -> toME
    void timeline(long,long,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> timeline
    void mentions(long,long,int,int,int,int,com.sina.weibo.sdk.net.RequestListener) -> mentions
    void showBatch(long[],com.sina.weibo.sdk.net.RequestListener) -> showBatch
    void create(java.lang.String,long,boolean,com.sina.weibo.sdk.net.RequestListener) -> create
    void destroy(long,com.sina.weibo.sdk.net.RequestListener) -> destroy
    void destroyBatch(long[],com.sina.weibo.sdk.net.RequestListener) -> destroyBatch
    void reply(long,long,java.lang.String,boolean,boolean,com.sina.weibo.sdk.net.RequestListener) -> reply
    java.lang.String showSync(long,long,long,int,int,int) -> showSync
    java.lang.String byMESync(long,long,int,int,int) -> byMESync
    java.lang.String toMESync(long,long,int,int,int,int) -> toMESync
    java.lang.String timelineSync(long,long,int,int,boolean) -> timelineSync
    java.lang.String mentionsSync(long,long,int,int,int,int) -> mentionsSync
    java.lang.String showBatchSync(long[]) -> showBatchSync
    java.lang.String createSync(java.lang.String,long,boolean) -> createSync
    java.lang.String destroySync(long) -> destroySync
    java.lang.String destroyBatchSync(long[]) -> destroyBatchSync
    java.lang.String replySync(long,long,java.lang.String,boolean,boolean) -> replySync
    com.sina.weibo.sdk.net.WeiboParameters buildTimeLineParamsBase(long,long,int,int) -> buildTimeLineParamsBase
    com.sina.weibo.sdk.net.WeiboParameters buildShowOrDestoryBatchParams(long[]) -> buildShowOrDestoryBatchParams
    com.sina.weibo.sdk.net.WeiboParameters buildCreateParams(java.lang.String,long,boolean) -> buildCreateParams
    com.sina.weibo.sdk.net.WeiboParameters buildReplyParams(long,long,java.lang.String,boolean,boolean) -> buildReplyParams
com.sina.weibo.sdk.openapi.InviteAPI -> com.sina.weibo.sdk.openapi.InviteAPI:
    java.lang.String TAG -> TAG
    java.lang.String INVITE_URL -> INVITE_URL
    java.lang.String KEY_TEXT -> KEY_TEXT
    java.lang.String KEY_URL -> KEY_URL
    java.lang.String KEY_INVITE_LOGO -> KEY_INVITE_LOGO
    void sendInvite(java.lang.String,org.json.JSONObject,com.sina.weibo.sdk.net.RequestListener) -> sendInvite
com.sina.weibo.sdk.openapi.LogoutAPI -> com.sina.weibo.sdk.openapi.LogoutAPI:
    java.lang.String REVOKE_OAUTH_URL -> REVOKE_OAUTH_URL
    void logout(com.sina.weibo.sdk.net.RequestListener) -> logout
com.sina.weibo.sdk.openapi.StatusesAPI -> com.sina.weibo.sdk.openapi.StatusesAPI:
    int FEATURE_ALL -> FEATURE_ALL
    int FEATURE_ORIGINAL -> FEATURE_ORIGINAL
    int FEATURE_PICTURE -> FEATURE_PICTURE
    int FEATURE_VIDEO -> FEATURE_VIDEO
    int FEATURE_MUSICE -> FEATURE_MUSICE
    int AUTHOR_FILTER_ALL -> AUTHOR_FILTER_ALL
    int AUTHOR_FILTER_ATTENTIONS -> AUTHOR_FILTER_ATTENTIONS
    int AUTHOR_FILTER_STRANGER -> AUTHOR_FILTER_STRANGER
    int SRC_FILTER_ALL -> SRC_FILTER_ALL
    int SRC_FILTER_WEIBO -> SRC_FILTER_WEIBO
    int SRC_FILTER_WEIQUN -> SRC_FILTER_WEIQUN
    int TYPE_FILTER_ALL -> TYPE_FILTER_ALL
    int TYPE_FILTER_ORIGAL -> TYPE_FILTER_ORIGAL
    java.lang.String API_BASE_URL -> API_BASE_URL
    int READ_API_FRIENDS_TIMELINE -> READ_API_FRIENDS_TIMELINE
    int READ_API_MENTIONS -> READ_API_MENTIONS
    int WRITE_API_UPDATE -> WRITE_API_UPDATE
    int WRITE_API_REPOST -> WRITE_API_REPOST
    int WRITE_API_UPLOAD -> WRITE_API_UPLOAD
    int WRITE_API_UPLOAD_URL_TEXT -> WRITE_API_UPLOAD_URL_TEXT
    android.util.SparseArray sAPIList -> sAPIList
    void friendsTimeline(long,long,int,int,boolean,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> friendsTimeline
    void mentions(long,long,int,int,int,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> mentions
    void update(java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> update
    void upload(java.lang.String,android.graphics.Bitmap,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> upload
    void uploadUrlText(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> uploadUrlText
    java.lang.String friendsTimelineSync(long,long,int,int,boolean,int,boolean) -> friendsTimelineSync
    java.lang.String mentionsSync(long,long,int,int,int,int,int,boolean) -> mentionsSync
    java.lang.String updateSync(java.lang.String,java.lang.String,java.lang.String) -> updateSync
    java.lang.String uploadSync(java.lang.String,android.graphics.Bitmap,java.lang.String,java.lang.String) -> uploadSync
    java.lang.String uploadUrlTextSync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> uploadUrlTextSync
    com.sina.weibo.sdk.net.WeiboParameters buildTimeLineParamsBase(long,long,int,int,boolean,boolean,int) -> buildTimeLineParamsBase
    com.sina.weibo.sdk.net.WeiboParameters buildUpdateParams(java.lang.String,java.lang.String,java.lang.String) -> buildUpdateParams
    com.sina.weibo.sdk.net.WeiboParameters buildMentionsParams(long,long,int,int,int,int,int,boolean) -> buildMentionsParams
com.sina.weibo.sdk.openapi.UsersAPI -> com.sina.weibo.sdk.openapi.UsersAPI:
    int READ_USER -> READ_USER
    int READ_USER_BY_DOMAIN -> READ_USER_BY_DOMAIN
    int READ_USER_COUNT -> READ_USER_COUNT
    java.lang.String API_BASE_URL -> API_BASE_URL
    android.util.SparseArray sAPIList -> sAPIList
    void show(long,com.sina.weibo.sdk.net.RequestListener) -> show
    void show(java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> show
    void domainShow(java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> domainShow
    void counts(long[],com.sina.weibo.sdk.net.RequestListener) -> counts
    java.lang.String showSync(long) -> showSync
    java.lang.String showSync(java.lang.String) -> showSync
    java.lang.String domainShowSync(java.lang.String) -> domainShowSync
    java.lang.String countsSync(long[]) -> countsSync
    com.sina.weibo.sdk.net.WeiboParameters buildCountsParams(long[]) -> buildCountsParams
com.sina.weibo.sdk.openapi.legacy.AccountAPI -> com.sina.weibo.sdk.openapi.legacy.AccountAPI:
    int SCHOOL_TYPE_COLLEGE -> SCHOOL_TYPE_COLLEGE
    int SCHOOL_TYPE_SENIOR -> SCHOOL_TYPE_SENIOR
    int SCHOOL_TYPE_TECHNICAL -> SCHOOL_TYPE_TECHNICAL
    int SCHOOL_TYPE_JUNIOR -> SCHOOL_TYPE_JUNIOR
    int SCHOOL_TYPE_PRIMARY -> SCHOOL_TYPE_PRIMARY
    java.lang.String SERVER_URL_PRIX -> SERVER_URL_PRIX
    void getPrivacy(com.sina.weibo.sdk.net.RequestListener) -> getPrivacy
    void schoolList(int,int,int,int,com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL,java.lang.String,int,com.sina.weibo.sdk.net.RequestListener) -> schoolList
    void rateLimitStatus(com.sina.weibo.sdk.net.RequestListener) -> rateLimitStatus
    void getUid(com.sina.weibo.sdk.net.RequestListener) -> getUid
    void endSession(com.sina.weibo.sdk.net.RequestListener) -> endSession
com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL -> com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL:
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL A -> A
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL B -> B
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL C -> C
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL D -> D
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL E -> E
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL F -> F
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL G -> G
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL H -> H
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL I -> I
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL J -> J
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL K -> K
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL L -> L
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL M -> M
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL N -> N
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL O -> O
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL P -> P
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL Q -> Q
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL R -> R
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL S -> S
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL T -> T
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL U -> U
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL V -> V
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL W -> W
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL X -> X
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL Y -> Y
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL Z -> Z
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL[] ENUM$VALUES -> ENUM$VALUES
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL[] values() -> values
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL valueOf(java.lang.String) -> valueOf
com.sina.weibo.sdk.openapi.legacy.ActivityInvokeAPI -> com.sina.weibo.sdk.openapi.legacy.ActivityInvokeAPI:
    void openSendWeibo(android.app.Activity,java.lang.String) -> openSendWeibo
    void openSendWeibo(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> openSendWeibo
    void openNearbyPeople(android.app.Activity) -> openNearbyPeople
    void openNearbyWeibo(android.app.Activity) -> openNearbyWeibo
    void openUserInfoByNickName(android.app.Activity,java.lang.String) -> openUserInfoByNickName
    void openUserInfoByUid(android.app.Activity,java.lang.String) -> openUserInfoByUid
    void openWeiboBrowser(android.app.Activity,java.lang.String) -> openWeiboBrowser
    void openWeibo(android.app.Activity) -> openWeibo
    void openShake(android.app.Activity) -> openShake
    void openContact(android.app.Activity) -> openContact
    void openUserTrends(android.app.Activity,java.lang.String) -> openUserTrends
    void openMessageListByUid(android.app.Activity,java.lang.String) -> openMessageListByUid
    void openMessageListByNickName(android.app.Activity,java.lang.String) -> openMessageListByNickName
    void openDetail(android.app.Activity,java.lang.String) -> openDetail
com.sina.weibo.sdk.openapi.legacy.CommonAPI -> com.sina.weibo.sdk.openapi.legacy.CommonAPI:
    java.lang.String LANGUAGE_ZH_CN -> LANGUAGE_ZH_CN
    java.lang.String LANGUAGE_ZH_TW -> LANGUAGE_ZH_TW
    java.lang.String LANGUAGE_EN -> LANGUAGE_EN
    java.lang.String SERVER_URL_PRIX -> SERVER_URL_PRIX
    void getCity(java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> getCity
    void getCountry(com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> getCountry
    void getTimezone(java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> getTimezone
com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL -> com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL:
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL a -> a
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL b -> b
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL c -> c
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL d -> d
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL e -> e
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL f -> f
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL g -> g
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL h -> h
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL i -> i
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL j -> j
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL k -> k
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL l -> l
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL m -> m
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL n -> n
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL o -> o
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL p -> p
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL q -> q
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL r -> r
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL s -> s
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL t -> t
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL u -> u
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL v -> v
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL w -> w
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL x -> x
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL y -> y
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL z -> z
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL[] ENUM$VALUES -> ENUM$VALUES
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL[] values() -> values
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL valueOf(java.lang.String) -> valueOf
com.sina.weibo.sdk.openapi.legacy.FavoritesAPI -> com.sina.weibo.sdk.openapi.legacy.FavoritesAPI:
    java.lang.String SERVER_URL_PRIX -> SERVER_URL_PRIX
    void favorites(int,int,com.sina.weibo.sdk.net.RequestListener) -> favorites
    void ids(int,int,com.sina.weibo.sdk.net.RequestListener) -> ids
    void show(long,com.sina.weibo.sdk.net.RequestListener) -> show
    void byTags(long,int,int,com.sina.weibo.sdk.net.RequestListener) -> byTags
    void tags(int,int,com.sina.weibo.sdk.net.RequestListener) -> tags
    void byTagsIds(long,int,int,com.sina.weibo.sdk.net.RequestListener) -> byTagsIds
    void create(long,com.sina.weibo.sdk.net.RequestListener) -> create
    void destroy(long,com.sina.weibo.sdk.net.RequestListener) -> destroy
    void destroyBatch(long[],com.sina.weibo.sdk.net.RequestListener) -> destroyBatch
    void tagsUpdate(long,java.lang.String[],com.sina.weibo.sdk.net.RequestListener) -> tagsUpdate
    void tagsUpdateBatch(long,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> tagsUpdateBatch
    void tagsDestroyBatch(long,com.sina.weibo.sdk.net.RequestListener) -> tagsDestroyBatch
    com.sina.weibo.sdk.net.WeiboParameters buildCountPage(int,int) -> buildCountPage
com.sina.weibo.sdk.openapi.legacy.FriendshipsAPI -> com.sina.weibo.sdk.openapi.legacy.FriendshipsAPI:
    java.lang.String SERVER_URL_PRIX -> SERVER_URL_PRIX
    void friends(long,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> friends
    void friends(java.lang.String,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> friends
    void inCommon(long,long,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> inCommon
    void bilateral(long,int,int,com.sina.weibo.sdk.net.RequestListener) -> bilateral
    void bilateralIds(long,int,int,com.sina.weibo.sdk.net.RequestListener) -> bilateralIds
    void friendsIds(long,int,int,com.sina.weibo.sdk.net.RequestListener) -> friendsIds
    void friendsIds(java.lang.String,int,int,com.sina.weibo.sdk.net.RequestListener) -> friendsIds
    void followers(long,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> followers
    void followers(java.lang.String,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> followers
    void followersIds(long,int,int,com.sina.weibo.sdk.net.RequestListener) -> followersIds
    void followersIds(java.lang.String,int,int,com.sina.weibo.sdk.net.RequestListener) -> followersIds
    void followersActive(long,int,com.sina.weibo.sdk.net.RequestListener) -> followersActive
    void chainFollowers(long,int,int,com.sina.weibo.sdk.net.RequestListener) -> chainFollowers
    void show(long,long,com.sina.weibo.sdk.net.RequestListener) -> show
    void show(long,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> show
    void show(java.lang.String,long,com.sina.weibo.sdk.net.RequestListener) -> show
    void show(java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> show
    void create(long,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> create
    void create(java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> create
    void destroy(long,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> destroy
    void destroy(java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> destroy
    com.sina.weibo.sdk.net.WeiboParameters buildFriendsParam(int,int,boolean) -> buildFriendsParam
    com.sina.weibo.sdk.net.WeiboParameters buildFriendIDParam(long,int) -> buildFriendIDParam
com.sina.weibo.sdk.openapi.legacy.GroupAPI -> com.sina.weibo.sdk.openapi.legacy.GroupAPI:
    int FEATURE_ALL -> FEATURE_ALL
    int FEATURE_ORIGINAL -> FEATURE_ORIGINAL
    int FEATURE_PICTURE -> FEATURE_PICTURE
    int FEATURE_VIDEO -> FEATURE_VIDEO
    int FEATURE_MUSICE -> FEATURE_MUSICE
    java.lang.String SERVER_URL_PRIX -> SERVER_URL_PRIX
    void groups(com.sina.weibo.sdk.net.RequestListener) -> groups
    void timeline(long,long,long,int,int,boolean,int,com.sina.weibo.sdk.net.RequestListener) -> timeline
    void timelineIds() -> timelineIds
    void members(long,int,int,com.sina.weibo.sdk.net.RequestListener) -> members
    void membersIds() -> membersIds
    void memberDescriptionPatch() -> memberDescriptionPatch
    void isMember(long,long,com.sina.weibo.sdk.net.RequestListener) -> isMember
    void listed() -> listed
    void showGroup(long,com.sina.weibo.sdk.net.RequestListener) -> showGroup
    void showGroupBatch(java.lang.String,long,com.sina.weibo.sdk.net.RequestListener) -> showGroupBatch
    void create(java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> create
    void update(long,java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> update
    void deleteGroup(long,com.sina.weibo.sdk.net.RequestListener) -> deleteGroup
    void addMember(long,long,com.sina.weibo.sdk.net.RequestListener) -> addMember
    void addMemberBatch(long,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> addMemberBatch
    void updateMembers(long,long,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> updateMembers
    void deleteMembers(long,long,com.sina.weibo.sdk.net.RequestListener) -> deleteMembers
    void order(java.lang.String,int,com.sina.weibo.sdk.net.RequestListener) -> order
    com.sina.weibo.sdk.net.WeiboParameters buildeMembersParams(long,long) -> buildeMembersParams
com.sina.weibo.sdk.openapi.legacy.LocationAPI -> com.sina.weibo.sdk.openapi.legacy.LocationAPI:
    java.lang.String API_BASE_URL -> API_BASE_URL
    int READ_API_GPS_TO_OFFSET -> READ_API_GPS_TO_OFFSET
    int READ_API_SEARCH_POIS_BY_GEO -> READ_API_SEARCH_POIS_BY_GEO
    int READ_API_GET_TO_ADDRESS -> READ_API_GET_TO_ADDRESS
    android.util.SparseArray sAPIList -> sAPIList
    void gps2Offset(java.lang.Double,java.lang.Double,com.sina.weibo.sdk.net.RequestListener) -> gps2Offset
    void searchPoisByGeo(java.lang.Double,java.lang.Double,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> searchPoisByGeo
    void geo2Address(java.lang.Double,java.lang.Double,com.sina.weibo.sdk.net.RequestListener) -> geo2Address
    java.lang.String gps2OffsetSync(java.lang.Double,java.lang.Double) -> gps2OffsetSync
    java.lang.String searchPoisByGeoSync(java.lang.Double,java.lang.Double,java.lang.String) -> searchPoisByGeoSync
    java.lang.String geo2AddressSync(java.lang.Double,java.lang.Double) -> geo2AddressSync
    com.sina.weibo.sdk.net.WeiboParameters buildGPS2OffsetParams(java.lang.Double,java.lang.Double) -> buildGPS2OffsetParams
    com.sina.weibo.sdk.net.WeiboParameters buildSerarPoiByGeoParmas(java.lang.Double,java.lang.Double,java.lang.String) -> buildSerarPoiByGeoParmas
    com.sina.weibo.sdk.net.WeiboParameters buildGeo2AddressParam(java.lang.Double,java.lang.Double) -> buildGeo2AddressParam
com.sina.weibo.sdk.openapi.legacy.PlaceAPI -> com.sina.weibo.sdk.openapi.legacy.PlaceAPI:
    int SORT_BY_TIME -> SORT_BY_TIME
    int SORT_BY_DISTENCE -> SORT_BY_DISTENCE
    int NEARBY_POIS_SORT_BY_WEIGHT -> NEARBY_POIS_SORT_BY_WEIGHT
    int NEARBY_POIS_SORT_BY_DISTENCE -> NEARBY_POIS_SORT_BY_DISTENCE
    int NEARBY_POIS_SORT_BY_CHECKIN_NUMBER -> NEARBY_POIS_SORT_BY_CHECKIN_NUMBER
    int POIS_SORT_BY_TIME -> POIS_SORT_BY_TIME
    int POIS_SORT_BY_HOT -> POIS_SORT_BY_HOT
    int RELATIONSHIP_FILTER_ALL -> RELATIONSHIP_FILTER_ALL
    int RELATIONSHIP_FILTER_STRANGER -> RELATIONSHIP_FILTER_STRANGER
    int RELATIONSHIP_FILTER_FOLLOW -> RELATIONSHIP_FILTER_FOLLOW
    int GENDER_ALL -> GENDER_ALL
    int GENDER_MAN -> GENDER_MAN
    int GENDER_WOMAM -> GENDER_WOMAM
    int USER_LEVEL_ALL -> USER_LEVEL_ALL
    int USER_LEVEL_NORMAL -> USER_LEVEL_NORMAL
    int USER_LEVEL_VIP -> USER_LEVEL_VIP
    int USER_LEVEL_STAR -> USER_LEVEL_STAR
    int NEARBY_USER_SORT_BY_TIME -> NEARBY_USER_SORT_BY_TIME
    int NEARBY_USER_SORT_BY_DISTANCE -> NEARBY_USER_SORT_BY_DISTANCE
    int NEARBY_USER_SORT_BY_SOCIAL_SHIP -> NEARBY_USER_SORT_BY_SOCIAL_SHIP
    java.lang.String SERVER_URL_PRIX -> SERVER_URL_PRIX
    void pulicTimeline(long,boolean,com.sina.weibo.sdk.net.RequestListener) -> pulicTimeline
    void friendsTimeline(long,long,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> friendsTimeline
    void userTimeline(long,long,long,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> userTimeline
    void poiTimeline(java.lang.String,long,long,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> poiTimeline
    void nearbyTimeline(java.lang.String,java.lang.String,int,long,long,int,int,int,boolean,boolean,com.sina.weibo.sdk.net.RequestListener) -> nearbyTimeline
    void statusesShow(long,com.sina.weibo.sdk.net.RequestListener) -> statusesShow
    void usersShow(long,boolean,com.sina.weibo.sdk.net.RequestListener) -> usersShow
    void usersCheckins(long,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> usersCheckins
    void usersPhotos(long,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> usersPhotos
    void usersTips(long,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> usersTips
    void usersTodo(long,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> usersTodo
    void poisShow(java.lang.String,boolean,com.sina.weibo.sdk.net.RequestListener) -> poisShow
    void poisUsers(java.lang.String,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> poisUsers
    void poisPhotos(java.lang.String,int,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> poisPhotos
    void poisTips(java.lang.String,int,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> poisTips
    void poisSearch(java.lang.String,java.lang.String,java.lang.String,int,int,com.sina.weibo.sdk.net.RequestListener) -> poisSearch
    void poisCategory(int,boolean,com.sina.weibo.sdk.net.RequestListener) -> poisCategory
    void nearbyPois(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> nearbyPois
    void nearbyUsers(java.lang.String,java.lang.String,int,long,long,int,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> nearbyUsers
    void nearbyPhotos(java.lang.String,java.lang.String,int,long,long,int,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> nearbyPhotos
    void nearbyUserList(java.lang.String,java.lang.String,int,int,int,int,int,int,int,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> nearbyUserList
    void poisCreate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> poisCreate
    void poisAddCheckin(java.lang.String,java.lang.String,java.lang.String,boolean,com.sina.weibo.sdk.net.RequestListener) -> poisAddCheckin
    void poisAddPhoto(java.lang.String,java.lang.String,java.lang.String,boolean,com.sina.weibo.sdk.net.RequestListener) -> poisAddPhoto
    void poisAddTip(java.lang.String,java.lang.String,boolean,com.sina.weibo.sdk.net.RequestListener) -> poisAddTip
    void poisAddTodo(java.lang.String,java.lang.String,boolean,com.sina.weibo.sdk.net.RequestListener) -> poisAddTodo
    void nearbyUsersCreate(java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> nearbyUsersCreate
    void nearbyUsersDestroy(com.sina.weibo.sdk.net.RequestListener) -> nearbyUsersDestroy
    com.sina.weibo.sdk.net.WeiboParameters buildTimeLineParamsBase(long,long,int,int) -> buildTimeLineParamsBase
    com.sina.weibo.sdk.net.WeiboParameters buildUserParams(long,int,int,boolean) -> buildUserParams
    com.sina.weibo.sdk.net.WeiboParameters buildNearbyParams(java.lang.String,java.lang.String,int,int,int,int,boolean) -> buildNearbyParams
    com.sina.weibo.sdk.net.WeiboParameters buildPoiis(java.lang.String,java.lang.String,boolean) -> buildPoiis
    com.sina.weibo.sdk.net.WeiboParameters buildPoisParams(java.lang.String,int,int,boolean) -> buildPoisParams
com.sina.weibo.sdk.openapi.legacy.RegisterAPI -> com.sina.weibo.sdk.openapi.legacy.RegisterAPI:
    java.lang.String SERVER_URL_PRIX -> SERVER_URL_PRIX
    void suggestions(java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> suggestions
com.sina.weibo.sdk.openapi.legacy.SearchAPI -> com.sina.weibo.sdk.openapi.legacy.SearchAPI:
    int SCHOOL_TYPE_COLLEGE -> SCHOOL_TYPE_COLLEGE
    int SCHOOL_TYPE_SENIOR -> SCHOOL_TYPE_SENIOR
    int SCHOOL_TYPE_TECHNICAL -> SCHOOL_TYPE_TECHNICAL
    int SCHOOL_TYPE_JUNIOR -> SCHOOL_TYPE_JUNIOR
    int SCHOOL_TYPE_PRIMARY -> SCHOOL_TYPE_PRIMARY
    int FRIEND_TYPE_ATTENTIONS -> FRIEND_TYPE_ATTENTIONS
    int FRIEND_TYPE_FELLOWS -> FRIEND_TYPE_FELLOWS
    int RANGE_ATTENTIONS -> RANGE_ATTENTIONS
    int RANGE_ATTENTION_TAGS -> RANGE_ATTENTION_TAGS
    int RANGE_ALL -> RANGE_ALL
    java.lang.String SERVER_URL_PRIX -> SERVER_URL_PRIX
    void users(java.lang.String,int,com.sina.weibo.sdk.net.RequestListener) -> users
    void statuses(java.lang.String,int,com.sina.weibo.sdk.net.RequestListener) -> statuses
    void schools(java.lang.String,int,int,com.sina.weibo.sdk.net.RequestListener) -> schools
    void companies(java.lang.String,int,com.sina.weibo.sdk.net.RequestListener) -> companies
    void apps(java.lang.String,int,com.sina.weibo.sdk.net.RequestListener) -> apps
    void atUsers(java.lang.String,int,int,int,com.sina.weibo.sdk.net.RequestListener) -> atUsers
    com.sina.weibo.sdk.net.WeiboParameters buildBaseParams(java.lang.String,int) -> buildBaseParams
com.sina.weibo.sdk.openapi.legacy.ShortUrlAPI -> com.sina.weibo.sdk.openapi.legacy.ShortUrlAPI:
    java.lang.String SERVER_URL_PRIX -> SERVER_URL_PRIX
    void shorten(java.lang.String[],com.sina.weibo.sdk.net.RequestListener) -> shorten
    void expand(java.lang.String[],com.sina.weibo.sdk.net.RequestListener) -> expand
    java.lang.String expandSync(java.lang.String[]) -> expandSync
    void clicks(java.lang.String[],com.sina.weibo.sdk.net.RequestListener) -> clicks
    void referers(java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> referers
    void locations(java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> locations
    void shareCounts(java.lang.String[],com.sina.weibo.sdk.net.RequestListener) -> shareCounts
    void shareStatuses(java.lang.String,long,long,int,int,com.sina.weibo.sdk.net.RequestListener) -> shareStatuses
    void commentCounts(java.lang.String[],com.sina.weibo.sdk.net.RequestListener) -> commentCounts
    void comments(java.lang.String,long,long,int,int,com.sina.weibo.sdk.net.RequestListener) -> comments
    com.sina.weibo.sdk.net.WeiboParameters buildRequestParams(java.lang.String,long,long,int,int) -> buildRequestParams
    com.sina.weibo.sdk.net.WeiboParameters buildURLRequest(java.lang.String[],java.lang.String) -> buildURLRequest
com.sina.weibo.sdk.openapi.legacy.StatusesAPI -> com.sina.weibo.sdk.openapi.legacy.StatusesAPI:
    int FEATURE_ALL -> FEATURE_ALL
    int FEATURE_ORIGINAL -> FEATURE_ORIGINAL
    int FEATURE_PICTURE -> FEATURE_PICTURE
    int FEATURE_VIDEO -> FEATURE_VIDEO
    int FEATURE_MUSICE -> FEATURE_MUSICE
    int AUTHOR_FILTER_ALL -> AUTHOR_FILTER_ALL
    int AUTHOR_FILTER_ATTENTIONS -> AUTHOR_FILTER_ATTENTIONS
    int AUTHOR_FILTER_STRANGER -> AUTHOR_FILTER_STRANGER
    int SRC_FILTER_ALL -> SRC_FILTER_ALL
    int SRC_FILTER_WEIBO -> SRC_FILTER_WEIBO
    int SRC_FILTER_WEIQUN -> SRC_FILTER_WEIQUN
    int TYPE_FILTER_ALL -> TYPE_FILTER_ALL
    int TYPE_FILTER_ORIGAL -> TYPE_FILTER_ORIGAL
    int TYPE_STATUSES -> TYPE_STATUSES
    int TYPE_COMMENTS -> TYPE_COMMENTS
    int TYPE_MESSAGE -> TYPE_MESSAGE
    int COMMENTS_NONE -> COMMENTS_NONE
    int COMMENTS_CUR_STATUSES -> COMMENTS_CUR_STATUSES
    int COMMENTS_RIGAL_STATUSES -> COMMENTS_RIGAL_STATUSES
    int COMMENTS_BOTH -> COMMENTS_BOTH
    java.lang.String EMOTION_TYPE_FACE -> EMOTION_TYPE_FACE
    java.lang.String EMOTION_TYPE_ANI -> EMOTION_TYPE_ANI
    java.lang.String EMOTION_TYPE_CARTOON -> EMOTION_TYPE_CARTOON
    java.lang.String LANGUAGE_CNNAME -> LANGUAGE_CNNAME
    java.lang.String LANGUAGE_TWNAME -> LANGUAGE_TWNAME
    java.lang.String SERVER_URL_PRIX -> SERVER_URL_PRIX
    void publicTimeline(int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> publicTimeline
    void friendsTimeline(long,long,int,int,boolean,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> friendsTimeline
    void friendsTimelineIds(long,long,int,int,boolean,int,com.sina.weibo.sdk.net.RequestListener) -> friendsTimelineIds
    void homeTimeline(long,long,int,int,boolean,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> homeTimeline
    void userTimeline(long,long,long,int,int,boolean,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> userTimeline
    void userTimeline(java.lang.String,long,long,int,int,boolean,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> userTimeline
    void userTimeline(long,long,int,int,boolean,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> userTimeline
    void userTimelineIds(long,long,long,int,int,boolean,int,com.sina.weibo.sdk.net.RequestListener) -> userTimelineIds
    void userTimelineIds(java.lang.String,long,long,int,int,boolean,int,com.sina.weibo.sdk.net.RequestListener) -> userTimelineIds
    void repostTimeline(long,long,long,int,int,int,com.sina.weibo.sdk.net.RequestListener) -> repostTimeline
    void repostTimelineIds(long,long,long,int,int,int,com.sina.weibo.sdk.net.RequestListener) -> repostTimelineIds
    void repostByMe(long,long,int,int,com.sina.weibo.sdk.net.RequestListener) -> repostByMe
    void mentions(long,long,int,int,int,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> mentions
    void mentionsIds(long,long,int,int,int,int,int,com.sina.weibo.sdk.net.RequestListener) -> mentionsIds
    void bilateralTimeline(long,long,int,int,boolean,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> bilateralTimeline
    void show(long,com.sina.weibo.sdk.net.RequestListener) -> show
    void queryMID(long[],int,com.sina.weibo.sdk.net.RequestListener) -> queryMID
    void queryID(java.lang.String[],int,boolean,boolean,com.sina.weibo.sdk.net.RequestListener) -> queryID
    void hotRepostDaily(int,boolean,com.sina.weibo.sdk.net.RequestListener) -> hotRepostDaily
    void hotRepostWeekly(int,boolean,com.sina.weibo.sdk.net.RequestListener) -> hotRepostWeekly
    void hotCommentsDaily(int,boolean,com.sina.weibo.sdk.net.RequestListener) -> hotCommentsDaily
    void hotCommentsWeekly(int,boolean,com.sina.weibo.sdk.net.RequestListener) -> hotCommentsWeekly
    void count(java.lang.String[],com.sina.weibo.sdk.net.RequestListener) -> count
    void repost(long,java.lang.String,int,com.sina.weibo.sdk.net.RequestListener) -> repost
    void destroy(long,com.sina.weibo.sdk.net.RequestListener) -> destroy
    void update(java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> update
    void upload(java.lang.String,android.graphics.Bitmap,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> upload
    void uploadUrlText(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> uploadUrlText
    void emotions(java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> emotions
    com.sina.weibo.sdk.net.WeiboParameters buildTimeLineBase(long,long,int,int) -> buildTimeLineBase
    com.sina.weibo.sdk.net.WeiboParameters buildTimeLineWithApp(long,long,int,int,boolean,int) -> buildTimeLineWithApp
    com.sina.weibo.sdk.net.WeiboParameters buildTimeLineWithAppTrim(long,long,int,int,boolean,boolean,int) -> buildTimeLineWithAppTrim
    com.sina.weibo.sdk.net.WeiboParameters buildHotParams(int,boolean) -> buildHotParams
    com.sina.weibo.sdk.net.WeiboParameters buildUpdateParams(java.lang.String,java.lang.String,java.lang.String) -> buildUpdateParams
com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI -> com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI:
    java.lang.String SERVER_URL_PRIX -> SERVER_URL_PRIX
    void usersHot(com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY,com.sina.weibo.sdk.net.RequestListener) -> usersHot
    void mayInterested(int,int,com.sina.weibo.sdk.net.RequestListener) -> mayInterested
    void byStatus(java.lang.String,int,com.sina.weibo.sdk.net.RequestListener) -> byStatus
    void statusesHot(com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE,boolean,int,int,com.sina.weibo.sdk.net.RequestListener) -> statusesHot
    void favoritesHot(int,int,com.sina.weibo.sdk.net.RequestListener) -> favoritesHot
    void notInterested(long,com.sina.weibo.sdk.net.RequestListener) -> notInterested
    com.sina.weibo.sdk.net.WeiboParameters builderCountPage(int,int) -> builderCountPage
com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE -> com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE:
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE ENTERTAINMENT -> ENTERTAINMENT
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE FUNNY -> FUNNY
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE BEAUTY -> BEAUTY
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE VIDEO -> VIDEO
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE CONSTELLATION -> CONSTELLATION
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE LOVELY -> LOVELY
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE FASHION -> FASHION
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE CARS -> CARS
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE CATE -> CATE
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE MUSIC -> MUSIC
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE[] ENUM$VALUES -> ENUM$VALUES
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE[] values() -> values
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE valueOf(java.lang.String) -> valueOf
com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY -> com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY:
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY DEFAULT -> DEFAULT
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY ent -> ent
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY hk_famous -> hk_famous
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY model -> model
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY cooking -> cooking
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY sports -> sports
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY finance -> finance
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY tech -> tech
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY singer -> singer
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY writer -> writer
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY moderator -> moderator
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY medium -> medium
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY stockplayer -> stockplayer
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY[] ENUM$VALUES -> ENUM$VALUES
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY[] values() -> values
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY valueOf(java.lang.String) -> valueOf
com.sina.weibo.sdk.openapi.legacy.TagsAPI -> com.sina.weibo.sdk.openapi.legacy.TagsAPI:
    java.lang.String SERVER_URL_PRIX -> SERVER_URL_PRIX
    void tags(long,int,int,com.sina.weibo.sdk.net.RequestListener) -> tags
    void tagsBatch(java.lang.String[],com.sina.weibo.sdk.net.RequestListener) -> tagsBatch
    void suggestions(int,com.sina.weibo.sdk.net.RequestListener) -> suggestions
    void create(java.lang.String[],com.sina.weibo.sdk.net.RequestListener) -> create
    void destroy(long,com.sina.weibo.sdk.net.RequestListener) -> destroy
    void destroyBatch(java.lang.String[],com.sina.weibo.sdk.net.RequestListener) -> destroyBatch
com.sina.weibo.sdk.openapi.legacy.TrendsAPI -> com.sina.weibo.sdk.openapi.legacy.TrendsAPI:
    java.lang.String SERVER_URL_PRIX -> SERVER_URL_PRIX
    void trends(long,int,int,com.sina.weibo.sdk.net.RequestListener) -> trends
    void isFollow(java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> isFollow
    void hourly(boolean,com.sina.weibo.sdk.net.RequestListener) -> hourly
    void daily(boolean,com.sina.weibo.sdk.net.RequestListener) -> daily
    void weekly(boolean,com.sina.weibo.sdk.net.RequestListener) -> weekly
    void follow(java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> follow
    void destroy(long,com.sina.weibo.sdk.net.RequestListener) -> destroy
com.sina.weibo.sdk.openapi.models.AbsDataObject -> com.sina.weibo.sdk.openapi.models.AbsDataObject:
    java.lang.Object parse(java.lang.String) -> parse
    java.lang.Object parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.Comment -> com.sina.weibo.sdk.openapi.models.Comment:
    java.lang.String created_at -> created_at
    java.lang.String id -> id
    java.lang.String text -> text
    java.lang.String source -> source
    com.sina.weibo.sdk.openapi.models.User user -> user
    java.lang.String mid -> mid
    java.lang.String idstr -> idstr
    com.sina.weibo.sdk.openapi.models.Status status -> status
    com.sina.weibo.sdk.openapi.models.Comment reply_comment -> reply_comment
    com.sina.weibo.sdk.openapi.models.Comment parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.CommentList -> com.sina.weibo.sdk.openapi.models.CommentList:
    java.util.ArrayList commentList -> commentList
    java.lang.String previous_cursor -> previous_cursor
    java.lang.String next_cursor -> next_cursor
    int total_number -> total_number
    com.sina.weibo.sdk.openapi.models.CommentList parse(java.lang.String) -> parse
com.sina.weibo.sdk.openapi.models.Coordinate -> com.sina.weibo.sdk.openapi.models.Coordinate:
    java.lang.Double Longtitude -> Longtitude
    java.lang.Double Latitude -> Latitude
    com.sina.weibo.sdk.openapi.models.Coordinate parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.ErrorInfo -> com.sina.weibo.sdk.openapi.models.ErrorInfo:
    java.lang.String error -> error
    java.lang.String error_code -> error_code
    java.lang.String request -> request
    com.sina.weibo.sdk.openapi.models.ErrorInfo parse(java.lang.String) -> parse
    java.lang.String toString() -> toString
com.sina.weibo.sdk.openapi.models.Favorite -> com.sina.weibo.sdk.openapi.models.Favorite:
    com.sina.weibo.sdk.openapi.models.Status status -> status
    java.util.ArrayList tags -> tags
    java.lang.String favorited_time -> favorited_time
    com.sina.weibo.sdk.openapi.models.Favorite parse(java.lang.String) -> parse
    com.sina.weibo.sdk.openapi.models.Favorite parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.FavoriteList -> com.sina.weibo.sdk.openapi.models.FavoriteList:
    java.util.ArrayList favoriteList -> favoriteList
    int total_number -> total_number
    com.sina.weibo.sdk.openapi.models.FavoriteList parse(java.lang.String) -> parse
com.sina.weibo.sdk.openapi.models.Geo -> com.sina.weibo.sdk.openapi.models.Geo:
    java.lang.String longitude -> longitude
    java.lang.String latitude -> latitude
    java.lang.String city -> city
    java.lang.String province -> province
    java.lang.String city_name -> city_name
    java.lang.String province_name -> province_name
    java.lang.String address -> address
    java.lang.String pinyin -> pinyin
    java.lang.String more -> more
    com.sina.weibo.sdk.openapi.models.Geo parse(java.lang.String) -> parse
    com.sina.weibo.sdk.openapi.models.Geo parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.GeoList -> com.sina.weibo.sdk.openapi.models.GeoList:
    java.util.ArrayList Geos -> Geos
    com.sina.weibo.sdk.openapi.models.GeoList parse(java.lang.String) -> parse
com.sina.weibo.sdk.openapi.models.Group -> com.sina.weibo.sdk.openapi.models.Group:
    java.lang.String GROUP_ID_ALL -> GROUP_ID_ALL
    java.lang.String id -> id
    java.lang.String idStr -> idStr
    java.lang.String name -> name
    java.lang.String mode -> mode
    int visible -> visible
    int like_count -> like_count
    int member_count -> member_count
    java.lang.String description -> description
    java.util.ArrayList tags -> tags
    java.lang.String profile_image_url -> profile_image_url
    com.sina.weibo.sdk.openapi.models.User user -> user
    java.lang.String createAtTime -> createAtTime
    com.sina.weibo.sdk.openapi.models.Group parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.GroupList -> com.sina.weibo.sdk.openapi.models.GroupList:
    java.util.ArrayList groupList -> groupList
    int total_number -> total_number
    com.sina.weibo.sdk.openapi.models.GroupList parse(java.lang.String) -> parse
com.sina.weibo.sdk.openapi.models.GroupTag -> com.sina.weibo.sdk.openapi.models.GroupTag:
    java.lang.String tag -> tag
    com.sina.weibo.sdk.openapi.models.GroupTag parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.IParseable -> com.sina.weibo.sdk.openapi.models.IParseable:
    java.lang.Object parse(java.lang.String) -> parse
    java.lang.Object parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.MusicInfo -> com.sina.weibo.sdk.openapi.models.MusicInfo:
    java.lang.String author -> author
    java.lang.String title -> title
    java.lang.String album -> album
    java.lang.String playUrl -> playUrl
    com.sina.weibo.sdk.openapi.models.MusicInfo parser(java.lang.String) -> parser
    com.sina.weibo.sdk.openapi.models.MusicInfo parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.OffsetGeo -> com.sina.weibo.sdk.openapi.models.OffsetGeo:
    java.util.ArrayList Geos -> Geos
    com.sina.weibo.sdk.openapi.models.OffsetGeo parse(java.lang.String) -> parse
com.sina.weibo.sdk.openapi.models.Poi -> com.sina.weibo.sdk.openapi.models.Poi:
    java.lang.String poiid -> poiid
    java.lang.String title -> title
    java.lang.String address -> address
    java.lang.String lon -> lon
    java.lang.String lat -> lat
    java.lang.String category -> category
    java.lang.String city -> city
    java.lang.String province -> province
    java.lang.String country -> country
    java.lang.String url -> url
    java.lang.String phone -> phone
    java.lang.String postcode -> postcode
    java.lang.String weibo_id -> weibo_id
    java.lang.String categorys -> categorys
    java.lang.String category_name -> category_name
    java.lang.String icon -> icon
    java.lang.String checkin_num -> checkin_num
    java.lang.String checkin_user_num -> checkin_user_num
    java.lang.String tip_num -> tip_num
    java.lang.String photo_num -> photo_num
    java.lang.String todo_num -> todo_num
    java.lang.String distance -> distance
    com.sina.weibo.sdk.openapi.models.Poi parse(java.lang.String) -> parse
    com.sina.weibo.sdk.openapi.models.Poi parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.PoiList -> com.sina.weibo.sdk.openapi.models.PoiList:
    java.util.ArrayList pois -> pois
    java.lang.String totalNumber -> totalNumber
    com.sina.weibo.sdk.openapi.models.PoiList parse(java.lang.String) -> parse
com.sina.weibo.sdk.openapi.models.Privacy -> com.sina.weibo.sdk.openapi.models.Privacy:
com.sina.weibo.sdk.openapi.models.Remind -> com.sina.weibo.sdk.openapi.models.Remind:
com.sina.weibo.sdk.openapi.models.Status -> com.sina.weibo.sdk.openapi.models.Status:
    java.lang.String created_at -> created_at
    java.lang.String id -> id
    java.lang.String mid -> mid
    java.lang.String idstr -> idstr
    java.lang.String text -> text
    java.lang.String source -> source
    boolean favorited -> favorited
    boolean truncated -> truncated
    java.lang.String in_reply_to_status_id -> in_reply_to_status_id
    java.lang.String in_reply_to_user_id -> in_reply_to_user_id
    java.lang.String in_reply_to_screen_name -> in_reply_to_screen_name
    java.lang.String thumbnail_pic -> thumbnail_pic
    java.lang.String bmiddle_pic -> bmiddle_pic
    java.lang.String original_pic -> original_pic
    com.sina.weibo.sdk.openapi.models.Geo geo -> geo
    com.sina.weibo.sdk.openapi.models.User user -> user
    com.sina.weibo.sdk.openapi.models.Status retweeted_status -> retweeted_status
    int reposts_count -> reposts_count
    int comments_count -> comments_count
    int attitudes_count -> attitudes_count
    int mlevel -> mlevel
    com.sina.weibo.sdk.openapi.models.Visible visible -> visible
    java.util.ArrayList pic_urls -> pic_urls
    com.sina.weibo.sdk.openapi.models.Status parse(java.lang.String) -> parse
    com.sina.weibo.sdk.openapi.models.Status parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.StatusList -> com.sina.weibo.sdk.openapi.models.StatusList:
    java.util.ArrayList statusList -> statusList
    com.sina.weibo.sdk.openapi.models.Status statuses -> statuses
    boolean hasvisible -> hasvisible
    java.lang.String previous_cursor -> previous_cursor
    java.lang.String next_cursor -> next_cursor
    int total_number -> total_number
    java.lang.Object[] advertises -> advertises
    com.sina.weibo.sdk.openapi.models.StatusList parse(java.lang.String) -> parse
com.sina.weibo.sdk.openapi.models.Tag -> com.sina.weibo.sdk.openapi.models.Tag:
    int id -> id
    java.lang.String tag -> tag
    com.sina.weibo.sdk.openapi.models.Tag parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.User -> com.sina.weibo.sdk.openapi.models.User:
    java.lang.String id -> id
    java.lang.String idstr -> idstr
    java.lang.String screen_name -> screen_name
    java.lang.String name -> name
    int province -> province
    int city -> city
    java.lang.String location -> location
    java.lang.String description -> description
    java.lang.String url -> url
    java.lang.String profile_image_url -> profile_image_url
    java.lang.String profile_url -> profile_url
    java.lang.String domain -> domain
    java.lang.String weihao -> weihao
    java.lang.String gender -> gender
    int followers_count -> followers_count
    int friends_count -> friends_count
    int statuses_count -> statuses_count
    int favourites_count -> favourites_count
    java.lang.String created_at -> created_at
    boolean following -> following
    boolean allow_all_act_msg -> allow_all_act_msg
    boolean geo_enabled -> geo_enabled
    boolean verified -> verified
    int verified_type -> verified_type
    java.lang.String remark -> remark
    com.sina.weibo.sdk.openapi.models.Status status -> status
    boolean allow_all_comment -> allow_all_comment
    java.lang.String avatar_large -> avatar_large
    java.lang.String avatar_hd -> avatar_hd
    java.lang.String verified_reason -> verified_reason
    boolean follow_me -> follow_me
    int online_status -> online_status
    int bi_followers_count -> bi_followers_count
    java.lang.String lang -> lang
    java.lang.String star -> star
    java.lang.String mbtype -> mbtype
    java.lang.String mbrank -> mbrank
    java.lang.String block_word -> block_word
    com.sina.weibo.sdk.openapi.models.User parse(java.lang.String) -> parse
    com.sina.weibo.sdk.openapi.models.User parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.Visible -> com.sina.weibo.sdk.openapi.models.Visible:
    int VISIBLE_NORMAL -> VISIBLE_NORMAL
    int VISIBLE_PRIVACY -> VISIBLE_PRIVACY
    int VISIBLE_GROUPED -> VISIBLE_GROUPED
    int VISIBLE_FRIEND -> VISIBLE_FRIEND
    int type -> type
    int list_id -> list_id
    com.sina.weibo.sdk.openapi.models.Visible parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.utils.BitmapHelper -> com.sina.weibo.sdk.utils.BitmapHelper:
    boolean makesureSizeNotTooLarge(android.graphics.Rect) -> makesureSizeNotTooLarge
    int getSampleSizeOfNotTooLarge(android.graphics.Rect) -> getSampleSizeOfNotTooLarge
    int getSampleSizeAutoFitToScreen(int,int,int,int) -> getSampleSizeAutoFitToScreen
    boolean verifyBitmap(byte[]) -> verifyBitmap
    boolean verifyBitmap(java.io.InputStream) -> verifyBitmap
    boolean verifyBitmap(java.lang.String) -> verifyBitmap
com.sina.weibo.sdk.utils.ImageUtils -> com.sina.weibo.sdk.utils.ImageUtils:
    void revitionImageSizeHD(java.lang.String,int,int) -> revitionImageSizeHD
    void revitionImageSize(java.lang.String,int,int) -> revitionImageSize
    boolean revitionPostImageSize(android.content.Context,java.lang.String) -> revitionPostImageSize
    android.graphics.Bitmap safeDecodeBimtapFile(java.lang.String,android.graphics.BitmapFactory$Options) -> safeDecodeBimtapFile
    void delete(java.io.File) -> delete
    boolean deleteDependon(java.lang.String) -> deleteDependon
    boolean isFileExisted(java.lang.String) -> isFileExisted
    boolean isParentExist(java.io.File) -> isParentExist
    void makesureFileExist(java.lang.String) -> makesureFileExist
    boolean isWifi(android.content.Context) -> isWifi
com.sina.weibo.sdk.utils.LogUtil -> com.sina.weibo.sdk.utils.LogUtil:
    boolean sIsLogEnable -> sIsLogEnable
    void enableLog() -> enableLog
    void disableLog() -> disableLog
    void d(java.lang.String,java.lang.String) -> d
    void i(java.lang.String,java.lang.String) -> i
    void e(java.lang.String,java.lang.String) -> e
    void w(java.lang.String,java.lang.String) -> w
    void v(java.lang.String,java.lang.String) -> v
    java.lang.String getStackTraceMsg() -> getStackTraceMsg
com.sina.weibo.sdk.utils.MD5 -> com.sina.weibo.sdk.utils.MD5:
    char[] hexDigits -> hexDigits
    java.lang.String hexdigest(java.lang.String) -> hexdigest
    java.lang.String hexdigest(byte[]) -> hexdigest
    void main(java.lang.String[]) -> main
com.sina.weibo.sdk.utils.NetworkHelper -> com.sina.weibo.sdk.utils.NetworkHelper:
    boolean hasInternetPermission(android.content.Context) -> hasInternetPermission
    boolean isNetworkAvailable(android.content.Context) -> isNetworkAvailable
    boolean isWifiValid(android.content.Context) -> isWifiValid
    boolean isMobileNetwork(android.content.Context) -> isMobileNetwork
    android.net.NetworkInfo getActiveNetworkInfo(android.content.Context) -> getActiveNetworkInfo
    android.net.NetworkInfo getNetworkInfo(android.content.Context,int) -> getNetworkInfo
    int getNetworkType(android.content.Context) -> getNetworkType
    int getWifiState(android.content.Context) -> getWifiState
    android.net.NetworkInfo$DetailedState getWifiConnectivityState(android.content.Context) -> getWifiConnectivityState
    boolean wifiConnection(android.content.Context,java.lang.String,java.lang.String) -> wifiConnection
    void clearCookies(android.content.Context,java.lang.String) -> clearCookies
com.sina.weibo.sdk.utils.ResourceManager -> com.sina.weibo.sdk.utils.ResourceManager:
    java.lang.String TAG -> TAG
    int dimen_dialog_left_margin -> dimen_dialog_left_margin
    int dimen_dialog_top_margin -> dimen_dialog_top_margin
    int dimen_dialog_right_margin -> dimen_dialog_right_margin
    int dimen_dialog_bottom_margin -> dimen_dialog_bottom_margin
    int DIALOG_LEFT_MARGIN -> DIALOG_LEFT_MARGIN
    int DIALOG_TOP_MARGIN -> DIALOG_TOP_MARGIN
    int DIALOG_RIGHT_MARGIN -> DIALOG_RIGHT_MARGIN
    int DIALOG_BOTTOM_MARGIN -> DIALOG_BOTTOM_MARGIN
    android.util.SparseIntArray sLayoutMap -> sLayoutMap
    int drawable_dialog_background -> drawable_dialog_background
    int drawable_dialog_close_button -> drawable_dialog_close_button
    java.lang.String DIALOG_BACKGROUND_IMAGE_NAME -> DIALOG_BACKGROUND_IMAGE_NAME
    java.lang.String DIALOG_CLOSE_BUTTON_IMAGE_NAME -> DIALOG_CLOSE_BUTTON_IMAGE_NAME
    java.lang.String DRAWABLE -> DRAWABLE
    java.lang.String DRAWABLE_LDPI -> DRAWABLE_LDPI
    java.lang.String DRAWABLE_MDPI -> DRAWABLE_MDPI
    java.lang.String DRAWABLE_HDPI -> DRAWABLE_HDPI
    java.lang.String DRAWABLE_XHDPI -> DRAWABLE_XHDPI
    java.lang.String DRAWABLE_XXHDPI -> DRAWABLE_XXHDPI
    java.lang.String[] PRE_INSTALL_DRAWBLE_PATHS -> PRE_INSTALL_DRAWBLE_PATHS
    android.util.SparseArray sDrawableMap -> sDrawableMap
    int string_loading -> string_loading
    int string_network_not_available -> string_network_not_available
    java.lang.String LOADING_EN -> LOADING_EN
    java.lang.String LOADING_ZH_CN -> LOADING_ZH_CN
    java.lang.String LOADING_ZH_TW -> LOADING_ZH_TW
    java.lang.String NETWORK_NOT_AVAILABLE_EN -> NETWORK_NOT_AVAILABLE_EN
    java.lang.String NETWORK_NOT_AVAILABLE_ZH_CN -> NETWORK_NOT_AVAILABLE_ZH_CN
    java.lang.String NETWORK_NOT_AVAILABLE_ZH_TW -> NETWORK_NOT_AVAILABLE_ZH_TW
    java.util.HashMap sLanguageMap -> sLanguageMap
    java.lang.String getString(android.content.Context,int) -> getString
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    android.graphics.drawable.Drawable getNinePatchDrawable(android.content.Context,int) -> getNinePatchDrawable
    int getDimensionPixelSize(int) -> getDimensionPixelSize
    java.util.Locale getLanguage() -> getLanguage
    java.lang.String getAppropriatePathOfDrawable(android.content.Context,java.lang.String) -> getAppropriatePathOfDrawable
    android.graphics.drawable.Drawable getDrawableFromAssert(android.content.Context,java.lang.String,boolean) -> getDrawableFromAssert
    boolean isFileExisted(android.content.Context,java.lang.String) -> isFileExisted
    java.lang.String getCurrentDpiFolder(android.content.Context) -> getCurrentDpiFolder
    android.view.View extractView(android.content.Context,java.lang.String,android.view.ViewGroup) -> extractView
    android.graphics.drawable.Drawable extractDrawable(android.content.Context,java.lang.String) -> extractDrawable
com.sina.weibo.sdk.utils.SecurityHelper -> com.sina.weibo.sdk.utils.SecurityHelper:
    java.lang.String WEIBO_MD5_SIGNATURE -> WEIBO_MD5_SIGNATURE
    boolean validateAppSignatureForIntent(android.content.Context,android.content.Intent) -> validateAppSignatureForIntent
    boolean checkResponseAppLegal(android.content.Context,android.content.Intent) -> checkResponseAppLegal
    boolean containSign(android.content.pm.Signature[],java.lang.String) -> containSign
com.sina.weibo.sdk.utils.UIUtils -> com.sina.weibo.sdk.utils.UIUtils:
    void showAlert(android.content.Context,java.lang.String,java.lang.String) -> showAlert
    void showAlert(android.content.Context,int,int) -> showAlert
    void showToast(android.content.Context,int,int) -> showToast
    void showToast(android.content.Context,java.lang.CharSequence,int) -> showToast
    void showToastInCenter(android.content.Context,int,int) -> showToastInCenter
com.sina.weibo.sdk.utils.Utility -> com.sina.weibo.sdk.utils.Utility:
    java.lang.String DEFAULT_CHARSET -> DEFAULT_CHARSET
    android.os.Bundle parseUrl(java.lang.String) -> parseUrl
    android.os.Bundle decodeUrl(java.lang.String) -> decodeUrl
    boolean isChineseLocale(android.content.Context) -> isChineseLocale
    java.lang.String generateGUID() -> generateGUID
    java.lang.String getSign(android.content.Context,java.lang.String) -> getSign
    java.lang.String safeString(java.lang.String) -> safeString
com.sina.weibo.sdk.widget.LoginButton -> com.sina.weibo.sdk.widget.LoginButton:
    java.lang.String TAG -> TAG
    int LOGIN_INCON_STYLE_1 -> LOGIN_INCON_STYLE_1
    int LOGIN_INCON_STYLE_2 -> LOGIN_INCON_STYLE_2
    int LOGIN_INCON_STYLE_3 -> LOGIN_INCON_STYLE_3
    android.content.Context mContext -> mContext
    com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo mAuthInfo -> mAuthInfo
    com.sina.weibo.sdk.auth.sso.SsoHandler mSsoHandler -> mSsoHandler
    com.sina.weibo.sdk.auth.WeiboAuthListener mAuthListener -> mAuthListener
    android.view.View$OnClickListener mExternalOnClickListener -> mExternalOnClickListener
    void setWeiboAuthInfo(com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo,com.sina.weibo.sdk.auth.WeiboAuthListener) -> setWeiboAuthInfo
    void setWeiboAuthInfo(java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.auth.WeiboAuthListener) -> setWeiboAuthInfo
    void setStyle(int) -> setStyle
    void setExternalOnClickListener(android.view.View$OnClickListener) -> setExternalOnClickListener
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void initialize(android.content.Context) -> initialize
com.sina.weibo.sdk.widget.LoginoutButton -> com.sina.weibo.sdk.widget.LoginoutButton:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo mAuthInfo -> mAuthInfo
    com.sina.weibo.sdk.auth.sso.SsoHandler mSsoHandler -> mSsoHandler
    com.sina.weibo.sdk.auth.WeiboAuthListener mAuthListener -> mAuthListener
    com.sina.weibo.sdk.auth.Oauth2AccessToken mAccessToken -> mAccessToken
    com.sina.weibo.sdk.net.RequestListener mLogoutListener -> mLogoutListener
    android.view.View$OnClickListener mExternalOnClickListener -> mExternalOnClickListener
    void setWeiboAuthInfo(com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo,com.sina.weibo.sdk.auth.WeiboAuthListener) -> setWeiboAuthInfo
    void setWeiboAuthInfo(java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.auth.WeiboAuthListener) -> setWeiboAuthInfo
    void setLogoutInfo(com.sina.weibo.sdk.auth.Oauth2AccessToken,com.sina.weibo.sdk.net.RequestListener) -> setLogoutInfo
    void setLogoutListener(com.sina.weibo.sdk.net.RequestListener) -> setLogoutListener
    void setExternalOnClickListener(android.view.View$OnClickListener) -> setExternalOnClickListener
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onClick(android.view.View) -> onClick
    void initialize(android.content.Context,android.util.AttributeSet) -> initialize
    void loadDefaultStyle(android.util.AttributeSet) -> loadDefaultStyle
    void login() -> login
    void logout() -> logout
    void access$0(com.sina.weibo.sdk.widget.LoginoutButton,com.sina.weibo.sdk.auth.Oauth2AccessToken) -> access$0
    com.sina.weibo.sdk.auth.Oauth2AccessToken access$1(com.sina.weibo.sdk.widget.LoginoutButton) -> access$1
    com.sina.weibo.sdk.auth.WeiboAuthListener access$2(com.sina.weibo.sdk.widget.LoginoutButton) -> access$2
    com.sina.weibo.sdk.net.RequestListener access$3(com.sina.weibo.sdk.widget.LoginoutButton) -> access$3
com.sina.weibo.sdk.widget.LoginoutButton$1 -> com.sina.weibo.sdk.widget.LoginoutButton$1:
    com.sina.weibo.sdk.widget.LoginoutButton this$0 -> this$0
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> onWeiboException
com.sina.weibo.sdk.widget.LoginoutButton$2 -> com.sina.weibo.sdk.widget.LoginoutButton$2:
    com.sina.weibo.sdk.widget.LoginoutButton this$0 -> this$0
    void onComplete(java.lang.String) -> onComplete
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> onWeiboException
com.squareup.okhttp.Address -> com.squareup.okhttp.a:
    java.net.Proxy proxy -> a
    java.lang.String uriHost -> b
    int uriPort -> c
    javax.net.ssl.SSLSocketFactory sslSocketFactory -> d
    javax.net.ssl.HostnameVerifier hostnameVerifier -> e
    com.squareup.okhttp.OkAuthenticator authenticator -> f
    java.util.List transports -> g
    java.lang.String getUriHost() -> a
    javax.net.ssl.SSLSocketFactory getSslSocketFactory() -> b
    java.net.Proxy getProxy() -> c
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.squareup.okhttp.Connection -> com.squareup.okhttp.b:
    byte[] NPN_PROTOCOLS -> a
    byte[] SPDY3 -> b
    byte[] HTTP_11 -> c
    com.squareup.okhttp.Route route -> d
    java.net.Socket socket -> e
    java.io.InputStream in -> f
    java.io.OutputStream out -> g
    boolean connected -> h
    com.squareup.okhttp.internal.spdy.SpdyConnection spdyConnection -> i
    int httpMinorVersion -> j
    long idleStartTimeNs -> k
    void connect(int,int,com.squareup.okhttp.TunnelRequest) -> a
    void upgradeToTls(com.squareup.okhttp.TunnelRequest) -> a
    boolean isConnected() -> a
    void close() -> close
    com.squareup.okhttp.Route getRoute() -> b
    java.net.Socket getSocket() -> c
    boolean isAlive() -> d
    boolean isReadable() -> e
    void resetIdleStartTime() -> f
    boolean isIdle() -> g
    boolean isExpired(long) -> a
    long getIdleStartTimeNs() -> h
    java.lang.Object newTransport(com.squareup.okhttp.internal.http.HttpEngine) -> a
    boolean isSpdy() -> i
    int getHttpMinorVersion() -> j
    void setHttpMinorVersion(int) -> a
    boolean requiresTunnel() -> k
    void makeTunnel(com.squareup.okhttp.TunnelRequest) -> b
com.squareup.okhttp.ConnectionPool -> com.squareup.okhttp.c:
    com.squareup.okhttp.ConnectionPool systemDefault -> a
    int maxIdleConnections -> b
    long keepAliveDurationNs -> c
    java.util.LinkedList connections -> d
    java.util.concurrent.ExecutorService executorService -> e
    java.util.concurrent.Callable connectionsCleanupCallable -> f
    com.squareup.okhttp.ConnectionPool getDefault() -> a
    com.squareup.okhttp.Connection get(com.squareup.okhttp.Address) -> a
    void recycle(com.squareup.okhttp.Connection) -> a
    void maybeShare(com.squareup.okhttp.Connection) -> b
    java.util.LinkedList access$000(com.squareup.okhttp.ConnectionPool) -> a
    long access$100(com.squareup.okhttp.ConnectionPool) -> b
    int access$200(com.squareup.okhttp.ConnectionPool) -> c
com.squareup.okhttp.ConnectionPool$1 -> com.squareup.okhttp.d:
    com.squareup.okhttp.ConnectionPool this$0 -> a
    java.lang.Void call() -> a
    java.lang.Object call() -> call
com.squareup.okhttp.ConnectionPool$2 -> com.squareup.okhttp.ConnectionPool$2:
    com.squareup.okhttp.ConnectionPool this$0 -> this$0
    void run() -> run
com.squareup.okhttp.Dispatcher -> com.squareup.okhttp.e:
    java.util.concurrent.ThreadPoolExecutor executorService -> a
    java.util.Map enqueuedJobs -> b
    void finished(com.squareup.okhttp.Job) -> a
com.squareup.okhttp.Dispatcher$RealResponseBody -> com.squareup.okhttp.f:
    java.net.HttpURLConnection connection -> a
    java.io.InputStream in -> b
com.squareup.okhttp.Failure -> com.squareup.okhttp.g:
    com.squareup.okhttp.Request request -> a
    java.lang.Throwable exception -> b
com.squareup.okhttp.Failure$1 -> com.squareup.okhttp.h:
com.squareup.okhttp.Failure$Builder -> com.squareup.okhttp.i:
    com.squareup.okhttp.Request request -> a
    java.lang.Throwable exception -> b
    com.squareup.okhttp.Failure$Builder request(com.squareup.okhttp.Request) -> a
    com.squareup.okhttp.Failure$Builder exception(java.lang.Throwable) -> a
    com.squareup.okhttp.Failure build() -> a
    com.squareup.okhttp.Request access$000(com.squareup.okhttp.Failure$Builder) -> a
    java.lang.Throwable access$100(com.squareup.okhttp.Failure$Builder) -> b
com.squareup.okhttp.HttpResponseCache -> com.squareup.okhttp.j:
    char[] DIGITS -> b
    com.squareup.okhttp.internal.DiskLruCache cache -> c
    int writeSuccessCount -> d
    int writeAbortCount -> e
    int networkCount -> f
    int hitCount -> g
    int requestCount -> h
    com.squareup.okhttp.OkResponseCache okResponseCache -> a
    java.lang.String uriToKey(java.net.URI) -> a
    java.lang.String bytesToHexString(byte[]) -> a
    java.net.CacheResponse get(java.net.URI,java.lang.String,java.util.Map) -> get
    java.net.CacheRequest put(java.net.URI,java.net.URLConnection) -> put
    boolean maybeRemove(java.lang.String,java.net.URI) -> a
    void update(java.net.CacheResponse,java.net.HttpURLConnection) -> a
    void abortQuietly(com.squareup.okhttp.internal.DiskLruCache$Editor) -> a
    com.squareup.okhttp.internal.http.HttpEngine getHttpEngine(java.net.URLConnection) -> a
    void trackResponse(com.squareup.okhttp.ResponseSource) -> a
    void trackConditionalCacheHit() -> a
    java.io.InputStream newBodyInputStream(com.squareup.okhttp.internal.DiskLruCache$Snapshot) -> b
    boolean access$000(com.squareup.okhttp.HttpResponseCache,java.lang.String,java.net.URI) -> a
    void access$100(com.squareup.okhttp.HttpResponseCache,java.net.CacheResponse,java.net.HttpURLConnection) -> a
    void access$200(com.squareup.okhttp.HttpResponseCache) -> a
    void access$300(com.squareup.okhttp.HttpResponseCache,com.squareup.okhttp.ResponseSource) -> a
    int access$808(com.squareup.okhttp.HttpResponseCache) -> b
    int access$908(com.squareup.okhttp.HttpResponseCache) -> c
    java.io.InputStream access$1000(com.squareup.okhttp.internal.DiskLruCache$Snapshot) -> a
com.squareup.okhttp.HttpResponseCache$1 -> com.squareup.okhttp.k:
    com.squareup.okhttp.HttpResponseCache this$0 -> a
    java.net.CacheResponse get(java.net.URI,java.lang.String,java.util.Map) -> a
    java.net.CacheRequest put(java.net.URI,java.net.URLConnection) -> a
    void maybeRemove(java.lang.String,java.net.URI) -> a
    void update(java.net.CacheResponse,java.net.HttpURLConnection) -> a
    void trackConditionalCacheHit() -> a
    void trackResponse(com.squareup.okhttp.ResponseSource) -> a
com.squareup.okhttp.HttpResponseCache$2 -> com.squareup.okhttp.l:
    com.squareup.okhttp.internal.DiskLruCache$Snapshot val$snapshot -> a
    void close() -> close
com.squareup.okhttp.HttpResponseCache$3 -> com.squareup.okhttp.m:
    int[] $SwitchMap$com$squareup$okhttp$ResponseSource -> a
com.squareup.okhttp.HttpResponseCache$CacheRequestImpl -> com.squareup.okhttp.n:
    com.squareup.okhttp.internal.DiskLruCache$Editor editor -> b
    java.io.OutputStream cacheOut -> c
    boolean done -> d
    java.io.OutputStream body -> e
    com.squareup.okhttp.HttpResponseCache this$0 -> a
    void abort() -> abort
    java.io.OutputStream getBody() -> getBody
    boolean access$700(com.squareup.okhttp.HttpResponseCache$CacheRequestImpl) -> a
    boolean access$702(com.squareup.okhttp.HttpResponseCache$CacheRequestImpl,boolean) -> a
com.squareup.okhttp.HttpResponseCache$CacheRequestImpl$1 -> com.squareup.okhttp.o:
    com.squareup.okhttp.HttpResponseCache val$this$0 -> a
    com.squareup.okhttp.internal.DiskLruCache$Editor val$editor -> b
    com.squareup.okhttp.HttpResponseCache$CacheRequestImpl this$1 -> c
    void close() -> close
    void write(byte[],int,int) -> write
com.squareup.okhttp.HttpResponseCache$Entry -> com.squareup.okhttp.p:
    java.lang.String uri -> a
    com.squareup.okhttp.internal.http.RawHeaders varyHeaders -> b
    java.lang.String requestMethod -> c
    com.squareup.okhttp.internal.http.RawHeaders responseHeaders -> d
    java.lang.String cipherSuite -> e
    java.security.cert.Certificate[] peerCertificates -> f
    java.security.cert.Certificate[] localCertificates -> g
    javax.net.ssl.SSLSocket getSslSocket(java.net.HttpURLConnection) -> a
    void writeTo(com.squareup.okhttp.internal.DiskLruCache$Editor) -> a
    boolean isHttps() -> a
    java.security.cert.Certificate[] readCertArray(com.squareup.okhttp.internal.StrictLineReader) -> a
    void writeCertArray(java.io.Writer,java.security.cert.Certificate[]) -> a
    boolean matches(java.net.URI,java.lang.String,java.util.Map) -> a
    boolean access$400(com.squareup.okhttp.HttpResponseCache$Entry) -> a
    com.squareup.okhttp.internal.http.RawHeaders access$1100(com.squareup.okhttp.HttpResponseCache$Entry) -> b
    java.lang.String access$1200(com.squareup.okhttp.HttpResponseCache$Entry) -> c
    java.security.cert.Certificate[] access$1300(com.squareup.okhttp.HttpResponseCache$Entry) -> d
    java.security.cert.Certificate[] access$1400(com.squareup.okhttp.HttpResponseCache$Entry) -> e
com.squareup.okhttp.HttpResponseCache$EntryCacheResponse -> com.squareup.okhttp.q:
    com.squareup.okhttp.HttpResponseCache$Entry entry -> a
    com.squareup.okhttp.internal.DiskLruCache$Snapshot snapshot -> b
    java.io.InputStream in -> c
    java.util.Map getHeaders() -> getHeaders
    java.io.InputStream getBody() -> getBody
    com.squareup.okhttp.internal.DiskLruCache$Snapshot access$500(com.squareup.okhttp.HttpResponseCache$EntryCacheResponse) -> a
com.squareup.okhttp.HttpResponseCache$EntrySecureCacheResponse -> com.squareup.okhttp.r:
    com.squareup.okhttp.HttpResponseCache$Entry entry -> a
    com.squareup.okhttp.internal.DiskLruCache$Snapshot snapshot -> b
    java.io.InputStream in -> c
    java.util.Map getHeaders() -> getHeaders
    java.io.InputStream getBody() -> getBody
    java.lang.String getCipherSuite() -> getCipherSuite
    java.util.List getServerCertificateChain() -> getServerCertificateChain
    java.security.Principal getPeerPrincipal() -> getPeerPrincipal
    java.util.List getLocalCertificateChain() -> getLocalCertificateChain
    java.security.Principal getLocalPrincipal() -> getLocalPrincipal
    com.squareup.okhttp.internal.DiskLruCache$Snapshot access$600(com.squareup.okhttp.HttpResponseCache$EntrySecureCacheResponse) -> a
com.squareup.okhttp.Job -> com.squareup.okhttp.Job:
    java.net.HttpURLConnection connection -> connection
    com.squareup.okhttp.Request request -> request
    com.squareup.okhttp.Response$Receiver responseReceiver -> responseReceiver
    com.squareup.okhttp.Dispatcher dispatcher -> dispatcher
    void run() -> run
    java.net.HttpURLConnection sendRequest() -> sendRequest
    com.squareup.okhttp.Response readResponse() -> readResponse
com.squareup.okhttp.OkAuthenticator -> com.squareup.okhttp.s:
    com.squareup.okhttp.OkAuthenticator$Credential authenticate(java.net.Proxy,java.net.URL,java.util.List) -> a
    com.squareup.okhttp.OkAuthenticator$Credential authenticateProxy(java.net.Proxy,java.net.URL,java.util.List) -> b
com.squareup.okhttp.OkAuthenticator$Challenge -> com.squareup.okhttp.t:
    java.lang.String scheme -> a
    java.lang.String realm -> b
    java.lang.String getScheme() -> a
    java.lang.String getRealm() -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.squareup.okhttp.OkAuthenticator$Credential -> com.squareup.okhttp.u:
    java.lang.String headerValue -> a
    com.squareup.okhttp.OkAuthenticator$Credential basic(java.lang.String,java.lang.String) -> a
    java.lang.String getHeaderValue() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.squareup.okhttp.OkHttpClient -> com.squareup.okhttp.v:
    java.util.List DEFAULT_TRANSPORTS -> a
    com.squareup.okhttp.RouteDatabase routeDatabase -> b
    com.squareup.okhttp.Dispatcher dispatcher -> c
    java.net.Proxy proxy -> d
    java.util.List transports -> e
    java.net.ProxySelector proxySelector -> f
    java.net.CookieHandler cookieHandler -> g
    java.net.ResponseCache responseCache -> h
    javax.net.ssl.SSLSocketFactory sslSocketFactory -> i
    javax.net.ssl.HostnameVerifier hostnameVerifier -> j
    com.squareup.okhttp.OkAuthenticator authenticator -> k
    com.squareup.okhttp.ConnectionPool connectionPool -> l
    boolean followProtocolRedirects -> m
    int connectTimeout -> n
    int readTimeout -> o
    void setConnectTimeout(long,java.util.concurrent.TimeUnit) -> a
    int getConnectTimeout() -> a
    void setReadTimeout(long,java.util.concurrent.TimeUnit) -> b
    int getReadTimeout() -> b
    java.net.Proxy getProxy() -> c
    java.net.ProxySelector getProxySelector() -> d
    java.net.CookieHandler getCookieHandler() -> e
    com.squareup.okhttp.OkHttpClient setResponseCache(java.net.ResponseCache) -> a
    com.squareup.okhttp.OkResponseCache getOkResponseCache() -> f
    com.squareup.okhttp.OkHttpClient setSslSocketFactory(javax.net.ssl.SSLSocketFactory) -> a
    javax.net.ssl.SSLSocketFactory getSslSocketFactory() -> g
    com.squareup.okhttp.OkHttpClient setHostnameVerifier(javax.net.ssl.HostnameVerifier) -> a
    javax.net.ssl.HostnameVerifier getHostnameVerifier() -> h
    com.squareup.okhttp.OkAuthenticator getAuthenticator() -> i
    com.squareup.okhttp.ConnectionPool getConnectionPool() -> j
    boolean getFollowProtocolRedirects() -> k
    com.squareup.okhttp.RouteDatabase getRoutesDatabase() -> l
    com.squareup.okhttp.OkHttpClient setTransports(java.util.List) -> a
    java.util.List getTransports() -> m
    java.net.HttpURLConnection open(java.net.URL) -> a
    java.net.HttpURLConnection open(java.net.URL,java.net.Proxy) -> a
    com.squareup.okhttp.OkHttpClient copyWithDefaults() -> n
    java.net.URLStreamHandler createURLStreamHandler(java.lang.String) -> createURLStreamHandler
com.squareup.okhttp.OkHttpClient$1 -> com.squareup.okhttp.w:
    java.lang.String val$protocol -> a
    com.squareup.okhttp.OkHttpClient this$0 -> b
    java.net.URLConnection openConnection(java.net.URL) -> openConnection
    java.net.URLConnection openConnection(java.net.URL,java.net.Proxy) -> openConnection
    int getDefaultPort() -> getDefaultPort
com.squareup.okhttp.OkResponseCache -> com.squareup.okhttp.x:
    java.net.CacheResponse get(java.net.URI,java.lang.String,java.util.Map) -> a
    java.net.CacheRequest put(java.net.URI,java.net.URLConnection) -> a
    void maybeRemove(java.lang.String,java.net.URI) -> a
    void update(java.net.CacheResponse,java.net.HttpURLConnection) -> a
    void trackConditionalCacheHit() -> a
    void trackResponse(com.squareup.okhttp.ResponseSource) -> a
com.squareup.okhttp.Request -> com.squareup.okhttp.y:
    com.squareup.okhttp.internal.http.RawHeaders headers -> a
    com.squareup.okhttp.Request$Body body -> b
    java.lang.Object tag -> c
    int headerCount() -> a
    java.lang.String headerName(int) -> a
    java.lang.String headerValue(int) -> b
    com.squareup.okhttp.Request$Body body() -> b
    java.lang.Object tag() -> c
com.squareup.okhttp.Request$Body -> com.squareup.okhttp.z:
    long contentLength() -> a
    void writeTo(java.io.OutputStream) -> a
com.squareup.okhttp.Response -> com.squareup.okhttp.aa:
    com.squareup.okhttp.Request request -> a
    int code -> b
    com.squareup.okhttp.internal.http.RawHeaders headers -> c
    com.squareup.okhttp.Response$Body body -> d
    com.squareup.okhttp.Response redirectedBy -> e
com.squareup.okhttp.Response$1 -> com.squareup.okhttp.ab:
com.squareup.okhttp.Response$Body -> com.squareup.okhttp.ac:
com.squareup.okhttp.Response$Builder -> com.squareup.okhttp.ad:
    com.squareup.okhttp.Request request -> a
    int code -> b
    com.squareup.okhttp.internal.http.RawHeaders headers -> c
    com.squareup.okhttp.Response$Body body -> d
    com.squareup.okhttp.Response redirectedBy -> e
    com.squareup.okhttp.Response$Builder addHeader(java.lang.String,java.lang.String) -> a
    com.squareup.okhttp.Response$Builder body(com.squareup.okhttp.Response$Body) -> a
    com.squareup.okhttp.Response build() -> a
    com.squareup.okhttp.Request access$000(com.squareup.okhttp.Response$Builder) -> a
    int access$100(com.squareup.okhttp.Response$Builder) -> b
    com.squareup.okhttp.internal.http.RawHeaders access$200(com.squareup.okhttp.Response$Builder) -> c
    com.squareup.okhttp.Response$Body access$300(com.squareup.okhttp.Response$Builder) -> d
    com.squareup.okhttp.Response access$400(com.squareup.okhttp.Response$Builder) -> e
com.squareup.okhttp.Response$Receiver -> com.squareup.okhttp.ae:
    void onFailure(com.squareup.okhttp.Failure) -> a
    void onResponse(com.squareup.okhttp.Response) -> a
com.squareup.okhttp.ResponseSource -> com.squareup.okhttp.ResponseSource:
    com.squareup.okhttp.ResponseSource CACHE -> CACHE
    com.squareup.okhttp.ResponseSource CONDITIONAL_CACHE -> CONDITIONAL_CACHE
    com.squareup.okhttp.ResponseSource NETWORK -> NETWORK
    com.squareup.okhttp.ResponseSource[] $VALUES -> $VALUES
    com.squareup.okhttp.ResponseSource[] values() -> values
    com.squareup.okhttp.ResponseSource valueOf(java.lang.String) -> valueOf
    boolean requiresConnection() -> requiresConnection
com.squareup.okhttp.Route -> com.squareup.okhttp.af:
    com.squareup.okhttp.Address address -> a
    java.net.Proxy proxy -> b
    java.net.InetSocketAddress inetSocketAddress -> c
    boolean modernTls -> d
    com.squareup.okhttp.Address getAddress() -> a
    java.net.Proxy getProxy() -> b
    com.squareup.okhttp.Route flipTlsMode() -> c
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.squareup.okhttp.RouteDatabase -> com.squareup.okhttp.ag:
    java.util.Set failedRoutes -> a
    void failed(com.squareup.okhttp.Route,java.io.IOException) -> a
    void connected(com.squareup.okhttp.Route) -> a
    boolean shouldPostpone(com.squareup.okhttp.Route) -> b
com.squareup.okhttp.TunnelRequest -> com.squareup.okhttp.ah:
    java.lang.String host -> a
    int port -> b
    java.lang.String userAgent -> c
    java.lang.String proxyAuthorization -> d
    com.squareup.okhttp.internal.http.RawHeaders getRequestHeaders() -> a
com.squareup.okhttp.internal.AbstractOutputStream -> com.squareup.okhttp.internal.a:
    boolean closed -> a
    void write(int) -> write
    void checkNotClosed() -> a
    boolean isClosed() -> b
com.squareup.okhttp.internal.Base64 -> com.squareup.okhttp.internal.b:
    byte[] MAP -> a
    byte[] decode(byte[]) -> a
    byte[] decode(byte[],int) -> a
    java.lang.String encode(byte[]) -> b
com.squareup.okhttp.internal.DiskLruCache -> com.squareup.okhttp.internal.c:
    java.util.regex.Pattern LEGAL_KEY_PATTERN -> a
    java.io.File directory -> c
    java.io.File journalFile -> d
    java.io.File journalFileTmp -> e
    java.io.File journalFileBackup -> f
    int appVersion -> g
    long maxSize -> h
    int valueCount -> i
    long size -> j
    java.io.Writer journalWriter -> k
    java.util.LinkedHashMap lruEntries -> l
    int redundantOpCount -> m
    long nextSequenceNumber -> n
    java.util.concurrent.ThreadPoolExecutor executorService -> b
    java.util.concurrent.Callable cleanupCallable -> o
    java.io.OutputStream NULL_OUTPUT_STREAM -> p
    com.squareup.okhttp.internal.DiskLruCache open(java.io.File,int,int,long) -> a
    void readJournal() -> c
    void readJournalLine(java.lang.String) -> d
    void processJournal() -> d
    void rebuildJournal() -> e
    void deleteIfExists(java.io.File) -> a
    void renameTo(java.io.File,java.io.File,boolean) -> a
    com.squareup.okhttp.internal.DiskLruCache$Snapshot get(java.lang.String) -> a
    com.squareup.okhttp.internal.DiskLruCache$Editor edit(java.lang.String) -> b
    com.squareup.okhttp.internal.DiskLruCache$Editor edit(java.lang.String,long) -> a
    void completeEdit(com.squareup.okhttp.internal.DiskLruCache$Editor,boolean) -> a
    boolean journalRebuildRequired() -> f
    boolean remove(java.lang.String) -> c
    void checkNotClosed() -> g
    void close() -> close
    void trimToSize() -> h
    void delete() -> a
    void validateKey(java.lang.String) -> e
    java.io.Writer access$000(com.squareup.okhttp.internal.DiskLruCache) -> a
    void access$100(com.squareup.okhttp.internal.DiskLruCache) -> b
    boolean access$200(com.squareup.okhttp.internal.DiskLruCache) -> c
    void access$300(com.squareup.okhttp.internal.DiskLruCache) -> d
    int access$402(com.squareup.okhttp.internal.DiskLruCache,int) -> a
    com.squareup.okhttp.internal.DiskLruCache$Editor access$1600(com.squareup.okhttp.internal.DiskLruCache,java.lang.String,long) -> a
    int access$1800(com.squareup.okhttp.internal.DiskLruCache) -> e
    java.io.File access$1900(com.squareup.okhttp.internal.DiskLruCache) -> f
    java.io.OutputStream access$2000() -> b
    void access$2200(com.squareup.okhttp.internal.DiskLruCache,com.squareup.okhttp.internal.DiskLruCache$Editor,boolean) -> a
com.squareup.okhttp.internal.DiskLruCache$1 -> com.squareup.okhttp.internal.d:
    com.squareup.okhttp.internal.DiskLruCache this$0 -> a
    java.lang.Void call() -> a
    java.lang.Object call() -> call
com.squareup.okhttp.internal.DiskLruCache$2 -> com.squareup.okhttp.internal.e:
    void write(int) -> write
com.squareup.okhttp.internal.DiskLruCache$Editor -> com.squareup.okhttp.internal.f:
    com.squareup.okhttp.internal.DiskLruCache$Entry entry -> b
    boolean[] written -> c
    boolean hasErrors -> d
    boolean committed -> e
    com.squareup.okhttp.internal.DiskLruCache this$0 -> a
    java.io.OutputStream newOutputStream(int) -> a
    void commit() -> a
    void abort() -> b
    com.squareup.okhttp.internal.DiskLruCache$Entry access$1400(com.squareup.okhttp.internal.DiskLruCache$Editor) -> a
    boolean[] access$1500(com.squareup.okhttp.internal.DiskLruCache$Editor) -> b
    boolean access$2302(com.squareup.okhttp.internal.DiskLruCache$Editor,boolean) -> a
com.squareup.okhttp.internal.DiskLruCache$Editor$FaultHidingOutputStream -> com.squareup.okhttp.internal.g:
    com.squareup.okhttp.internal.DiskLruCache$Editor this$1 -> a
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
com.squareup.okhttp.internal.DiskLruCache$Entry -> com.squareup.okhttp.internal.h:
    java.lang.String key -> b
    long[] lengths -> c
    boolean readable -> d
    com.squareup.okhttp.internal.DiskLruCache$Editor currentEditor -> e
    long sequenceNumber -> f
    com.squareup.okhttp.internal.DiskLruCache this$0 -> a
    java.lang.String getLengths() -> a
    void setLengths(java.lang.String[]) -> a
    java.io.IOException invalidLengths(java.lang.String[]) -> b
    java.io.File getCleanFile(int) -> a
    java.io.File getDirtyFile(int) -> b
    boolean access$602(com.squareup.okhttp.internal.DiskLruCache$Entry,boolean) -> a
    com.squareup.okhttp.internal.DiskLruCache$Editor access$702(com.squareup.okhttp.internal.DiskLruCache$Entry,com.squareup.okhttp.internal.DiskLruCache$Editor) -> a
    void access$800(com.squareup.okhttp.internal.DiskLruCache$Entry,java.lang.String[]) -> a
    com.squareup.okhttp.internal.DiskLruCache$Editor access$700(com.squareup.okhttp.internal.DiskLruCache$Entry) -> a
    long[] access$1000(com.squareup.okhttp.internal.DiskLruCache$Entry) -> b
    java.lang.String access$1100(com.squareup.okhttp.internal.DiskLruCache$Entry) -> c
    boolean access$600(com.squareup.okhttp.internal.DiskLruCache$Entry) -> d
    long access$1200(com.squareup.okhttp.internal.DiskLruCache$Entry) -> e
    long access$1202(com.squareup.okhttp.internal.DiskLruCache$Entry,long) -> a
com.squareup.okhttp.internal.DiskLruCache$Snapshot -> com.squareup.okhttp.internal.i:
    java.lang.String key -> b
    long sequenceNumber -> c
    java.io.InputStream[] ins -> d
    long[] lengths -> e
    com.squareup.okhttp.internal.DiskLruCache this$0 -> a
    com.squareup.okhttp.internal.DiskLruCache$Editor edit() -> a
    java.io.InputStream getInputStream(int) -> a
    void close() -> close
com.squareup.okhttp.internal.Dns -> com.squareup.okhttp.internal.j:
    com.squareup.okhttp.internal.Dns DEFAULT -> a
    java.net.InetAddress[] getAllByName(java.lang.String) -> a
com.squareup.okhttp.internal.Dns$1 -> com.squareup.okhttp.internal.k:
    java.net.InetAddress[] getAllByName(java.lang.String) -> a
com.squareup.okhttp.internal.NamedRunnable -> com.squareup.okhttp.internal.NamedRunnable:
    java.lang.String name -> name
    void run() -> run
    void execute() -> execute
com.squareup.okhttp.internal.Platform -> com.squareup.okhttp.internal.l:
    com.squareup.okhttp.internal.Platform PLATFORM -> a
    java.lang.reflect.Constructor deflaterConstructor -> b
    com.squareup.okhttp.internal.Platform get() -> a
    java.lang.String getPrefix() -> b
    void logW(java.lang.String) -> a
    void tagSocket(java.net.Socket) -> a
    void untagSocket(java.net.Socket) -> b
    java.net.URI toUriLenient(java.net.URL) -> a
    void enableTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String) -> a
    void supportTlsIntolerantServer(javax.net.ssl.SSLSocket) -> a
    byte[] getNpnSelectedProtocol(javax.net.ssl.SSLSocket) -> b
    void setNpnProtocols(javax.net.ssl.SSLSocket,byte[]) -> a
    void connectSocket(java.net.Socket,java.net.InetSocketAddress,int) -> a
    java.io.OutputStream newDeflaterOutputStream(java.io.OutputStream,java.util.zip.Deflater,boolean) -> a
    int getMtu(java.net.Socket) -> c
    com.squareup.okhttp.internal.Platform findPlatform() -> c
com.squareup.okhttp.internal.Platform$1 -> com.squareup.okhttp.internal.m:
com.squareup.okhttp.internal.Platform$Android23 -> com.squareup.okhttp.internal.n:
    java.lang.Class openSslSocketClass -> a
    java.lang.reflect.Method setUseSessionTickets -> b
    java.lang.reflect.Method setHostname -> c
    void connectSocket(java.net.Socket,java.net.InetSocketAddress,int) -> a
    void enableTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String) -> a
com.squareup.okhttp.internal.Platform$Android41 -> com.squareup.okhttp.internal.o:
    java.lang.reflect.Method setNpnProtocols -> b
    java.lang.reflect.Method getNpnSelectedProtocol -> c
    void setNpnProtocols(javax.net.ssl.SSLSocket,byte[]) -> a
    byte[] getNpnSelectedProtocol(javax.net.ssl.SSLSocket) -> b
com.squareup.okhttp.internal.Platform$Java6 -> com.squareup.okhttp.internal.p:
    java.lang.reflect.Method getMtu -> a
    int getMtu(java.net.Socket) -> c
com.squareup.okhttp.internal.Platform$JdkWithJettyNpnPlatform -> com.squareup.okhttp.internal.q:
    java.lang.reflect.Method getMethod -> a
    java.lang.reflect.Method putMethod -> b
    java.lang.Class clientProviderClass -> c
    java.lang.Class serverProviderClass -> d
    void setNpnProtocols(javax.net.ssl.SSLSocket,byte[]) -> a
    byte[] getNpnSelectedProtocol(javax.net.ssl.SSLSocket) -> b
com.squareup.okhttp.internal.Platform$JettyNpnProvider -> com.squareup.okhttp.internal.r:
    java.util.List protocols -> a
    boolean unsupported -> b
    java.lang.String selected -> c
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    boolean access$300(com.squareup.okhttp.internal.Platform$JettyNpnProvider) -> a
    java.lang.String access$400(com.squareup.okhttp.internal.Platform$JettyNpnProvider) -> b
com.squareup.okhttp.internal.StrictLineReader -> com.squareup.okhttp.internal.s:
    java.io.InputStream in -> a
    java.nio.charset.Charset charset -> b
    byte[] buf -> c
    int pos -> d
    int end -> e
    void close() -> close
    java.lang.String readLine() -> a
    int readInt() -> b
    void fillBuf() -> c
    java.nio.charset.Charset access$000(com.squareup.okhttp.internal.StrictLineReader) -> a
com.squareup.okhttp.internal.StrictLineReader$1 -> com.squareup.okhttp.internal.t:
    com.squareup.okhttp.internal.StrictLineReader this$0 -> a
    java.lang.String toString() -> toString
com.squareup.okhttp.internal.Util -> com.squareup.okhttp.internal.u:
    byte[] EMPTY_BYTE_ARRAY -> a
    java.lang.String[] EMPTY_STRING_ARRAY -> b
    java.nio.charset.Charset ISO_8859_1 -> c
    java.nio.charset.Charset US_ASCII -> d
    java.nio.charset.Charset UTF_8 -> e
    java.util.concurrent.atomic.AtomicReference skipBuffer -> f
    int getEffectivePort(java.net.URI) -> a
    int getEffectivePort(java.net.URL) -> a
    int getEffectivePort(java.lang.String,int) -> a
    int getDefaultPort(java.lang.String) -> a
    void checkOffsetAndCount(int,int,int) -> a
    boolean equal(java.lang.Object,java.lang.Object) -> a
    void closeQuietly(java.io.Closeable) -> a
    void closeAll(java.io.Closeable,java.io.Closeable) -> a
    void deleteContents(java.io.File) -> a
    int readSingleByte(java.io.InputStream) -> a
    void writeSingleByte(java.io.OutputStream,int) -> a
    void readFully(java.io.InputStream,byte[]) -> a
    void readFully(java.io.InputStream,byte[],int,int) -> a
    void skipAll(java.io.InputStream) -> b
    long skipByReading(java.io.InputStream,long) -> a
    java.lang.String readAsciiLine(java.io.InputStream) -> c
    java.util.List immutableList(java.util.List) -> a
    java.util.concurrent.ThreadFactory daemonThreadFactory(java.lang.String) -> b
com.squareup.okhttp.internal.Util$1 -> com.squareup.okhttp.internal.v:
    java.lang.String val$name -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.squareup.okhttp.internal.http.AbstractHttpInputStream -> com.squareup.okhttp.internal.http.a:
    java.io.InputStream in -> a
    com.squareup.okhttp.internal.http.HttpEngine httpEngine -> b
    java.net.CacheRequest cacheRequest -> d
    java.io.OutputStream cacheBody -> e
    boolean closed -> c
    int read() -> read
    void checkNotClosed() -> a
    void cacheWrite(byte[],int,int) -> a
    void endOfInput() -> b
    void unexpectedEndOfInput() -> c
com.squareup.okhttp.internal.http.HeaderParser -> com.squareup.okhttp.internal.http.b:
    void parseCacheControl(java.lang.String,com.squareup.okhttp.internal.http.HeaderParser$CacheControlHandler) -> a
    int skipUntil(java.lang.String,int,java.lang.String) -> a
    int skipWhitespace(java.lang.String,int) -> a
    int parseSeconds(java.lang.String) -> a
com.squareup.okhttp.internal.http.HeaderParser$CacheControlHandler -> com.squareup.okhttp.internal.http.c:
    void handle(java.lang.String,java.lang.String) -> a
com.squareup.okhttp.internal.http.HttpAuthenticator -> com.squareup.okhttp.internal.http.d:
    com.squareup.okhttp.OkAuthenticator SYSTEM_DEFAULT -> a
    boolean processAuthHeader(com.squareup.okhttp.OkAuthenticator,int,com.squareup.okhttp.internal.http.RawHeaders,com.squareup.okhttp.internal.http.RawHeaders,java.net.Proxy,java.net.URL) -> a
    java.util.List parseChallenges(com.squareup.okhttp.internal.http.RawHeaders,java.lang.String) -> a
com.squareup.okhttp.internal.http.HttpAuthenticator$1 -> com.squareup.okhttp.internal.http.e:
    com.squareup.okhttp.OkAuthenticator$Credential authenticate(java.net.Proxy,java.net.URL,java.util.List) -> a
    com.squareup.okhttp.OkAuthenticator$Credential authenticateProxy(java.net.Proxy,java.net.URL,java.util.List) -> b
    java.net.InetAddress getConnectToInetAddress(java.net.Proxy,java.net.URL) -> a
com.squareup.okhttp.internal.http.HttpDate -> com.squareup.okhttp.internal.http.f:
    java.lang.ThreadLocal STANDARD_DATE_FORMAT -> a
    java.lang.String[] BROWSER_COMPATIBLE_DATE_FORMAT_STRINGS -> b
    java.text.DateFormat[] BROWSER_COMPATIBLE_DATE_FORMATS -> c
    java.util.Date parse(java.lang.String) -> a
    java.lang.String format(java.util.Date) -> a
com.squareup.okhttp.internal.http.HttpDate$1 -> com.squareup.okhttp.internal.http.g:
    java.text.DateFormat initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.squareup.okhttp.internal.http.HttpEngine -> com.squareup.okhttp.internal.http.h:
    java.net.CacheResponse GATEWAY_TIMEOUT_RESPONSE -> j
    com.squareup.okhttp.internal.http.Policy policy -> a
    com.squareup.okhttp.OkHttpClient client -> b
    java.lang.String method -> c
    com.squareup.okhttp.ResponseSource responseSource -> k
    com.squareup.okhttp.Connection connection -> d
    com.squareup.okhttp.internal.http.RouteSelector routeSelector -> e
    java.io.OutputStream requestBodyOut -> l
    com.squareup.okhttp.internal.http.Transport transport -> m
    java.io.InputStream responseTransferIn -> n
    java.io.InputStream responseBodyIn -> o
    java.net.CacheResponse cacheResponse -> p
    java.net.CacheRequest cacheRequest -> q
    long sentRequestMillis -> f
    boolean transparentGzip -> r
    java.net.URI uri -> g
    com.squareup.okhttp.internal.http.RequestHeaders requestHeaders -> h
    com.squareup.okhttp.internal.http.ResponseHeaders responseHeaders -> i
    com.squareup.okhttp.internal.http.ResponseHeaders cachedResponseHeaders -> s
    java.io.InputStream cachedResponseBody -> t
    boolean automaticallyReleaseConnectionToPool -> u
    boolean connectionReleased -> v
    java.net.URI getUri() -> a
    void sendRequest() -> b
    void initResponseSource() -> u
    void sendSocketRequest() -> v
    void connect() -> c
    void connected(com.squareup.okhttp.Connection) -> a
    void writingRequestHeaders() -> d
    void setResponse(com.squareup.okhttp.internal.http.ResponseHeaders,java.io.InputStream) -> a
    boolean hasRequestBody() -> e
    java.io.OutputStream getRequestBody() -> f
    boolean hasResponse() -> g
    com.squareup.okhttp.internal.http.RequestHeaders getRequestHeaders() -> h
    com.squareup.okhttp.internal.http.ResponseHeaders getResponseHeaders() -> i
    int getResponseCode() -> j
    java.io.InputStream getResponseBody() -> k
    java.net.CacheResponse getCacheResponse() -> l
    com.squareup.okhttp.Connection getConnection() -> m
    boolean acceptCacheResponseType(java.net.CacheResponse) -> a
    void maybeCache() -> w
    void automaticallyReleaseConnectionToPool() -> n
    void release(boolean) -> a
    void initContentStream(java.io.InputStream) -> a
    boolean hasResponseBody() -> o
    void prepareRawRequestHeaders() -> x
    java.lang.String getRequestLine() -> p
    java.lang.String requestString() -> y
    java.lang.String requestPath(java.net.URL) -> a
    boolean includeAuthorityInRequestLine() -> q
    java.lang.String getDefaultUserAgent() -> r
    java.lang.String getOriginAddress(java.net.URL) -> b
    void readResponse() -> s
    com.squareup.okhttp.TunnelRequest getTunnelConfig() -> t
    void receiveHeaders(com.squareup.okhttp.internal.http.RawHeaders) -> a
com.squareup.okhttp.internal.http.HttpEngine$1 -> com.squareup.okhttp.internal.http.i:
    java.util.Map getHeaders() -> getHeaders
    java.io.InputStream getBody() -> getBody
com.squareup.okhttp.internal.http.HttpTransport -> com.squareup.okhttp.internal.http.j:
    com.squareup.okhttp.internal.http.HttpEngine httpEngine -> a
    java.io.InputStream socketIn -> b
    java.io.OutputStream socketOut -> c
    java.io.OutputStream requestOut -> d
    java.io.OutputStream createRequestBody() -> a
    void flushRequest() -> b
    void writeRequestBody(com.squareup.okhttp.internal.http.RetryableOutputStream) -> a
    void writeRequestHeaders() -> c
    com.squareup.okhttp.internal.http.ResponseHeaders readResponseHeaders() -> d
    boolean makeReusable(boolean,java.io.OutputStream,java.io.InputStream) -> a
    boolean discardStream(com.squareup.okhttp.internal.http.HttpEngine,java.io.InputStream) -> b
    java.io.InputStream getTransferStream(java.net.CacheRequest) -> a
    boolean access$200(com.squareup.okhttp.internal.http.HttpEngine,java.io.InputStream) -> a
    com.squareup.okhttp.internal.http.HttpEngine access$300(com.squareup.okhttp.internal.http.HttpTransport) -> a
    java.io.InputStream access$400(com.squareup.okhttp.internal.http.HttpTransport) -> b
com.squareup.okhttp.internal.http.HttpTransport$1 -> com.squareup.okhttp.internal.http.k:
com.squareup.okhttp.internal.http.HttpTransport$ChunkedInputStream -> com.squareup.okhttp.internal.http.l:
    com.squareup.okhttp.internal.http.HttpTransport transport -> d
    int bytesRemainingInChunk -> e
    boolean hasMoreChunks -> f
    int read(byte[],int,int) -> read
    void readChunkSize() -> d
    int available() -> available
    void close() -> close
com.squareup.okhttp.internal.http.HttpTransport$ChunkedOutputStream -> com.squareup.okhttp.internal.http.m:
    byte[] CRLF -> b
    byte[] HEX_DIGITS -> c
    byte[] FINAL_CHUNK -> d
    byte[] hex -> e
    java.io.OutputStream socketOut -> f
    int maxChunkLength -> g
    java.io.ByteArrayOutputStream bufferedChunk -> h
    int dataLength(int) -> a
    void write(byte[],int,int) -> write
    void writeHex(int) -> b
    void flush() -> flush
    void close() -> close
    void writeBufferedChunkToSocket() -> c
com.squareup.okhttp.internal.http.HttpTransport$FixedLengthInputStream -> com.squareup.okhttp.internal.http.n:
    int bytesRemaining -> d
    int read(byte[],int,int) -> read
    int available() -> available
    void close() -> close
com.squareup.okhttp.internal.http.HttpTransport$FixedLengthOutputStream -> com.squareup.okhttp.internal.http.o:
    java.io.OutputStream socketOut -> b
    long bytesRemaining -> c
    void write(byte[],int,int) -> write
    void flush() -> flush
    void close() -> close
com.squareup.okhttp.internal.http.HttpURLConnectionImpl -> com.squareup.okhttp.internal.http.HttpURLConnectionImpl:
    com.squareup.okhttp.OkHttpClient client -> a
    com.squareup.okhttp.internal.http.RawHeaders rawRequestHeaders -> d
    long fixedContentLength -> e
    int redirectionCount -> f
    java.io.IOException httpEngineFailure -> b
    com.squareup.okhttp.internal.http.HttpEngine httpEngine -> c
    void connect() -> connect
    void disconnect() -> disconnect
    java.io.InputStream getErrorStream() -> getErrorStream
    java.lang.String getHeaderField(int) -> getHeaderField
    java.lang.String getHeaderField(java.lang.String) -> getHeaderField
    java.lang.String getHeaderFieldKey(int) -> getHeaderFieldKey
    java.util.Map getHeaderFields() -> getHeaderFields
    java.util.Map getRequestProperties() -> getRequestProperties
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    java.security.Permission getPermission() -> getPermission
    java.lang.String getRequestProperty(java.lang.String) -> getRequestProperty
    void setConnectTimeout(int) -> setConnectTimeout
    int getConnectTimeout() -> getConnectTimeout
    void setReadTimeout(int) -> setReadTimeout
    int getReadTimeout() -> getReadTimeout
    void initHttpEngine() -> e
    java.net.HttpURLConnection getHttpConnectionToCache() -> a
    com.squareup.okhttp.internal.http.HttpEngine newHttpEngine(java.lang.String,com.squareup.okhttp.internal.http.RawHeaders,com.squareup.okhttp.Connection,com.squareup.okhttp.internal.http.RetryableOutputStream) -> a
    com.squareup.okhttp.internal.http.HttpEngine getResponse() -> f
    boolean execute(boolean) -> a
    boolean handleFailure(java.io.IOException) -> a
    boolean isRecoverable(java.io.IOException) -> b
    com.squareup.okhttp.internal.http.HttpEngine getHttpEngine() -> b
    com.squareup.okhttp.internal.http.HttpURLConnectionImpl$Retry processResponseHeaders() -> g
    long getFixedContentLength() -> c
    int getChunkLength() -> d
    boolean usingProxy() -> usingProxy
    java.lang.String getResponseMessage() -> getResponseMessage
    int getResponseCode() -> getResponseCode
    void setRequestProperty(java.lang.String,java.lang.String) -> setRequestProperty
    void addRequestProperty(java.lang.String,java.lang.String) -> addRequestProperty
    void setTransports(java.lang.String,boolean) -> a
    void setFixedLengthStreamingMode(int) -> setFixedLengthStreamingMode
    void setFixedLengthStreamingMode(long) -> a
com.squareup.okhttp.internal.http.HttpURLConnectionImpl$Retry -> com.squareup.okhttp.internal.http.HttpURLConnectionImpl$Retry:
    com.squareup.okhttp.internal.http.HttpURLConnectionImpl$Retry NONE -> NONE
    com.squareup.okhttp.internal.http.HttpURLConnectionImpl$Retry SAME_CONNECTION -> SAME_CONNECTION
    com.squareup.okhttp.internal.http.HttpURLConnectionImpl$Retry DIFFERENT_CONNECTION -> DIFFERENT_CONNECTION
    com.squareup.okhttp.internal.http.HttpURLConnectionImpl$Retry[] $VALUES -> $VALUES
    com.squareup.okhttp.internal.http.HttpURLConnectionImpl$Retry[] values() -> values
    com.squareup.okhttp.internal.http.HttpURLConnectionImpl$Retry valueOf(java.lang.String) -> valueOf
com.squareup.okhttp.internal.http.HttpsEngine -> com.squareup.okhttp.internal.http.p:
    javax.net.ssl.SSLSocket sslSocket -> j
    void connected(com.squareup.okhttp.Connection) -> a
    boolean acceptCacheResponseType(java.net.CacheResponse) -> a
    boolean includeAuthorityInRequestLine() -> q
    javax.net.ssl.SSLSocket getSslSocket() -> u
    com.squareup.okhttp.TunnelRequest getTunnelConfig() -> t
com.squareup.okhttp.internal.http.HttpsURLConnectionImpl -> com.squareup.okhttp.internal.http.q:
    com.squareup.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate -> a
    java.lang.String getCipherSuite() -> getCipherSuite
    java.security.cert.Certificate[] getLocalCertificates() -> getLocalCertificates
    java.security.cert.Certificate[] getServerCertificates() -> getServerCertificates
    java.security.Principal getPeerPrincipal() -> getPeerPrincipal
    java.security.Principal getLocalPrincipal() -> getLocalPrincipal
    com.squareup.okhttp.internal.http.HttpEngine getHttpEngine() -> a
    javax.net.ssl.SSLSocket getSslSocket() -> b
    void disconnect() -> disconnect
    java.io.InputStream getErrorStream() -> getErrorStream
    java.lang.String getRequestMethod() -> getRequestMethod
    int getResponseCode() -> getResponseCode
    java.lang.String getResponseMessage() -> getResponseMessage
    void setRequestMethod(java.lang.String) -> setRequestMethod
    boolean usingProxy() -> usingProxy
    boolean getInstanceFollowRedirects() -> getInstanceFollowRedirects
    void setInstanceFollowRedirects(boolean) -> setInstanceFollowRedirects
    void connect() -> connect
    boolean getAllowUserInteraction() -> getAllowUserInteraction
    java.lang.Object getContent() -> getContent
    java.lang.Object getContent(java.lang.Class[]) -> getContent
    java.lang.String getContentEncoding() -> getContentEncoding
    int getContentLength() -> getContentLength
    java.lang.String getContentType() -> getContentType
    long getDate() -> getDate
    boolean getDefaultUseCaches() -> getDefaultUseCaches
    boolean getDoInput() -> getDoInput
    boolean getDoOutput() -> getDoOutput
    long getExpiration() -> getExpiration
    java.lang.String getHeaderField(int) -> getHeaderField
    java.util.Map getHeaderFields() -> getHeaderFields
    java.util.Map getRequestProperties() -> getRequestProperties
    void addRequestProperty(java.lang.String,java.lang.String) -> addRequestProperty
    java.lang.String getHeaderField(java.lang.String) -> getHeaderField
    long getHeaderFieldDate(java.lang.String,long) -> getHeaderFieldDate
    int getHeaderFieldInt(java.lang.String,int) -> getHeaderFieldInt
    java.lang.String getHeaderFieldKey(int) -> getHeaderFieldKey
    long getIfModifiedSince() -> getIfModifiedSince
    java.io.InputStream getInputStream() -> getInputStream
    long getLastModified() -> getLastModified
    java.io.OutputStream getOutputStream() -> getOutputStream
    java.security.Permission getPermission() -> getPermission
    java.lang.String getRequestProperty(java.lang.String) -> getRequestProperty
    java.net.URL getURL() -> getURL
    boolean getUseCaches() -> getUseCaches
    void setAllowUserInteraction(boolean) -> setAllowUserInteraction
    void setDefaultUseCaches(boolean) -> setDefaultUseCaches
    void setDoInput(boolean) -> setDoInput
    void setDoOutput(boolean) -> setDoOutput
    void setIfModifiedSince(long) -> setIfModifiedSince
    void setRequestProperty(java.lang.String,java.lang.String) -> setRequestProperty
    void setUseCaches(boolean) -> setUseCaches
    void setConnectTimeout(int) -> setConnectTimeout
    int getConnectTimeout() -> getConnectTimeout
    void setReadTimeout(int) -> setReadTimeout
    int getReadTimeout() -> getReadTimeout
    java.lang.String toString() -> toString
    void setFixedLengthStreamingMode(int) -> setFixedLengthStreamingMode
    void setChunkedStreamingMode(int) -> setChunkedStreamingMode
    void setHostnameVerifier(javax.net.ssl.HostnameVerifier) -> setHostnameVerifier
    javax.net.ssl.HostnameVerifier getHostnameVerifier() -> getHostnameVerifier
    void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory) -> setSSLSocketFactory
    javax.net.ssl.SSLSocketFactory getSSLSocketFactory() -> getSSLSocketFactory
com.squareup.okhttp.internal.http.HttpsURLConnectionImpl$1 -> com.squareup.okhttp.internal.http.r:
com.squareup.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate -> com.squareup.okhttp.internal.http.s:
    com.squareup.okhttp.internal.http.HttpsURLConnectionImpl this$0 -> d
    java.net.HttpURLConnection getHttpConnectionToCache() -> a
    java.net.SecureCacheResponse getSecureCacheResponse() -> e
com.squareup.okhttp.internal.http.OkResponseCacheAdapter -> com.squareup.okhttp.internal.http.t:
    java.net.ResponseCache responseCache -> a
    java.net.CacheResponse get(java.net.URI,java.lang.String,java.util.Map) -> a
    java.net.CacheRequest put(java.net.URI,java.net.URLConnection) -> a
    void maybeRemove(java.lang.String,java.net.URI) -> a
    void update(java.net.CacheResponse,java.net.HttpURLConnection) -> a
    void trackConditionalCacheHit() -> a
    void trackResponse(com.squareup.okhttp.ResponseSource) -> a
com.squareup.okhttp.internal.http.Policy -> com.squareup.okhttp.internal.http.u:
    boolean getUseCaches() -> getUseCaches
    java.net.HttpURLConnection getHttpConnectionToCache() -> a
    java.net.URL getURL() -> getURL
    long getIfModifiedSince() -> getIfModifiedSince
    boolean usingProxy() -> usingProxy
    int getChunkLength() -> d
    long getFixedContentLength() -> c
com.squareup.okhttp.internal.http.RawHeaders -> com.squareup.okhttp.internal.http.v:
    java.util.Comparator FIELD_NAME_COMPARATOR -> a
    java.util.List namesAndValues -> b
    java.lang.String requestLine -> c
    java.lang.String statusLine -> d
    int httpMinorVersion -> e
    int responseCode -> f
    java.lang.String responseMessage -> g
    void setRequestLine(java.lang.String) -> a
    void setStatusLine(java.lang.String) -> b
    void addSpdyRequestHeaders(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String getStatusLine() -> a
    int getHttpMinorVersion() -> b
    int getResponseCode() -> c
    java.lang.String getResponseMessage() -> d
    void addLine(java.lang.String) -> c
    void add(java.lang.String,java.lang.String) -> a
    void addLenient(java.lang.String,java.lang.String) -> c
    void removeAll(java.lang.String) -> d
    void addAll(java.lang.String,java.util.List) -> a
    void set(java.lang.String,java.lang.String) -> b
    int length() -> e
    java.lang.String getFieldName(int) -> a
    java.lang.String getValue(int) -> b
    java.lang.String get(java.lang.String) -> e
    com.squareup.okhttp.internal.http.RawHeaders getAll(java.util.Set) -> a
    byte[] toBytes() -> f
    com.squareup.okhttp.internal.http.RawHeaders fromBytes(java.io.InputStream) -> a
    void readHeaders(java.io.InputStream,com.squareup.okhttp.internal.http.RawHeaders) -> a
    java.util.Map toMultimap(boolean) -> a
    com.squareup.okhttp.internal.http.RawHeaders fromMultimap(java.util.Map,boolean) -> a
    java.util.List toNameValueBlock() -> g
    com.squareup.okhttp.internal.http.RawHeaders fromNameValueBlock(java.util.List) -> a
com.squareup.okhttp.internal.http.RawHeaders$1 -> com.squareup.okhttp.internal.http.w:
    int compare(java.lang.String,java.lang.String) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.squareup.okhttp.internal.http.RequestHeaders -> com.squareup.okhttp.internal.http.x:
    java.net.URI uri -> a
    com.squareup.okhttp.internal.http.RawHeaders headers -> b
    boolean noCache -> c
    int maxAgeSeconds -> d
    int maxStaleSeconds -> e
    int minFreshSeconds -> f
    boolean onlyIfCached -> g
    boolean hasAuthorization -> h
    long contentLength -> i
    java.lang.String transferEncoding -> j
    java.lang.String userAgent -> k
    java.lang.String host -> l
    java.lang.String connection -> m
    java.lang.String acceptEncoding -> n
    java.lang.String contentType -> o
    java.lang.String ifModifiedSince -> p
    java.lang.String ifNoneMatch -> q
    java.lang.String proxyAuthorization -> r
    boolean isChunked() -> a
    boolean hasConnectionClose() -> b
    com.squareup.okhttp.internal.http.RawHeaders getHeaders() -> c
    boolean isNoCache() -> d
    int getMaxAgeSeconds() -> e
    int getMaxStaleSeconds() -> f
    int getMinFreshSeconds() -> g
    boolean isOnlyIfCached() -> h
    boolean hasAuthorization() -> i
    long getContentLength() -> j
    java.lang.String getUserAgent() -> k
    java.lang.String getHost() -> l
    java.lang.String getConnection() -> m
    java.lang.String getAcceptEncoding() -> n
    java.lang.String getContentType() -> o
    java.lang.String getProxyAuthorization() -> p
    void setChunked() -> q
    void setContentLength(long) -> a
    void setUserAgent(java.lang.String) -> a
    void setHost(java.lang.String) -> b
    void setConnection(java.lang.String) -> c
    void setAcceptEncoding(java.lang.String) -> d
    void setContentType(java.lang.String) -> e
    void setIfModifiedSince(java.util.Date) -> a
    void setIfNoneMatch(java.lang.String) -> f
    boolean hasConditions() -> r
    void addCookies(java.util.Map) -> a
    boolean access$002(com.squareup.okhttp.internal.http.RequestHeaders,boolean) -> a
    int access$102(com.squareup.okhttp.internal.http.RequestHeaders,int) -> a
    int access$202(com.squareup.okhttp.internal.http.RequestHeaders,int) -> b
    int access$302(com.squareup.okhttp.internal.http.RequestHeaders,int) -> c
    boolean access$402(com.squareup.okhttp.internal.http.RequestHeaders,boolean) -> b
com.squareup.okhttp.internal.http.RequestHeaders$1 -> com.squareup.okhttp.internal.http.y:
    com.squareup.okhttp.internal.http.RequestHeaders this$0 -> a
    void handle(java.lang.String,java.lang.String) -> a
com.squareup.okhttp.internal.http.ResponseHeaders -> com.squareup.okhttp.internal.http.z:
    java.lang.String SENT_MILLIS -> c
    java.lang.String RECEIVED_MILLIS -> d
    java.lang.String RESPONSE_SOURCE -> a
    java.lang.String SELECTED_TRANSPORT -> b
    java.net.URI uri -> e
    com.squareup.okhttp.internal.http.RawHeaders headers -> f
    java.util.Date servedDate -> g
    java.util.Date lastModified -> h
    java.util.Date expires -> i
    long sentRequestMillis -> j
    long receivedResponseMillis -> k
    boolean noCache -> l
    boolean noStore -> m
    int maxAgeSeconds -> n
    int sMaxAgeSeconds -> o
    boolean isPublic -> p
    boolean mustRevalidate -> q
    java.lang.String etag -> r
    int ageSeconds -> s
    java.util.Set varyFields -> t
    java.lang.String contentEncoding -> u
    java.lang.String transferEncoding -> v
    int contentLength -> w
    java.lang.String connection -> x
    boolean isContentEncodingGzip() -> a
    void stripContentEncoding() -> b
    void stripContentLength() -> c
    boolean isChunked() -> d
    boolean hasConnectionClose() -> e
    com.squareup.okhttp.internal.http.RawHeaders getHeaders() -> f
    java.util.Set getVaryFields() -> g
    int getContentLength() -> h
    void setLocalTimestamps(long,long) -> a
    void setResponseSource(com.squareup.okhttp.ResponseSource) -> a
    void setTransport(java.lang.String) -> a
    long computeAge(long) -> a
    long computeFreshnessLifetime() -> j
    boolean isFreshnessLifetimeHeuristic() -> k
    boolean isCacheable(com.squareup.okhttp.internal.http.RequestHeaders) -> a
    boolean hasVaryAll() -> i
    boolean varyMatches(java.util.Map,java.util.Map) -> a
    com.squareup.okhttp.ResponseSource chooseResponseSource(long,com.squareup.okhttp.internal.http.RequestHeaders) -> a
    boolean validate(com.squareup.okhttp.internal.http.ResponseHeaders) -> a
    com.squareup.okhttp.internal.http.ResponseHeaders combine(com.squareup.okhttp.internal.http.ResponseHeaders) -> b
    boolean isEndToEnd(java.lang.String) -> b
    boolean access$002(com.squareup.okhttp.internal.http.ResponseHeaders,boolean) -> a
    boolean access$102(com.squareup.okhttp.internal.http.ResponseHeaders,boolean) -> b
    int access$202(com.squareup.okhttp.internal.http.ResponseHeaders,int) -> a
    int access$302(com.squareup.okhttp.internal.http.ResponseHeaders,int) -> b
    boolean access$402(com.squareup.okhttp.internal.http.ResponseHeaders,boolean) -> c
    boolean access$502(com.squareup.okhttp.internal.http.ResponseHeaders,boolean) -> d
com.squareup.okhttp.internal.http.ResponseHeaders$1 -> com.squareup.okhttp.internal.http.aa:
    com.squareup.okhttp.internal.http.ResponseHeaders this$0 -> a
    void handle(java.lang.String,java.lang.String) -> a
com.squareup.okhttp.internal.http.RetryableOutputStream -> com.squareup.okhttp.internal.http.ab:
    int limit -> b
    java.io.ByteArrayOutputStream content -> c
    void close() -> close
    void write(byte[],int,int) -> write
    int contentLength() -> c
    void writeToSocket(java.io.OutputStream) -> a
com.squareup.okhttp.internal.http.RouteSelector -> com.squareup.okhttp.internal.http.ac:
    com.squareup.okhttp.Address address -> a
    java.net.URI uri -> b
    java.net.ProxySelector proxySelector -> c
    com.squareup.okhttp.ConnectionPool pool -> d
    com.squareup.okhttp.internal.Dns dns -> e
    com.squareup.okhttp.RouteDatabase routeDatabase -> f
    java.net.Proxy lastProxy -> g
    java.net.InetSocketAddress lastInetSocketAddress -> h
    boolean hasNextProxy -> i
    java.net.Proxy userSpecifiedProxy -> j
    java.util.Iterator proxySelectorProxies -> k
    java.net.InetAddress[] socketAddresses -> l
    int nextSocketAddressIndex -> m
    int socketPort -> n
    int nextTlsMode -> o
    java.util.List postponedRoutes -> p
    boolean hasNext() -> a
    com.squareup.okhttp.Connection next(java.lang.String) -> a
    void connectFailed(com.squareup.okhttp.Connection,java.io.IOException) -> a
    void resetNextProxy(java.net.URI,java.net.Proxy) -> a
    boolean hasNextProxy() -> b
    java.net.Proxy nextProxy() -> c
    void resetNextInetSocketAddress(java.net.Proxy) -> a
    boolean hasNextInetSocketAddress() -> d
    java.net.InetSocketAddress nextInetSocketAddress() -> e
    void resetNextTlsMode() -> f
    boolean hasNextTlsMode() -> g
    int nextTlsMode() -> h
    boolean hasNextPostponed() -> i
    com.squareup.okhttp.Route nextPostponed() -> j
com.squareup.okhttp.internal.http.SpdyTransport -> com.squareup.okhttp.internal.http.ad:
    com.squareup.okhttp.internal.http.HttpEngine httpEngine -> a
    com.squareup.okhttp.internal.spdy.SpdyConnection spdyConnection -> b
    com.squareup.okhttp.internal.spdy.SpdyStream stream -> c
    java.io.OutputStream createRequestBody() -> a
    void writeRequestHeaders() -> c
    void writeRequestBody(com.squareup.okhttp.internal.http.RetryableOutputStream) -> a
    void flushRequest() -> b
    com.squareup.okhttp.internal.http.ResponseHeaders readResponseHeaders() -> d
    java.io.InputStream getTransferStream(java.net.CacheRequest) -> a
    boolean makeReusable(boolean,java.io.OutputStream,java.io.InputStream) -> a
com.squareup.okhttp.internal.http.Transport -> com.squareup.okhttp.internal.http.ae:
    java.io.OutputStream createRequestBody() -> a
    void writeRequestHeaders() -> c
    void writeRequestBody(com.squareup.okhttp.internal.http.RetryableOutputStream) -> a
    void flushRequest() -> b
    com.squareup.okhttp.internal.http.ResponseHeaders readResponseHeaders() -> d
    java.io.InputStream getTransferStream(java.net.CacheRequest) -> a
    boolean makeReusable(boolean,java.io.OutputStream,java.io.InputStream) -> a
com.squareup.okhttp.internal.http.UnknownLengthHttpInputStream -> com.squareup.okhttp.internal.http.af:
    boolean inputExhausted -> d
    int read(byte[],int,int) -> read
    int available() -> available
    void close() -> close
com.squareup.okhttp.internal.spdy.ErrorCode -> com.squareup.okhttp.internal.spdy.ErrorCode:
    com.squareup.okhttp.internal.spdy.ErrorCode NO_ERROR -> NO_ERROR
    com.squareup.okhttp.internal.spdy.ErrorCode PROTOCOL_ERROR -> PROTOCOL_ERROR
    com.squareup.okhttp.internal.spdy.ErrorCode INVALID_STREAM -> INVALID_STREAM
    com.squareup.okhttp.internal.spdy.ErrorCode UNSUPPORTED_VERSION -> UNSUPPORTED_VERSION
    com.squareup.okhttp.internal.spdy.ErrorCode STREAM_IN_USE -> STREAM_IN_USE
    com.squareup.okhttp.internal.spdy.ErrorCode STREAM_ALREADY_CLOSED -> STREAM_ALREADY_CLOSED
    com.squareup.okhttp.internal.spdy.ErrorCode INTERNAL_ERROR -> INTERNAL_ERROR
    com.squareup.okhttp.internal.spdy.ErrorCode FLOW_CONTROL_ERROR -> FLOW_CONTROL_ERROR
    com.squareup.okhttp.internal.spdy.ErrorCode STREAM_CLOSED -> STREAM_CLOSED
    com.squareup.okhttp.internal.spdy.ErrorCode FRAME_TOO_LARGE -> FRAME_TOO_LARGE
    com.squareup.okhttp.internal.spdy.ErrorCode REFUSED_STREAM -> REFUSED_STREAM
    com.squareup.okhttp.internal.spdy.ErrorCode CANCEL -> CANCEL
    com.squareup.okhttp.internal.spdy.ErrorCode COMPRESSION_ERROR -> COMPRESSION_ERROR
    com.squareup.okhttp.internal.spdy.ErrorCode INVALID_CREDENTIALS -> INVALID_CREDENTIALS
    int httpCode -> httpCode
    int spdyRstCode -> spdyRstCode
    int spdyGoAwayCode -> spdyGoAwayCode
    com.squareup.okhttp.internal.spdy.ErrorCode[] $VALUES -> $VALUES
    com.squareup.okhttp.internal.spdy.ErrorCode[] values() -> values
    com.squareup.okhttp.internal.spdy.ErrorCode valueOf(java.lang.String) -> valueOf
    com.squareup.okhttp.internal.spdy.ErrorCode fromSpdy3Rst(int) -> fromSpdy3Rst
    com.squareup.okhttp.internal.spdy.ErrorCode fromHttp2(int) -> fromHttp2
    com.squareup.okhttp.internal.spdy.ErrorCode fromSpdyGoAway(int) -> fromSpdyGoAway
com.squareup.okhttp.internal.spdy.FrameReader -> com.squareup.okhttp.internal.spdy.a:
    boolean nextFrame(com.squareup.okhttp.internal.spdy.FrameReader$Handler) -> a
com.squareup.okhttp.internal.spdy.FrameReader$Handler -> com.squareup.okhttp.internal.spdy.b:
    void data(boolean,int,java.io.InputStream,int) -> data
    void synStream(boolean,boolean,int,int,int,int,java.util.List) -> synStream
    void synReply(boolean,int,java.util.List) -> synReply
    void headers(int,java.util.List) -> headers
    void rstStream(int,com.squareup.okhttp.internal.spdy.ErrorCode) -> rstStream
    void settings(boolean,com.squareup.okhttp.internal.spdy.Settings) -> settings
    void noop() -> noop
    void ping(boolean,int,int) -> ping
    void goAway(int,com.squareup.okhttp.internal.spdy.ErrorCode) -> goAway
    void windowUpdate(int,int,boolean) -> windowUpdate
    void priority(int,int) -> priority
com.squareup.okhttp.internal.spdy.FrameWriter -> com.squareup.okhttp.internal.spdy.c:
    void connectionHeader() -> a
    void flush() -> b
    void synStream(boolean,boolean,int,int,int,int,java.util.List) -> a
    void rstStream(int,com.squareup.okhttp.internal.spdy.ErrorCode) -> a
    void data(boolean,int,byte[],int,int) -> a
    void ping(boolean,int,int) -> a
    void goAway(int,com.squareup.okhttp.internal.spdy.ErrorCode) -> b
    void windowUpdate(int,int) -> a
com.squareup.okhttp.internal.spdy.Http20Draft04 -> com.squareup.okhttp.internal.spdy.d:
    com.squareup.okhttp.internal.spdy.FrameReader newReader(java.io.InputStream,boolean) -> a
    com.squareup.okhttp.internal.spdy.FrameWriter newWriter(java.io.OutputStream,boolean) -> a
com.squareup.okhttp.internal.spdy.Http20Draft04$Reader -> com.squareup.okhttp.internal.spdy.e:
    java.io.DataInputStream in -> a
    boolean nextFrame(com.squareup.okhttp.internal.spdy.FrameReader$Handler) -> a
    void readData(com.squareup.okhttp.internal.spdy.FrameReader$Handler,int,int,int) -> a
    void readPriority(com.squareup.okhttp.internal.spdy.FrameReader$Handler,int,int,int) -> b
    void readRstStream(com.squareup.okhttp.internal.spdy.FrameReader$Handler,int,int,int) -> c
    void readSettings(com.squareup.okhttp.internal.spdy.FrameReader$Handler,int,int,int) -> d
    void readPushPromise(com.squareup.okhttp.internal.spdy.FrameReader$Handler,int,int,int) -> e
    void readPing(com.squareup.okhttp.internal.spdy.FrameReader$Handler,int,int,int) -> f
    void readGoAway(com.squareup.okhttp.internal.spdy.FrameReader$Handler,int,int,int) -> g
    void readWindowUpdate(com.squareup.okhttp.internal.spdy.FrameReader$Handler,int,int,int) -> h
    java.io.IOException ioException(java.lang.String,java.lang.Object[]) -> a
    void close() -> close
com.squareup.okhttp.internal.spdy.Http20Draft04$Writer -> com.squareup.okhttp.internal.spdy.f:
    java.io.DataOutputStream out -> a
    void flush() -> b
    void connectionHeader() -> a
    void synStream(boolean,boolean,int,int,int,int,java.util.List) -> a
    void rstStream(int,com.squareup.okhttp.internal.spdy.ErrorCode) -> a
    void data(boolean,int,byte[],int,int) -> a
    void ping(boolean,int,int) -> a
    void goAway(int,com.squareup.okhttp.internal.spdy.ErrorCode) -> b
    void windowUpdate(int,int) -> a
    void close() -> close
com.squareup.okhttp.internal.spdy.IncomingStreamHandler -> com.squareup.okhttp.internal.spdy.g:
    com.squareup.okhttp.internal.spdy.IncomingStreamHandler REFUSE_INCOMING_STREAMS -> a
    void receive(com.squareup.okhttp.internal.spdy.SpdyStream) -> a
com.squareup.okhttp.internal.spdy.IncomingStreamHandler$1 -> com.squareup.okhttp.internal.spdy.h:
    void receive(com.squareup.okhttp.internal.spdy.SpdyStream) -> a
com.squareup.okhttp.internal.spdy.Ping -> com.squareup.okhttp.internal.spdy.i:
    java.util.concurrent.CountDownLatch latch -> a
    long sent -> b
    long received -> c
    void send() -> a
    void receive() -> b
    void cancel() -> c
com.squareup.okhttp.internal.spdy.Settings -> com.squareup.okhttp.internal.spdy.j:
    int set -> a
    int persistValue -> b
    int persisted -> c
    int[] values -> d
    void set(int,int,int) -> a
    boolean isSet(int) -> a
    int get(int) -> b
    int flags(int) -> c
    int getInitialWindowSize(int) -> d
    boolean persistValue(int) -> e
    boolean isPersisted(int) -> f
    void merge(com.squareup.okhttp.internal.spdy.Settings) -> a
com.squareup.okhttp.internal.spdy.Spdy3 -> com.squareup.okhttp.internal.spdy.k:
    byte[] DICTIONARY -> a
    com.squareup.okhttp.internal.spdy.FrameReader newReader(java.io.InputStream,boolean) -> a
    com.squareup.okhttp.internal.spdy.FrameWriter newWriter(java.io.OutputStream,boolean) -> a
com.squareup.okhttp.internal.spdy.Spdy3$Reader -> com.squareup.okhttp.internal.spdy.l:
    java.io.DataInputStream in -> a
    java.io.DataInputStream nameValueBlockIn -> b
    boolean client -> c
    int compressedLimit -> d
    boolean nextFrame(com.squareup.okhttp.internal.spdy.FrameReader$Handler) -> a
    void readSynStream(com.squareup.okhttp.internal.spdy.FrameReader$Handler,int,int) -> a
    void readSynReply(com.squareup.okhttp.internal.spdy.FrameReader$Handler,int,int) -> b
    void readRstStream(com.squareup.okhttp.internal.spdy.FrameReader$Handler,int,int) -> c
    void readHeaders(com.squareup.okhttp.internal.spdy.FrameReader$Handler,int,int) -> d
    void readWindowUpdate(com.squareup.okhttp.internal.spdy.FrameReader$Handler,int,int) -> e
    java.io.DataInputStream newNameValueBlockStream() -> a
    java.util.List readNameValueBlock(int) -> a
    java.lang.String readString() -> b
    void readPing(com.squareup.okhttp.internal.spdy.FrameReader$Handler,int,int) -> f
    void readGoAway(com.squareup.okhttp.internal.spdy.FrameReader$Handler,int,int) -> g
    void readSettings(com.squareup.okhttp.internal.spdy.FrameReader$Handler,int,int) -> h
    java.io.IOException ioException(java.lang.String,java.lang.Object[]) -> a
    void close() -> close
    int access$000(com.squareup.okhttp.internal.spdy.Spdy3$Reader) -> a
    java.io.DataInputStream access$100(com.squareup.okhttp.internal.spdy.Spdy3$Reader) -> b
    int access$020(com.squareup.okhttp.internal.spdy.Spdy3$Reader,int) -> a
com.squareup.okhttp.internal.spdy.Spdy3$Reader$1 -> com.squareup.okhttp.internal.spdy.m:
    com.squareup.okhttp.internal.spdy.Spdy3$Reader this$0 -> a
    int read() -> read
    int read(byte[],int,int) -> read
    void close() -> close
com.squareup.okhttp.internal.spdy.Spdy3$Reader$2 -> com.squareup.okhttp.internal.spdy.n:
    com.squareup.okhttp.internal.spdy.Spdy3$Reader this$0 -> a
    int inflate(byte[],int,int) -> inflate
com.squareup.okhttp.internal.spdy.Spdy3$Writer -> com.squareup.okhttp.internal.spdy.o:
    java.io.DataOutputStream out -> a
    java.io.ByteArrayOutputStream nameValueBlockBuffer -> b
    java.io.DataOutputStream nameValueBlockOut -> c
    boolean client -> d
    void connectionHeader() -> a
    void flush() -> b
    void synStream(boolean,boolean,int,int,int,int,java.util.List) -> a
    void rstStream(int,com.squareup.okhttp.internal.spdy.ErrorCode) -> a
    void data(boolean,int,byte[],int,int) -> a
    void writeNameValueBlockToBuffer(java.util.List) -> a
    void ping(boolean,int,int) -> a
    void goAway(int,com.squareup.okhttp.internal.spdy.ErrorCode) -> b
    void windowUpdate(int,int) -> a
    void close() -> close
com.squareup.okhttp.internal.spdy.SpdyConnection -> com.squareup.okhttp.internal.spdy.SpdyConnection:
    java.util.concurrent.ExecutorService executor -> e
    com.squareup.okhttp.internal.spdy.Variant variant -> a
    boolean client -> b
    com.squareup.okhttp.internal.spdy.IncomingStreamHandler handler -> f
    com.squareup.okhttp.internal.spdy.FrameReader frameReader -> g
    com.squareup.okhttp.internal.spdy.FrameWriter frameWriter -> h
    java.util.Map streams -> i
    java.lang.String hostName -> j
    int lastGoodStreamId -> k
    int nextStreamId -> l
    boolean shutdown -> m
    long idleStartTimeNs -> n
    java.util.Map pings -> o
    int nextPingId -> p
    com.squareup.okhttp.internal.spdy.Settings settings -> c
    boolean $assertionsDisabled -> d
    com.squareup.okhttp.internal.spdy.SpdyStream getStream(int) -> b
    com.squareup.okhttp.internal.spdy.SpdyStream removeStream(int) -> a
    void setIdle(boolean) -> a
    boolean isIdle() -> a
    long getIdleStartTimeNs() -> b
    com.squareup.okhttp.internal.spdy.SpdyStream newStream(java.util.List,boolean,boolean) -> a
    void writeData(int,boolean,byte[],int,int) -> a
    void writeSynResetLater(int,com.squareup.okhttp.internal.spdy.ErrorCode) -> a
    void writeSynReset(int,com.squareup.okhttp.internal.spdy.ErrorCode) -> b
    void writeWindowUpdateLater(int,int) -> a
    void writeWindowUpdate(int,int) -> b
    void writePingLater(boolean,int,int,com.squareup.okhttp.internal.spdy.Ping) -> a
    void writePing(boolean,int,int,com.squareup.okhttp.internal.spdy.Ping) -> b
    com.squareup.okhttp.internal.spdy.Ping removePing(int) -> c
    void flush() -> c
    void shutdown(com.squareup.okhttp.internal.spdy.ErrorCode) -> a
    void close() -> close
    void close(com.squareup.okhttp.internal.spdy.ErrorCode,com.squareup.okhttp.internal.spdy.ErrorCode) -> a
    void sendConnectionHeader() -> d
    void access$700(com.squareup.okhttp.internal.spdy.SpdyConnection,boolean,int,int,com.squareup.okhttp.internal.spdy.Ping) -> a
    com.squareup.okhttp.internal.spdy.FrameReader access$900(com.squareup.okhttp.internal.spdy.SpdyConnection) -> a
    void access$1000(com.squareup.okhttp.internal.spdy.SpdyConnection,com.squareup.okhttp.internal.spdy.ErrorCode,com.squareup.okhttp.internal.spdy.ErrorCode) -> a
    com.squareup.okhttp.internal.spdy.SpdyStream access$1100(com.squareup.okhttp.internal.spdy.SpdyConnection,int) -> a
    boolean access$1200(com.squareup.okhttp.internal.spdy.SpdyConnection) -> b
    int access$1302(com.squareup.okhttp.internal.spdy.SpdyConnection,int) -> b
    java.util.Map access$1400(com.squareup.okhttp.internal.spdy.SpdyConnection) -> c
    java.lang.String access$1500(com.squareup.okhttp.internal.spdy.SpdyConnection) -> d
    com.squareup.okhttp.internal.spdy.IncomingStreamHandler access$1600(com.squareup.okhttp.internal.spdy.SpdyConnection) -> e
    java.util.concurrent.ExecutorService access$1700() -> e
    com.squareup.okhttp.internal.spdy.Ping access$1800(com.squareup.okhttp.internal.spdy.SpdyConnection,int) -> c
    void access$1900(com.squareup.okhttp.internal.spdy.SpdyConnection,boolean,int,int,com.squareup.okhttp.internal.spdy.Ping) -> b
    boolean access$1202(com.squareup.okhttp.internal.spdy.SpdyConnection,boolean) -> a
com.squareup.okhttp.internal.spdy.SpdyConnection$1 -> com.squareup.okhttp.internal.spdy.SpdyConnection$1:
    int val$streamId -> val$streamId
    com.squareup.okhttp.internal.spdy.ErrorCode val$errorCode -> val$errorCode
    com.squareup.okhttp.internal.spdy.SpdyConnection this$0 -> this$0
    void execute() -> execute
com.squareup.okhttp.internal.spdy.SpdyConnection$2 -> com.squareup.okhttp.internal.spdy.SpdyConnection$2:
    int val$streamId -> val$streamId
    int val$deltaWindowSize -> val$deltaWindowSize
    com.squareup.okhttp.internal.spdy.SpdyConnection this$0 -> this$0
    void execute() -> execute
com.squareup.okhttp.internal.spdy.SpdyConnection$3 -> com.squareup.okhttp.internal.spdy.SpdyConnection$3:
    boolean val$reply -> val$reply
    int val$payload1 -> val$payload1
    int val$payload2 -> val$payload2
    com.squareup.okhttp.internal.spdy.Ping val$ping -> val$ping
    com.squareup.okhttp.internal.spdy.SpdyConnection this$0 -> this$0
    void execute() -> execute
com.squareup.okhttp.internal.spdy.SpdyConnection$Builder -> com.squareup.okhttp.internal.spdy.p:
    java.lang.String hostName -> a
    java.io.InputStream in -> b
    java.io.OutputStream out -> c
    com.squareup.okhttp.internal.spdy.IncomingStreamHandler handler -> d
    com.squareup.okhttp.internal.spdy.Variant variant -> e
    boolean client -> f
    com.squareup.okhttp.internal.spdy.SpdyConnection build() -> a
    com.squareup.okhttp.internal.spdy.Variant access$000(com.squareup.okhttp.internal.spdy.SpdyConnection$Builder) -> a
    boolean access$100(com.squareup.okhttp.internal.spdy.SpdyConnection$Builder) -> b
    com.squareup.okhttp.internal.spdy.IncomingStreamHandler access$200(com.squareup.okhttp.internal.spdy.SpdyConnection$Builder) -> c
    java.io.InputStream access$300(com.squareup.okhttp.internal.spdy.SpdyConnection$Builder) -> d
    java.io.OutputStream access$400(com.squareup.okhttp.internal.spdy.SpdyConnection$Builder) -> e
    java.lang.String access$500(com.squareup.okhttp.internal.spdy.SpdyConnection$Builder) -> f
com.squareup.okhttp.internal.spdy.SpdyConnection$Reader -> com.squareup.okhttp.internal.spdy.SpdyConnection$Reader:
    com.squareup.okhttp.internal.spdy.SpdyConnection this$0 -> this$0
    void run() -> run
    void data(boolean,int,java.io.InputStream,int) -> data
    void synStream(boolean,boolean,int,int,int,int,java.util.List) -> synStream
    void synReply(boolean,int,java.util.List) -> synReply
    void headers(int,java.util.List) -> headers
    void rstStream(int,com.squareup.okhttp.internal.spdy.ErrorCode) -> rstStream
    void settings(boolean,com.squareup.okhttp.internal.spdy.Settings) -> settings
    void noop() -> noop
    void ping(boolean,int,int) -> ping
    void goAway(int,com.squareup.okhttp.internal.spdy.ErrorCode) -> goAway
    void windowUpdate(int,int,boolean) -> windowUpdate
    void priority(int,int) -> priority
com.squareup.okhttp.internal.spdy.SpdyConnection$Reader$1 -> com.squareup.okhttp.internal.spdy.SpdyConnection$Reader$1:
    com.squareup.okhttp.internal.spdy.SpdyStream val$synStream -> val$synStream
    com.squareup.okhttp.internal.spdy.SpdyConnection$Reader this$1 -> this$1
    void execute() -> execute
com.squareup.okhttp.internal.spdy.SpdyStream -> com.squareup.okhttp.internal.spdy.q:
    int id -> b
    com.squareup.okhttp.internal.spdy.SpdyConnection connection -> c
    int priority -> d
    int slot -> e
    long readTimeoutMillis -> f
    int writeWindowSize -> g
    java.util.List requestHeaders -> h
    java.util.List responseHeaders -> i
    com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream in -> j
    com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream out -> k
    com.squareup.okhttp.internal.spdy.ErrorCode errorCode -> l
    boolean $assertionsDisabled -> a
    boolean isOpen() -> a
    boolean isLocallyInitiated() -> b
    java.util.List getResponseHeaders() -> c
    void setReadTimeout(long) -> a
    java.io.InputStream getInputStream() -> d
    java.io.OutputStream getOutputStream() -> e
    void close(com.squareup.okhttp.internal.spdy.ErrorCode) -> a
    void closeLater(com.squareup.okhttp.internal.spdy.ErrorCode) -> b
    boolean closeInternal(com.squareup.okhttp.internal.spdy.ErrorCode) -> d
    void receiveReply(java.util.List) -> a
    void receiveHeaders(java.util.List) -> b
    void receiveData(java.io.InputStream,int) -> a
    void receiveFin() -> f
    void receiveRstStream(com.squareup.okhttp.internal.spdy.ErrorCode) -> c
    void setSettings(com.squareup.okhttp.internal.spdy.Settings) -> b
    void receiveSettings(com.squareup.okhttp.internal.spdy.Settings) -> a
    void receiveWindowUpdate(int) -> a
    void cancelStreamIfNecessary() -> g
    int access$700(com.squareup.okhttp.internal.spdy.SpdyStream) -> a
    com.squareup.okhttp.internal.spdy.SpdyConnection access$800(com.squareup.okhttp.internal.spdy.SpdyStream) -> b
    long access$900(com.squareup.okhttp.internal.spdy.SpdyStream) -> c
    com.squareup.okhttp.internal.spdy.ErrorCode access$1000(com.squareup.okhttp.internal.spdy.SpdyStream) -> d
    void access$1100(com.squareup.okhttp.internal.spdy.SpdyStream) -> e
    com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream access$1200(com.squareup.okhttp.internal.spdy.SpdyStream) -> f
    int access$1300(com.squareup.okhttp.internal.spdy.SpdyStream) -> g
com.squareup.okhttp.internal.spdy.SpdyStream$1 -> com.squareup.okhttp.internal.spdy.r:
com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream -> com.squareup.okhttp.internal.spdy.s:
    byte[] buffer -> c
    int pos -> d
    int limit -> e
    boolean closed -> f
    boolean finished -> g
    int unacknowledgedBytes -> h
    boolean $assertionsDisabled -> a
    com.squareup.okhttp.internal.spdy.SpdyStream this$0 -> b
    int available() -> available
    int read() -> read
    int read(byte[],int,int) -> read
    void waitUntilReadable() -> a
    void receive(java.io.InputStream,int) -> a
    void close() -> close
    void checkNotClosed() -> b
    boolean access$202(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream,boolean) -> a
    boolean access$200(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream) -> a
    boolean access$400(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream) -> b
com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream -> com.squareup.okhttp.internal.spdy.t:
    byte[] buffer -> c
    int pos -> d
    boolean closed -> e
    boolean finished -> f
    int unacknowledgedBytes -> g
    boolean $assertionsDisabled -> a
    com.squareup.okhttp.internal.spdy.SpdyStream this$0 -> b
    void write(int) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
    void close() -> close
    void writeFrame(boolean) -> a
    void waitUntilWritable(int,boolean) -> a
    void checkNotClosed() -> a
    boolean access$302(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream,boolean) -> a
    boolean access$300(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream) -> a
    boolean access$500(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream) -> b
    int access$620(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream,int) -> a
com.squareup.okhttp.internal.spdy.Variant -> com.squareup.okhttp.internal.spdy.u:
    com.squareup.okhttp.internal.spdy.Variant SPDY3 -> b
    com.squareup.okhttp.internal.spdy.Variant HTTP_20_DRAFT_04 -> c
    com.squareup.okhttp.internal.spdy.FrameReader newReader(java.io.InputStream,boolean) -> a
    com.squareup.okhttp.internal.spdy.FrameWriter newWriter(java.io.OutputStream,boolean) -> a
com.squareup.okhttp.internal.tls.DistinguishedNameParser -> com.squareup.okhttp.internal.a.a:
    java.lang.String dn -> a
    int length -> b
    int pos -> c
    int beg -> d
    int end -> e
    int cur -> f
    char[] chars -> g
    java.lang.String nextAT() -> a
    java.lang.String quotedAV() -> b
    java.lang.String hexAV() -> c
    java.lang.String escapedAV() -> d
    char getEscaped() -> e
    char getUTF8() -> f
    int getByte(int) -> a
    java.lang.String findMostSpecific(java.lang.String) -> a
com.squareup.okhttp.internal.tls.OkHostnameVerifier -> com.squareup.okhttp.internal.a.b:
    com.squareup.okhttp.internal.tls.OkHostnameVerifier INSTANCE -> a
    java.util.regex.Pattern VERIFY_AS_IP_ADDRESS -> b
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
    boolean verify(java.lang.String,java.security.cert.X509Certificate) -> a
    boolean verifyAsIpAddress(java.lang.String) -> a
    boolean verifyIpAddress(java.lang.String,java.security.cert.X509Certificate) -> b
    boolean verifyHostName(java.lang.String,java.security.cert.X509Certificate) -> c
    java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int) -> a
    boolean verifyHostName(java.lang.String,java.lang.String) -> a
com.squareup.picasso.Action -> com.squareup.picasso.a:
    com.squareup.picasso.Picasso picasso -> a
    com.squareup.picasso.Request data -> b
    java.lang.ref.WeakReference target -> c
    boolean skipCache -> d
    long fadeTime -> e
    int errorResId -> f
    android.graphics.drawable.Drawable errorDrawable -> g
    java.lang.String key -> h
    boolean cancelled -> i
    void complete(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom) -> a
    void error() -> a
    void cancel() -> b
    com.squareup.picasso.Request getData() -> c
    java.lang.Object getTarget() -> d
    java.lang.String getKey() -> e
    boolean isCancelled() -> f
    com.squareup.picasso.Picasso getPicasso() -> g
com.squareup.picasso.Action$RequestWeakReference -> com.squareup.picasso.b:
    com.squareup.picasso.Action action -> a
com.squareup.picasso.AssetBitmapHunter -> com.squareup.picasso.AssetBitmapHunter:
    android.content.res.AssetManager assetManager -> assetManager
    android.graphics.Bitmap decode(com.squareup.picasso.Request) -> decode
    com.squareup.picasso.Picasso$LoadedFrom getLoadedFrom() -> getLoadedFrom
    android.graphics.Bitmap decodeAsset(java.lang.String) -> decodeAsset
com.squareup.picasso.BitmapHunter -> com.squareup.picasso.BitmapHunter:
    java.lang.Object DECODE_LOCK -> DECODE_LOCK
    java.lang.String ANDROID_ASSET -> ANDROID_ASSET
    int ASSET_PREFIX_LENGTH -> ASSET_PREFIX_LENGTH
    com.squareup.picasso.Picasso picasso -> picasso
    com.squareup.picasso.Dispatcher dispatcher -> dispatcher
    com.squareup.picasso.Cache cache -> cache
    com.squareup.picasso.Stats stats -> stats
    java.lang.String key -> key
    com.squareup.picasso.Request data -> data
    java.util.List actions -> actions
    boolean skipMemoryCache -> skipMemoryCache
    android.graphics.Bitmap result -> result
    java.util.concurrent.Future future -> future
    com.squareup.picasso.Picasso$LoadedFrom loadedFrom -> loadedFrom
    java.lang.Throwable exception -> exception
    int exifRotation -> exifRotation
    void setExifRotation(int) -> setExifRotation
    void run() -> run
    android.graphics.Bitmap decode(com.squareup.picasso.Request) -> decode
    android.graphics.Bitmap hunt() -> hunt
    void attach(com.squareup.picasso.Action) -> attach
    void detach(com.squareup.picasso.Action) -> detach
    boolean cancel() -> cancel
    boolean isCancelled() -> isCancelled
    boolean shouldSkipMemoryCache() -> shouldSkipMemoryCache
    boolean shouldRetry(boolean,android.net.NetworkInfo) -> shouldRetry
    android.graphics.Bitmap getResult() -> getResult
    java.lang.String getKey() -> getKey
    com.squareup.picasso.Request getData() -> getData
    java.util.List getActions() -> getActions
    java.lang.Throwable getException() -> getException
    com.squareup.picasso.Picasso$LoadedFrom getLoadedFrom() -> getLoadedFrom
    com.squareup.picasso.BitmapHunter forRequest(android.content.Context,com.squareup.picasso.Picasso,com.squareup.picasso.Dispatcher,com.squareup.picasso.Cache,com.squareup.picasso.Stats,com.squareup.picasso.Action,com.squareup.picasso.Downloader) -> forRequest
    void calculateInSampleSize(int,int,android.graphics.BitmapFactory$Options) -> calculateInSampleSize
    android.graphics.Bitmap applyCustomTransformations(java.util.List,android.graphics.Bitmap) -> applyCustomTransformations
    android.graphics.Bitmap transformResult(com.squareup.picasso.Request,android.graphics.Bitmap,int) -> transformResult
com.squareup.picasso.Cache -> com.squareup.picasso.c:
    com.squareup.picasso.Cache NONE -> a
    android.graphics.Bitmap get(java.lang.String) -> a
    void set(java.lang.String,android.graphics.Bitmap) -> a
com.squareup.picasso.Cache$1 -> com.squareup.picasso.d:
    android.graphics.Bitmap get(java.lang.String) -> a
    void set(java.lang.String,android.graphics.Bitmap) -> a
com.squareup.picasso.Callback -> com.squareup.picasso.e:
    void onSuccess() -> onSuccess
    void onError() -> onError
com.squareup.picasso.ContactsPhotoBitmapHunter -> com.squareup.picasso.ContactsPhotoBitmapHunter:
    android.content.Context context -> context
    android.graphics.Bitmap decode(com.squareup.picasso.Request) -> decode
    com.squareup.picasso.Picasso$LoadedFrom getLoadedFrom() -> getLoadedFrom
    java.io.InputStream getInputStream() -> getInputStream
    android.graphics.Bitmap decodeStream(java.io.InputStream,com.squareup.picasso.Request) -> decodeStream
com.squareup.picasso.ContactsPhotoBitmapHunter$ContactPhotoStreamIcs -> com.squareup.picasso.f:
    java.io.InputStream get(android.content.ContentResolver,android.net.Uri) -> a
com.squareup.picasso.ContentProviderBitmapHunter -> com.squareup.picasso.ContentProviderBitmapHunter:
    java.lang.String[] CONTENT_ORIENTATION -> CONTENT_ORIENTATION
    android.graphics.Bitmap decode(com.squareup.picasso.Request) -> decode
    int getContentProviderExifRotation(android.content.ContentResolver,android.net.Uri) -> getContentProviderExifRotation
com.squareup.picasso.ContentStreamBitmapHunter -> com.squareup.picasso.ContentStreamBitmapHunter:
    android.content.Context context -> context
    android.graphics.Bitmap decode(com.squareup.picasso.Request) -> decode
    com.squareup.picasso.Picasso$LoadedFrom getLoadedFrom() -> getLoadedFrom
    java.io.InputStream openInputStream(android.content.ContentResolver,android.net.Uri) -> openInputStream
    android.graphics.Bitmap decodeContentStream(com.squareup.picasso.Request) -> decodeContentStream
com.squareup.picasso.CustomBitmapHunter -> com.squareup.picasso.CustomBitmapHunter:
    android.graphics.Bitmap decode(com.squareup.picasso.Request) -> decode
    com.squareup.picasso.Picasso$LoadedFrom getLoadedFrom() -> getLoadedFrom
    android.graphics.Bitmap decodeContent(com.squareup.picasso.Request) -> decodeContent
    void run() -> run
com.squareup.picasso.DeferredRequestCreator -> com.squareup.picasso.g:
    com.squareup.picasso.RequestCreator creator -> a
    java.lang.ref.WeakReference target -> b
    com.squareup.picasso.Callback callback -> c
    boolean onPreDraw() -> onPreDraw
    void cancel() -> a
com.squareup.picasso.Dispatcher -> com.squareup.picasso.Dispatcher:
    com.squareup.picasso.Dispatcher$DispatcherThread dispatcherThread -> a
    android.content.Context context -> b
    java.util.concurrent.ExecutorService service -> c
    com.squareup.picasso.Downloader downloader -> d
    java.util.Map hunterMap -> e
    android.os.Handler handler -> f
    android.os.Handler mainThreadHandler -> g
    com.squareup.picasso.Cache cache -> h
    com.squareup.picasso.Stats stats -> i
    java.util.List batch -> j
    com.squareup.picasso.Dispatcher$NetworkBroadcastReceiver receiver -> k
    android.net.NetworkInfo networkInfo -> l
    boolean airplaneMode -> m
    void dispatchSubmit(com.squareup.picasso.Action,long) -> a
    void dispatchCancel(com.squareup.picasso.Action) -> a
    void dispatchComplete(com.squareup.picasso.BitmapHunter) -> a
    void dispatchRetry(com.squareup.picasso.BitmapHunter) -> b
    void dispatchFailed(com.squareup.picasso.BitmapHunter) -> c
    void dispatchNetworkStateChange(android.net.NetworkInfo) -> a
    void dispatchAirplaneModeChange(boolean) -> a
    void performSubmit(com.squareup.picasso.Action) -> b
    void performCancel(com.squareup.picasso.Action) -> c
    void performRetry(com.squareup.picasso.BitmapHunter) -> d
    void performComplete(com.squareup.picasso.BitmapHunter) -> e
    void performBatchComplete() -> a
    void performError(com.squareup.picasso.BitmapHunter) -> f
    void performAirplaneModeChange(boolean) -> b
    void performNetworkStateChange(android.net.NetworkInfo) -> b
    void batch(com.squareup.picasso.BitmapHunter) -> g
com.squareup.picasso.Dispatcher$DispatcherHandler -> com.squareup.picasso.h:
    com.squareup.picasso.Dispatcher this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.squareup.picasso.Dispatcher$DispatcherThread -> com.squareup.picasso.Dispatcher$DispatcherThread:
com.squareup.picasso.Dispatcher$NetworkBroadcastReceiver -> com.squareup.picasso.i:
    android.net.ConnectivityManager connectivityManager -> b
    com.squareup.picasso.Dispatcher this$0 -> a
    void register() -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.squareup.picasso.Downloader -> com.squareup.picasso.j:
    com.squareup.picasso.Downloader$Response load(android.net.Uri,boolean) -> a
com.squareup.picasso.Downloader$Response -> com.squareup.picasso.k:
    java.io.InputStream stream -> a
    android.graphics.Bitmap bitmap -> b
    boolean cached -> c
    java.io.InputStream getInputStream() -> a
    android.graphics.Bitmap getBitmap() -> b
com.squareup.picasso.FileBitmapHunter -> com.squareup.picasso.FileBitmapHunter:
    android.graphics.Bitmap decode(com.squareup.picasso.Request) -> decode
    java.io.InputStream openInputStream(android.content.ContentResolver,android.net.Uri) -> openInputStream
    int getFileExifRotation(android.net.Uri) -> getFileExifRotation
com.squareup.picasso.Generator -> com.squareup.picasso.l:
    android.graphics.Bitmap decode(android.net.Uri) -> decode
com.squareup.picasso.ImageViewAction -> com.squareup.picasso.m:
    com.squareup.picasso.Callback callback -> j
    void complete(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom) -> a
    void error() -> a
    void cancel() -> b
com.squareup.picasso.LruCache -> com.squareup.picasso.n:
    java.util.LinkedHashMap map -> b
    int maxSize -> d
    int size -> e
    int putCount -> f
    int evictionCount -> g
    int hitCount -> h
    int missCount -> i
    int id -> j
    int _id -> c
    android.graphics.Bitmap get(java.lang.String) -> a
    void set(java.lang.String,android.graphics.Bitmap) -> a
    void trimToSize(int) -> a
    void evictAll() -> a
    void clear() -> b
com.squareup.picasso.MarkableInputStream -> com.squareup.picasso.o:
    java.io.InputStream in -> a
    long offset -> b
    long reset -> c
    long limit -> d
    long defaultMark -> e
    void mark(int) -> mark
    long savePosition(int) -> a
    void setLimit(long) -> b
    void reset() -> reset
    void reset(long) -> a
    void skip(long,long) -> a
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    int available() -> available
    void close() -> close
    boolean markSupported() -> markSupported
com.squareup.picasso.NetworkBitmapHunter -> com.squareup.picasso.NetworkBitmapHunter:
    int DEFAULT_RETRY_COUNT -> DEFAULT_RETRY_COUNT
    int MARKER -> MARKER
    com.squareup.picasso.Downloader downloader -> downloader
    int retryCount -> retryCount
    android.graphics.Bitmap decode(com.squareup.picasso.Request) -> decode
    boolean shouldRetry(boolean,android.net.NetworkInfo) -> shouldRetry
    android.graphics.Bitmap decodeStream(java.io.InputStream,com.squareup.picasso.Request) -> decodeStream
com.squareup.picasso.OkHttpDownloader -> com.squareup.picasso.p:
    com.squareup.okhttp.OkHttpClient client -> a
    java.net.HttpURLConnection openConnection(android.net.Uri) -> a
    com.squareup.picasso.Downloader$Response load(android.net.Uri,boolean) -> a
com.squareup.picasso.Picasso -> com.squareup.picasso.Picasso:
    android.os.Handler HANDLER -> a
    com.squareup.picasso.Picasso singleton -> b
    com.squareup.picasso.Picasso$Listener listener -> k
    com.squareup.picasso.Picasso$RequestTransformer requestTransformer -> l
    com.squareup.picasso.Picasso$CleanupThread cleanupThread -> m
    android.content.Context context -> c
    com.squareup.picasso.Dispatcher dispatcher -> d
    com.squareup.picasso.Cache cache -> n
    com.squareup.picasso.Stats stats -> e
    java.util.Map targetToAction -> f
    java.util.Map targetToDeferredRequestCreator -> g
    java.lang.ref.ReferenceQueue referenceQueue -> h
    boolean debugging -> i
    boolean shutdown -> j
    void cancelRequest(android.widget.ImageView) -> a
    com.squareup.picasso.RequestCreator load(android.net.Uri) -> a
    com.squareup.picasso.RequestCreator load(java.lang.String) -> a
    com.squareup.picasso.RequestCreator load(java.io.File) -> a
    com.squareup.picasso.Cache getCache() -> a
    com.squareup.picasso.Request transformRequest(com.squareup.picasso.Request) -> a
    void defer(android.widget.ImageView,com.squareup.picasso.DeferredRequestCreator) -> a
    void enqueueAndSubmit(com.squareup.picasso.Action,long) -> a
    void submit(com.squareup.picasso.Action,long) -> b
    android.graphics.Bitmap quickMemoryCacheCheck(com.squareup.picasso.Cache,java.lang.String) -> a
    void complete(com.squareup.picasso.BitmapHunter) -> a
    void cancelExistingRequest(java.lang.Object) -> a
    com.squareup.picasso.Picasso with(android.content.Context) -> a
    void access$0(com.squareup.picasso.Picasso,java.lang.Object) -> a
com.squareup.picasso.Picasso$1 -> com.squareup.picasso.q:
    void handleMessage(android.os.Message) -> handleMessage
com.squareup.picasso.Picasso$Builder -> com.squareup.picasso.r:
    android.content.Context context -> a
    com.squareup.picasso.Downloader downloader -> b
    java.util.concurrent.ExecutorService service -> c
    com.squareup.picasso.Cache cache -> d
    com.squareup.picasso.Picasso$Listener listener -> e
    com.squareup.picasso.Picasso$RequestTransformer transformer -> f
    boolean debugging -> g
    com.squareup.picasso.Picasso build() -> a
com.squareup.picasso.Picasso$CleanupThread -> com.squareup.picasso.Picasso$CleanupThread:
    java.lang.ref.ReferenceQueue referenceQueue -> referenceQueue
    android.os.Handler handler -> handler
    void run() -> run
    void shutdown() -> shutdown
com.squareup.picasso.Picasso$CleanupThread$1 -> com.squareup.picasso.Picasso$CleanupThread$1:
    com.squareup.picasso.Picasso$CleanupThread this$1 -> this$1
    java.lang.Exception val$e -> val$e
    void run() -> run
com.squareup.picasso.Picasso$Listener -> com.squareup.picasso.s:
    void onImageLoadFailed(com.squareup.picasso.Picasso,android.net.Uri,java.lang.Throwable) -> a
com.squareup.picasso.Picasso$LoadedFrom -> com.squareup.picasso.Picasso$LoadedFrom:
    com.squareup.picasso.Picasso$LoadedFrom MEMORY -> MEMORY
    com.squareup.picasso.Picasso$LoadedFrom DISK -> DISK
    com.squareup.picasso.Picasso$LoadedFrom NETWORK -> NETWORK
    int debugColor -> debugColor
    com.squareup.picasso.Picasso$LoadedFrom[] ENUM$VALUES -> ENUM$VALUES
    com.squareup.picasso.Picasso$LoadedFrom[] values() -> values
    com.squareup.picasso.Picasso$LoadedFrom valueOf(java.lang.String) -> valueOf
com.squareup.picasso.Picasso$RequestTransformer -> com.squareup.picasso.t:
    com.squareup.picasso.Picasso$RequestTransformer IDENTITY -> a
    com.squareup.picasso.Request transformRequest(com.squareup.picasso.Request) -> a
com.squareup.picasso.Picasso$RequestTransformer$1 -> com.squareup.picasso.u:
    com.squareup.picasso.Request transformRequest(com.squareup.picasso.Request) -> a
com.squareup.picasso.PicassoDrawable -> com.squareup.picasso.PicassoDrawable:
    android.graphics.Paint DEBUG_PAINT -> DEBUG_PAINT
    boolean debugging -> debugging
    float density -> density
    com.squareup.picasso.Picasso$LoadedFrom loadedFrom -> loadedFrom
    android.graphics.drawable.BitmapDrawable image -> image
    android.graphics.drawable.Drawable placeholder -> placeholder
    long startTimeMillis -> startTimeMillis
    boolean animating -> animating
    double alpha -> alpha
    long fadeTime -> fadeTime
    void setBitmap(android.widget.ImageView,android.content.Context,android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom,long,boolean) -> setBitmap
    void setPlaceholder(android.widget.ImageView,int,android.graphics.drawable.Drawable) -> setPlaceholder
    void recycle() -> recycle
    void draw(android.graphics.Canvas) -> draw
    void run() -> run
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void setBounds(android.graphics.drawable.Drawable) -> setBounds
    void drawDebugIndicator(android.graphics.Canvas) -> drawDebugIndicator
    android.graphics.Path getTrianglePath(android.graphics.Point,int) -> getTrianglePath
com.squareup.picasso.PicassoExecutorService -> com.squareup.picasso.v:
    void adjustThreadCount(android.net.NetworkInfo) -> a
    void setThreadCount(int,int) -> a
com.squareup.picasso.Request -> com.squareup.picasso.w:
    android.net.Uri uri -> a
    int resourceId -> b
    java.util.List transformations -> c
    int targetWidth -> d
    int targetHeight -> e
    boolean centerCrop -> f
    boolean centerInside -> g
    float rotationDegrees -> h
    float rotationPivotX -> i
    float rotationPivotY -> j
    boolean hasRotationPivot -> k
    boolean resizeOnlyIfBigger -> l
    com.squareup.picasso.Generator customGenerator -> m
    android.graphics.BitmapFactory$Options options -> n
    com.squareup.picasso.Cache cache -> o
    java.lang.String getName() -> a
    boolean hasSize() -> b
    boolean hasCustomGenerator() -> c
    boolean needsTransformation() -> d
    boolean needsMatrixTransform() -> e
    boolean hasCustomTransformations() -> f
com.squareup.picasso.Request$Builder -> com.squareup.picasso.x:
    android.net.Uri uri -> a
    int resourceId -> b
    int targetWidth -> c
    int targetHeight -> d
    boolean centerCrop -> e
    boolean centerInside -> f
    boolean resizeOnlyIfBigger -> g
    float rotationDegrees -> h
    float rotationPivotX -> i
    float rotationPivotY -> j
    boolean hasRotationPivot -> k
    java.util.List transformations -> l
    android.graphics.BitmapFactory$Options options -> m
    com.squareup.picasso.Generator generator -> n
    com.squareup.picasso.Cache cache -> o
    boolean hasImage() -> a
    boolean hasSize() -> b
    com.squareup.picasso.Request$Builder setGenerator(com.squareup.picasso.Generator) -> a
    com.squareup.picasso.Request$Builder setCache(com.squareup.picasso.Cache) -> a
    com.squareup.picasso.Cache getCache() -> c
    com.squareup.picasso.Request$Builder resize(int,int,boolean) -> a
    com.squareup.picasso.Request$Builder centerInside() -> d
    com.squareup.picasso.Request$Builder transform(com.squareup.picasso.Transformation) -> a
    com.squareup.picasso.Request build() -> e
com.squareup.picasso.RequestCreator -> com.squareup.picasso.y:
    com.squareup.picasso.Picasso picasso -> a
    com.squareup.picasso.Request$Builder data -> b
    boolean skipMemoryCache -> c
    long fadeTime -> d
    boolean deferred -> e
    int placeholderResId -> f
    android.graphics.drawable.Drawable placeholderDrawable -> g
    int errorResId -> h
    android.graphics.drawable.Drawable errorDrawable -> i
    long delayMillis -> j
    com.squareup.picasso.RequestCreator error(int) -> a
    com.squareup.picasso.RequestCreator fit() -> a
    com.squareup.picasso.RequestCreator unfit() -> b
    com.squareup.picasso.RequestCreator resizeDimen(int,int,boolean) -> a
    com.squareup.picasso.RequestCreator resize(int,int,boolean) -> b
    com.squareup.picasso.RequestCreator withGenerator(com.squareup.picasso.Generator) -> a
    com.squareup.picasso.RequestCreator withCache(com.squareup.picasso.Cache) -> a
    com.squareup.picasso.RequestCreator centerInside() -> c
    com.squareup.picasso.RequestCreator transform(com.squareup.picasso.Transformation) -> a
    com.squareup.picasso.RequestCreator skipMemoryCache() -> d
    com.squareup.picasso.RequestCreator noFade() -> e
    com.squareup.picasso.RequestCreator fade(long) -> a
    com.squareup.picasso.RequestCreator withDelay(long) -> b
    void into(android.widget.ImageView) -> a
    void into(android.widget.ImageView,com.squareup.picasso.Callback) -> a
com.squareup.picasso.ResourceBitmapHunter -> com.squareup.picasso.ResourceBitmapHunter:
    android.content.Context context -> context
    android.graphics.Bitmap decode(com.squareup.picasso.Request) -> decode
    com.squareup.picasso.Picasso$LoadedFrom getLoadedFrom() -> getLoadedFrom
    android.graphics.Bitmap decodeResource(android.content.res.Resources,com.squareup.picasso.Request) -> decodeResource
com.squareup.picasso.Stats -> com.squareup.picasso.z:
    android.os.HandlerThread statsThread -> a
    com.squareup.picasso.Cache cache -> b
    android.os.Handler handler -> c
    long cacheHits -> d
    long cacheMisses -> e
    long totalOriginalBitmapSize -> f
    long totalTransformedBitmapSize -> g
    long averageOriginalBitmapSize -> h
    long averageTransformedBitmapSize -> i
    int originalBitmapCount -> j
    int transformedBitmapCount -> k
    void dispatchBitmapDecoded(android.graphics.Bitmap) -> a
    void dispatchBitmapTransformed(android.graphics.Bitmap) -> b
    void dispatchCacheHit() -> a
    void dispatchCacheMiss() -> b
    void performCacheHit() -> c
    void performCacheMiss() -> d
    void performBitmapDecoded(long) -> a
    void performBitmapTransformed(long) -> b
    void processBitmap(android.graphics.Bitmap,int) -> a
    long getAverage(int,long) -> a
com.squareup.picasso.Stats$StatsHandler -> com.squareup.picasso.aa:
    com.squareup.picasso.Stats this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.squareup.picasso.Stats$StatsHandler$1 -> com.squareup.picasso.Stats$StatsHandler$1:
    com.squareup.picasso.Stats$StatsHandler this$1 -> this$1
    android.os.Message val$msg -> val$msg
    void run() -> run
com.squareup.picasso.Transformation -> com.squareup.picasso.ab:
    android.graphics.Bitmap transform(android.graphics.Bitmap) -> transform
    java.lang.String key() -> key
com.squareup.picasso.UrlConnectionDownloader -> com.squareup.picasso.ac:
    java.lang.Object lock -> b
    java.lang.Object cache -> a
    android.content.Context context -> c
    java.net.HttpURLConnection openConnection(android.net.Uri) -> a
    com.squareup.picasso.Downloader$Response load(android.net.Uri,boolean) -> a
    void installCacheIfNeeded(android.content.Context) -> a
com.squareup.picasso.UrlConnectionDownloader$ResponseCacheIcs -> com.squareup.picasso.ad:
    java.lang.Object install(android.content.Context) -> a
com.squareup.picasso.Utils -> com.squareup.picasso.Utils:
    int getBitmapBytes(android.graphics.Bitmap) -> a
    java.lang.String createKey(com.squareup.picasso.Request) -> a
    void closeQuietly(java.io.InputStream) -> a
    boolean parseResponseSourceHeader(java.lang.String) -> a
    com.squareup.picasso.Downloader createDefaultDownloader(android.content.Context) -> a
    java.io.File createDefaultCacheDir(android.content.Context) -> b
    long calculateDiskCacheSize(java.io.File) -> a
    int calculateMemoryCacheSize(android.content.Context) -> c
    boolean isAirplaneModeOn(android.content.Context) -> d
    boolean hasPermission(android.content.Context,java.lang.String) -> a
com.squareup.picasso.Utils$ActivityManagerHoneycomb -> com.squareup.picasso.ae:
    int getLargeMemoryClass(android.app.ActivityManager) -> a
com.squareup.picasso.Utils$BitmapHoneycombMR1 -> com.squareup.picasso.af:
    int getByteCount(android.graphics.Bitmap) -> a
com.squareup.picasso.Utils$OkHttpLoaderCreator -> com.squareup.picasso.ag:
    com.squareup.picasso.Downloader create(android.content.Context) -> a
com.squareup.picasso.Utils$PicassoThread -> com.squareup.picasso.Utils$PicassoThread:
    void run() -> run
com.squareup.picasso.Utils$PicassoThreadFactory -> com.squareup.picasso.ah:
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.tencent.mm.BuildConfig -> com.tencent.mm.BuildConfig:
    boolean DEBUG -> DEBUG
com.tencent.mm.algorithm.Base64 -> com.tencent.mm.algorithm.Base64:
    char[] a -> a
    int[] b -> b
    char[] encodeToChar(byte[],boolean) -> encodeToChar
    byte[] decode(char[]) -> decode
    byte[] decodeFast(char[]) -> decodeFast
    byte[] encodeToByte(byte[],boolean) -> encodeToByte
    byte[] decode(byte[]) -> decode
    byte[] decodeFast(byte[]) -> decodeFast
    java.lang.String encodeToString(byte[],boolean) -> encodeToString
    byte[] decode(java.lang.String) -> decode
    byte[] decodeFast(java.lang.String) -> decodeFast
com.tencent.mm.algorithm.LRUMap -> com.tencent.mm.algorithm.LRUMap:
    java.util.Map c -> c
    int d -> d
    int e -> e
    com.tencent.mm.algorithm.LRUMap$PreRemoveCallback f -> f
    int size() -> size
    void setMaxSize(int) -> setMaxSize
    void setPerDeleteSize(int) -> setPerDeleteSize
    boolean check(java.lang.Object) -> check
    boolean checkAndUpTime(java.lang.Object) -> checkAndUpTime
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object getAndUptime(java.lang.Object) -> getAndUptime
    void remove(java.lang.Object) -> remove
    void clear() -> clear
    void clear(com.tencent.mm.algorithm.LRUMap$OnClearListener) -> clear
    void update(java.lang.Object,java.lang.Object) -> update
com.tencent.mm.algorithm.LRUMap$1 -> com.tencent.mm.algorithm.LRUMap$1:
    com.tencent.mm.algorithm.LRUMap g -> g
    int compare(java.util.Map$Entry,java.util.Map$Entry) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.tencent.mm.algorithm.LRUMap$OnClearListener -> com.tencent.mm.algorithm.LRUMap$OnClearListener:
    void onClear(java.lang.Object,java.lang.Object) -> onClear
com.tencent.mm.algorithm.LRUMap$PreRemoveCallback -> com.tencent.mm.algorithm.LRUMap$PreRemoveCallback:
    void preRemoveCallback(java.lang.Object,java.lang.Object) -> preRemoveCallback
com.tencent.mm.algorithm.LRUMap$TimeVal -> com.tencent.mm.algorithm.LRUMap$TimeVal:
    java.lang.Object obj -> obj
    java.lang.Long t -> t
    com.tencent.mm.algorithm.LRUMap g -> g
    void UpTime() -> UpTime
com.tencent.mm.algorithm.MD5 -> com.tencent.mm.algorithm.MD5:
    java.lang.String getMessageDigest(byte[]) -> getMessageDigest
    byte[] getRawDigest(byte[]) -> getRawDigest
    java.lang.String getMD5(java.io.FileInputStream,int,int,int) -> getMD5
    java.lang.String getMD5(java.io.FileInputStream,int) -> getMD5
    java.lang.String getMD5(java.lang.String) -> getMD5
    java.lang.String getMD5(java.io.File) -> getMD5
    java.lang.String getMD5(java.io.File,int) -> getMD5
    java.lang.String getMD5(java.lang.String,int,int) -> getMD5
    java.lang.String getMD5(java.io.File,int,int) -> getMD5
com.tencent.mm.algorithm.TypeTransform -> com.tencent.mm.algorithm.TypeTransform:
    byte[] a(byte[]) -> a
    byte[] intToByteArrayLH(int) -> intToByteArrayLH
    byte[] longToByteArrayLH(long) -> longToByteArrayLH
    byte[] intToByteArrayHL(int) -> intToByteArrayHL
    byte[] longToByteArrayHL(long) -> longToByteArrayHL
    int byteArrayLHToInt(byte[]) -> byteArrayLHToInt
    int byteArrayLHToInt(byte[],int) -> byteArrayLHToInt
    long byteArrayLHToLong(byte[]) -> byteArrayLHToLong
    long byteArrayLHToLong(byte[],int) -> byteArrayLHToLong
    int byteArrayHLToInt(byte[]) -> byteArrayHLToInt
    int byteArrayHLToInt(byte[],int) -> byteArrayHLToInt
    long byteArrayHLToLong(byte[],int) -> byteArrayHLToLong
    long byteArrayHLToLong(byte[]) -> byteArrayHLToLong
com.tencent.mm.algorithm.UIN -> com.tencent.mm.algorithm.UIN:
    int h -> h
    int value() -> value
    int valueOf(java.lang.String) -> valueOf
    double doubleValue() -> doubleValue
    float floatValue() -> floatValue
    int intValue() -> intValue
    long longValue() -> longValue
    java.lang.String toString() -> toString
com.tencent.mm.platformtools.CnToSpell -> com.tencent.mm.platformtools.CnToSpell:
    java.lang.String getFullSpell(java.lang.String) -> getFullSpell
    java.lang.String getInitial(java.lang.String) -> getInitial
com.tencent.mm.platformtools.SpellMap -> com.tencent.mm.platformtools.SpellMap:
    java.lang.String getSpell(char) -> getSpell
    int a(char) -> a
    java.lang.String spellGetJni(int,int) -> spellGetJni
com.tencent.mm.sdk.Build -> com.tencent.mm.sdk.Build:
    int SDK_INT -> SDK_INT
    java.lang.String SDK_VERSION_NAME -> SDK_VERSION_NAME
    int TIMELINE_SUPPORTED_SDK_INT -> TIMELINE_SUPPORTED_SDK_INT
    int EMOJI_SUPPORTED_SDK_INT -> EMOJI_SUPPORTED_SDK_INT
    int MUSIC_DATA_URL_SUPPORTED_SDK_INT -> MUSIC_DATA_URL_SUPPORTED_SDK_INT
com.tencent.mm.sdk.ConstantsUI -> com.tencent.mm.sdk.ConstantsUI:
    java.lang.String PREF_FILE_PATH -> PREF_FILE_PATH
com.tencent.mm.sdk.ConstantsUI$Contact -> com.tencent.mm.sdk.ConstantsUI$Contact:
    java.lang.String KUser -> KUser
com.tencent.mm.sdk.MMAppMgr -> com.tencent.mm.sdk.MMAppMgr:
    void activate(boolean) -> activate
    android.content.SharedPreferences getSharedPreferences(android.content.Context,int) -> getSharedPreferences
    com.tencent.mm.sdk.plugin.IMMPluginAPI getPluginMgr(android.content.Context) -> getPluginMgr
com.tencent.mm.sdk.MMSharedPreferences -> com.tencent.mm.sdk.MMSharedPreferences:
    android.content.ContentResolver i -> i
    java.lang.String[] columns -> columns
    java.util.HashMap j -> j
    com.tencent.mm.sdk.MMSharedPreferences$REditor k -> k
    java.lang.Object getValue(java.lang.String) -> getValue
    java.util.Map getAll() -> getAll
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    int getInt(java.lang.String,int) -> getInt
    long getLong(java.lang.String,long) -> getLong
    float getFloat(java.lang.String,float) -> getFloat
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    boolean contains(java.lang.String) -> contains
    android.content.SharedPreferences$Editor edit() -> edit
    void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> registerOnSharedPreferenceChangeListener
    void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> unregisterOnSharedPreferenceChangeListener
    java.util.Set getStringSet(java.lang.String,java.util.Set) -> getStringSet
com.tencent.mm.sdk.MMSharedPreferences$REditor -> com.tencent.mm.sdk.MMSharedPreferences$REditor:
    java.util.Map l -> l
    java.util.Set m -> m
    boolean n -> n
    android.content.ContentResolver i -> i
    android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String) -> putString
    android.content.SharedPreferences$Editor putInt(java.lang.String,int) -> putInt
    android.content.SharedPreferences$Editor putLong(java.lang.String,long) -> putLong
    android.content.SharedPreferences$Editor putFloat(java.lang.String,float) -> putFloat
    android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean) -> putBoolean
    android.content.SharedPreferences$Editor remove(java.lang.String) -> remove
    android.content.SharedPreferences$Editor clear() -> clear
    boolean commit() -> commit
    void apply() -> apply
    android.content.SharedPreferences$Editor putStringSet(java.lang.String,java.util.Set) -> putStringSet
com.tencent.mm.sdk.channel.ConstantsMMessage -> com.tencent.mm.sdk.channel.ConstantsMMessage:
    java.lang.String APP_PACKAGE -> APP_PACKAGE
    java.lang.String SDK_VERSION -> SDK_VERSION
    java.lang.String CONTENT -> CONTENT
    java.lang.String CHECK_SUM -> CHECK_SUM
    java.lang.String ACTION_MESSAGE -> ACTION_MESSAGE
com.tencent.mm.sdk.channel.MMessage -> com.tencent.mm.sdk.channel.MMessage:
    boolean send(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle) -> send
    void send(android.content.Context,java.lang.String,java.lang.String) -> send
    void send(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> send
com.tencent.mm.sdk.channel.MMessage$CallBack -> com.tencent.mm.sdk.channel.MMessage$CallBack:
    void handleMessage(android.content.Intent) -> handleMessage
com.tencent.mm.sdk.channel.MMessage$Receiver -> com.tencent.mm.sdk.channel.MMessage$Receiver:
    java.util.Map callbacks -> callbacks
    com.tencent.mm.sdk.channel.MMessage$CallBack o -> o
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void registerCallBack(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack) -> registerCallBack
    void unregisterCallBack(java.lang.String) -> unregisterCallBack
com.tencent.mm.sdk.channel.MMessageAct -> com.tencent.mm.sdk.channel.MMessageAct:
    boolean send(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle) -> send
    boolean send(android.content.Context,java.lang.String,java.lang.String) -> send
    boolean send(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle) -> send
    boolean sendToWx(android.content.Context,java.lang.String,android.os.Bundle) -> sendToWx
    boolean sendToWx(android.content.Context,java.lang.String) -> sendToWx
com.tencent.mm.sdk.channel.MMessageUtil -> com.tencent.mm.sdk.channel.MMessageUtil:
    byte[] a(java.lang.String,java.lang.String) -> a
com.tencent.mm.sdk.channel.package-info -> com.tencent.mm.sdk.channel.package-info:
com.tencent.mm.sdk.event.EventPoolFactory -> com.tencent.mm.sdk.event.EventPoolFactory:
    com.tencent.mm.sdk.event.EventPoolFactory$IEventPool impl -> impl
    void setImpl(com.tencent.mm.sdk.event.EventPoolFactory$IEventPool) -> setImpl
    com.tencent.mm.sdk.event.EventPoolFactory$IEventPool getImpl() -> getImpl
com.tencent.mm.sdk.event.EventPoolFactory$IEventPool -> com.tencent.mm.sdk.event.EventPoolFactory$IEventPool:
    boolean add(java.lang.String,com.tencent.mm.sdk.event.IListener) -> add
    boolean remove(java.lang.String,com.tencent.mm.sdk.event.IListener) -> remove
    void release(int) -> release
    void publish(com.tencent.mm.sdk.event.IEvent) -> publish
    void asyncPublish(com.tencent.mm.sdk.event.IEvent) -> asyncPublish
    void asyncPublish(com.tencent.mm.sdk.event.IEvent,android.os.Looper) -> asyncPublish
com.tencent.mm.sdk.event.IEvent -> com.tencent.mm.sdk.event.IEvent:
    int EVENT_SCOPE_TEMPL -> EVENT_SCOPE_TEMPL
    int EVENT_SCOPE_SESSION -> EVENT_SCOPE_SESSION
    int EVENT_SCOPE_APPLICATION -> EVENT_SCOPE_APPLICATION
    java.lang.String getId() -> getId
    java.lang.String getScope() -> getScope
    boolean isOrder() -> isOrder
    void oncomplete() -> oncomplete
com.tencent.mm.sdk.event.IListener -> com.tencent.mm.sdk.event.IListener:
    int priority -> priority
    int getPriority() -> getPriority
    boolean callback(com.tencent.mm.sdk.event.IEvent) -> callback
com.tencent.mm.sdk.openapi.BaseReq -> com.tencent.mm.sdk.openapi.BaseReq:
    java.lang.String transaction -> transaction
    int getType() -> getType
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.BaseResp -> com.tencent.mm.sdk.openapi.BaseResp:
    int errCode -> errCode
    java.lang.String errStr -> errStr
    java.lang.String transaction -> transaction
    int getType() -> getType
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.BaseResp$ErrCode -> com.tencent.mm.sdk.openapi.BaseResp$ErrCode:
    int ERR_OK -> ERR_OK
    int ERR_COMM -> ERR_COMM
    int ERR_USER_CANCEL -> ERR_USER_CANCEL
    int ERR_SENT_FAILED -> ERR_SENT_FAILED
    int ERR_AUTH_DENIED -> ERR_AUTH_DENIED
    int ERR_UNSUPPORT -> ERR_UNSUPPORT
com.tencent.mm.sdk.openapi.ConstantsAPI -> com.tencent.mm.sdk.openapi.ConstantsAPI:
    java.lang.String ACTION_HANDLE_APP_REGISTER -> ACTION_HANDLE_APP_REGISTER
    java.lang.String ACTION_HANDLE_APP_UNREGISTER -> ACTION_HANDLE_APP_UNREGISTER
    java.lang.String ACTION_REFRESH_WXAPP -> ACTION_REFRESH_WXAPP
    int COMMAND_UNKNOWN -> COMMAND_UNKNOWN
    int COMMAND_SENDAUTH -> COMMAND_SENDAUTH
    int COMMAND_SENDMESSAGE_TO_WX -> COMMAND_SENDMESSAGE_TO_WX
    int COMMAND_GETMESSAGE_FROM_WX -> COMMAND_GETMESSAGE_FROM_WX
    int COMMAND_SHOWMESSAGE_FROM_WX -> COMMAND_SHOWMESSAGE_FROM_WX
    java.lang.String WX_TOKEN_KEY -> WX_TOKEN_KEY
    java.lang.String WX_TOKEN_VALUE -> WX_TOKEN_VALUE
com.tencent.mm.sdk.openapi.GetMessageFromWX -> com.tencent.mm.sdk.openapi.GetMessageFromWX:
com.tencent.mm.sdk.openapi.GetMessageFromWX$Req -> com.tencent.mm.sdk.openapi.GetMessageFromWX$Req:
    java.lang.String username -> username
    int getType() -> getType
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.GetMessageFromWX$Resp -> com.tencent.mm.sdk.openapi.GetMessageFromWX$Resp:
    com.tencent.mm.sdk.openapi.WXMediaMessage message -> message
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.IWXAPI -> com.tencent.mm.sdk.openapi.IWXAPI:
    boolean registerApp(java.lang.String) -> registerApp
    void unregisterApp() -> unregisterApp
    boolean handleIntent(android.content.Intent,com.tencent.mm.sdk.openapi.IWXAPIEventHandler) -> handleIntent
    boolean isWXAppInstalled() -> isWXAppInstalled
    boolean isWXAppSupportAPI() -> isWXAppSupportAPI
    int getWXAppSupportAPI() -> getWXAppSupportAPI
    boolean openWXApp() -> openWXApp
    boolean sendReq(com.tencent.mm.sdk.openapi.BaseReq) -> sendReq
    boolean sendResp(com.tencent.mm.sdk.openapi.BaseResp) -> sendResp
com.tencent.mm.sdk.openapi.IWXAPIEventHandler -> com.tencent.mm.sdk.openapi.IWXAPIEventHandler:
    void onReq(com.tencent.mm.sdk.openapi.BaseReq) -> onReq
    void onResp(com.tencent.mm.sdk.openapi.BaseResp) -> onResp
com.tencent.mm.sdk.openapi.SendAuth -> com.tencent.mm.sdk.openapi.SendAuth:
com.tencent.mm.sdk.openapi.SendAuth$Req -> com.tencent.mm.sdk.openapi.SendAuth$Req:
    java.lang.String scope -> scope
    java.lang.String state -> state
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.SendAuth$Resp -> com.tencent.mm.sdk.openapi.SendAuth$Resp:
    java.lang.String userName -> userName
    java.lang.String token -> token
    int expireDate -> expireDate
    java.lang.String state -> state
    java.lang.String resultUrl -> resultUrl
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.SendMessageToWX -> com.tencent.mm.sdk.openapi.SendMessageToWX:
com.tencent.mm.sdk.openapi.SendMessageToWX$Req -> com.tencent.mm.sdk.openapi.SendMessageToWX$Req:
    int WXSceneSession -> WXSceneSession
    int WXSceneTimeline -> WXSceneTimeline
    com.tencent.mm.sdk.openapi.WXMediaMessage message -> message
    int scene -> scene
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.SendMessageToWX$Resp -> com.tencent.mm.sdk.openapi.SendMessageToWX$Resp:
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.ShowMessageFromWX -> com.tencent.mm.sdk.openapi.ShowMessageFromWX:
com.tencent.mm.sdk.openapi.ShowMessageFromWX$Req -> com.tencent.mm.sdk.openapi.ShowMessageFromWX$Req:
    com.tencent.mm.sdk.openapi.WXMediaMessage message -> message
    int getType() -> getType
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.ShowMessageFromWX$Resp -> com.tencent.mm.sdk.openapi.ShowMessageFromWX$Resp:
    int getType() -> getType
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.WXAPIFactory -> com.tencent.mm.sdk.openapi.WXAPIFactory:
    com.tencent.mm.sdk.openapi.WXAPIFactory p -> p
    com.tencent.mm.sdk.openapi.IWXAPI createWXAPI(android.content.Context,java.lang.String) -> createWXAPI
    com.tencent.mm.sdk.openapi.IWXAPI createWXAPI(android.content.Context,java.lang.String,boolean) -> createWXAPI
com.tencent.mm.sdk.openapi.WXApiImplV10 -> com.tencent.mm.sdk.openapi.WXApiImplV10:
    android.content.Context q -> q
    java.lang.String r -> r
    boolean s -> s
    boolean registerApp(java.lang.String) -> registerApp
    void unregisterApp() -> unregisterApp
    boolean handleIntent(android.content.Intent,com.tencent.mm.sdk.openapi.IWXAPIEventHandler) -> handleIntent
    boolean isWXAppInstalled() -> isWXAppInstalled
    boolean isWXAppSupportAPI() -> isWXAppSupportAPI
    int getWXAppSupportAPI() -> getWXAppSupportAPI
    boolean openWXApp() -> openWXApp
    boolean sendReq(com.tencent.mm.sdk.openapi.BaseReq) -> sendReq
    boolean sendResp(com.tencent.mm.sdk.openapi.BaseResp) -> sendResp
    boolean a(java.lang.String) -> a
    boolean a(android.content.pm.Signature[]) -> a
    boolean a(byte[],byte[]) -> a
com.tencent.mm.sdk.openapi.WXAppExtendObject -> com.tencent.mm.sdk.openapi.WXAppExtendObject:
    java.lang.String extInfo -> extInfo
    java.lang.String filePath -> filePath
    byte[] fileData -> fileData
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.WXAppLaunchData -> com.tencent.mm.sdk.openapi.WXAppLaunchData:
    java.lang.String ACTION_HANDLE_WXAPPLAUNCH -> ACTION_HANDLE_WXAPPLAUNCH
    java.lang.String ACTION_HANDLE_WXAPP_RESULT -> ACTION_HANDLE_WXAPP_RESULT
    java.lang.String ACTION_HANDLE_WXAPP_SHOW -> ACTION_HANDLE_WXAPP_SHOW
    int launchType -> launchType
    java.lang.String message -> message
com.tencent.mm.sdk.openapi.WXAppLaunchData$Builder -> com.tencent.mm.sdk.openapi.WXAppLaunchData$Builder:
    com.tencent.mm.sdk.openapi.WXAppLaunchData fromBundle(android.os.Bundle) -> fromBundle
    android.os.Bundle toBundle(com.tencent.mm.sdk.openapi.WXAppLaunchData) -> toBundle
com.tencent.mm.sdk.openapi.WXEmojiObject -> com.tencent.mm.sdk.openapi.WXEmojiObject:
    byte[] emojiData -> emojiData
    java.lang.String emojiPath -> emojiPath
    void setEmojiData(byte[]) -> setEmojiData
    void setEmojiPath(java.lang.String) -> setEmojiPath
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.WXFileObject -> com.tencent.mm.sdk.openapi.WXFileObject:
    byte[] fileData -> fileData
    java.lang.String filePath -> filePath
    void setFileData(byte[]) -> setFileData
    void setFilePath(java.lang.String) -> setFilePath
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.WXImageObject -> com.tencent.mm.sdk.openapi.WXImageObject:
    byte[] imageData -> imageData
    java.lang.String imagePath -> imagePath
    java.lang.String imageUrl -> imageUrl
    void setImagePath(java.lang.String) -> setImagePath
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.WXMediaMessage -> com.tencent.mm.sdk.openapi.WXMediaMessage:
    java.lang.String ACTION_WXAPPMESSAGE -> ACTION_WXAPPMESSAGE
    int sdkVer -> sdkVer
    java.lang.String title -> title
    java.lang.String description -> description
    byte[] thumbData -> thumbData
    com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject mediaObject -> mediaObject
    int getType() -> getType
    void setThumbImage(android.graphics.Bitmap) -> setThumbImage
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.WXMediaMessage$Builder -> com.tencent.mm.sdk.openapi.WXMediaMessage$Builder:
    java.lang.String KEY_IDENTIFIER -> KEY_IDENTIFIER
    android.os.Bundle toBundle(com.tencent.mm.sdk.openapi.WXMediaMessage) -> toBundle
    com.tencent.mm.sdk.openapi.WXMediaMessage fromBundle(android.os.Bundle) -> fromBundle
com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject -> com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject:
    int TYPE_UNKNOWN -> TYPE_UNKNOWN
    int TYPE_TEXT -> TYPE_TEXT
    int TYPE_IMAGE -> TYPE_IMAGE
    int TYPE_MUSIC -> TYPE_MUSIC
    int TYPE_VIDEO -> TYPE_VIDEO
    int TYPE_URL -> TYPE_URL
    int TYPE_FILE -> TYPE_FILE
    int TYPE_APPDATA -> TYPE_APPDATA
    int TYPE_EMOJI -> TYPE_EMOJI
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.WXMusicObject -> com.tencent.mm.sdk.openapi.WXMusicObject:
    java.lang.String musicUrl -> musicUrl
    java.lang.String musicLowBandUrl -> musicLowBandUrl
    java.lang.String musicDataUrl -> musicDataUrl
    java.lang.String musicLowBandDataUrl -> musicLowBandDataUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.WXTextObject -> com.tencent.mm.sdk.openapi.WXTextObject:
    java.lang.String text -> text
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.WXVideoObject -> com.tencent.mm.sdk.openapi.WXVideoObject:
    java.lang.String videoUrl -> videoUrl
    java.lang.String videoLowBandUrl -> videoLowBandUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.WXWebpageObject -> com.tencent.mm.sdk.openapi.WXWebpageObject:
    java.lang.String webpageUrl -> webpageUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.package-info -> com.tencent.mm.sdk.openapi.package-info:
com.tencent.mm.sdk.package-info -> com.tencent.mm.sdk.package-info:
com.tencent.mm.sdk.platformtools.AnimationHelperImpl21below -> com.tencent.mm.sdk.platformtools.AnimationHelperImpl21below:
    void cancelAnimation(android.view.View,android.view.animation.Animation) -> cancelAnimation
com.tencent.mm.sdk.platformtools.AnimationHelperImpl22 -> com.tencent.mm.sdk.platformtools.AnimationHelperImpl22:
    void cancelAnimation(android.view.View,android.view.animation.Animation) -> cancelAnimation
com.tencent.mm.sdk.platformtools.BackwardSupportUtil -> com.tencent.mm.sdk.platformtools.BackwardSupportUtil:
    int ANDROID_API_LEVEL_16 -> ANDROID_API_LEVEL_16
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$AnimationHelper -> com.tencent.mm.sdk.platformtools.BackwardSupportUtil$AnimationHelper:
    void cancelAnimation(android.view.View,android.view.animation.Animation) -> cancelAnimation
    void overridePendingTransition(android.app.Activity,int,int) -> overridePendingTransition
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$AnimationHelper$IHelper -> com.tencent.mm.sdk.platformtools.BackwardSupportUtil$AnimationHelper$IHelper:
    void cancelAnimation(android.view.View,android.view.animation.Animation) -> cancelAnimation
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$BitmapFactory -> com.tencent.mm.sdk.platformtools.BackwardSupportUtil$BitmapFactory:
    android.graphics.Bitmap decodeFile(java.lang.String,float) -> decodeFile
    int fromDPToPix(android.content.Context,float) -> fromDPToPix
    android.graphics.Bitmap decodeStream(java.io.InputStream) -> decodeStream
    android.graphics.Bitmap decodeStream(java.io.InputStream,float) -> decodeStream
    java.lang.String getDisplayDensityType(android.content.Context) -> getDisplayDensityType
    android.graphics.Bitmap getBitmapFromURL(java.lang.String) -> getBitmapFromURL
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$ExifHelper -> com.tencent.mm.sdk.platformtools.BackwardSupportUtil$ExifHelper:
    int getExifOrientation(java.lang.String) -> getExifOrientation
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$SmoothScrollFactory -> com.tencent.mm.sdk.platformtools.BackwardSupportUtil$SmoothScrollFactory:
    void scrollToTop(android.widget.ListView) -> scrollToTop
    void scrollTo(android.widget.ListView,int) -> scrollTo
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$SmoothScrollFactory$IScroll -> com.tencent.mm.sdk.platformtools.BackwardSupportUtil$SmoothScrollFactory$IScroll:
    void doScroll(android.widget.ListView) -> doScroll
    void doScroll(android.widget.ListView,int) -> doScroll
com.tencent.mm.sdk.platformtools.BluetoothUtil -> com.tencent.mm.sdk.platformtools.BluetoothUtil:
    boolean startBluetooth(android.media.AudioManager) -> startBluetooth
    void stopBluetooth(android.media.AudioManager) -> stopBluetooth
com.tencent.mm.sdk.platformtools.ChannelUtil -> com.tencent.mm.sdk.platformtools.ChannelUtil:
    int FLAG_UPDATE_EXTERNAL -> FLAG_UPDATE_EXTERNAL
    int FLAG_UPDATE_NOTIP -> FLAG_UPDATE_NOTIP
    int FLAG_NULL -> FLAG_NULL
    int channelId -> channelId
    java.lang.String profileDeviceType -> profileDeviceType
    int updateMode -> updateMode
    int buildRev -> buildRev
    java.lang.String marketURL -> marketURL
    boolean fullVersionInfo -> fullVersionInfo
    boolean shouldShowGprsAlert -> shouldShowGprsAlert
    void setupChannelId(android.content.Context) -> setupChannelId
    void loadProfile(android.content.Context) -> loadProfile
    java.lang.String formatVersion(android.content.Context,int) -> formatVersion
com.tencent.mm.sdk.platformtools.CharSequences -> com.tencent.mm.sdk.platformtools.CharSequences:
    java.lang.CharSequence forAsciiBytes(byte[]) -> forAsciiBytes
    java.lang.CharSequence forAsciiBytes(byte[],int,int) -> forAsciiBytes
    void a(int,int,int) -> a
    boolean equals(java.lang.CharSequence,java.lang.CharSequence) -> equals
    int compareToIgnoreCase(java.lang.CharSequence,java.lang.CharSequence) -> compareToIgnoreCase
com.tencent.mm.sdk.platformtools.CharSequences$1 -> com.tencent.mm.sdk.platformtools.CharSequences$1:
    byte[] u -> u
    char charAt(int) -> charAt
    int length() -> length
    java.lang.CharSequence subSequence(int,int) -> subSequence
    java.lang.String toString() -> toString
com.tencent.mm.sdk.platformtools.CharSequences$2 -> com.tencent.mm.sdk.platformtools.CharSequences$2:
    byte[] u -> u
    int v -> v
    int w -> w
    char charAt(int) -> charAt
    int length() -> length
    java.lang.CharSequence subSequence(int,int) -> subSequence
    java.lang.String toString() -> toString
com.tencent.mm.sdk.platformtools.FilePathGenerator -> com.tencent.mm.sdk.platformtools.FilePathGenerator:
    int HASH_TYPE_HEAD_2_BYTE -> HASH_TYPE_HEAD_2_BYTE
    int HASH_TYPE_ALL_MD5 -> HASH_TYPE_ALL_MD5
    java.lang.String ANDROID_DIR_SEP -> ANDROID_DIR_SEP
    java.lang.String NO_MEDIA_FILENAME -> NO_MEDIA_FILENAME
    java.lang.String b(java.lang.String) -> b
    boolean c(java.lang.String) -> c
    java.lang.String genPath(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> genPath
    java.lang.String defGenPathWithOld(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> defGenPathWithOld
com.tencent.mm.sdk.platformtools.FilePathGenerator$DIR_HASH_TYPE -> com.tencent.mm.sdk.platformtools.FilePathGenerator$DIR_HASH_TYPE:
    com.tencent.mm.sdk.platformtools.FilePathGenerator$DIR_HASH_TYPE HEAD_2_BYTE -> HEAD_2_BYTE
    com.tencent.mm.sdk.platformtools.FilePathGenerator$DIR_HASH_TYPE ALL_MD5 -> ALL_MD5
    com.tencent.mm.sdk.platformtools.FilePathGenerator$DIR_HASH_TYPE[] x -> x
    com.tencent.mm.sdk.platformtools.FilePathGenerator$DIR_HASH_TYPE[] values() -> values
    com.tencent.mm.sdk.platformtools.FilePathGenerator$DIR_HASH_TYPE valueOf(java.lang.String) -> valueOf
com.tencent.mm.sdk.platformtools.FilesCopy -> com.tencent.mm.sdk.platformtools.FilesCopy:
    boolean copyFile(java.lang.String,java.lang.String) -> copyFile
    boolean copy(java.lang.String,java.lang.String,boolean) -> copy
    boolean copyAssets(android.content.Context,java.lang.String,java.lang.String) -> copyAssets
com.tencent.mm.sdk.platformtools.InetUtil -> com.tencent.mm.sdk.platformtools.InetUtil:
    java.util.regex.Pattern y -> y
    java.util.regex.Pattern z -> z
    java.util.regex.Pattern A -> A
    boolean isIPv4Address(java.lang.String) -> isIPv4Address
    boolean isIPv6StdAddress(java.lang.String) -> isIPv6StdAddress
    boolean isIPv6HexCompressedAddress(java.lang.String) -> isIPv6HexCompressedAddress
    boolean isIPv6Address(java.lang.String) -> isIPv6Address
    java.net.InetAddress getByDottedAddress(java.lang.String) -> getByDottedAddress
com.tencent.mm.sdk.platformtools.JpegTools -> com.tencent.mm.sdk.platformtools.JpegTools:
    java.lang.String TAG -> TAG
    com.tencent.mm.sdk.platformtools.MBuf B -> B
    int C -> C
    boolean D -> D
    int ORIENTATION_UNDEFINED -> ORIENTATION_UNDEFINED
    int ORIENTATION_NORMAL -> ORIENTATION_NORMAL
    int ORIENTATION_FLIP_HORIZONTAL -> ORIENTATION_FLIP_HORIZONTAL
    int ORIENTATION_ROTATE_180 -> ORIENTATION_ROTATE_180
    int ORIENTATION_FLIP_VERTICAL -> ORIENTATION_FLIP_VERTICAL
    int ORIENTATION_TRANSPOSE -> ORIENTATION_TRANSPOSE
    int ORIENTATION_ROTATE_90 -> ORIENTATION_ROTATE_90
    int ORIENTATION_TRANSVERSE -> ORIENTATION_TRANSVERSE
    int ORIENTATION_ROTATE_270 -> ORIENTATION_ROTATE_270
    void a(int) -> a
    int parserJpeg() -> parserJpeg
    int getOreiValue() -> getOreiValue
    java.lang.String byte2HexString(byte) -> byte2HexString
com.tencent.mm.sdk.platformtools.KVConfig -> com.tencent.mm.sdk.platformtools.KVConfig:
    boolean E -> E
    java.util.Map parseIni(java.lang.String) -> parseIni
    java.util.Map parseXml(java.lang.String,java.lang.String,java.lang.String) -> parseXml
    void a(java.util.Map,java.lang.String,org.w3c.dom.Node,int) -> a
    void a(java.util.Map) -> a
com.tencent.mm.sdk.platformtools.LBSManager -> com.tencent.mm.sdk.platformtools.LBSManager:
    java.lang.String FILTER_GPS -> FILTER_GPS
    float INVALID_LAT -> INVALID_LAT
    float INVALID_LNG -> INVALID_LNG
    int INVALID_ACC -> INVALID_ACC
    int MM_SOURCE_HARDWARE -> MM_SOURCE_HARDWARE
    int MM_SOURCE_NET -> MM_SOURCE_NET
    int MM_SOURCE_REPORT_HARWARE -> MM_SOURCE_REPORT_HARWARE
    int MM_SOURCE_REPORT_NETWORK -> MM_SOURCE_REPORT_NETWORK
    com.tencent.mm.sdk.platformtools.LBSManager$LocationCache F -> F
    com.tencent.mm.sdk.platformtools.LBSManager$OnLocationGotListener G -> G
    android.location.LocationManager H -> H
    android.content.Context q -> q
    android.app.PendingIntent I -> I
    boolean J -> J
    boolean K -> K
    boolean L -> L
    boolean M -> M
    int N -> N
    com.tencent.mm.sdk.platformtools.MTimerHandler O -> O
    boolean a() -> a
    void start() -> start
    boolean isGpsEnable() -> isGpsEnable
    boolean isNetworkPrividerEnable() -> isNetworkPrividerEnable
    void removeGpsUpdate() -> removeGpsUpdate
    void requestGpsUpdate() -> requestGpsUpdate
    void requestGpsUpdate(int) -> requestGpsUpdate
    void removeListener() -> removeListener
    void b() -> b
    void resetForContinueGetLocation() -> resetForContinueGetLocation
    java.lang.String getTelLocation() -> getTelLocation
    java.lang.String getWIFILocation() -> getWIFILocation
    void setLocationCache(float,float,int,int) -> setLocationCache
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    boolean a(com.tencent.mm.sdk.platformtools.LBSManager) -> a
com.tencent.mm.sdk.platformtools.LBSManager$1 -> com.tencent.mm.sdk.platformtools.LBSManager$1:
    com.tencent.mm.sdk.platformtools.LBSManager P -> P
    boolean onTimerExpired() -> onTimerExpired
com.tencent.mm.sdk.platformtools.LBSManager$LocationCache -> com.tencent.mm.sdk.platformtools.LBSManager$LocationCache:
    float Q -> Q
    float R -> R
    int S -> S
    long time -> time
    int T -> T
com.tencent.mm.sdk.platformtools.LBSManager$OnLocationGotListener -> com.tencent.mm.sdk.platformtools.LBSManager$OnLocationGotListener:
    void onLocationGot(float,float,int,int,java.lang.String,java.lang.String,boolean) -> onLocationGot
com.tencent.mm.sdk.platformtools.LVBuffer -> com.tencent.mm.sdk.platformtools.LVBuffer:
    int LENGTH_ALLOC_PER_NEW -> LENGTH_ALLOC_PER_NEW
    int MAX_STRING_LENGTH -> MAX_STRING_LENGTH
    java.nio.ByteBuffer U -> U
    boolean V -> V
    int initParse(byte[]) -> initParse
    int getInt() -> getInt
    long getLong() -> getLong
    java.lang.String getString() -> getString
    boolean checkGetFinish() -> checkGetFinish
    int initBuild() -> initBuild
    int b(int) -> b
    int putInt(int) -> putInt
    int putLong(long) -> putLong
    int putString(java.lang.String) -> putString
    byte[] buildFinish() -> buildFinish
com.tencent.mm.sdk.platformtools.LocaleUtil -> com.tencent.mm.sdk.platformtools.LocaleUtil:
    java.lang.String LANGUAGE_DEFAULT -> LANGUAGE_DEFAULT
    java.lang.String LANGUAGE_KEY -> LANGUAGE_KEY
    java.lang.String TAIWAN -> TAIWAN
    java.lang.String HONGKONG -> HONGKONG
    java.lang.String CHINA -> CHINA
    java.lang.String ENGLISH -> ENGLISH
    java.lang.String THAI -> THAI
    java.lang.String INDONESIAN -> INDONESIAN
    java.lang.String VIETNAMESE -> VIETNAMESE
    java.lang.String PORTUGUESE -> PORTUGUESE
    java.lang.String SPANISH -> SPANISH
    java.lang.String RUSSIAN -> RUSSIAN
    java.lang.String ARABIC -> ARABIC
    java.lang.String HEBREW -> HEBREW
    java.lang.String POLISH -> POLISH
    java.lang.String HINDI -> HINDI
    java.lang.String JAPANESE -> JAPANESE
    java.lang.String ITALIAN -> ITALIAN
    java.lang.String KOREAN -> KOREAN
    java.lang.String MALAY -> MALAY
    java.lang.String TURKEY -> TURKEY
    boolean isLanguageSupported(java.lang.String) -> isLanguageSupported
    void updateApplicationResourceLocale(android.content.Context,java.util.Locale) -> updateApplicationResourceLocale
    java.util.Locale transLanguageToLocale(java.lang.String) -> transLanguageToLocale
    java.lang.String getCurrentCountryCode() -> getCurrentCountryCode
    java.lang.String d(java.lang.String) -> d
    java.lang.String getApplicationLanguage() -> getApplicationLanguage
    java.lang.String loadApplicationLanguage(android.content.SharedPreferences,android.content.Context) -> loadApplicationLanguage
    java.lang.String loadApplicationLanguageSettings(android.content.SharedPreferences,android.content.Context) -> loadApplicationLanguageSettings
    void saveApplicationLanguage(android.content.SharedPreferences,android.content.Context,java.lang.String) -> saveApplicationLanguage
com.tencent.mm.sdk.platformtools.Log -> com.tencent.mm.sdk.platformtools.Log:
    int LEVEL_VERBOSE -> LEVEL_VERBOSE
    int LEVEL_DEBUG -> LEVEL_DEBUG
    int LEVEL_INFO -> LEVEL_INFO
    int LEVEL_WARNING -> LEVEL_WARNING
    int LEVEL_ERROR -> LEVEL_ERROR
    int LEVEL_FATAL -> LEVEL_FATAL
    int LEVEL_NONE -> LEVEL_NONE
    int level -> level
    java.io.PrintStream W -> W
    byte[] X -> X
    java.lang.String Y -> Y
    void setOutputPath(java.lang.String,java.lang.String,java.lang.String,int) -> setOutputPath
    void setOutputStream(java.io.InputStream,java.io.OutputStream,java.lang.String,java.lang.String,int) -> setOutputStream
    void reset() -> reset
    void setLevel(int,boolean) -> setLevel
    int getLevel() -> getLevel
    void f(java.lang.String,java.lang.String) -> f
    void e(java.lang.String,java.lang.String) -> e
    void w(java.lang.String,java.lang.String) -> w
    void i(java.lang.String,java.lang.String) -> i
    void d(java.lang.String,java.lang.String) -> d
    void v(java.lang.String,java.lang.String) -> v
    void f(java.lang.String,java.lang.String,java.lang.Object[]) -> f
    void e(java.lang.String,java.lang.String,java.lang.Object[]) -> e
    void w(java.lang.String,java.lang.String,java.lang.Object[]) -> w
    void i(java.lang.String,java.lang.String,java.lang.Object[]) -> i
    void d(java.lang.String,java.lang.String,java.lang.Object[]) -> d
    void v(java.lang.String,java.lang.String,java.lang.Object[]) -> v
    java.lang.String getSysInfo() -> getSysInfo
com.tencent.mm.sdk.platformtools.Log$1 -> com.tencent.mm.sdk.platformtools.Log$1:
    java.lang.String Z -> Z
    void run() -> run
com.tencent.mm.sdk.platformtools.LogHelper -> com.tencent.mm.sdk.platformtools.LogHelper:
    java.text.SimpleDateFormat aa -> aa
    byte[] ab -> ab
    void writeToStream(java.io.PrintStream,byte[],java.lang.String,java.lang.String) -> writeToStream
    void initLogHeader(java.io.PrintStream,java.lang.String,java.lang.String,long,int) -> initLogHeader
com.tencent.mm.sdk.platformtools.MAlarmHandler -> com.tencent.mm.sdk.platformtools.MAlarmHandler:
    int ac -> ac
    int ad -> ad
    boolean ae -> ae
    long af -> af
    long ag -> ag
    java.util.Map ah -> ah
    com.tencent.mm.sdk.platformtools.MAlarmHandler$CallBack ai -> ai
    com.tencent.mm.sdk.platformtools.MAlarmHandler$IBumper aj -> aj
    boolean ak -> ak
    long NEXT_FIRE_INTERVAL -> NEXT_FIRE_INTERVAL
    void initAlarmBumper(com.tencent.mm.sdk.platformtools.MAlarmHandler$IBumper) -> initAlarmBumper
    void finalize() -> finalize
    long fire() -> fire
    void startTimer(long) -> startTimer
    void stopTimer() -> stopTimer
    boolean stopped() -> stopped
com.tencent.mm.sdk.platformtools.MAlarmHandler$CallBack -> com.tencent.mm.sdk.platformtools.MAlarmHandler$CallBack:
    boolean onTimerExpired() -> onTimerExpired
com.tencent.mm.sdk.platformtools.MAlarmHandler$IBumper -> com.tencent.mm.sdk.platformtools.MAlarmHandler$IBumper:
    void prepare() -> prepare
    void cancel() -> cancel
com.tencent.mm.sdk.platformtools.MBuf -> com.tencent.mm.sdk.platformtools.MBuf:
    java.nio.ByteBuffer al -> al
    void setBuffer(byte[]) -> setBuffer
    int getOffset() -> getOffset
    int getLen() -> getLen
    java.nio.ByteBuffer getBuffer() -> getBuffer
com.tencent.mm.sdk.platformtools.MMApplicationContext -> com.tencent.mm.sdk.platformtools.MMApplicationContext:
    android.content.Context q -> q
    java.lang.String am -> am
    void setContext(android.content.Context) -> setContext
    android.content.Context getContext() -> getContext
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getDefaultPreferencePath() -> getDefaultPreferencePath
com.tencent.mm.sdk.platformtools.MMEntryLock -> com.tencent.mm.sdk.platformtools.MMEntryLock:
    java.util.Set an -> an
    boolean lock(java.lang.String) -> lock
    void unlock(java.lang.String) -> unlock
    boolean isLocked(java.lang.String) -> isLocked
com.tencent.mm.sdk.platformtools.MMHandlerThread -> com.tencent.mm.sdk.platformtools.MMHandlerThread:
    android.os.HandlerThread ao -> ao
    android.os.Handler ap -> ap
    long mainThreadID -> mainThreadID
    void c() -> c
    android.os.Looper getLooper() -> getLooper
    android.os.Handler getWorkerHandler() -> getWorkerHandler
    int reset(com.tencent.mm.sdk.platformtools.MMHandlerThread$IWaitWorkThread) -> reset
    int syncReset(com.tencent.mm.sdk.platformtools.MMHandlerThread$ResetCallback) -> syncReset
    int postToWorker(java.lang.Runnable) -> postToWorker
    int postAtFrontOfWorker(com.tencent.mm.sdk.platformtools.MMHandlerThread$IWaitWorkThread) -> postAtFrontOfWorker
    void setMainThreadID(long) -> setMainThreadID
    boolean isMainThread() -> isMainThread
    void postToMainThread(java.lang.Runnable) -> postToMainThread
    void postToMainThreadDelayed(java.lang.Runnable,long) -> postToMainThreadDelayed
    android.os.HandlerThread a(com.tencent.mm.sdk.platformtools.MMHandlerThread) -> a
    void b(com.tencent.mm.sdk.platformtools.MMHandlerThread) -> b
    void a(java.lang.Runnable) -> a
com.tencent.mm.sdk.platformtools.MMHandlerThread$1 -> com.tencent.mm.sdk.platformtools.MMHandlerThread$1:
    com.tencent.mm.sdk.platformtools.MMHandlerThread$IWaitWorkThread aq -> aq
    com.tencent.mm.sdk.platformtools.MMHandlerThread ar -> ar
    boolean onPostExecute() -> onPostExecute
    boolean doInBackground() -> doInBackground
com.tencent.mm.sdk.platformtools.MMHandlerThread$2 -> com.tencent.mm.sdk.platformtools.MMHandlerThread$2:
    com.tencent.mm.sdk.platformtools.MMHandlerThread$ResetCallback as -> as
    java.lang.Object at -> at
    com.tencent.mm.sdk.platformtools.MMHandlerThread ar -> ar
    boolean onPostExecute() -> onPostExecute
    boolean doInBackground() -> doInBackground
com.tencent.mm.sdk.platformtools.MMHandlerThread$3 -> com.tencent.mm.sdk.platformtools.MMHandlerThread$3:
    com.tencent.mm.sdk.platformtools.MMHandlerThread$IWaitWorkThread aq -> aq
    com.tencent.mm.sdk.platformtools.MMHandlerThread ar -> ar
    void run() -> run
com.tencent.mm.sdk.platformtools.MMHandlerThread$3$1 -> com.tencent.mm.sdk.platformtools.MMHandlerThread$3$1:
    com.tencent.mm.sdk.platformtools.MMHandlerThread$3 au -> au
    void run() -> run
com.tencent.mm.sdk.platformtools.MMHandlerThread$IWaitWorkThread -> com.tencent.mm.sdk.platformtools.MMHandlerThread$IWaitWorkThread:
    boolean doInBackground() -> doInBackground
    boolean onPostExecute() -> onPostExecute
com.tencent.mm.sdk.platformtools.MMHandlerThread$ResetCallback -> com.tencent.mm.sdk.platformtools.MMHandlerThread$ResetCallback:
    void callback() -> callback
com.tencent.mm.sdk.platformtools.MTimerHandler -> com.tencent.mm.sdk.platformtools.MTimerHandler:
    int ac -> ac
    int ad -> ad
    boolean av -> av
    long aw -> aw
    com.tencent.mm.sdk.platformtools.MTimerHandler$CallBack ax -> ax
    int d() -> d
    void finalize() -> finalize
    void handleMessage(android.os.Message) -> handleMessage
    void startTimer(long) -> startTimer
    void stopTimer() -> stopTimer
    boolean stopped() -> stopped
com.tencent.mm.sdk.platformtools.MTimerHandler$CallBack -> com.tencent.mm.sdk.platformtools.MTimerHandler$CallBack:
    boolean onTimerExpired() -> onTimerExpired
com.tencent.mm.sdk.platformtools.NetStatusUtil -> com.tencent.mm.sdk.platformtools.NetStatusUtil:
    int NON_NETWORK -> NON_NETWORK
    int WIFI -> WIFI
    int UNINET -> UNINET
    int UNIWAP -> UNIWAP
    int WAP_3G -> WAP_3G
    int NET_3G -> NET_3G
    int CMWAP -> CMWAP
    int CMNET -> CMNET
    int CTWAP -> CTWAP
    int CTNET -> CTNET
    int MOBILE -> MOBILE
    int LTE -> LTE
    int POLICY_NONE -> POLICY_NONE
    int POLICY_REJECT_METERED_BACKGROUND -> POLICY_REJECT_METERED_BACKGROUND
    int TBACKGROUND_NOT_LIMITED -> TBACKGROUND_NOT_LIMITED
    int TBACKGROUND_PROCESS_LIMITED -> TBACKGROUND_PROCESS_LIMITED
    int TBACKGROUND_DATA_LIMITED -> TBACKGROUND_DATA_LIMITED
    int TBACKGROUND_WIFI_LIMITED -> TBACKGROUND_WIFI_LIMITED
    int NO_SIM_OPERATOR -> NO_SIM_OPERATOR
    void dumpNetStatus(android.content.Context) -> dumpNetStatus
    boolean isConnected(android.content.Context) -> isConnected
    java.lang.String getNetTypeString(android.content.Context) -> getNetTypeString
    int getNetType(android.content.Context) -> getNetType
    int getISPCode(android.content.Context) -> getISPCode
    java.lang.String getISPName(android.content.Context) -> getISPName
    int guessNetSpeed(android.content.Context) -> guessNetSpeed
    boolean is2G(android.content.Context) -> is2G
    boolean is4G(android.content.Context) -> is4G
    boolean isWap(android.content.Context) -> isWap
    boolean isWap(int) -> isWap
    boolean is2G(int) -> is2G
    boolean is4G(int) -> is4G
    boolean is3G(int) -> is3G
    boolean isMobile(android.content.Context) -> isMobile
    boolean isMobile(int) -> isMobile
    boolean is3G(android.content.Context) -> is3G
    boolean isWifi(android.content.Context) -> isWifi
    boolean isWifi(int) -> isWifi
    android.content.Intent a(android.content.Context,java.lang.String) -> a
    void startSettingItent(android.content.Context,int) -> startSettingItent
    int getWifiSleeepPolicy(android.content.Context) -> getWifiSleeepPolicy
    boolean isLimited(int) -> isLimited
    int getBackgroundLimitType(android.content.Context) -> getBackgroundLimitType
    boolean isRestrictBacground(android.content.Context) -> isRestrictBacground
    boolean isImmediatelyDestroyActivities(android.content.Context) -> isImmediatelyDestroyActivities
    boolean checkFromXml(int) -> checkFromXml
    boolean runRootCommand() -> runRootCommand
com.tencent.mm.sdk.platformtools.ObserverPool -> com.tencent.mm.sdk.platformtools.ObserverPool:
    java.util.HashMap ay -> ay
    boolean add(java.lang.String,com.tencent.mm.sdk.platformtools.ObserverPool$Listener) -> add
    boolean remove(java.lang.String,com.tencent.mm.sdk.platformtools.ObserverPool$Listener) -> remove
    boolean remove(java.lang.String) -> remove
    void release() -> release
    boolean publish(com.tencent.mm.sdk.platformtools.ObserverPool$Event) -> publish
    void asyncPublish(com.tencent.mm.sdk.platformtools.ObserverPool$Event) -> asyncPublish
    void asyncPublish(com.tencent.mm.sdk.platformtools.ObserverPool$Event,android.os.Looper) -> asyncPublish
    java.lang.String toString() -> toString
com.tencent.mm.sdk.platformtools.ObserverPool$1 -> com.tencent.mm.sdk.platformtools.ObserverPool$1:
    com.tencent.mm.sdk.platformtools.ObserverPool az -> az
    int compare(com.tencent.mm.sdk.platformtools.ObserverPool$Listener,com.tencent.mm.sdk.platformtools.ObserverPool$Listener) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.tencent.mm.sdk.platformtools.ObserverPool$2 -> com.tencent.mm.sdk.platformtools.ObserverPool$2:
    com.tencent.mm.sdk.platformtools.ObserverPool$Event aA -> aA
    com.tencent.mm.sdk.platformtools.ObserverPool az -> az
    void run() -> run
com.tencent.mm.sdk.platformtools.ObserverPool$Event -> com.tencent.mm.sdk.platformtools.ObserverPool$Event:
    int FLAG_ORDER_EXE -> FLAG_ORDER_EXE
    java.lang.String aB -> aB
    android.os.Bundle data -> data
    int aC -> aC
    java.lang.String getId() -> getId
    com.tencent.mm.sdk.platformtools.ObserverPool$Event setFlag(int) -> setFlag
    int getFlag() -> getFlag
    void onComplete() -> onComplete
com.tencent.mm.sdk.platformtools.ObserverPool$Listener -> com.tencent.mm.sdk.platformtools.ObserverPool$Listener:
    int priority -> priority
    int getPriority() -> getPriority
    boolean callback(com.tencent.mm.sdk.platformtools.ObserverPool$Event) -> callback
    int a(com.tencent.mm.sdk.platformtools.ObserverPool$Listener) -> a
com.tencent.mm.sdk.platformtools.PhoneStatusWatcher -> com.tencent.mm.sdk.platformtools.PhoneStatusWatcher:
    boolean aD -> aD
    android.telephony.TelephonyManager aE -> aE
    android.telephony.PhoneStateListener aF -> aF
    java.util.List aG -> aG
    void addPhoneCallListener(com.tencent.mm.sdk.platformtools.PhoneStatusWatcher$PhoneCallListener) -> addPhoneCallListener
    void removePhoneCallListener(com.tencent.mm.sdk.platformtools.PhoneStatusWatcher$PhoneCallListener) -> removePhoneCallListener
    void clearPhoneCallListener() -> clearPhoneCallListener
    boolean isCalling() -> isCalling
    void begin(android.content.Context) -> begin
    void end() -> end
    java.util.List a(com.tencent.mm.sdk.platformtools.PhoneStatusWatcher) -> a
    boolean a(boolean) -> a
com.tencent.mm.sdk.platformtools.PhoneStatusWatcher$1 -> com.tencent.mm.sdk.platformtools.PhoneStatusWatcher$1:
    com.tencent.mm.sdk.platformtools.PhoneStatusWatcher aH -> aH
    void onCallStateChanged(int,java.lang.String) -> onCallStateChanged
com.tencent.mm.sdk.platformtools.PhoneStatusWatcher$PhoneCallListener -> com.tencent.mm.sdk.platformtools.PhoneStatusWatcher$PhoneCallListener:
    void onPhoneCall(int) -> onPhoneCall
com.tencent.mm.sdk.platformtools.PhoneUtil -> com.tencent.mm.sdk.platformtools.PhoneUtil:
    java.lang.String CELL_GSM -> CELL_GSM
    java.lang.String CELL_CDMA -> CELL_CDMA
    int aI -> aI
    java.lang.String getMacXml(java.util.List) -> getMacXml
    java.lang.String getCellXml(java.util.List) -> getCellXml
    void getSignalStrength(android.content.Context) -> getSignalStrength
    java.util.List getCellInfoList(android.content.Context) -> getCellInfoList
com.tencent.mm.sdk.platformtools.PhoneUtil$CellInfo -> com.tencent.mm.sdk.platformtools.PhoneUtil$CellInfo:
    int MAX_CID -> MAX_CID
    int MAX_LAC -> MAX_LAC
    java.lang.String mcc -> mcc
    java.lang.String mnc -> mnc
    java.lang.String lac -> lac
    java.lang.String cellid -> cellid
    java.lang.String type -> type
    java.lang.String stationId -> stationId
    java.lang.String networkId -> networkId
    java.lang.String systemId -> systemId
    java.lang.String dbm -> dbm
com.tencent.mm.sdk.platformtools.PhoneUtil$MacInfo -> com.tencent.mm.sdk.platformtools.PhoneUtil$MacInfo:
    java.lang.String mac -> mac
    java.lang.String dbm -> dbm
com.tencent.mm.sdk.platformtools.PhoneUtil16Impl -> com.tencent.mm.sdk.platformtools.PhoneUtil16Impl:
    int aJ -> aJ
    int aK -> aK
    android.telephony.TelephonyManager aL -> aL
    android.telephony.PhoneStateListener aM -> aM
    void getSignalStrength(android.content.Context) -> getSignalStrength
    java.util.List getCellInfoList(android.content.Context) -> getCellInfoList
    int c(int) -> c
    android.telephony.TelephonyManager a(com.tencent.mm.sdk.platformtools.PhoneUtil16Impl) -> a
    android.telephony.PhoneStateListener b(com.tencent.mm.sdk.platformtools.PhoneUtil16Impl) -> b
com.tencent.mm.sdk.platformtools.PhoneUtil16Impl$1 -> com.tencent.mm.sdk.platformtools.PhoneUtil16Impl$1:
    com.tencent.mm.sdk.platformtools.PhoneUtil16Impl aN -> aN
    void onSignalStrengthChanged(int) -> onSignalStrengthChanged
com.tencent.mm.sdk.platformtools.PhoneUtil20Impl -> com.tencent.mm.sdk.platformtools.PhoneUtil20Impl:
    int aJ -> aJ
    int aK -> aK
    android.telephony.TelephonyManager aL -> aL
    int aO -> aO
    android.telephony.PhoneStateListener aM -> aM
    void getSignalStrength(android.content.Context) -> getSignalStrength
    java.util.List getCellInfoList(android.content.Context) -> getCellInfoList
    int a(com.tencent.mm.sdk.platformtools.PhoneUtil20Impl) -> a
    int d(int) -> d
    android.telephony.TelephonyManager b(com.tencent.mm.sdk.platformtools.PhoneUtil20Impl) -> b
    android.telephony.PhoneStateListener c(com.tencent.mm.sdk.platformtools.PhoneUtil20Impl) -> c
com.tencent.mm.sdk.platformtools.PhoneUtil20Impl$1 -> com.tencent.mm.sdk.platformtools.PhoneUtil20Impl$1:
    com.tencent.mm.sdk.platformtools.PhoneUtil20Impl aP -> aP
    void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
com.tencent.mm.sdk.platformtools.QueueWorkerThread -> com.tencent.mm.sdk.platformtools.QueueWorkerThread:
    java.util.concurrent.LinkedBlockingQueue aQ -> aQ
    boolean aR -> aR
    int aS -> aS
    int priority -> priority
    java.lang.String name -> name
    java.lang.Object lock -> lock
    java.util.Vector aT -> aT
    android.os.Handler aU -> aU
    int getQueueSize() -> getQueueSize
    int add(com.tencent.mm.sdk.platformtools.QueueWorkerThread$ThreadObject) -> add
    boolean isDead() -> isDead
    void pause(boolean) -> pause
    java.lang.String a(com.tencent.mm.sdk.platformtools.QueueWorkerThread) -> a
    int b(com.tencent.mm.sdk.platformtools.QueueWorkerThread) -> b
    java.util.Vector c(com.tencent.mm.sdk.platformtools.QueueWorkerThread) -> c
    java.lang.Object d(com.tencent.mm.sdk.platformtools.QueueWorkerThread) -> d
    boolean e(com.tencent.mm.sdk.platformtools.QueueWorkerThread) -> e
    java.util.concurrent.LinkedBlockingQueue f(com.tencent.mm.sdk.platformtools.QueueWorkerThread) -> f
    android.os.Handler g(com.tencent.mm.sdk.platformtools.QueueWorkerThread) -> g
com.tencent.mm.sdk.platformtools.QueueWorkerThread$1 -> com.tencent.mm.sdk.platformtools.QueueWorkerThread$1:
    com.tencent.mm.sdk.platformtools.QueueWorkerThread aV -> aV
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.mm.sdk.platformtools.QueueWorkerThread$ThreadObject -> com.tencent.mm.sdk.platformtools.QueueWorkerThread$ThreadObject:
    boolean doInBackground() -> doInBackground
    boolean onPostExecute() -> onPostExecute
com.tencent.mm.sdk.platformtools.QueueWorkerThread$WorkerThread -> com.tencent.mm.sdk.platformtools.QueueWorkerThread$WorkerThread:
    int aW -> aW
    com.tencent.mm.sdk.platformtools.QueueWorkerThread aV -> aV
    void run() -> run
com.tencent.mm.sdk.platformtools.SemiXml -> com.tencent.mm.sdk.platformtools.SemiXml:
    java.lang.String MAGIC_HEAD -> MAGIC_HEAD
    java.lang.String encode(java.util.Map) -> encode
    java.util.Map decode(java.lang.String) -> decode
com.tencent.mm.sdk.platformtools.SensorController -> com.tencent.mm.sdk.platformtools.SensorController:
    float aX -> aX
    android.hardware.SensorManager aY -> aY
    float aZ -> aZ
    float ba -> ba
    com.tencent.mm.sdk.platformtools.SensorController$SensorEventCallBack bb -> bb
    android.hardware.Sensor bc -> bc
    boolean bd -> bd
    boolean be -> be
    boolean bf -> bf
    void setSensorCallBack(com.tencent.mm.sdk.platformtools.SensorController$SensorEventCallBack) -> setSensorCallBack
    void removeSensorCallBack() -> removeSensorCallBack
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    boolean isSensorEnable() -> isSensorEnable
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.tencent.mm.sdk.platformtools.SensorController$SensorEventCallBack -> com.tencent.mm.sdk.platformtools.SensorController$SensorEventCallBack:
    void onSensorEvent(boolean) -> onSensorEvent
com.tencent.mm.sdk.platformtools.SmoothScrollToPosition21below -> com.tencent.mm.sdk.platformtools.SmoothScrollToPosition21below:
    void doScroll(android.widget.ListView) -> doScroll
    void doScroll(android.widget.ListView,int) -> doScroll
com.tencent.mm.sdk.platformtools.SmoothScrollToPosition22 -> com.tencent.mm.sdk.platformtools.SmoothScrollToPosition22:
    void doScroll(android.widget.ListView) -> doScroll
    void doScroll(android.widget.ListView,int) -> doScroll
com.tencent.mm.sdk.platformtools.SpecilApiUtil -> com.tencent.mm.sdk.platformtools.SpecilApiUtil:
    java.lang.String TAG -> TAG
    java.lang.String LINE_SEP_W -> LINE_SEP_W
    java.lang.String LINE_SEP -> LINE_SEP
    java.lang.String LINE_TRIM -> LINE_TRIM
    java.lang.CharSequence fixInAPI16(java.lang.CharSequence) -> fixInAPI16
    java.lang.String killsplitAPI16(java.lang.String) -> killsplitAPI16
com.tencent.mm.sdk.platformtools.SyncTask -> com.tencent.mm.sdk.platformtools.SyncTask:
    java.lang.Object result -> result
    java.lang.Object lock -> lock
    long bg -> bg
    long bh -> bh
    long bi -> bi
    java.lang.Runnable bj -> bj
    void setResult(java.lang.Object) -> setResult
    java.lang.Object exec(android.os.Handler) -> exec
    java.lang.Object run() -> run
    long a(com.tencent.mm.sdk.platformtools.SyncTask,long) -> a
    long a(com.tencent.mm.sdk.platformtools.SyncTask) -> a
com.tencent.mm.sdk.platformtools.SyncTask$1 -> com.tencent.mm.sdk.platformtools.SyncTask$1:
    com.tencent.mm.sdk.platformtools.SyncTask bk -> bk
    void run() -> run
com.tencent.mm.sdk.platformtools.SystemProperty -> com.tencent.mm.sdk.platformtools.SystemProperty:
    java.util.HashMap bl -> bl
    java.lang.String getProperty(java.lang.String) -> getProperty
    void setProperty(java.lang.String,java.lang.String) -> setProperty
com.tencent.mm.sdk.platformtools.TimeLogger -> com.tencent.mm.sdk.platformtools.TimeLogger:
    java.lang.String bm -> bm
    java.lang.String bn -> bn
    boolean bo -> bo
    java.util.ArrayList bp -> bp
    java.util.ArrayList bq -> bq
    void reset(java.lang.String,java.lang.String) -> reset
    void reset() -> reset
    void addSplit(java.lang.String) -> addSplit
    void dumpToLog() -> dumpToLog
com.tencent.mm.sdk.platformtools.TrafficStats -> com.tencent.mm.sdk.platformtools.TrafficStats:
    long br -> br
    long bs -> bs
    long bt -> bt
    long bu -> bu
    long bv -> bv
    long bw -> bw
    long bx -> bx
    long by -> by
    java.lang.String DEV_FILE -> DEV_FILE
    java.lang.String GPRSLINE -> GPRSLINE
    java.lang.String WIFILINE -> WIFILINE
    long getWifiTx(long) -> getWifiTx
    long getWifiRx(long) -> getWifiRx
    long getMobileTx(long) -> getMobileTx
    long getMobileRx(long) -> getMobileRx
    long updateWifiTx(long) -> updateWifiTx
    long updateWifiRx(long) -> updateWifiRx
    long updateMobileTx(long) -> updateMobileTx
    long updateMobileRx(long) -> updateMobileRx
    void reset() -> reset
    void update() -> update
com.tencent.mm.sdk.platformtools.Util -> com.tencent.mm.sdk.platformtools.Util:
    int MAX_DECODE_PICTURE_SIZE -> MAX_DECODE_PICTURE_SIZE
    java.lang.String PHOTO_DEFAULT_EXT -> PHOTO_DEFAULT_EXT
    long MILLSECONDS_OF_SECOND -> MILLSECONDS_OF_SECOND
    long MILLSECONDS_OF_MINUTE -> MILLSECONDS_OF_MINUTE
    long MILLSECONDS_OF_HOUR -> MILLSECONDS_OF_HOUR
    long MILLSECONDS_OF_DAY -> MILLSECONDS_OF_DAY
    long SECOND_OF_MINUTE -> SECOND_OF_MINUTE
    long MINUTE_OF_HOUR -> MINUTE_OF_HOUR
    long MAX_32BIT_VALUE -> MAX_32BIT_VALUE
    int MIN_ACCOUNT_LENGTH -> MIN_ACCOUNT_LENGTH
    int MAX_ACCOUNT_LENGTH -> MAX_ACCOUNT_LENGTH
    int MIN_PASSWORD_LENGTH -> MIN_PASSWORD_LENGTH
    int MAX_PASSWORD_LENGTH -> MAX_PASSWORD_LENGTH
    int BIT_OF_KB -> BIT_OF_KB
    int BIT_OF_MB -> BIT_OF_MB
    int BYTE_OF_KB -> BYTE_OF_KB
    int BYTE_OF_MB -> BYTE_OF_MB
    int MASK_4BIT -> MASK_4BIT
    int MASK_8BIT -> MASK_8BIT
    int MASK_16BIT -> MASK_16BIT
    int MASK_32BIT -> MASK_32BIT
    int BEGIN_TIME -> BEGIN_TIME
    int END_TIME -> END_TIME
    int DAY -> DAY
    java.lang.String TAIWAN -> TAIWAN
    java.lang.String HONGKONG -> HONGKONG
    java.lang.String CHINA -> CHINA
    java.lang.String ENGLISH -> ENGLISH
    java.lang.String LANGUAGE_DEFAULT -> LANGUAGE_DEFAULT
    long[] bz -> bz
    java.util.TimeZone GMT -> GMT
    char[] bA -> bA
    char[] bB -> bB
    java.lang.String[] bC -> bC
    java.lang.String escapeSqlValue(java.lang.String) -> escapeSqlValue
    java.lang.String listToString(java.util.List,java.lang.String) -> listToString
    boolean isSDCardAvail() -> isSDCardAvail
    java.util.List stringsToList(java.lang.String[]) -> stringsToList
    int getIntRandom(int,int) -> getIntRandom
    byte[] getUuidRandom() -> getUuidRandom
    boolean isDayTimeNow() -> isDayTimeNow
    boolean isNightTime(int,int,int) -> isNightTime
    java.lang.String getTimeZoneOffset() -> getTimeZoneOffset
    java.lang.String getTimeZone() -> getTimeZone
    java.lang.String getTimeZoneDef() -> getTimeZoneDef
    java.lang.String formatUnixTime(long) -> formatUnixTime
    boolean isChinese(char) -> isChinese
    boolean isAlpha(char) -> isAlpha
    boolean isNum(char) -> isNum
    boolean isValidQQNum(java.lang.String) -> isValidQQNum
    boolean isValidEmail(java.lang.String) -> isValidEmail
    byte[] bmpToByteArray(android.graphics.Bitmap,boolean) -> bmpToByteArray
    boolean isValidAccount(java.lang.String) -> isValidAccount
    boolean isValidPassword(java.lang.String) -> isValidPassword
    android.graphics.BitmapFactory$Options getImageOptions(java.lang.String) -> getImageOptions
    void saveBitmapToImage(android.graphics.Bitmap,int,android.graphics.Bitmap$CompressFormat,java.lang.String,java.lang.String,boolean) -> saveBitmapToImage
    void saveBitmapToImage(android.graphics.Bitmap,int,android.graphics.Bitmap$CompressFormat,java.lang.String,boolean) -> saveBitmapToImage
    android.graphics.Bitmap getRoundedCornerBitmap(android.graphics.Bitmap,boolean,float) -> getRoundedCornerBitmap
    java.lang.String getSizeKB(long) -> getSizeKB
    java.lang.String getSizeMB(long) -> getSizeMB
    java.lang.String dumpArray(java.lang.Object[]) -> dumpArray
    java.lang.String dumpHex(byte[]) -> dumpHex
    android.content.Intent getInstallPackIntent(java.lang.String,android.content.Context) -> getInstallPackIntent
    void installPack(java.lang.String,android.content.Context) -> installPack
    void shake(android.content.Context,boolean) -> shake
    android.media.MediaPlayer playSound(android.content.Context,int,boolean,android.media.MediaPlayer$OnCompletionListener) -> playSound
    android.media.MediaPlayer playSound(android.content.Context,int,android.media.MediaPlayer$OnCompletionListener) -> playSound
    void playSound(android.content.Context,int) -> playSound
    long nowSecond() -> nowSecond
    java.lang.String formatSecToMin(int) -> formatSecToMin
    long nowMilliSecond() -> nowMilliSecond
    long secondsToNow(long) -> secondsToNow
    long secondsToMilliSeconds(int) -> secondsToMilliSeconds
    long milliSecondsToNow(long) -> milliSecondsToNow
    long ticksToNow(long) -> ticksToNow
    long currentTicks() -> currentTicks
    long currentDayInMills() -> currentDayInMills
    long currentWeekInMills() -> currentWeekInMills
    long currentMonthInMills() -> currentMonthInMills
    long currentYearInMills() -> currentYearInMills
    int getSystemVersion(android.content.Context,int) -> getSystemVersion
    java.lang.String getDeviceId(android.content.Context) -> getDeviceId
    java.lang.String getLine1Number(android.content.Context) -> getLine1Number
    boolean isLockScreen(android.content.Context) -> isLockScreen
    boolean isTopActivity(android.content.Context) -> isTopActivity
    boolean isServiceRunning(android.content.Context,java.lang.String) -> isServiceRunning
    boolean isProcessRunning(android.content.Context,java.lang.String) -> isProcessRunning
    java.lang.String getTopActivityName(android.content.Context) -> getTopActivityName
    boolean isTopApplication(android.content.Context) -> isTopApplication
    boolean isIntentAvailable(android.content.Context,android.content.Intent) -> isIntentAvailable
    void freeBitmapMap(java.util.Map) -> freeBitmapMap
    void selectPicture(android.content.Context,int) -> selectPicture
    int nullAsNil(java.lang.Integer) -> nullAsNil
    long nullAsNil(java.lang.Long) -> nullAsNil
    java.lang.String nullAsNil(java.lang.String) -> nullAsNil
    boolean nullAsTrue(java.lang.Boolean) -> nullAsTrue
    boolean nullAsFalse(java.lang.Boolean) -> nullAsFalse
    int nullAs(java.lang.Integer,int) -> nullAs
    long nullAs(java.lang.Long,long) -> nullAs
    boolean nullAs(java.lang.Boolean,boolean) -> nullAs
    java.lang.String nullAs(java.lang.String,java.lang.String) -> nullAs
    int nullAsInt(java.lang.Object,int) -> nullAsInt
    boolean isNullOrNil(java.lang.String) -> isNullOrNil
    boolean isNullOrNil(byte[]) -> isNullOrNil
    int getSeconds(java.lang.String,int) -> getSeconds
    int getInt(java.lang.String,int) -> getInt
    long getLong(java.lang.String,long) -> getLong
    int getHex(java.lang.String,int) -> getHex
    void writeToFile(java.lang.String,java.lang.String) -> writeToFile
    java.util.Map parseXml(java.lang.String,java.lang.String,java.lang.String) -> parseXml
    void a(java.util.Map,java.lang.String,org.w3c.dom.Node,int) -> a
    void transClickToSelect(android.view.View,android.view.View) -> transClickToSelect
    java.lang.String getCutPasswordMD5(java.lang.String) -> getCutPasswordMD5
    java.lang.String getFullPasswordMD5(java.lang.String) -> getFullPasswordMD5
    org.w3c.dom.Element getRootElementFromXML(byte[]) -> getRootElementFromXML
    java.lang.String convertStreamToString(java.io.InputStream) -> convertStreamToString
    java.lang.String encodeHexString(byte[]) -> encodeHexString
    byte[] decodeHexString(java.lang.String) -> decodeHexString
    int guessHttpSendLength(int) -> guessHttpSendLength
    int guessHttpRecvLength(int) -> guessHttpRecvLength
    int guessHttpContinueRecvLength(int) -> guessHttpContinueRecvLength
    int guessTcpConnectLength() -> guessTcpConnectLength
    int guessTcpDisconnectLength() -> guessTcpDisconnectLength
    int guessTcpSendLength(int) -> guessTcpSendLength
    int guessTcpRecvLength(int) -> guessTcpRecvLength
    int[] splitToIntArray(java.lang.String) -> splitToIntArray
    int UnZipFolder(java.lang.String,java.lang.String) -> UnZipFolder
    java.lang.String getStack() -> getStack
    boolean checkSDCardFull() -> checkSDCardFull
    boolean isSDCardHaveEnoughSpace(long) -> isSDCardHaveEnoughSpace
    java.lang.String GetHostIp() -> GetHostIp
    boolean checkPermission(android.content.Context,java.lang.String) -> checkPermission
    boolean jump(android.content.Context,java.lang.String) -> jump
    java.lang.String escapeStringForXml(java.lang.String) -> escapeStringForXml
    java.lang.String processXml(java.lang.String) -> processXml
    java.lang.String expandEntities(java.lang.String) -> expandEntities
    int a(char[],int,int) -> a
    boolean isImgFile(java.lang.String) -> isImgFile
    java.lang.String mapToXml(java.lang.String,java.util.LinkedHashMap) -> mapToXml
    java.util.Map parseIni(java.lang.String) -> parseIni
    boolean deleteFile(java.lang.String) -> deleteFile
    void deleteOutOfDateFile(java.lang.String,java.lang.String,long) -> deleteOutOfDateFile
    byte[] readFromFile(java.lang.String) -> readFromFile
    boolean writeToFile(java.lang.String,byte[]) -> writeToFile
com.tencent.mm.sdk.platformtools.Util$1 -> com.tencent.mm.sdk.platformtools.Util$1:
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.tencent.mm.sdk.platformtools.Util$2 -> com.tencent.mm.sdk.platformtools.Util$2:
    android.view.View bD -> bD
    android.view.View bE -> bE
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.tencent.mm.sdk.platformtools.package-info -> com.tencent.mm.sdk.platformtools.package-info:
com.tencent.mm.sdk.plugin.BaseProfile -> com.tencent.mm.sdk.plugin.BaseProfile:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String[] INDEX_CREATE -> INDEX_CREATE
    java.lang.String COL_USERNAME -> COL_USERNAME
    java.lang.String COL_BINDQQ -> COL_BINDQQ
    java.lang.String COL_BINDMOBILE -> COL_BINDMOBILE
    java.lang.String COL_BINDEMAIL -> COL_BINDEMAIL
    java.lang.String COL_ALIAS -> COL_ALIAS
    java.lang.String COL_NICKNAME -> COL_NICKNAME
    java.lang.String COL_SIGNATURE -> COL_SIGNATURE
    java.lang.String COL_PROVINCE -> COL_PROVINCE
    java.lang.String COL_CITY -> COL_CITY
    java.lang.String COL_WEIBO -> COL_WEIBO
    java.lang.String COL_AVATAR -> COL_AVATAR
    java.lang.String field_username -> field_username
    long field_bindqq -> field_bindqq
    java.lang.String field_bindmobile -> field_bindmobile
    java.lang.String field_bindemail -> field_bindemail
    java.lang.String field_alias -> field_alias
    java.lang.String field_nickname -> field_nickname
    java.lang.String field_signature -> field_signature
    java.lang.String field_province -> field_province
    java.lang.String field_city -> field_city
    java.lang.String field_weibo -> field_weibo
    java.lang.String field_avatar -> field_avatar
    com.tencent.mm.sdk.storage.IAutoDBItem$MAutoDBInfo initAutoDBInfo(java.lang.Class) -> initAutoDBInfo
    void convertFrom(android.database.Cursor) -> convertFrom
    android.content.ContentValues convertTo() -> convertTo
    void reset() -> reset
com.tencent.mm.sdk.plugin.IMMPluginAPI -> com.tencent.mm.sdk.plugin.IMMPluginAPI:
    java.lang.String getPluginKey(java.lang.String) -> getPluginKey
    boolean isPluginInstalled(java.lang.String) -> isPluginInstalled
    boolean installPlugin(java.lang.String) -> installPlugin
    com.tencent.mm.sdk.plugin.Profile getCurrentProfile(java.lang.String) -> getCurrentProfile
    void createQRCodeController(java.lang.String) -> createQRCodeController
    void createQRCodeController(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack) -> createQRCodeController
    void createQRCodeController(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack,java.lang.String) -> createQRCodeController
    boolean registerQRCodePattern(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack,java.lang.String) -> registerQRCodePattern
    void jumpToSettingView(java.lang.String,java.lang.String) -> jumpToSettingView
    void createMsgController(java.lang.String) -> createMsgController
    boolean registerPattern(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack,java.lang.String) -> registerPattern
    void jumpToChattingUI(java.lang.String,java.lang.String) -> jumpToChattingUI
    void jumpToBindQQ(java.lang.String) -> jumpToBindQQ
    void jumpToBindMobile(java.lang.String) -> jumpToBindMobile
    void jumpToBindEmail(java.lang.String) -> jumpToBindEmail
    void release() -> release
    boolean sendMsgNotify(java.lang.String,java.lang.String,int,java.lang.String,java.lang.Class) -> sendMsgNotify
    boolean registerAutoMsg(java.lang.String,java.lang.String) -> registerAutoMsg
    boolean unregisterAutoMsg(java.lang.String,java.lang.String) -> unregisterAutoMsg
    boolean appendNetStat(int,int,int) -> appendNetStat
com.tencent.mm.sdk.plugin.MMPluginAPIImpl -> com.tencent.mm.sdk.plugin.MMPluginAPIImpl:
    android.content.Context q -> q
    com.tencent.mm.sdk.channel.MMessage$Receiver bF -> bF
    java.lang.String am -> am
    java.lang.String[] columns -> columns
    void release() -> release
    java.lang.Object e(java.lang.String) -> e
    boolean registerAutoMsg(java.lang.String,java.lang.String) -> registerAutoMsg
    boolean unregisterAutoMsg(java.lang.String,java.lang.String) -> unregisterAutoMsg
    boolean sendMsgNotify(java.lang.String,java.lang.String,int,java.lang.String,java.lang.Class) -> sendMsgNotify
    java.lang.String getPluginKey(java.lang.String) -> getPluginKey
    boolean isPluginInstalled(java.lang.String) -> isPluginInstalled
    boolean installPlugin(java.lang.String) -> installPlugin
    void a(java.lang.String,java.lang.String,android.content.Intent) -> a
    void createQRCodeController(java.lang.String) -> createQRCodeController
    void createQRCodeController(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack) -> createQRCodeController
    void createQRCodeController(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack,java.lang.String) -> createQRCodeController
    boolean registerQRCodePattern(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack,java.lang.String) -> registerQRCodePattern
    void jumpToSettingView(java.lang.String,java.lang.String) -> jumpToSettingView
    void jumpToChattingUI(java.lang.String,java.lang.String) -> jumpToChattingUI
    com.tencent.mm.sdk.plugin.Profile getCurrentProfile(java.lang.String) -> getCurrentProfile
    void jumpToBindQQ(java.lang.String) -> jumpToBindQQ
    void jumpToBindMobile(java.lang.String) -> jumpToBindMobile
    void jumpToBindEmail(java.lang.String) -> jumpToBindEmail
    void createMsgController(java.lang.String) -> createMsgController
    boolean registerPattern(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack,java.lang.String) -> registerPattern
    boolean appendNetStat(int,int,int) -> appendNetStat
com.tencent.mm.sdk.plugin.MMPluginMsg -> com.tencent.mm.sdk.plugin.MMPluginMsg:
    long msgClientId -> msgClientId
    java.lang.String content -> content
    java.lang.String ACTION_AUTO_MSG -> ACTION_AUTO_MSG
    java.lang.String RECV_PKG -> RECV_PKG
    java.lang.String RECV_MSG -> RECV_MSG
    java.lang.String RECV_THUMB -> RECV_THUMB
    java.lang.String SEND_ID -> SEND_ID
    java.lang.String SEND_ERR_TYPE -> SEND_ERR_TYPE
    java.lang.String SEND_ERR_CODE -> SEND_ERR_CODE
    java.lang.String TYPE -> TYPE
    int TYPE_SEND_RET -> TYPE_SEND_RET
    int TYPE_RECV_MSG -> TYPE_RECV_MSG
    com.tencent.mm.sdk.openapi.WXAppExtendObject pluginMsgToWXAppExtendObject(com.tencent.mm.sdk.plugin.MMPluginMsg) -> pluginMsgToWXAppExtendObject
    com.tencent.mm.sdk.plugin.MMPluginMsg WXAppExtentObjectToPluginMsg(com.tencent.mm.sdk.openapi.WXAppExtendObject) -> WXAppExtentObjectToPluginMsg
    long sendMessage(android.content.Context,java.lang.String) -> sendMessage
com.tencent.mm.sdk.plugin.MMPluginMsg$ReceiverHelper -> com.tencent.mm.sdk.plugin.MMPluginMsg$ReceiverHelper:
    int type -> type
    android.content.Intent intent -> intent
    boolean isSendRet() -> isSendRet
    boolean isRecvNew() -> isRecvNew
    java.lang.String getMsgContent() -> getMsgContent
    java.lang.Integer getSendErrCode() -> getSendErrCode
    java.lang.Integer getSendErrType() -> getSendErrType
    java.lang.Long getSendMsgId() -> getSendMsgId
com.tencent.mm.sdk.plugin.MMPluginOAuth -> com.tencent.mm.sdk.plugin.MMPluginOAuth:
    com.tencent.mm.sdk.plugin.MMPluginOAuth$IResult bG -> bG
    android.content.Context q -> q
    java.lang.String bH -> bH
    java.lang.String bI -> bI
    android.os.Handler handler -> handler
    java.lang.String getAccessToken() -> getAccessToken
    java.lang.String getRequestToken() -> getRequestToken
    void start() -> start
    boolean start(android.os.Handler) -> start
    java.lang.String a(com.tencent.mm.sdk.plugin.MMPluginOAuth) -> a
    void a(com.tencent.mm.sdk.plugin.MMPluginOAuth,java.lang.String) -> a
    com.tencent.mm.sdk.plugin.MMPluginOAuth$IResult b(com.tencent.mm.sdk.plugin.MMPluginOAuth) -> b
com.tencent.mm.sdk.plugin.MMPluginOAuth$1 -> com.tencent.mm.sdk.plugin.MMPluginOAuth$1:
    com.tencent.mm.sdk.plugin.MMPluginOAuth bJ -> bJ
    void run() -> run
com.tencent.mm.sdk.plugin.MMPluginOAuth$IResult -> com.tencent.mm.sdk.plugin.MMPluginOAuth$IResult:
    void onResult(com.tencent.mm.sdk.plugin.MMPluginOAuth) -> onResult
    void onSessionTimeOut() -> onSessionTimeOut
com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver -> com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver:
    java.util.Map ah -> ah
    com.tencent.mm.sdk.plugin.MMPluginOAuth bK -> bK
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void register(java.lang.String,com.tencent.mm.sdk.plugin.MMPluginOAuth) -> register
    void unregister(java.lang.String) -> unregister
com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver$1 -> com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver$1:
    com.tencent.mm.sdk.plugin.MMPluginOAuth bL -> bL
    java.lang.String bM -> bM
    com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver bN -> bN
    void run() -> run
com.tencent.mm.sdk.plugin.MMPluginProviderConstants -> com.tencent.mm.sdk.plugin.MMPluginProviderConstants:
    java.lang.String AUTHORITY -> AUTHORITY
    int TYPE_UNKNOWN -> TYPE_UNKNOWN
    int TYPE_INT -> TYPE_INT
    int TYPE_LONG -> TYPE_LONG
    int TYPE_STRING -> TYPE_STRING
    int TYPE_BOOLEAN -> TYPE_BOOLEAN
    int TYPE_FLOAT -> TYPE_FLOAT
    int TYPE_DOUBLE -> TYPE_DOUBLE
    java.lang.String PLUGIN_PACKAGE_PATTERN -> PLUGIN_PACKAGE_PATTERN
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$OAuth -> com.tencent.mm.sdk.plugin.MMPluginProviderConstants$OAuth:
    android.net.Uri CONTENT_URI -> CONTENT_URI
    java.lang.String API_KEY -> API_KEY
    java.lang.String REQUEST_TOKEN -> REQUEST_TOKEN
    java.lang.String ACCESS_TOKEN -> ACCESS_TOKEN
    java.lang.String SECRET -> SECRET
    java.lang.String ACTION_REQUEST_TOKEN -> ACTION_REQUEST_TOKEN
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginDB -> com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginDB:
    android.net.Uri CONTENT_URI -> CONTENT_URI
    java.lang.String KEY -> KEY
    java.lang.String TYPE -> TYPE
    java.lang.String VALUE -> VALUE
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginIntent -> com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginIntent:
    java.lang.String AUTH_KEY -> AUTH_KEY
    java.lang.String NAME -> NAME
    java.lang.String PACKAGE -> PACKAGE
    java.lang.String REQUEST_TOKEN -> REQUEST_TOKEN
    java.lang.String ACCESS_TOKEN -> ACCESS_TOKEN
    java.lang.String PERMISSIONS -> PERMISSIONS
    java.lang.String ACTION_REQUEST_TOKEN -> ACTION_REQUEST_TOKEN
    java.lang.String ACTION_RESPONSE -> ACTION_RESPONSE
    java.lang.String ACTION_QRCODE_SCANNED -> ACTION_QRCODE_SCANNED
    java.lang.String PLUGIN_PACKAGE_PATTERN -> PLUGIN_PACKAGE_PATTERN
    java.lang.String APP_PACKAGE_PATTERN -> APP_PACKAGE_PATTERN
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$Resolver -> com.tencent.mm.sdk.plugin.MMPluginProviderConstants$Resolver:
    int getType(java.lang.Object) -> getType
    boolean unresolveObj(android.content.ContentValues,java.lang.Object) -> unresolveObj
    java.lang.Object resolveObj(int,java.lang.String) -> resolveObj
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$SharedPref -> com.tencent.mm.sdk.plugin.MMPluginProviderConstants$SharedPref:
    android.net.Uri CONTENT_URI -> CONTENT_URI
    java.lang.String KEY -> KEY
    java.lang.String TYPE -> TYPE
    java.lang.String VALUE -> VALUE
com.tencent.mm.sdk.plugin.MMPluginUtil -> com.tencent.mm.sdk.plugin.MMPluginUtil:
    com.tencent.mm.sdk.plugin.IMMPluginAPI queryPluginMgr(android.content.Context) -> queryPluginMgr
com.tencent.mm.sdk.plugin.Profile -> com.tencent.mm.sdk.plugin.Profile:
    android.net.Uri CONTENT_URI -> CONTENT_URI
    java.lang.String[] columns -> columns
    com.tencent.mm.sdk.storage.IAutoDBItem$MAutoDBInfo bO -> bO
    com.tencent.mm.sdk.storage.IAutoDBItem$MAutoDBInfo getDBInfo() -> getDBInfo
com.tencent.mm.sdk.plugin.package-info -> com.tencent.mm.sdk.plugin.package-info:
com.tencent.mm.sdk.storage.ContentProviderDB -> com.tencent.mm.sdk.storage.ContentProviderDB:
    android.content.Context q -> q
    android.net.Uri getUriFromTable(java.lang.String) -> getUriFromTable
    android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String) -> query
    android.database.Cursor rawQuery(java.lang.String,java.lang.String[]) -> rawQuery
    boolean execSQL(java.lang.String,java.lang.String) -> execSQL
    long insert(java.lang.String,java.lang.String,android.content.ContentValues) -> insert
    int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    long replace(java.lang.String,java.lang.String,android.content.ContentValues) -> replace
    int delete(java.lang.String,java.lang.String,java.lang.String[]) -> delete
com.tencent.mm.sdk.storage.CursorFieldHelper -> com.tencent.mm.sdk.storage.CursorFieldHelper:
    java.util.Map bP -> bP
    java.util.Map bQ -> bQ
    java.util.Map bR -> bR
    java.lang.String type(java.lang.Class) -> type
    com.tencent.mm.sdk.storage.CursorFieldHelper$IGetMethod getter(java.lang.Class) -> getter
    com.tencent.mm.sdk.storage.CursorFieldHelper$ISetMethod setter(java.lang.Class) -> setter
    void keep_setBlob(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> keep_setBlob
    void keep_getBlob(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> keep_getBlob
    void keep_setShort(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> keep_setShort
    void keep_getShort(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> keep_getShort
    void keep_setBoolean(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> keep_setBoolean
    void keep_getBoolean(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> keep_getBoolean
    void keep_setInt(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> keep_setInt
    void keep_getInt(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> keep_getInt
    void keep_setFloat(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> keep_setFloat
    void keep_getFloat(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> keep_getFloat
    void keep_setDouble(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> keep_setDouble
    void keep_getDouble(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> keep_getDouble
    void keep_setLong(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> keep_setLong
    void keep_getLong(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> keep_getLong
    void keep_setString(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> keep_setString
    void keep_getString(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> keep_getString
com.tencent.mm.sdk.storage.CursorFieldHelper$1 -> com.tencent.mm.sdk.storage.CursorFieldHelper$1:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$10 -> com.tencent.mm.sdk.storage.CursorFieldHelper$10:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$11 -> com.tencent.mm.sdk.storage.CursorFieldHelper$11:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$12 -> com.tencent.mm.sdk.storage.CursorFieldHelper$12:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$13 -> com.tencent.mm.sdk.storage.CursorFieldHelper$13:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$14 -> com.tencent.mm.sdk.storage.CursorFieldHelper$14:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$15 -> com.tencent.mm.sdk.storage.CursorFieldHelper$15:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$16 -> com.tencent.mm.sdk.storage.CursorFieldHelper$16:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$17 -> com.tencent.mm.sdk.storage.CursorFieldHelper$17:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$18 -> com.tencent.mm.sdk.storage.CursorFieldHelper$18:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$19 -> com.tencent.mm.sdk.storage.CursorFieldHelper$19:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$2 -> com.tencent.mm.sdk.storage.CursorFieldHelper$2:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$20 -> com.tencent.mm.sdk.storage.CursorFieldHelper$20:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$21 -> com.tencent.mm.sdk.storage.CursorFieldHelper$21:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$22 -> com.tencent.mm.sdk.storage.CursorFieldHelper$22:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$23 -> com.tencent.mm.sdk.storage.CursorFieldHelper$23:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$24 -> com.tencent.mm.sdk.storage.CursorFieldHelper$24:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$25 -> com.tencent.mm.sdk.storage.CursorFieldHelper$25:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$26 -> com.tencent.mm.sdk.storage.CursorFieldHelper$26:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$27 -> com.tencent.mm.sdk.storage.CursorFieldHelper$27:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$28 -> com.tencent.mm.sdk.storage.CursorFieldHelper$28:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$3 -> com.tencent.mm.sdk.storage.CursorFieldHelper$3:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$4 -> com.tencent.mm.sdk.storage.CursorFieldHelper$4:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$5 -> com.tencent.mm.sdk.storage.CursorFieldHelper$5:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$6 -> com.tencent.mm.sdk.storage.CursorFieldHelper$6:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$7 -> com.tencent.mm.sdk.storage.CursorFieldHelper$7:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$8 -> com.tencent.mm.sdk.storage.CursorFieldHelper$8:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$9 -> com.tencent.mm.sdk.storage.CursorFieldHelper$9:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$IGetMethod -> com.tencent.mm.sdk.storage.CursorFieldHelper$IGetMethod:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$ISetMethod -> com.tencent.mm.sdk.storage.CursorFieldHelper$ISetMethod:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> invoke
com.tencent.mm.sdk.storage.IAutoDBItem -> com.tencent.mm.sdk.storage.IAutoDBItem:
    java.lang.String FIELD_PREFIX -> FIELD_PREFIX
    java.lang.String SYSTEM_ROWID_FIELD -> SYSTEM_ROWID_FIELD
    java.lang.String COL_ROWID -> COL_ROWID
    long systemRowid -> systemRowid
    com.tencent.mm.sdk.storage.IAutoDBItem$MAutoDBInfo getDBInfo() -> getDBInfo
    void convertFrom(android.database.Cursor) -> convertFrom
    android.content.ContentValues convertTo() -> convertTo
    com.tencent.mm.sdk.storage.IAutoDBItem$MAutoDBInfo initAutoDBInfo(java.lang.Class) -> initAutoDBInfo
    java.lang.String[] a(java.lang.reflect.Field[]) -> a
    java.util.Map b(java.lang.reflect.Field[]) -> b
    java.lang.String c(java.lang.reflect.Field[]) -> c
    java.lang.String getColName(java.lang.reflect.Field) -> getColName
    java.lang.reflect.Field[] getValidFields(java.lang.Class) -> getValidFields
    boolean checkIOEqual(android.content.ContentValues,android.database.Cursor) -> checkIOEqual
    android.database.Cursor getCursorForProjection(android.content.ContentValues,java.lang.String[]) -> getCursorForProjection
com.tencent.mm.sdk.storage.IAutoDBItem$MAutoDBInfo -> com.tencent.mm.sdk.storage.IAutoDBItem$MAutoDBInfo:
    java.lang.reflect.Field[] fields -> fields
    java.lang.String primaryKey -> primaryKey
    java.lang.String[] columns -> columns
    java.util.Map colsMap -> colsMap
    java.lang.String sql -> sql
com.tencent.mm.sdk.storage.ISQLiteDatabase -> com.tencent.mm.sdk.storage.ISQLiteDatabase:
    android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String) -> query
    android.database.Cursor rawQuery(java.lang.String,java.lang.String[]) -> rawQuery
    boolean execSQL(java.lang.String,java.lang.String) -> execSQL
    long insert(java.lang.String,java.lang.String,android.content.ContentValues) -> insert
    int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    long replace(java.lang.String,java.lang.String,android.content.ContentValues) -> replace
    int delete(java.lang.String,java.lang.String,java.lang.String[]) -> delete
com.tencent.mm.sdk.storage.MAutoDBFieldAnnotation -> com.tencent.mm.sdk.storage.MAutoDBFieldAnnotation:
    java.lang.String defValue() -> defValue
    int primaryKey() -> primaryKey
com.tencent.mm.sdk.storage.MAutoDBItem -> com.tencent.mm.sdk.storage.MAutoDBItem:
    void convertFrom(android.database.Cursor) -> convertFrom
    android.content.ContentValues convertTo() -> convertTo
com.tencent.mm.sdk.storage.MAutoStorage -> com.tencent.mm.sdk.storage.MAutoStorage:
    com.tencent.mm.sdk.storage.ISQLiteDatabase bS -> bS
    com.tencent.mm.sdk.storage.IAutoDBItem$MAutoDBInfo bT -> bT
    java.lang.String bU -> bU
    java.lang.String getTableName() -> getTableName
    java.lang.String getPrimaryKey() -> getPrimaryKey
    java.lang.String getCreateSQLs(com.tencent.mm.sdk.storage.IAutoDBItem$MAutoDBInfo,java.lang.String) -> getCreateSQLs
    java.util.List getUpdateSQLs(com.tencent.mm.sdk.storage.IAutoDBItem$MAutoDBInfo,java.lang.String,com.tencent.mm.sdk.storage.ISQLiteDatabase) -> getUpdateSQLs
    boolean insert(com.tencent.mm.sdk.storage.IAutoDBItem) -> insert
    boolean delete(com.tencent.mm.sdk.storage.IAutoDBItem,java.lang.String[]) -> delete
    boolean delete(long) -> delete
    boolean get(long,com.tencent.mm.sdk.storage.IAutoDBItem) -> get
    boolean get(com.tencent.mm.sdk.storage.IAutoDBItem,java.lang.String[]) -> get
    boolean update(long,com.tencent.mm.sdk.storage.IAutoDBItem) -> update
    boolean update(com.tencent.mm.sdk.storage.IAutoDBItem,java.lang.String[]) -> update
    boolean replace(com.tencent.mm.sdk.storage.IAutoDBItem) -> replace
    boolean a(android.content.ContentValues) -> a
    android.database.Cursor getAll() -> getAll
    int getCount() -> getCount
    android.database.Cursor rawQuery(java.lang.String,java.lang.String[]) -> rawQuery
    java.lang.StringBuilder a(android.content.ContentValues,java.lang.String[]) -> a
    java.lang.String[] a(java.lang.String[],android.content.ContentValues) -> a
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
com.tencent.mm.sdk.storage.MDBItem -> com.tencent.mm.sdk.storage.MDBItem:
    void convertFrom(android.database.Cursor) -> convertFrom
    android.content.ContentValues convertTo() -> convertTo
com.tencent.mm.sdk.storage.MStorage -> com.tencent.mm.sdk.storage.MStorage:
    com.tencent.mm.sdk.storage.MStorageEvent bV -> bV
    com.tencent.mm.sdk.storage.MStorageEvent bW -> bW
    void lock() -> lock
    void unlock() -> unlock
    void add(com.tencent.mm.sdk.storage.MStorage$IOnStorageChange) -> add
    void addLoadedListener(com.tencent.mm.sdk.storage.MStorage$IOnStorageLoaded) -> addLoadedListener
    void remove(com.tencent.mm.sdk.storage.MStorage$IOnStorageChange) -> remove
    void removeLoadedListener(com.tencent.mm.sdk.storage.MStorage$IOnStorageLoaded) -> removeLoadedListener
    void doNotify() -> doNotify
    void doNotify(java.lang.String) -> doNotify
    void a(com.tencent.mm.sdk.storage.MStorage$IOnStorageChange,java.lang.String) -> a
    void a(com.tencent.mm.sdk.storage.MStorage$IOnStorageLoaded) -> a
com.tencent.mm.sdk.storage.MStorage$1 -> com.tencent.mm.sdk.storage.MStorage$1:
    com.tencent.mm.sdk.storage.MStorage bX -> bX
    void processEvent(java.lang.Object,java.lang.Object) -> processEvent
com.tencent.mm.sdk.storage.MStorage$2 -> com.tencent.mm.sdk.storage.MStorage$2:
    com.tencent.mm.sdk.storage.MStorage bX -> bX
    void processEvent(java.lang.Object,java.lang.Object) -> processEvent
com.tencent.mm.sdk.storage.MStorage$IOnStorageChange -> com.tencent.mm.sdk.storage.MStorage$IOnStorageChange:
    void onNotifyChange(java.lang.String) -> onNotifyChange
com.tencent.mm.sdk.storage.MStorage$IOnStorageLoaded -> com.tencent.mm.sdk.storage.MStorage$IOnStorageLoaded:
    void onNotifyLoaded() -> onNotifyLoaded
com.tencent.mm.sdk.storage.MStorageEvent -> com.tencent.mm.sdk.storage.MStorageEvent:
    int bY -> bY
    java.util.Hashtable bZ -> bZ
    java.util.concurrent.CopyOnWriteArraySet ca -> ca
    void lock() -> lock
    void unlock() -> unlock
    boolean isLocked() -> isLocked
    void add(java.lang.Object,android.os.Looper) -> add
    void remove(java.lang.Object) -> remove
    void removeAll() -> removeAll
    java.util.Vector e() -> e
    boolean event(java.lang.Object) -> event
    void doNotify() -> doNotify
    void f() -> f
    void processEvent(java.lang.Object,java.lang.Object) -> processEvent
com.tencent.mm.sdk.storage.MStorageEvent$1 -> com.tencent.mm.sdk.storage.MStorageEvent$1:
    java.lang.Object cb -> cb
    java.lang.Object cc -> cc
    com.tencent.mm.sdk.storage.MStorageEvent cd -> cd
    void run() -> run
com.tencent.mm.sdk.storage.package-info -> com.tencent.mm.sdk.storage.package-info:
dalvik.system.VMRuntime -> dalvik.system.VMRuntime:
    dalvik.system.VMRuntime THE_ONE -> THE_ONE
    dalvik.system.VMRuntime getRuntime() -> getRuntime
    float getTargetHeapUtilization() -> getTargetHeapUtilization
    float setTargetHeapUtilization(float) -> setTargetHeapUtilization
    long getMinimumHeapSize() -> getMinimumHeapSize
    long setMinimumHeapSize(long) -> setMinimumHeapSize
    long nativeMinimumHeapSize(long,boolean) -> nativeMinimumHeapSize
    void gcSoftReferences() -> gcSoftReferences
    void runFinalizationSync() -> runFinalizationSync
    void nativeSetTargetHeapUtilization(float) -> nativeSetTargetHeapUtilization
    boolean trackExternalAllocation(long) -> trackExternalAllocation
    void trackExternalFree(long) -> trackExternalFree
    long getExternalBytesAllocated() -> getExternalBytesAllocated
    void startJitCompilation() -> startJitCompilation
    void disableJitCompilation() -> disableJitCompilation
it.sephiroth.android.library.ab.AB -> it.sephiroth.android.library.ab.AB:
    it.sephiroth.android.library.ab.AB instance -> a
    it.sephiroth.android.library.ab.ABSettingsFactory$ABSettingsManager manager -> b
    int hashCode -> c
    it.sephiroth.android.library.ab.AB$Group group -> d
    java.lang.String getUUID() -> a
    it.sephiroth.android.library.ab.AB$Group getGroup() -> b
    it.sephiroth.android.library.ab.AB$Group generateGroup() -> c
    it.sephiroth.android.library.ab.ABSettingsFactory$ABSettingsManager setup(android.content.Context) -> b
    it.sephiroth.android.library.ab.AB getInstance(android.content.Context) -> a
it.sephiroth.android.library.ab.AB$Group -> it.sephiroth.android.library.ab.AB$Group:
    it.sephiroth.android.library.ab.AB$Group GroupA -> GroupA
    it.sephiroth.android.library.ab.AB$Group GroupB -> GroupB
    it.sephiroth.android.library.ab.AB$Group[] ENUM$VALUES -> ENUM$VALUES
    it.sephiroth.android.library.ab.AB$Group[] values() -> values
    it.sephiroth.android.library.ab.AB$Group valueOf(java.lang.String) -> valueOf
it.sephiroth.android.library.ab.ABFilePreference -> it.sephiroth.android.library.ab.a:
    java.lang.String uuid -> a
    java.lang.String getUUID() -> a
    java.lang.String generate(android.content.Context) -> a
    java.lang.String createFile(java.io.File) -> a
    java.lang.String readFile(java.io.File) -> b
    java.lang.String readStream(java.io.InputStream) -> a
it.sephiroth.android.library.ab.ABSettingsFactory -> it.sephiroth.android.library.ab.b:
    it.sephiroth.android.library.ab.ABSettingsFactory$ABSettingsManager create(android.content.Context) -> a
    boolean canUseFileSystem(android.content.Context) -> b
it.sephiroth.android.library.ab.ABSettingsFactory$ABSettingsManager -> it.sephiroth.android.library.ab.c:
    java.lang.String getUUID() -> a
    java.util.UUID generateNew() -> b
it.sephiroth.android.library.ab.ABSharedPreference -> it.sephiroth.android.library.ab.d:
    java.lang.String uuid -> a
    java.lang.String generate(android.content.Context) -> a
    android.content.SharedPreferences getSharedPreferences(android.content.Context) -> b
    android.content.SharedPreferences getSharedPreferencesNewApi(android.content.Context) -> c
    android.content.SharedPreferences getSharedPreferencesOldApi(android.content.Context) -> d
    java.lang.String getUUID() -> a
it.sephiroth.android.library.imagezoom.ImageViewTouch -> it.sephiroth.android.library.imagezoom.ImageViewTouch:
    float SCROLL_DELTA_THRESHOLD -> SCROLL_DELTA_THRESHOLD
    android.view.ScaleGestureDetector mScaleDetector -> mScaleDetector
    android.view.GestureDetector mGestureDetector -> mGestureDetector
    int mTouchSlop -> mTouchSlop
    float mScaleFactor -> mScaleFactor
    int mDoubleTapDirection -> mDoubleTapDirection
    android.view.GestureDetector$OnGestureListener mGestureListener -> mGestureListener
    android.view.ScaleGestureDetector$OnScaleGestureListener mScaleListener -> mScaleListener
    boolean mDoubleTapEnabled -> mDoubleTapEnabled
    boolean mScaleEnabled -> mScaleEnabled
    boolean mScrollEnabled -> mScrollEnabled
    it.sephiroth.android.library.imagezoom.ImageViewTouch$OnImageViewTouchDoubleTapListener mDoubleTapListener -> mDoubleTapListener
    it.sephiroth.android.library.imagezoom.ImageViewTouch$OnImageViewTouchSingleTapListener mSingleTapListener -> mSingleTapListener
    void init(android.content.Context,android.util.AttributeSet,int) -> init
    void setDoubleTapListener(it.sephiroth.android.library.imagezoom.ImageViewTouch$OnImageViewTouchDoubleTapListener) -> setDoubleTapListener
    void setSingleTapListener(it.sephiroth.android.library.imagezoom.ImageViewTouch$OnImageViewTouchSingleTapListener) -> setSingleTapListener
    void setDoubleTapEnabled(boolean) -> setDoubleTapEnabled
    void setScaleEnabled(boolean) -> setScaleEnabled
    void setScrollEnabled(boolean) -> setScrollEnabled
    boolean getDoubleTapEnabled() -> getDoubleTapEnabled
    android.view.GestureDetector$OnGestureListener getGestureListener() -> getGestureListener
    android.view.ScaleGestureDetector$OnScaleGestureListener getScaleListener() -> getScaleListener
    void _setImageDrawable(android.graphics.drawable.Drawable,android.graphics.Matrix,float,float) -> _setImageDrawable
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onZoomAnimationCompleted(float) -> onZoomAnimationCompleted
    float onDoubleTapPost(float,float) -> onDoubleTapPost
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onUp(android.view.MotionEvent) -> onUp
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean canScroll(int) -> canScroll
    it.sephiroth.android.library.imagezoom.ImageViewTouch$OnImageViewTouchSingleTapListener access$0(it.sephiroth.android.library.imagezoom.ImageViewTouch) -> access$0
    it.sephiroth.android.library.imagezoom.ImageViewTouch$OnImageViewTouchDoubleTapListener access$1(it.sephiroth.android.library.imagezoom.ImageViewTouch) -> access$1
it.sephiroth.android.library.imagezoom.ImageViewTouch$GestureListener -> it.sephiroth.android.library.imagezoom.a:
    it.sephiroth.android.library.imagezoom.ImageViewTouch this$0 -> a
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onDown(android.view.MotionEvent) -> onDown
it.sephiroth.android.library.imagezoom.ImageViewTouch$OnImageViewTouchDoubleTapListener -> it.sephiroth.android.library.imagezoom.b:
    void onDoubleTap() -> a
it.sephiroth.android.library.imagezoom.ImageViewTouch$OnImageViewTouchSingleTapListener -> it.sephiroth.android.library.imagezoom.c:
    void onSingleTapConfirmed() -> a
it.sephiroth.android.library.imagezoom.ImageViewTouch$ScaleListener -> it.sephiroth.android.library.imagezoom.d:
    boolean mScaled -> a
    it.sephiroth.android.library.imagezoom.ImageViewTouch this$0 -> b
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
it.sephiroth.android.library.imagezoom.ImageViewTouchBase -> it.sephiroth.android.library.imagezoom.ImageViewTouchBase:
    java.lang.String LOG_TAG -> LOG_TAG
    boolean LOG_ENABLED -> LOG_ENABLED
    float ZOOM_INVALID -> ZOOM_INVALID
    it.sephiroth.android.library.imagezoom.easing.Easing mEasing -> mEasing
    android.graphics.Matrix mBaseMatrix -> mBaseMatrix
    android.graphics.Matrix mSuppMatrix -> mSuppMatrix
    android.graphics.Matrix mNextMatrix -> mNextMatrix
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mLayoutRunnable -> mLayoutRunnable
    boolean mUserScaled -> mUserScaled
    float mMaxZoom -> mMaxZoom
    float mMinZoom -> mMinZoom
    boolean mMaxZoomDefined -> mMaxZoomDefined
    boolean mMinZoomDefined -> mMinZoomDefined
    android.graphics.Matrix mDisplayMatrix -> mDisplayMatrix
    float[] mMatrixValues -> mMatrixValues
    int mThisWidth -> mThisWidth
    int mThisHeight -> mThisHeight
    android.graphics.PointF mCenter -> mCenter
    it.sephiroth.android.library.imagezoom.ImageViewTouchBase$DisplayType mScaleType -> mScaleType
    boolean mScaleTypeChanged -> mScaleTypeChanged
    boolean mBitmapChanged -> mBitmapChanged
    int DEFAULT_ANIMATION_DURATION -> DEFAULT_ANIMATION_DURATION
    android.graphics.RectF mBitmapRect -> mBitmapRect
    android.graphics.RectF mCenterRect -> mCenterRect
    android.graphics.RectF mScrollRect -> mScrollRect
    it.sephiroth.android.library.imagezoom.ImageViewTouchBase$OnDrawableChangeListener mDrawableChangeListener -> mDrawableChangeListener
    it.sephiroth.android.library.imagezoom.ImageViewTouchBase$OnLayoutChangeListener mOnLayoutChangeListener -> mOnLayoutChangeListener
    void setOnDrawableChangedListener(it.sephiroth.android.library.imagezoom.ImageViewTouchBase$OnDrawableChangeListener) -> setOnDrawableChangedListener
    void setOnLayoutChangeListener(it.sephiroth.android.library.imagezoom.ImageViewTouchBase$OnLayoutChangeListener) -> setOnLayoutChangeListener
    void init(android.content.Context,android.util.AttributeSet,int) -> init
    void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    void clear() -> clear
    void setDisplayType(it.sephiroth.android.library.imagezoom.ImageViewTouchBase$DisplayType) -> setDisplayType
    it.sephiroth.android.library.imagezoom.ImageViewTouchBase$DisplayType getDisplayType() -> getDisplayType
    void setMinScale(float) -> setMinScale
    void setMaxScale(float) -> setMaxScale
    void onLayout(boolean,int,int,int,int) -> onLayout
    void resetDisplay() -> resetDisplay
    void resetMatrix() -> resetMatrix
    float getDefaultScale(it.sephiroth.android.library.imagezoom.ImageViewTouchBase$DisplayType) -> getDefaultScale
    void setImageResource(int) -> setImageResource
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageBitmap(android.graphics.Bitmap,android.graphics.Matrix,float,float) -> setImageBitmap
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageDrawable(android.graphics.drawable.Drawable,android.graphics.Matrix,float,float) -> setImageDrawable
    void _setImageDrawable(android.graphics.drawable.Drawable,android.graphics.Matrix,float,float) -> _setImageDrawable
    void onDrawableChanged(android.graphics.drawable.Drawable) -> onDrawableChanged
    void fireOnLayoutChangeListener(int,int,int,int) -> fireOnLayoutChangeListener
    void fireOnDrawableChangeListener(android.graphics.drawable.Drawable) -> fireOnDrawableChangeListener
    void onLayoutChanged(int,int,int,int) -> onLayoutChanged
    float computeMaxZoom() -> computeMaxZoom
    float computeMinZoom() -> computeMinZoom
    float getMaxScale() -> getMaxScale
    float getMinScale() -> getMinScale
    android.graphics.Matrix getImageViewMatrix() -> getImageViewMatrix
    android.graphics.Matrix getImageViewMatrix(android.graphics.Matrix) -> getImageViewMatrix
    void setImageMatrix(android.graphics.Matrix) -> setImageMatrix
    void onImageMatrixChanged() -> onImageMatrixChanged
    android.graphics.Matrix getDisplayMatrix() -> getDisplayMatrix
    void getProperBaseMatrix(android.graphics.drawable.Drawable,android.graphics.Matrix) -> getProperBaseMatrix
    void getProperBaseMatrix2(android.graphics.drawable.Drawable,android.graphics.Matrix) -> getProperBaseMatrix2
    float getValue(android.graphics.Matrix,int) -> getValue
    void printMatrix(android.graphics.Matrix) -> printMatrix
    android.graphics.RectF getBitmapRect() -> getBitmapRect
    android.graphics.RectF getBitmapRect(android.graphics.Matrix) -> getBitmapRect
    float getScale(android.graphics.Matrix) -> getScale
    float getRotation() -> getRotation
    float getScale() -> getScale
    float getBaseScale() -> getBaseScale
    void center(boolean,boolean) -> center
    android.graphics.RectF getCenter(android.graphics.Matrix,boolean,boolean) -> getCenter
    void postTranslate(float,float) -> postTranslate
    void postScale(float,float,float) -> postScale
    android.graphics.PointF getCenter() -> getCenter
    void zoomTo(float) -> zoomTo
    void zoomTo(float,float) -> zoomTo
    void zoomTo(float,float,float) -> zoomTo
    void onZoom(float) -> onZoom
    void onZoomAnimationCompleted(float) -> onZoomAnimationCompleted
    void scrollBy(float,float) -> scrollBy
    void panBy(double,double) -> panBy
    void updateRect(android.graphics.RectF,android.graphics.RectF) -> updateRect
    void scrollBy(float,float,double) -> scrollBy
    void zoomTo(float,float,float,float) -> zoomTo
    void dispose() -> dispose
it.sephiroth.android.library.imagezoom.ImageViewTouchBase$1 -> it.sephiroth.android.library.imagezoom.ImageViewTouchBase$1:
    it.sephiroth.android.library.imagezoom.ImageViewTouchBase this$0 -> this$0
    android.graphics.drawable.Drawable val$drawable -> val$drawable
    android.graphics.Matrix val$initial_matrix -> val$initial_matrix
    float val$min_zoom -> val$min_zoom
    float val$max_zoom -> val$max_zoom
    void run() -> run
it.sephiroth.android.library.imagezoom.ImageViewTouchBase$2 -> it.sephiroth.android.library.imagezoom.ImageViewTouchBase$2:
    double old_x -> old_x
    double old_y -> old_y
    it.sephiroth.android.library.imagezoom.ImageViewTouchBase this$0 -> this$0
    double val$durationMs -> val$durationMs
    long val$startTime -> val$startTime
    double val$dx -> val$dx
    double val$dy -> val$dy
    void run() -> run
it.sephiroth.android.library.imagezoom.ImageViewTouchBase$3 -> it.sephiroth.android.library.imagezoom.ImageViewTouchBase$3:
    it.sephiroth.android.library.imagezoom.ImageViewTouchBase this$0 -> this$0
    float val$durationMs -> val$durationMs
    long val$startTime -> val$startTime
    float val$deltaScale -> val$deltaScale
    float val$oldScale -> val$oldScale
    float val$destX -> val$destX
    float val$destY -> val$destY
    void run() -> run
it.sephiroth.android.library.imagezoom.ImageViewTouchBase$DisplayType -> it.sephiroth.android.library.imagezoom.ImageViewTouchBase$DisplayType:
    it.sephiroth.android.library.imagezoom.ImageViewTouchBase$DisplayType NONE -> NONE
    it.sephiroth.android.library.imagezoom.ImageViewTouchBase$DisplayType FIT_TO_SCREEN -> FIT_TO_SCREEN
    it.sephiroth.android.library.imagezoom.ImageViewTouchBase$DisplayType FIT_IF_BIGGER -> FIT_IF_BIGGER
    it.sephiroth.android.library.imagezoom.ImageViewTouchBase$DisplayType[] ENUM$VALUES -> ENUM$VALUES
    it.sephiroth.android.library.imagezoom.ImageViewTouchBase$DisplayType[] values() -> values
    it.sephiroth.android.library.imagezoom.ImageViewTouchBase$DisplayType valueOf(java.lang.String) -> valueOf
it.sephiroth.android.library.imagezoom.ImageViewTouchBase$OnDrawableChangeListener -> it.sephiroth.android.library.imagezoom.e:
    void onDrawableChanged(android.graphics.drawable.Drawable) -> onDrawableChanged
it.sephiroth.android.library.imagezoom.ImageViewTouchBase$OnLayoutChangeListener -> it.sephiroth.android.library.imagezoom.f:
    void onLayoutChanged(boolean,int,int,int,int) -> onLayoutChanged
it.sephiroth.android.library.imagezoom.easing.Cubic -> it.sephiroth.android.library.imagezoom.easing.a:
    double easeOut(double,double,double,double) -> easeOut
    double easeIn(double,double,double,double) -> easeIn
    double easeInOut(double,double,double,double) -> easeInOut
it.sephiroth.android.library.imagezoom.easing.Easing -> it.sephiroth.android.library.imagezoom.easing.Easing:
    double easeOut(double,double,double,double) -> easeOut
    double easeIn(double,double,double,double) -> easeIn
    double easeInOut(double,double,double,double) -> easeInOut
it.sephiroth.android.library.imagezoom.easing.Expo -> it.sephiroth.android.library.imagezoom.easing.b:
    double easeOut(double,double,double,double) -> easeOut
    double easeIn(double,double,double,double) -> easeIn
    double easeInOut(double,double,double,double) -> easeInOut
it.sephiroth.android.library.imagezoom.easing.Linear -> it.sephiroth.android.library.imagezoom.easing.c:
    double easeNone(double,double,double,double) -> easeNone
    double easeOut(double,double,double,double) -> easeOut
    double easeIn(double,double,double,double) -> easeIn
    double easeInOut(double,double,double,double) -> easeInOut
it.sephiroth.android.library.imagezoom.easing.Quad -> it.sephiroth.android.library.imagezoom.easing.d:
    double easeOut(double,double,double,double) -> easeOut
    double easeIn(double,double,double,double) -> easeIn
    double easeInOut(double,double,double,double) -> easeInOut
it.sephiroth.android.library.imagezoom.easing.Quint -> it.sephiroth.android.library.imagezoom.easing.e:
    double easeOut(double,double,double,double) -> easeOut
    double easeIn(double,double,double,double) -> easeIn
    double easeInOut(double,double,double,double) -> easeInOut
it.sephiroth.android.library.imagezoom.graphics.FastBitmapDrawable -> it.sephiroth.android.library.imagezoom.a.a:
    android.graphics.Bitmap mBitmap -> mBitmap
    android.graphics.Paint mPaint -> mPaint
    int mIntrinsicWidth -> mIntrinsicWidth
    int mIntrinsicHeight -> mIntrinsicHeight
    void setBitmap(android.graphics.Bitmap) -> setBitmap
    void draw(android.graphics.Canvas) -> draw
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    void setAntiAlias(boolean) -> setAntiAlias
    android.graphics.Bitmap getBitmap() -> getBitmap
    android.graphics.Paint getPaint() -> getPaint
it.sephiroth.android.library.imagezoom.graphics.IBitmapDrawable -> it.sephiroth.android.library.imagezoom.a.b:
    android.graphics.Bitmap getBitmap() -> getBitmap
it.sephiroth.android.library.media.ExifInterfaceExtended -> it.sephiroth.android.library.media.ExifInterfaceExtended:
    java.lang.Object sLock -> a
    java.text.SimpleDateFormat sFormatter -> b
    java.util.HashMap mAttributes -> c
    boolean mHasThumbnail -> d
    java.lang.String mFilename -> e
    boolean hasAttribute(java.lang.String) -> a
    java.lang.String getAttribute(java.lang.String) -> b
    int getAttributeInt(java.lang.String,int) -> a
    int getOrientation() -> a
    void setAttribute(java.lang.String,java.lang.String) -> a
    void loadAttributes() -> d
    void saveAttributes() -> b
    boolean hasThumbnail() -> c
    int copyTo(android.os.Bundle) -> a
    void copyFrom(android.os.Bundle,boolean) -> a
    java.lang.String toString() -> toString
    void saveAttributesNative(java.lang.String,java.lang.String) -> saveAttributesNative
    java.lang.String getAttributesNative(java.lang.String) -> getAttributesNative
    void commitChangesNative(java.lang.String) -> commitChangesNative
    byte[] getThumbnailNative(java.lang.String) -> getThumbnailNative
it.sephiroth.android.library.util.ViewHelperFactory -> it.sephiroth.android.library.a.a:
    it.sephiroth.android.library.util.ViewHelperFactory$ViewHelper create(android.view.View) -> a
it.sephiroth.android.library.util.ViewHelperFactory$ViewHelper -> it.sephiroth.android.library.a.b:
    android.view.View view -> a
    void postOnAnimation(java.lang.Runnable) -> a
    void setScrollX(int) -> a
    boolean isHardwareAccelerated() -> a
it.sephiroth.android.library.util.ViewHelperFactory$ViewHelperDefault -> it.sephiroth.android.library.a.c:
    void postOnAnimation(java.lang.Runnable) -> a
    void setScrollX(int) -> a
    boolean isHardwareAccelerated() -> a
it.sephiroth.android.library.util.v11.MultiChoiceModeListener -> it.sephiroth.android.library.a.a.a:
    void onItemCheckedStateChanged(android.view.ActionMode,int,long,boolean) -> a
it.sephiroth.android.library.util.v11.MultiChoiceModeWrapper -> it.sephiroth.android.library.a.a.b:
    it.sephiroth.android.library.util.v11.MultiChoiceModeListener mWrapped -> a
    it.sephiroth.android.library.widget.AbsHListView mView -> b
    void setWrapped(it.sephiroth.android.library.util.v11.MultiChoiceModeListener) -> a
    boolean hasWrappedCallback() -> a
    boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    void onItemCheckedStateChanged(android.view.ActionMode,int,long,boolean) -> a
it.sephiroth.android.library.util.v14.ViewHelper14 -> it.sephiroth.android.library.a.b.a:
    void setScrollX(int) -> a
    boolean isHardwareAccelerated() -> a
it.sephiroth.android.library.util.v16.ViewHelper16 -> it.sephiroth.android.library.a.c.a:
    void postOnAnimation(java.lang.Runnable) -> a
it.sephiroth.android.library.widget.AbsHListView -> it.sephiroth.android.library.widget.AbsHListView:
    java.lang.String TAG -> TAG
    int TRANSCRIPT_MODE_DISABLED -> TRANSCRIPT_MODE_DISABLED
    int TRANSCRIPT_MODE_NORMAL -> TRANSCRIPT_MODE_NORMAL
    int TRANSCRIPT_MODE_ALWAYS_SCROLL -> TRANSCRIPT_MODE_ALWAYS_SCROLL
    int TOUCH_MODE_REST -> TOUCH_MODE_REST
    int TOUCH_MODE_DOWN -> TOUCH_MODE_DOWN
    int TOUCH_MODE_TAP -> TOUCH_MODE_TAP
    int TOUCH_MODE_DONE_WAITING -> TOUCH_MODE_DONE_WAITING
    int TOUCH_MODE_SCROLL -> TOUCH_MODE_SCROLL
    int TOUCH_MODE_FLING -> TOUCH_MODE_FLING
    int TOUCH_MODE_OVERSCROLL -> TOUCH_MODE_OVERSCROLL
    int TOUCH_MODE_OVERFLING -> TOUCH_MODE_OVERFLING
    int LAYOUT_NORMAL -> LAYOUT_NORMAL
    int LAYOUT_FORCE_LEFT -> LAYOUT_FORCE_LEFT
    int LAYOUT_SET_SELECTION -> LAYOUT_SET_SELECTION
    int LAYOUT_FORCE_RIGHT -> LAYOUT_FORCE_RIGHT
    int LAYOUT_SPECIFIC -> LAYOUT_SPECIFIC
    int LAYOUT_SYNC -> LAYOUT_SYNC
    int LAYOUT_MOVE_SELECTION -> LAYOUT_MOVE_SELECTION
    it.sephiroth.android.library.util.ViewHelperFactory$ViewHelper mViewHelper -> mViewHelper
    int mChoiceMode -> mChoiceMode
    java.lang.Object mChoiceActionMode -> mChoiceActionMode
    java.lang.Object mMultiChoiceModeCallback -> mMultiChoiceModeCallback
    int mCheckedItemCount -> mCheckedItemCount
    android.util.SparseBooleanArray mCheckStates -> mCheckStates
    android.support.v4.util.LongSparseArray mCheckedIdStates -> mCheckedIdStates
    int mLayoutMode -> mLayoutMode
    it.sephiroth.android.library.widget.AbsHListView$AdapterDataSetObserver mDataSetObserver -> mDataSetObserver
    android.widget.ListAdapter mAdapter -> mAdapter
    boolean mAdapterHasStableIds -> mAdapterHasStableIds
    boolean mDrawSelectorOnTop -> mDrawSelectorOnTop
    android.graphics.drawable.Drawable mSelector -> mSelector
    int mSelectorPosition -> mSelectorPosition
    android.graphics.Rect mSelectorRect -> mSelectorRect
    it.sephiroth.android.library.widget.AbsHListView$RecycleBin mRecycler -> mRecycler
    int mSelectionLeftPadding -> mSelectionLeftPadding
    int mSelectionTopPadding -> mSelectionTopPadding
    int mSelectionRightPadding -> mSelectionRightPadding
    int mSelectionBottomPadding -> mSelectionBottomPadding
    android.graphics.Rect mListPadding -> mListPadding
    int mHeightMeasureSpec -> mHeightMeasureSpec
    android.view.View mScrollLeft -> mScrollLeft
    android.view.View mScrollRight -> mScrollRight
    boolean mCachingStarted -> mCachingStarted
    boolean mCachingActive -> mCachingActive
    int mMotionPosition -> mMotionPosition
    int mMotionViewOriginalLeft -> mMotionViewOriginalLeft
    int mMotionViewNewLeft -> mMotionViewNewLeft
    int mMotionX -> mMotionX
    int mMotionY -> mMotionY
    int mTouchMode -> mTouchMode
    int mLastX -> mLastX
    int mMotionCorrection -> mMotionCorrection
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    it.sephiroth.android.library.widget.AbsHListView$FlingRunnable mFlingRunnable -> mFlingRunnable
    it.sephiroth.android.library.widget.AbsHListView$PositionScroller mPositionScroller -> mPositionScroller
    int mSelectedLeft -> mSelectedLeft
    boolean mStackFromRight -> mStackFromRight
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mFastScrollEnabled -> mFastScrollEnabled
    it.sephiroth.android.library.widget.AbsHListView$OnScrollListener mOnScrollListener -> mOnScrollListener
    boolean mSmoothScrollbarEnabled -> mSmoothScrollbarEnabled
    android.graphics.Rect mTouchFrame -> mTouchFrame
    int mResurrectToPosition -> mResurrectToPosition
    android.view.ContextMenu$ContextMenuInfo mContextMenuInfo -> mContextMenuInfo
    int mOverscrollMax -> mOverscrollMax
    int OVERSCROLL_LIMIT_DIVISOR -> OVERSCROLL_LIMIT_DIVISOR
    int CHECK_POSITION_SEARCH_DISTANCE -> CHECK_POSITION_SEARCH_DISTANCE
    int TOUCH_MODE_UNKNOWN -> TOUCH_MODE_UNKNOWN
    int TOUCH_MODE_ON -> TOUCH_MODE_ON
    int TOUCH_MODE_OFF -> TOUCH_MODE_OFF
    int mLastTouchMode -> mLastTouchMode
    it.sephiroth.android.library.widget.AbsHListView$CheckForLongPress mPendingCheckForLongPress -> mPendingCheckForLongPress
    java.lang.Runnable mPendingCheckForTap -> mPendingCheckForTap
    it.sephiroth.android.library.widget.AbsHListView$CheckForKeyLongPress mPendingCheckForKeyLongPress -> mPendingCheckForKeyLongPress
    it.sephiroth.android.library.widget.AbsHListView$PerformClick mPerformClick -> mPerformClick
    java.lang.Runnable mTouchModeReset -> mTouchModeReset
    int mTranscriptMode -> mTranscriptMode
    int mCacheColorHint -> mCacheColorHint
    boolean mIsChildViewEnabled -> mIsChildViewEnabled
    int mLastScrollState -> mLastScrollState
    int mTouchSlop -> mTouchSlop
    java.lang.Runnable mClearScrollingCache -> mClearScrollingCache
    java.lang.Runnable mPositionScrollAfterLayout -> mPositionScrollAfterLayout
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    float mVelocityScale -> mVelocityScale
    boolean[] mIsScrap -> mIsScrap
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    int mOverscrollDistance -> mOverscrollDistance
    int mOverflingDistance -> mOverflingDistance
    it.sephiroth.android.library.widget.EdgeEffect mEdgeGlowTop -> mEdgeGlowTop
    it.sephiroth.android.library.widget.EdgeEffect mEdgeGlowBottom -> mEdgeGlowBottom
    int mFirstPositionDistanceGuess -> mFirstPositionDistanceGuess
    int mLastPositionDistanceGuess -> mLastPositionDistanceGuess
    int mDirection -> mDirection
    boolean mForceTranscriptScroll -> mForceTranscriptScroll
    int mGlowPaddingTop -> mGlowPaddingTop
    int mGlowPaddingBottom -> mGlowPaddingBottom
    it.sephiroth.android.library.widget.AbsHListView$ListItemAccessibilityDelegate mAccessibilityDelegate -> mAccessibilityDelegate
    int mLastAccessibilityScrollEventFromIndex -> mLastAccessibilityScrollEventFromIndex
    int mLastAccessibilityScrollEventToIndex -> mLastAccessibilityScrollEventToIndex
    boolean mIsAttached -> mIsAttached
    int mLastHandledItemCount -> mLastHandledItemCount
    android.view.animation.Interpolator sLinearInterpolator -> sLinearInterpolator
    it.sephiroth.android.library.widget.AbsHListView$SavedState mPendingSync -> mPendingSync
    int[] STATESET_NOTHING -> STATESET_NOTHING
    float mHorizontalScrollFactor -> mHorizontalScrollFactor
    void initAbsListView() -> initAbsListView
    void setOverScrollMode(int) -> setOverScrollMode
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    int getCheckedItemCount() -> getCheckedItemCount
    boolean isItemChecked(int) -> isItemChecked
    int getCheckedItemPosition() -> getCheckedItemPosition
    android.util.SparseBooleanArray getCheckedItemPositions() -> getCheckedItemPositions
    long[] getCheckedItemIds() -> getCheckedItemIds
    void clearChoices() -> clearChoices
    void setItemChecked(int,boolean) -> setItemChecked
    boolean performItemClick(android.view.View,int,long) -> performItemClick
    void updateOnScreenCheckedViews() -> updateOnScreenCheckedViews
    int getChoiceMode() -> getChoiceMode
    void setChoiceMode(int) -> setChoiceMode
    void setMultiChoiceModeListener(it.sephiroth.android.library.util.v11.MultiChoiceModeListener) -> setMultiChoiceModeListener
    boolean contentFits() -> contentFits
    int getHorizontalScrollbarHeight() -> getHorizontalScrollbarHeight
    void setSmoothScrollbarEnabled(boolean) -> setSmoothScrollbarEnabled
    boolean isSmoothScrollbarEnabled() -> isSmoothScrollbarEnabled
    void setOnScrollListener(it.sephiroth.android.library.widget.AbsHListView$OnScrollListener) -> setOnScrollListener
    void invokeOnItemScrollListener() -> invokeOnItemScrollListener
    void sendAccessibilityEvent(int) -> sendAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    boolean isScrollingCacheEnabled() -> isScrollingCacheEnabled
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    void getFocusedRect(android.graphics.Rect) -> getFocusedRect
    void useDefaultSelector() -> useDefaultSelector
    boolean isStackFromRight() -> isStackFromRight
    void setStackFromRight(boolean) -> setStackFromRight
    void requestLayoutIfNecessary() -> requestLayoutIfNecessary
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    void requestLayout() -> requestLayout
    void resetList() -> resetList
    int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    float getLeftFadingEdgeStrength() -> getLeftFadingEdgeStrength
    float getRightFadingEdgeStrength() -> getRightFadingEdgeStrength
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void layoutChildren() -> layoutChildren
    void updateScrollIndicators() -> updateScrollIndicators
    android.view.View getSelectedView() -> getSelectedView
    int getListPaddingTop() -> getListPaddingTop
    int getListPaddingBottom() -> getListPaddingBottom
    int getListPaddingLeft() -> getListPaddingLeft
    int getListPaddingRight() -> getListPaddingRight
    android.view.View obtainView(int,boolean[]) -> obtainView
    void positionSelector(int,android.view.View) -> positionSelector
    void positionSelector(int,int,int,int) -> positionSelector
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean touchModeDrawsInPressedState() -> touchModeDrawsInPressedState
    boolean shouldShowSelector() -> shouldShowSelector
    void drawSelector(android.graphics.Canvas) -> drawSelector
    void setDrawSelectorOnTop(boolean) -> setDrawSelectorOnTop
    void setSelector(int) -> setSelector
    void setSelector(android.graphics.drawable.Drawable) -> setSelector
    android.graphics.drawable.Drawable getSelector() -> getSelector
    void keyPressed() -> keyPressed
    void setScrollIndicators(android.view.View,android.view.View) -> setScrollIndicators
    void updateSelectorState() -> updateSelectorState
    void drawableStateChanged() -> drawableStateChanged
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    android.view.ContextMenu$ContextMenuInfo createContextMenuInfo(android.view.View,int,long) -> createContextMenuInfo
    boolean performLongPress(android.view.View,int,long) -> performLongPress
    android.view.ContextMenu$ContextMenuInfo getContextMenuInfo() -> getContextMenuInfo
    boolean showContextMenu(float,float,int) -> showContextMenu
    boolean showContextMenuForChild(android.view.View) -> showContextMenuForChild
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void dispatchSetPressed(boolean) -> dispatchSetPressed
    int pointToPosition(int,int) -> pointToPosition
    long pointToColId(int,int) -> pointToColId
    boolean startScrollIfNeeded(int) -> startScrollIfNeeded
    void scrollIfNeeded(int) -> scrollIfNeeded
    void invalidateParentIfNeeded() -> invalidateParentIfNeeded
    void onTouchModeChanged(boolean) -> onTouchModeChanged
    boolean performButtonActionOnTouchDown(android.view.MotionEvent) -> performButtonActionOnTouchDown
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    float getHorizontalScrollFactor() -> getHorizontalScrollFactor
    void draw(android.graphics.Canvas) -> draw
    void setOverScrollEffectPadding(int,int) -> setOverScrollEffectPadding
    void initOrResetVelocityTracker() -> initOrResetVelocityTracker
    void initVelocityTrackerIfNotExists() -> initVelocityTrackerIfNotExists
    void recycleVelocityTracker() -> recycleVelocityTracker
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void addTouchables(java.util.ArrayList) -> addTouchables
    void reportScrollStateChange(int) -> reportScrollStateChange
    void setFriction(float) -> setFriction
    void setVelocityScale(float) -> setVelocityScale
    void smoothScrollToPosition(int) -> smoothScrollToPosition
    void smoothScrollToPositionFromLeft(int,int,int) -> smoothScrollToPositionFromLeft
    void smoothScrollToPositionFromLeft(int,int) -> smoothScrollToPositionFromLeft
    void smoothScrollToPosition(int,int) -> smoothScrollToPosition
    void smoothScrollBy(int,int) -> smoothScrollBy
    void smoothScrollBy(int,int,boolean) -> smoothScrollBy
    void smoothScrollByOffset(int) -> smoothScrollByOffset
    void createScrollingCache() -> createScrollingCache
    void clearScrollingCache() -> clearScrollingCache
    boolean trackMotionScroll(int,int) -> trackMotionScroll
    void offsetChildrenLeftAndRight(int) -> offsetChildrenLeftAndRight
    int getHeaderViewsCount() -> getHeaderViewsCount
    int getFooterViewsCount() -> getFooterViewsCount
    void fillGap(boolean) -> fillGap
    void hideSelector() -> hideSelector
    int reconcileSelectedPosition() -> reconcileSelectedPosition
    int findMotionCol(int) -> findMotionCol
    int findClosestMotionCol(int) -> findClosestMotionCol
    void invalidateViews() -> invalidateViews
    boolean resurrectSelectionIfNeeded() -> resurrectSelectionIfNeeded
    void setSelectionInt(int) -> setSelectionInt
    boolean resurrectSelection() -> resurrectSelection
    void confirmCheckedPositionsById() -> confirmCheckedPositionsById
    void handleDataChanged() -> handleDataChanged
    int getDistance(android.graphics.Rect,android.graphics.Rect,int) -> getDistance
    android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    boolean checkInputConnectionProxy(android.view.View) -> checkInputConnectionProxy
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    it.sephiroth.android.library.widget.AbsHListView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    void setTranscriptMode(int) -> setTranscriptMode
    int getTranscriptMode() -> getTranscriptMode
    int getSolidColor() -> getSolidColor
    void setCacheColorHint(int) -> setCacheColorHint
    int getCacheColorHint() -> getCacheColorHint
    void reclaimViews(java.util.List) -> reclaimViews
    void finishGlows() -> finishGlows
    void setVisibleRangeHint(int,int) -> setVisibleRangeHint
    void setRecyclerListener(it.sephiroth.android.library.widget.AbsHListView$RecyclerListener) -> setRecyclerListener
    android.view.View retrieveFromScrap(java.util.ArrayList,int) -> retrieveFromScrap
    java.lang.Object getFieldFromStyleable(android.content.Context,java.lang.String) -> getFieldFromStyleable
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int access$2(it.sephiroth.android.library.widget.AbsHListView) -> access$2
    it.sephiroth.android.library.widget.AbsHListView$CheckForLongPress access$3(it.sephiroth.android.library.widget.AbsHListView) -> access$3
    void access$4(it.sephiroth.android.library.widget.AbsHListView,it.sephiroth.android.library.widget.AbsHListView$CheckForLongPress) -> access$4
    int access$5(it.sephiroth.android.library.widget.AbsHListView) -> access$5
    android.view.VelocityTracker access$6(it.sephiroth.android.library.widget.AbsHListView) -> access$6
    int access$7(it.sephiroth.android.library.widget.AbsHListView) -> access$7
    int access$8(it.sephiroth.android.library.widget.AbsHListView) -> access$8
    boolean access$9(it.sephiroth.android.library.widget.AbsHListView) -> access$9
    it.sephiroth.android.library.widget.EdgeEffect access$10(it.sephiroth.android.library.widget.AbsHListView) -> access$10
    it.sephiroth.android.library.widget.EdgeEffect access$11(it.sephiroth.android.library.widget.AbsHListView) -> access$11
    void access$12(it.sephiroth.android.library.widget.AbsHListView) -> access$12
    boolean access$13(it.sephiroth.android.library.widget.AbsHListView,int,int,int,int,int,int,int,int,boolean) -> access$13
    void access$14(it.sephiroth.android.library.widget.AbsHListView,android.view.View,boolean) -> access$14
    void access$15(it.sephiroth.android.library.widget.AbsHListView,boolean) -> access$15
    void access$16(it.sephiroth.android.library.widget.AbsHListView,boolean) -> access$16
it.sephiroth.android.library.widget.AbsHListView$1 -> it.sephiroth.android.library.widget.AbsHListView$1:
    it.sephiroth.android.library.widget.AbsHListView this$0 -> this$0
    android.view.View val$child -> val$child
    it.sephiroth.android.library.widget.AbsHListView$PerformClick val$performClick -> val$performClick
    void run() -> run
it.sephiroth.android.library.widget.AbsHListView$2 -> it.sephiroth.android.library.widget.AbsHListView$2:
    it.sephiroth.android.library.widget.AbsHListView this$0 -> this$0
    void run() -> run
it.sephiroth.android.library.widget.AbsHListView$AdapterDataSetObserver -> it.sephiroth.android.library.widget.a:
    it.sephiroth.android.library.widget.AbsHListView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
it.sephiroth.android.library.widget.AbsHListView$CheckForKeyLongPress -> it.sephiroth.android.library.widget.AbsHListView$CheckForKeyLongPress:
    it.sephiroth.android.library.widget.AbsHListView this$0 -> this$0
    void run() -> run
it.sephiroth.android.library.widget.AbsHListView$CheckForLongPress -> it.sephiroth.android.library.widget.AbsHListView$CheckForLongPress:
    it.sephiroth.android.library.widget.AbsHListView this$0 -> this$0
    void run() -> run
it.sephiroth.android.library.widget.AbsHListView$CheckForTap -> it.sephiroth.android.library.widget.AbsHListView$CheckForTap:
    it.sephiroth.android.library.widget.AbsHListView this$0 -> this$0
    void run() -> run
it.sephiroth.android.library.widget.AbsHListView$FlingRunnable -> it.sephiroth.android.library.widget.AbsHListView$FlingRunnable:
    it.sephiroth.android.library.widget.OverScroller mScroller -> mScroller
    int mLastFlingX -> mLastFlingX
    java.lang.Runnable mCheckFlywheel -> mCheckFlywheel
    int FLYWHEEL_TIMEOUT -> FLYWHEEL_TIMEOUT
    it.sephiroth.android.library.widget.AbsHListView this$0 -> this$0
    void start(int) -> start
    void startSpringback() -> startSpringback
    void startOverfling(int) -> startOverfling
    void edgeReached(int) -> edgeReached
    void startScroll(int,int,boolean) -> startScroll
    void endFling() -> endFling
    void flywheelTouch() -> flywheelTouch
    void run() -> run
    it.sephiroth.android.library.widget.OverScroller access$0(it.sephiroth.android.library.widget.AbsHListView$FlingRunnable) -> access$0
    it.sephiroth.android.library.widget.AbsHListView access$1(it.sephiroth.android.library.widget.AbsHListView$FlingRunnable) -> access$1
it.sephiroth.android.library.widget.AbsHListView$FlingRunnable$1 -> it.sephiroth.android.library.widget.AbsHListView$FlingRunnable$1:
    it.sephiroth.android.library.widget.AbsHListView$FlingRunnable this$1 -> this$1
    void run() -> run
it.sephiroth.android.library.widget.AbsHListView$LayoutParams -> it.sephiroth.android.library.widget.b:
    int viewType -> a
    boolean recycledHeaderFooter -> b
    boolean forceAdd -> c
    int scrappedFromPosition -> d
    long itemId -> e
it.sephiroth.android.library.widget.AbsHListView$ListItemAccessibilityDelegate -> it.sephiroth.android.library.widget.c:
    it.sephiroth.android.library.widget.AbsHListView this$0 -> a
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
it.sephiroth.android.library.widget.AbsHListView$OnScrollListener -> it.sephiroth.android.library.widget.d:
    void onScrollStateChanged(it.sephiroth.android.library.widget.AbsHListView,int) -> a
    void onScroll(it.sephiroth.android.library.widget.AbsHListView,int,int,int) -> a
it.sephiroth.android.library.widget.AbsHListView$PerformClick -> it.sephiroth.android.library.widget.AbsHListView$PerformClick:
    int mClickMotionPosition -> mClickMotionPosition
    it.sephiroth.android.library.widget.AbsHListView this$0 -> this$0
    void run() -> run
it.sephiroth.android.library.widget.AbsHListView$PositionScroller -> it.sephiroth.android.library.widget.AbsHListView$PositionScroller:
    int SCROLL_DURATION -> SCROLL_DURATION
    int MOVE_DOWN_POS -> MOVE_DOWN_POS
    int MOVE_UP_POS -> MOVE_UP_POS
    int MOVE_DOWN_BOUND -> MOVE_DOWN_BOUND
    int MOVE_UP_BOUND -> MOVE_UP_BOUND
    int MOVE_OFFSET -> MOVE_OFFSET
    int mMode -> mMode
    int mTargetPos -> mTargetPos
    int mBoundPos -> mBoundPos
    int mLastSeenPos -> mLastSeenPos
    int mScrollDuration -> mScrollDuration
    int mExtraScroll -> mExtraScroll
    int mOffsetFromLeft -> mOffsetFromLeft
    it.sephiroth.android.library.widget.AbsHListView this$0 -> this$0
    void start(int) -> start
    void start(int,int) -> start
    void startWithOffset(int,int) -> startWithOffset
    void startWithOffset(int,int,int) -> startWithOffset
    void scrollToVisible(int,int,int) -> scrollToVisible
    void stop() -> stop
    void run() -> run
it.sephiroth.android.library.widget.AbsHListView$PositionScroller$1 -> it.sephiroth.android.library.widget.AbsHListView$PositionScroller$1:
    it.sephiroth.android.library.widget.AbsHListView$PositionScroller this$1 -> this$1
    int val$position -> val$position
    void run() -> run
it.sephiroth.android.library.widget.AbsHListView$PositionScroller$2 -> it.sephiroth.android.library.widget.AbsHListView$PositionScroller$2:
    it.sephiroth.android.library.widget.AbsHListView$PositionScroller this$1 -> this$1
    int val$position -> val$position
    int val$boundPosition -> val$boundPosition
    void run() -> run
it.sephiroth.android.library.widget.AbsHListView$PositionScroller$3 -> it.sephiroth.android.library.widget.AbsHListView$PositionScroller$3:
    it.sephiroth.android.library.widget.AbsHListView$PositionScroller this$1 -> this$1
    int val$position -> val$position
    int val$postOffset -> val$postOffset
    int val$duration -> val$duration
    void run() -> run
it.sephiroth.android.library.widget.AbsHListView$RecycleBin -> it.sephiroth.android.library.widget.e:
    it.sephiroth.android.library.widget.AbsHListView$RecyclerListener mRecyclerListener -> b
    int mFirstActivePosition -> c
    android.view.View[] mActiveViews -> d
    java.util.ArrayList[] mScrapViews -> e
    int mViewTypeCount -> f
    java.util.ArrayList mCurrentScrap -> g
    java.util.ArrayList mSkippedScrap -> h
    android.support.v4.util.SparseArrayCompat mTransientStateViews -> i
    it.sephiroth.android.library.widget.AbsHListView this$0 -> a
    void setViewTypeCount(int) -> a
    void markChildrenDirty() -> a
    boolean shouldRecycleViewType(int) -> b
    void clear() -> b
    void fillActiveViews(int,int) -> a
    android.view.View getActiveView(int) -> c
    android.view.View getTransientStateView(int) -> d
    void clearTransientStateViews() -> c
    android.view.View getScrapView(int) -> e
    void addScrapView(android.view.View,int) -> a
    void removeSkippedScrap() -> d
    void scrapActiveViews() -> e
    void pruneScrapViews() -> f
    void reclaimScrapViews(java.util.List) -> a
    void setCacheColorHint(int) -> f
    it.sephiroth.android.library.widget.AbsHListView$RecyclerListener access$0(it.sephiroth.android.library.widget.AbsHListView$RecycleBin) -> a
    void access$1(it.sephiroth.android.library.widget.AbsHListView$RecycleBin,it.sephiroth.android.library.widget.AbsHListView$RecyclerListener) -> a
it.sephiroth.android.library.widget.AbsHListView$RecyclerListener -> it.sephiroth.android.library.widget.f:
    void onMovedToScrapHeap(android.view.View) -> a
it.sephiroth.android.library.widget.AbsHListView$SavedState -> it.sephiroth.android.library.widget.AbsHListView$SavedState:
    long selectedId -> a
    long firstId -> b
    int viewLeft -> c
    int position -> d
    int width -> e
    java.lang.String filter -> f
    boolean inActionMode -> g
    int checkedItemCount -> h
    android.util.SparseBooleanArray checkState -> i
    android.support.v4.util.LongSparseArray checkIdState -> j
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
it.sephiroth.android.library.widget.AbsHListView$SavedState$1 -> it.sephiroth.android.library.widget.g:
    it.sephiroth.android.library.widget.AbsHListView$SavedState createFromParcel(android.os.Parcel) -> a
    it.sephiroth.android.library.widget.AbsHListView$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
it.sephiroth.android.library.widget.AbsHListView$SelectionBoundsAdjuster -> it.sephiroth.android.library.widget.h:
    void adjustListItemSelectionBounds(android.graphics.Rect) -> a
it.sephiroth.android.library.widget.AbsHListView$WindowRunnnable -> it.sephiroth.android.library.widget.i:
    int mOriginalAttachCount -> mOriginalAttachCount
    it.sephiroth.android.library.widget.AbsHListView this$0 -> this$0
    void rememberWindowAttachCount() -> rememberWindowAttachCount
    boolean sameWindow() -> sameWindow
it.sephiroth.android.library.widget.AdapterView -> it.sephiroth.android.library.widget.AdapterView:
    int ITEM_VIEW_TYPE_IGNORE -> ITEM_VIEW_TYPE_IGNORE
    int ITEM_VIEW_TYPE_HEADER_OR_FOOTER -> ITEM_VIEW_TYPE_HEADER_OR_FOOTER
    int mFirstPosition -> mFirstPosition
    int mSpecificLeft -> mSpecificLeft
    int mSyncPosition -> mSyncPosition
    long mSyncColId -> mSyncColId
    long mSyncWidth -> mSyncWidth
    boolean mNeedSync -> mNeedSync
    int mSyncMode -> mSyncMode
    int mLayoutWidth -> mLayoutWidth
    int SYNC_SELECTED_POSITION -> SYNC_SELECTED_POSITION
    int SYNC_FIRST_POSITION -> SYNC_FIRST_POSITION
    int SYNC_MAX_DURATION_MILLIS -> SYNC_MAX_DURATION_MILLIS
    boolean mInLayout -> mInLayout
    it.sephiroth.android.library.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> mOnItemSelectedListener
    it.sephiroth.android.library.widget.AdapterView$OnItemClickListener mOnItemClickListener -> mOnItemClickListener
    it.sephiroth.android.library.widget.AdapterView$OnItemLongClickListener mOnItemLongClickListener -> mOnItemLongClickListener
    boolean mDataChanged -> mDataChanged
    int mNextSelectedPosition -> mNextSelectedPosition
    long mNextSelectedColId -> mNextSelectedColId
    int mSelectedPosition -> mSelectedPosition
    long mSelectedColId -> mSelectedColId
    android.view.View mEmptyView -> mEmptyView
    int mItemCount -> mItemCount
    int mOldItemCount -> mOldItemCount
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> mAccessibilityManager
    int INVALID_POSITION -> INVALID_POSITION
    long INVALID_COL_ID -> INVALID_COL_ID
    int mOldSelectedPosition -> mOldSelectedPosition
    long mOldSelectedColId -> mOldSelectedColId
    boolean mDesiredFocusableState -> mDesiredFocusableState
    boolean mDesiredFocusableInTouchModeState -> mDesiredFocusableInTouchModeState
    it.sephiroth.android.library.widget.AdapterView$SelectionNotifier mSelectionNotifier -> mSelectionNotifier
    boolean mBlockLayoutRequests -> mBlockLayoutRequests
    void setOnItemClickListener(it.sephiroth.android.library.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    it.sephiroth.android.library.widget.AdapterView$OnItemClickListener getOnItemClickListener() -> getOnItemClickListener
    boolean performItemClick(android.view.View,int,long) -> performItemClick
    void setOnItemLongClickListener(it.sephiroth.android.library.widget.AdapterView$OnItemLongClickListener) -> setOnItemLongClickListener
    it.sephiroth.android.library.widget.AdapterView$OnItemLongClickListener getOnItemLongClickListener() -> getOnItemLongClickListener
    void setOnItemSelectedListener(it.sephiroth.android.library.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    it.sephiroth.android.library.widget.AdapterView$OnItemSelectedListener getOnItemSelectedListener() -> getOnItemSelectedListener
    android.widget.Adapter getAdapter() -> getAdapter
    void setAdapter(android.widget.Adapter) -> setAdapter
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    void removeAllViews() -> removeAllViews
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.view.View getSelectedView() -> getSelectedView
    java.lang.Object getSelectedItem() -> getSelectedItem
    int getCount() -> getCount
    int getPositionForView(android.view.View) -> getPositionForView
    int getFirstVisiblePosition() -> getFirstVisiblePosition
    int getLastVisiblePosition() -> getLastVisiblePosition
    void setSelection(int) -> setSelection
    void setEmptyView(android.view.View) -> setEmptyView
    android.view.View getEmptyView() -> getEmptyView
    boolean isInFilterMode() -> isInFilterMode
    void setFocusable(boolean) -> setFocusable
    void setFocusableInTouchMode(boolean) -> setFocusableInTouchMode
    void checkFocus() -> checkFocus
    void updateEmptyStatus(boolean) -> updateEmptyStatus
    java.lang.Object getItemAtPosition(int) -> getItemAtPosition
    long getItemIdAtPosition(int) -> getItemIdAtPosition
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    void onDetachedFromWindow() -> onDetachedFromWindow
    void selectionChanged() -> selectionChanged
    void fireOnSelected() -> fireOnSelected
    void performAccessibilityActionsOnSelected() -> performAccessibilityActionsOnSelected
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean isScrollableForAccessibility() -> isScrollableForAccessibility
    boolean canAnimate() -> canAnimate
    void handleDataChanged() -> handleDataChanged
    void checkSelectionChanged() -> checkSelectionChanged
    int findSyncPosition() -> findSyncPosition
    int lookForSelectablePosition(int,boolean) -> lookForSelectablePosition
    void setSelectedPositionInt(int) -> setSelectedPositionInt
    void setNextSelectedPositionInt(int) -> setNextSelectedPositionInt
    void rememberSyncState() -> rememberSyncState
    void access$0(it.sephiroth.android.library.widget.AdapterView,android.os.Parcelable) -> access$0
    android.os.Parcelable access$1(it.sephiroth.android.library.widget.AdapterView) -> access$1
    void access$2(it.sephiroth.android.library.widget.AdapterView) -> access$2
    void access$3(it.sephiroth.android.library.widget.AdapterView) -> access$3
it.sephiroth.android.library.widget.AdapterView$AdapterContextMenuInfo -> it.sephiroth.android.library.widget.j:
    android.view.View targetView -> a
    int position -> b
    long id -> c
it.sephiroth.android.library.widget.AdapterView$AdapterDataSetObserver -> it.sephiroth.android.library.widget.k:
    android.os.Parcelable mInstanceState -> a
    it.sephiroth.android.library.widget.AdapterView this$0 -> b
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
it.sephiroth.android.library.widget.AdapterView$OnItemClickListener -> it.sephiroth.android.library.widget.l:
    void onItemClick(it.sephiroth.android.library.widget.AdapterView,android.view.View,int,long) -> onItemClick
it.sephiroth.android.library.widget.AdapterView$OnItemLongClickListener -> it.sephiroth.android.library.widget.m:
    boolean onItemLongClick(it.sephiroth.android.library.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
it.sephiroth.android.library.widget.AdapterView$OnItemSelectedListener -> it.sephiroth.android.library.widget.n:
    void onItemSelected(it.sephiroth.android.library.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(it.sephiroth.android.library.widget.AdapterView) -> onNothingSelected
it.sephiroth.android.library.widget.AdapterView$SelectionNotifier -> it.sephiroth.android.library.widget.AdapterView$SelectionNotifier:
    it.sephiroth.android.library.widget.AdapterView this$0 -> this$0
    void run() -> run
it.sephiroth.android.library.widget.EdgeEffect -> it.sephiroth.android.library.widget.o:
    int mDirection -> a
    android.graphics.drawable.Drawable mEdge -> b
    android.graphics.drawable.Drawable mGlow -> c
    int mWidth -> d
    int mHeight -> e
    int mX -> f
    int mY -> g
    int mMinWidth -> h
    float mEdgeAlpha -> i
    float mEdgeScaleY -> j
    float mGlowAlpha -> k
    float mGlowScaleY -> l
    float mEdgeAlphaStart -> m
    float mEdgeAlphaFinish -> n
    float mEdgeScaleYStart -> o
    float mEdgeScaleYFinish -> p
    float mGlowAlphaStart -> q
    float mGlowAlphaFinish -> r
    float mGlowScaleYStart -> s
    float mGlowScaleYFinish -> t
    long mStartTime -> u
    float mDuration -> v
    android.view.animation.Interpolator mInterpolator -> w
    int mState -> x
    float mPullDistance -> y
    android.graphics.Rect mBounds -> z
    int mEdgeHeight -> A
    int mGlowHeight -> B
    int mGlowWidth -> C
    int mMaxEffectHeight -> D
    void setSize(int,int) -> a
    void setPosition(int,int) -> b
    boolean isFinished() -> a
    void finish() -> b
    void onPull(float) -> a
    void onRelease() -> c
    void onAbsorb(int) -> a
    boolean draw(android.graphics.Canvas) -> a
    android.graphics.Rect getBounds(boolean) -> a
    void update() -> d
it.sephiroth.android.library.widget.HListView -> it.sephiroth.android.library.widget.HListView:
    int NO_POSITION -> NO_POSITION
    float MAX_SCROLL_FACTOR -> MAX_SCROLL_FACTOR
    int MIN_SCROLL_PREVIEW_PIXELS -> MIN_SCROLL_PREVIEW_PIXELS
    java.lang.String LOG_TAG -> LOG_TAG
    java.util.ArrayList mHeaderViewInfos -> mHeaderViewInfos
    java.util.ArrayList mFooterViewInfos -> mFooterViewInfos
    android.graphics.drawable.Drawable mDivider -> mDivider
    int mDividerWidth -> mDividerWidth
    int mMeasureWithChild -> mMeasureWithChild
    android.graphics.drawable.Drawable mOverScrollHeader -> mOverScrollHeader
    android.graphics.drawable.Drawable mOverScrollFooter -> mOverScrollFooter
    boolean mIsCacheColorOpaque -> mIsCacheColorOpaque
    boolean mDividerIsOpaque -> mDividerIsOpaque
    boolean mHeaderDividersEnabled -> mHeaderDividersEnabled
    boolean mFooterDividersEnabled -> mFooterDividersEnabled
    boolean mAreAllItemsSelectable -> mAreAllItemsSelectable
    boolean mItemsCanFocus -> mItemsCanFocus
    android.graphics.Rect mTempRect -> mTempRect
    android.graphics.Paint mDividerPaint -> mDividerPaint
    it.sephiroth.android.library.widget.HListView$ArrowScrollFocusResult mArrowScrollFocusResult -> mArrowScrollFocusResult
    it.sephiroth.android.library.widget.HListView$FocusSelector mFocusSelector -> mFocusSelector
    int getMaxScrollAmount() -> getMaxScrollAmount
    void adjustViewsLeftOrRight() -> adjustViewsLeftOrRight
    void addHeaderView(android.view.View,java.lang.Object,boolean) -> addHeaderView
    void addHeaderView(android.view.View) -> addHeaderView
    int getHeaderViewsCount() -> getHeaderViewsCount
    boolean removeHeaderView(android.view.View) -> removeHeaderView
    void removeFixedViewInfo(android.view.View,java.util.ArrayList) -> removeFixedViewInfo
    void addFooterView(android.view.View,java.lang.Object,boolean) -> addFooterView
    void addFooterView(android.view.View) -> addFooterView
    int getFooterViewsCount() -> getFooterViewsCount
    boolean removeFooterView(android.view.View) -> removeFooterView
    android.widget.ListAdapter getAdapter() -> getAdapter
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void resetList() -> resetList
    void clearRecycledState(java.util.ArrayList) -> clearRecycledState
    boolean showingLeftFadingEdge() -> showingLeftFadingEdge
    boolean showingRightFadingEdge() -> showingRightFadingEdge
    boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    void fillGap(boolean) -> fillGap
    android.view.View fillRight(int,int) -> fillRight
    android.view.View fillLeft(int,int) -> fillLeft
    android.view.View fillFromLeft(int) -> fillFromLeft
    android.view.View fillFromMiddle(int,int) -> fillFromMiddle
    void fillBeforeAndAfter(android.view.View,int) -> fillBeforeAndAfter
    android.view.View fillFromSelection(int,int,int) -> fillFromSelection
    int getRightSelectionPixel(int,int,int) -> getRightSelectionPixel
    int getLeftSelectionPixel(int,int,int) -> getLeftSelectionPixel
    void smoothScrollToPosition(int) -> smoothScrollToPosition
    void smoothScrollByOffset(int) -> smoothScrollByOffset
    android.view.View moveSelection(android.view.View,android.view.View,int,int,int) -> moveSelection
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onMeasure(int,int) -> onMeasure
    void measureScrapChildWidth(android.view.View,int,int) -> measureScrapChildWidth
    int[] measureChild(android.view.View) -> measureChild
    boolean recycleOnMeasure() -> recycleOnMeasure
    int measureWidthOfChildren(int,int,int,int,int) -> measureWidthOfChildren
    int[] measureWithLargeChildren(int,int,int,int,int,int) -> measureWithLargeChildren
    int findMotionCol(int) -> findMotionCol
    android.view.View fillSpecific(int,int) -> fillSpecific
    void correctTooWide(int) -> correctTooWide
    void correctTooSmall(int) -> correctTooSmall
    void layoutChildren() -> layoutChildren
    android.view.View findAccessibilityFocusedChild(android.view.View) -> findAccessibilityFocusedChild
    boolean isDirectChildHeaderOrFooter(android.view.View) -> isDirectChildHeaderOrFooter
    android.view.View makeAndAddView(int,int,boolean,int,boolean) -> makeAndAddView
    void setupChild(android.view.View,int,int,boolean,int,boolean,boolean) -> setupChild
    boolean canAnimate() -> canAnimate
    void setSelection(int) -> setSelection
    void setSelectionFromLeft(int,int) -> setSelectionFromLeft
    void setSelectionInt(int) -> setSelectionInt
    int lookForSelectablePosition(int,boolean) -> lookForSelectablePosition
    void setSelectionAfterHeaderView() -> setSelectionAfterHeaderView
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyMultiple(int,int,android.view.KeyEvent) -> onKeyMultiple
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean commonKey(int,int,android.view.KeyEvent) -> commonKey
    boolean pageScroll(int) -> pageScroll
    boolean fullScroll(int) -> fullScroll
    boolean handleHorizontalFocusWithinListItem(int) -> handleHorizontalFocusWithinListItem
    boolean arrowScroll(int) -> arrowScroll
    boolean arrowScrollImpl(int) -> arrowScrollImpl
    void handleNewSelectionChange(android.view.View,int,int,boolean) -> handleNewSelectionChange
    void measureAndAdjustRight(android.view.View,int,int) -> measureAndAdjustRight
    void measureItem(android.view.View) -> measureItem
    void relayoutMeasuredItem(android.view.View) -> relayoutMeasuredItem
    int getArrowScrollPreviewLength() -> getArrowScrollPreviewLength
    int amountToScroll(int,int) -> amountToScroll
    int lookForSelectablePositionOnScreen(int) -> lookForSelectablePositionOnScreen
    it.sephiroth.android.library.widget.HListView$ArrowScrollFocusResult arrowScrollFocused(int) -> arrowScrollFocused
    int positionOfNewFocus(android.view.View) -> positionOfNewFocus
    boolean isViewAncestorOf(android.view.View,android.view.View) -> isViewAncestorOf
    int amountToScrollToNewFocus(int,android.view.View,int) -> amountToScrollToNewFocus
    int distanceToView(android.view.View) -> distanceToView
    void scrollListItemsBy(int) -> scrollListItemsBy
    android.view.View addViewBefore(android.view.View,int) -> addViewBefore
    android.view.View addViewAfter(android.view.View,int) -> addViewAfter
    void setItemsCanFocus(boolean) -> setItemsCanFocus
    boolean getItemsCanFocus() -> getItemsCanFocus
    boolean isOpaque() -> isOpaque
    void setCacheColorHint(int) -> setCacheColorHint
    void drawOverscrollHeader(android.graphics.Canvas,android.graphics.drawable.Drawable,android.graphics.Rect) -> drawOverscrollHeader
    void drawOverscrollFooter(android.graphics.Canvas,android.graphics.drawable.Drawable,android.graphics.Rect) -> drawOverscrollFooter
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void drawDivider(android.graphics.Canvas,android.graphics.Rect,int) -> drawDivider
    android.graphics.drawable.Drawable getDivider() -> getDivider
    void setDivider(android.graphics.drawable.Drawable) -> setDivider
    int getDividerWidth() -> getDividerWidth
    void setDividerWidth(int) -> setDividerWidth
    void setHeaderDividersEnabled(boolean) -> setHeaderDividersEnabled
    void setFooterDividersEnabled(boolean) -> setFooterDividersEnabled
    void setOverscrollHeader(android.graphics.drawable.Drawable) -> setOverscrollHeader
    android.graphics.drawable.Drawable getOverscrollHeader() -> getOverscrollHeader
    void setOverscrollFooter(android.graphics.drawable.Drawable) -> setOverscrollFooter
    android.graphics.drawable.Drawable getOverscrollFooter() -> getOverscrollFooter
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    void onFinishInflate() -> onFinishInflate
    long[] getCheckItemIds() -> getCheckItemIds
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onGlobalLayout() -> onGlobalLayout
    android.widget.Adapter getAdapter() -> getAdapter
it.sephiroth.android.library.widget.HListView$ArrowScrollFocusResult -> it.sephiroth.android.library.widget.p:
    int mSelectedPosition -> a
    int mAmountToScroll -> b
    void populate(int,int) -> a
    int getSelectedPosition() -> a
    int getAmountToScroll() -> b
it.sephiroth.android.library.widget.HListView$FixedViewInfo -> it.sephiroth.android.library.widget.q:
    android.view.View view -> a
    java.lang.Object data -> b
    boolean isSelectable -> c
it.sephiroth.android.library.widget.HListView$FocusSelector -> it.sephiroth.android.library.widget.HListView$FocusSelector:
    int mPosition -> mPosition
    int mPositionLeft -> mPositionLeft
    it.sephiroth.android.library.widget.HListView this$0 -> this$0
    it.sephiroth.android.library.widget.HListView$FocusSelector setup(int,int) -> setup
    void run() -> run
it.sephiroth.android.library.widget.HeaderViewListAdapter -> it.sephiroth.android.library.widget.HeaderViewListAdapter:
    android.widget.ListAdapter mAdapter -> mAdapter
    java.util.ArrayList mHeaderViewInfos -> mHeaderViewInfos
    java.util.ArrayList mFooterViewInfos -> mFooterViewInfos
    java.util.ArrayList EMPTY_INFO_LIST -> EMPTY_INFO_LIST
    boolean mAreAllFixedViewsSelectable -> mAreAllFixedViewsSelectable
    boolean mIsFilterable -> mIsFilterable
    int getHeadersCount() -> getHeadersCount
    int getFootersCount() -> getFootersCount
    boolean isEmpty() -> isEmpty
    boolean areAllListInfosSelectable(java.util.ArrayList) -> areAllListInfosSelectable
    boolean removeHeader(android.view.View) -> removeHeader
    boolean removeFooter(android.view.View) -> removeFooter
    int getCount() -> getCount
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    android.widget.Filter getFilter() -> getFilter
    android.widget.ListAdapter getWrappedAdapter() -> getWrappedAdapter
it.sephiroth.android.library.widget.OverScroller -> it.sephiroth.android.library.widget.r:
    int mMode -> a
    it.sephiroth.android.library.widget.OverScroller$SplineOverScroller mScrollerX -> b
    it.sephiroth.android.library.widget.OverScroller$SplineOverScroller mScrollerY -> c
    android.view.animation.Interpolator mInterpolator -> d
    boolean mFlywheel -> e
    float sViscousFluidScale -> f
    float sViscousFluidNormalize -> g
    float viscousFluid(float) -> a
    void setInterpolator(android.view.animation.Interpolator) -> a
    void setFriction(float) -> b
    boolean isFinished() -> a
    int getCurrX() -> b
    float getCurrVelocity() -> c
    boolean computeScrollOffset() -> d
    void startScroll(int,int,int,int,int) -> a
    boolean springBack(int,int,int,int,int,int) -> a
    void fling(int,int,int,int,int,int,int,int) -> a
    void fling(int,int,int,int,int,int,int,int,int,int) -> a
    void notifyHorizontalEdgeReached(int,int,int) -> a
    void abortAnimation() -> e
    boolean isScrollingInDirection(float,float) -> a
it.sephiroth.android.library.widget.OverScroller$SplineOverScroller -> it.sephiroth.android.library.widget.s:
    int mStart -> a
    int mCurrentPosition -> b
    int mFinal -> c
    int mVelocity -> d
    float mCurrVelocity -> e
    float mDeceleration -> f
    long mStartTime -> g
    int mDuration -> h
    int mSplineDuration -> i
    int mSplineDistance -> j
    boolean mFinished -> k
    int mOver -> l
    float mFlingFriction -> m
    int mState -> n
    float mPhysicalCoeff -> o
    float DECELERATION_RATE -> p
    float[] SPLINE_POSITION -> q
    float[] SPLINE_TIME -> r
    void setFriction(float) -> a
    void updateScroll(float) -> b
    float getDeceleration(int) -> a
    void adjustDuration(int,int,int) -> d
    void startScroll(int,int,int) -> a
    void finish() -> a
    boolean springback(int,int,int) -> b
    void startSpringback(int,int,int) -> e
    void fling(int,int,int,int,int) -> a
    double getSplineDeceleration(int) -> b
    double getSplineFlingDistance(int) -> c
    int getSplineFlingDuration(int) -> d
    void fitOnBounceCurve(int,int,int) -> f
    void startBounceAfterEdge(int,int,int) -> g
    void startAfterEdge(int,int,int,int) -> a
    void notifyEdgeReached(int,int,int) -> c
    void onEdgeReached() -> d
    boolean continueWhenFinished() -> b
    boolean update() -> c
    boolean access$0(it.sephiroth.android.library.widget.OverScroller$SplineOverScroller) -> a
    int access$2(it.sephiroth.android.library.widget.OverScroller$SplineOverScroller) -> b
    float access$3(it.sephiroth.android.library.widget.OverScroller$SplineOverScroller) -> c
    int access$4(it.sephiroth.android.library.widget.OverScroller$SplineOverScroller) -> d
    int access$5(it.sephiroth.android.library.widget.OverScroller$SplineOverScroller) -> e
    int access$6(it.sephiroth.android.library.widget.OverScroller$SplineOverScroller) -> f
    long access$7(it.sephiroth.android.library.widget.OverScroller$SplineOverScroller) -> g
net.simonvt.numberpicker.NumberPicker -> net.simonvt.numberpicker.NumberPicker:
    int SELECTOR_WHEEL_ITEM_COUNT -> SELECTOR_WHEEL_ITEM_COUNT
    long DEFAULT_LONG_PRESS_UPDATE_INTERVAL -> DEFAULT_LONG_PRESS_UPDATE_INTERVAL
    int SELECTOR_MIDDLE_ITEM_INDEX -> SELECTOR_MIDDLE_ITEM_INDEX
    int SELECTOR_MAX_FLING_VELOCITY_ADJUSTMENT -> SELECTOR_MAX_FLING_VELOCITY_ADJUSTMENT
    int SELECTOR_ADJUSTMENT_DURATION_MILLIS -> SELECTOR_ADJUSTMENT_DURATION_MILLIS
    int SNAP_SCROLL_DURATION -> SNAP_SCROLL_DURATION
    float TOP_AND_BOTTOM_FADING_EDGE_STRENGTH -> TOP_AND_BOTTOM_FADING_EDGE_STRENGTH
    int UNSCALED_DEFAULT_SELECTION_DIVIDER_HEIGHT -> UNSCALED_DEFAULT_SELECTION_DIVIDER_HEIGHT
    int UNSCALED_DEFAULT_SELECTION_DIVIDERS_DISTANCE -> UNSCALED_DEFAULT_SELECTION_DIVIDERS_DISTANCE
    int DEFAULT_LAYOUT_RESOURCE_ID -> DEFAULT_LAYOUT_RESOURCE_ID
    int SIZE_UNSPECIFIED -> SIZE_UNSPECIFIED
    net.simonvt.numberpicker.NumberPicker$TwoDigitFormatter sTwoDigitFormatter -> sTwoDigitFormatter
    android.widget.ImageButton mIncrementButton -> mIncrementButton
    android.widget.ImageButton mDecrementButton -> mDecrementButton
    android.widget.EditText mInputText -> mInputText
    int mSelectionDividersDistance -> mSelectionDividersDistance
    int mMinHeight -> mMinHeight
    int mMaxHeight -> mMaxHeight
    int mMinWidth -> mMinWidth
    int mMaxWidth -> mMaxWidth
    boolean mComputeMaxWidth -> mComputeMaxWidth
    int mTextSize -> mTextSize
    int mSelectorTextGapHeight -> mSelectorTextGapHeight
    java.lang.String[] mDisplayedValues -> mDisplayedValues
    int mMinValue -> mMinValue
    int mMaxValue -> mMaxValue
    int mValue -> mValue
    net.simonvt.numberpicker.NumberPicker$OnValueChangeListener mOnValueChangeListener -> mOnValueChangeListener
    net.simonvt.numberpicker.NumberPicker$OnScrollListener mOnScrollListener -> mOnScrollListener
    net.simonvt.numberpicker.NumberPicker$Formatter mFormatter -> mFormatter
    long mLongPressUpdateInterval -> mLongPressUpdateInterval
    android.util.SparseArray mSelectorIndexToStringCache -> mSelectorIndexToStringCache
    int[] mSelectorIndices -> mSelectorIndices
    android.graphics.Paint mSelectorWheelPaint -> mSelectorWheelPaint
    android.graphics.drawable.Drawable mVirtualButtonPressedDrawable -> mVirtualButtonPressedDrawable
    int mSelectorElementHeight -> mSelectorElementHeight
    int mInitialScrollOffset -> mInitialScrollOffset
    int mCurrentScrollOffset -> mCurrentScrollOffset
    net.simonvt.numberpicker.Scroller mFlingScroller -> mFlingScroller
    net.simonvt.numberpicker.Scroller mAdjustScroller -> mAdjustScroller
    int mPreviousScrollerY -> mPreviousScrollerY
    net.simonvt.numberpicker.NumberPicker$SetSelectionCommand mSetSelectionCommand -> mSetSelectionCommand
    net.simonvt.numberpicker.NumberPicker$ChangeCurrentByOneFromLongPressCommand mChangeCurrentByOneFromLongPressCommand -> mChangeCurrentByOneFromLongPressCommand
    net.simonvt.numberpicker.NumberPicker$BeginSoftInputOnLongPressCommand mBeginSoftInputOnLongPressCommand -> mBeginSoftInputOnLongPressCommand
    float mLastDownEventY -> mLastDownEventY
    long mLastDownEventTime -> mLastDownEventTime
    float mLastDownOrMoveEventY -> mLastDownOrMoveEventY
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mTouchSlop -> mTouchSlop
    int mMinimumFlingVelocity -> mMinimumFlingVelocity
    int mMaximumFlingVelocity -> mMaximumFlingVelocity
    boolean mWrapSelectorWheel -> mWrapSelectorWheel
    int mSolidColor -> mSolidColor
    boolean mHasSelectorWheel -> mHasSelectorWheel
    android.graphics.drawable.Drawable mSelectionDivider -> mSelectionDivider
    int mSelectionDividerHeight -> mSelectionDividerHeight
    int mScrollState -> mScrollState
    boolean mIngonreMoveEvents -> mIngonreMoveEvents
    boolean mShowSoftInputOnTap -> mShowSoftInputOnTap
    int mTopSelectionDividerTop -> mTopSelectionDividerTop
    int mBottomSelectionDividerBottom -> mBottomSelectionDividerBottom
    int mLastHoveredChildVirtualViewId -> mLastHoveredChildVirtualViewId
    boolean mIncrementVirtualButtonPressed -> mIncrementVirtualButtonPressed
    boolean mDecrementVirtualButtonPressed -> mDecrementVirtualButtonPressed
    net.simonvt.numberpicker.NumberPicker$SupportAccessibilityNodeProvider mAccessibilityNodeProvider -> mAccessibilityNodeProvider
    net.simonvt.numberpicker.NumberPicker$PressedStateHelper mPressedStateHelper -> mPressedStateHelper
    int mLastHandledDownDpadKeyCode -> mLastHandledDownDpadKeyCode
    char[] DIGIT_CHARACTERS -> DIGIT_CHARACTERS
    net.simonvt.numberpicker.NumberPicker$Formatter getTwoDigitFormatter() -> getTwoDigitFormatter
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    boolean moveToFinalScrollerPosition(net.simonvt.numberpicker.Scroller) -> moveToFinalScrollerPosition
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    void computeScroll() -> computeScroll
    void setEnabled(boolean) -> setEnabled
    void scrollBy(int,int) -> scrollBy
    int getSolidColor() -> getSolidColor
    void setOnValueChangedListener(net.simonvt.numberpicker.NumberPicker$OnValueChangeListener) -> setOnValueChangedListener
    void setOnScrollListener(net.simonvt.numberpicker.NumberPicker$OnScrollListener) -> setOnScrollListener
    void setFormatter(net.simonvt.numberpicker.NumberPicker$Formatter) -> setFormatter
    void setValue(int) -> setValue
    void showSoftInput() -> showSoftInput
    void hideSoftInput() -> hideSoftInput
    void tryComputeMaxWidth() -> tryComputeMaxWidth
    boolean getWrapSelectorWheel() -> getWrapSelectorWheel
    void setWrapSelectorWheel(boolean) -> setWrapSelectorWheel
    void setOnLongPressUpdateInterval(long) -> setOnLongPressUpdateInterval
    int getValue() -> getValue
    int getMinValue() -> getMinValue
    void setMinValue(int) -> setMinValue
    int getMaxValue() -> getMaxValue
    void setMaxValue(int) -> setMaxValue
    java.lang.String[] getDisplayedValues() -> getDisplayedValues
    void setDisplayedValues(java.lang.String[]) -> setDisplayedValues
    float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onDraw(android.graphics.Canvas) -> onDraw
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider() -> getAccessibilityNodeProvider
    int makeMeasureSpec(int,int) -> makeMeasureSpec
    int resolveSizeAndStateRespectingMinSize(int,int,int) -> resolveSizeAndStateRespectingMinSize
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    void initializeSelectorWheelIndices() -> initializeSelectorWheelIndices
    void setValueInternal(int,boolean) -> setValueInternal
    void changeValueByOne(boolean) -> changeValueByOne
    void initializeSelectorWheel() -> initializeSelectorWheel
    void initializeFadingEdges() -> initializeFadingEdges
    void onScrollerFinished(net.simonvt.numberpicker.Scroller) -> onScrollerFinished
    void onScrollStateChange(int) -> onScrollStateChange
    void fling(int) -> fling
    int getWrappedSelectorIndex(int) -> getWrappedSelectorIndex
    void incrementSelectorIndices(int[]) -> incrementSelectorIndices
    void decrementSelectorIndices(int[]) -> decrementSelectorIndices
    void ensureCachedScrollSelectorValue(int) -> ensureCachedScrollSelectorValue
    java.lang.String formatNumber(int) -> formatNumber
    void validateInputTextView(android.view.View) -> validateInputTextView
    boolean updateInputTextView() -> updateInputTextView
    void notifyChange(int,int) -> notifyChange
    void postChangeCurrentByOneFromLongPress(boolean,long) -> postChangeCurrentByOneFromLongPress
    void removeChangeCurrentByOneFromLongPress() -> removeChangeCurrentByOneFromLongPress
    void postBeginSoftInputOnLongPressCommand() -> postBeginSoftInputOnLongPressCommand
    void removeBeginSoftInputCommand() -> removeBeginSoftInputCommand
    void removeAllCallbacks() -> removeAllCallbacks
    int getSelectedPos(java.lang.String) -> getSelectedPos
    void postSetSelectionCommand(int,int) -> postSetSelectionCommand
    boolean ensureScrollWheelAdjusted() -> ensureScrollWheelAdjusted
    net.simonvt.numberpicker.NumberPicker$SupportAccessibilityNodeProvider getSupportAccessibilityNodeProvider() -> getSupportAccessibilityNodeProvider
    java.lang.String formatNumberWithLocale(int) -> formatNumberWithLocale
    char[] access$0() -> access$0
    java.lang.String[] access$1(net.simonvt.numberpicker.NumberPicker) -> access$1
    int access$2(net.simonvt.numberpicker.NumberPicker,java.lang.String) -> access$2
    int access$3(net.simonvt.numberpicker.NumberPicker) -> access$3
    void access$4(net.simonvt.numberpicker.NumberPicker,int,int) -> access$4
    boolean access$5(net.simonvt.numberpicker.NumberPicker) -> access$5
    void access$6(net.simonvt.numberpicker.NumberPicker,boolean) -> access$6
    int access$7(net.simonvt.numberpicker.NumberPicker) -> access$7
    void access$8(net.simonvt.numberpicker.NumberPicker,boolean) -> access$8
    boolean access$9(net.simonvt.numberpicker.NumberPicker) -> access$9
    int access$10(net.simonvt.numberpicker.NumberPicker) -> access$10
    android.widget.EditText access$11(net.simonvt.numberpicker.NumberPicker) -> access$11
    void access$12(net.simonvt.numberpicker.NumberPicker,boolean) -> access$12
    long access$13(net.simonvt.numberpicker.NumberPicker) -> access$13
    void access$14(net.simonvt.numberpicker.NumberPicker) -> access$14
    void access$15(net.simonvt.numberpicker.NumberPicker,boolean) -> access$15
    int access$16(net.simonvt.numberpicker.NumberPicker) -> access$16
    int access$17(net.simonvt.numberpicker.NumberPicker) -> access$17
    boolean access$18(net.simonvt.numberpicker.NumberPicker) -> access$18
    int access$19(net.simonvt.numberpicker.NumberPicker,int) -> access$19
    int access$20(net.simonvt.numberpicker.NumberPicker) -> access$20
    java.lang.String access$21(net.simonvt.numberpicker.NumberPicker,int) -> access$21
    void access$22(net.simonvt.numberpicker.NumberPicker) -> access$22
    void access$23(net.simonvt.numberpicker.NumberPicker,boolean,long) -> access$23
    void access$24(net.simonvt.numberpicker.NumberPicker,android.view.View) -> access$24
net.simonvt.numberpicker.NumberPicker$1 -> net.simonvt.numberpicker.NumberPicker$1:
    net.simonvt.numberpicker.NumberPicker this$0 -> this$0
    void onClick(android.view.View) -> onClick
net.simonvt.numberpicker.NumberPicker$2 -> net.simonvt.numberpicker.NumberPicker$2:
    net.simonvt.numberpicker.NumberPicker this$0 -> this$0
    boolean onLongClick(android.view.View) -> onLongClick
net.simonvt.numberpicker.NumberPicker$3 -> net.simonvt.numberpicker.NumberPicker$3:
    net.simonvt.numberpicker.NumberPicker this$0 -> this$0
    void onFocusChange(android.view.View,boolean) -> onFocusChange
net.simonvt.numberpicker.NumberPicker$AccessibilityNodeProviderImpl -> net.simonvt.numberpicker.NumberPicker$AccessibilityNodeProviderImpl:
    int UNDEFINED -> UNDEFINED
    int VIRTUAL_VIEW_ID_INCREMENT -> VIRTUAL_VIEW_ID_INCREMENT
    int VIRTUAL_VIEW_ID_INPUT -> VIRTUAL_VIEW_ID_INPUT
    int VIRTUAL_VIEW_ID_DECREMENT -> VIRTUAL_VIEW_ID_DECREMENT
    android.graphics.Rect mTempRect -> mTempRect
    int[] mTempArray -> mTempArray
    int mAccessibilityFocusedView -> mAccessibilityFocusedView
    net.simonvt.numberpicker.NumberPicker this$0 -> this$0
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    void sendAccessibilityEventForVirtualView(int,int) -> sendAccessibilityEventForVirtualView
    void sendAccessibilityEventForVirtualText(int) -> sendAccessibilityEventForVirtualText
    void sendAccessibilityEventForVirtualButton(int,int,java.lang.String) -> sendAccessibilityEventForVirtualButton
    void findAccessibilityNodeInfosByTextInChild(java.lang.String,int,java.util.List) -> findAccessibilityNodeInfosByTextInChild
    android.view.accessibility.AccessibilityNodeInfo createAccessibiltyNodeInfoForInputText() -> createAccessibiltyNodeInfoForInputText
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfoForVirtualButton(int,java.lang.String,int,int,int,int) -> createAccessibilityNodeInfoForVirtualButton
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfoForNumberPicker(int,int,int,int) -> createAccessibilityNodeInfoForNumberPicker
    boolean hasVirtualDecrementButton() -> hasVirtualDecrementButton
    boolean hasVirtualIncrementButton() -> hasVirtualIncrementButton
    java.lang.String getVirtualDecrementButtonText() -> getVirtualDecrementButtonText
    java.lang.String getVirtualIncrementButtonText() -> getVirtualIncrementButtonText
net.simonvt.numberpicker.NumberPicker$BeginSoftInputOnLongPressCommand -> net.simonvt.numberpicker.NumberPicker$BeginSoftInputOnLongPressCommand:
    net.simonvt.numberpicker.NumberPicker this$0 -> this$0
    void run() -> run
net.simonvt.numberpicker.NumberPicker$ChangeCurrentByOneFromLongPressCommand -> net.simonvt.numberpicker.NumberPicker$ChangeCurrentByOneFromLongPressCommand:
    boolean mIncrement -> mIncrement
    net.simonvt.numberpicker.NumberPicker this$0 -> this$0
    void setStep(boolean) -> setStep
    void run() -> run
    void access$0(net.simonvt.numberpicker.NumberPicker$ChangeCurrentByOneFromLongPressCommand,boolean) -> access$0
net.simonvt.numberpicker.NumberPicker$CustomEditText -> net.simonvt.numberpicker.NumberPicker$CustomEditText:
    void onEditorAction(int) -> onEditorAction
net.simonvt.numberpicker.NumberPicker$Formatter -> net.simonvt.numberpicker.NumberPicker$Formatter:
    java.lang.String format(int) -> format
net.simonvt.numberpicker.NumberPicker$InputTextFilter -> net.simonvt.numberpicker.NumberPicker$InputTextFilter:
    net.simonvt.numberpicker.NumberPicker this$0 -> this$0
    int getInputType() -> getInputType
    char[] getAcceptedChars() -> getAcceptedChars
    java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int) -> filter
net.simonvt.numberpicker.NumberPicker$OnScrollListener -> net.simonvt.numberpicker.NumberPicker$OnScrollListener:
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_TOUCH_SCROLL -> SCROLL_STATE_TOUCH_SCROLL
    int SCROLL_STATE_FLING -> SCROLL_STATE_FLING
    void onScrollStateChange(net.simonvt.numberpicker.NumberPicker,int) -> onScrollStateChange
net.simonvt.numberpicker.NumberPicker$OnValueChangeListener -> net.simonvt.numberpicker.NumberPicker$OnValueChangeListener:
    void onValueChange(net.simonvt.numberpicker.NumberPicker,int,int) -> onValueChange
net.simonvt.numberpicker.NumberPicker$PressedStateHelper -> net.simonvt.numberpicker.NumberPicker$PressedStateHelper:
    int BUTTON_INCREMENT -> BUTTON_INCREMENT
    int BUTTON_DECREMENT -> BUTTON_DECREMENT
    int MODE_PRESS -> MODE_PRESS
    int MODE_TAPPED -> MODE_TAPPED
    int mManagedButton -> mManagedButton
    int mMode -> mMode
    net.simonvt.numberpicker.NumberPicker this$0 -> this$0
    void cancel() -> cancel
    void buttonPressDelayed(int) -> buttonPressDelayed
    void buttonTapped(int) -> buttonTapped
    void run() -> run
net.simonvt.numberpicker.NumberPicker$SetSelectionCommand -> net.simonvt.numberpicker.NumberPicker$SetSelectionCommand:
    int mSelectionStart -> mSelectionStart
    int mSelectionEnd -> mSelectionEnd
    net.simonvt.numberpicker.NumberPicker this$0 -> this$0
    void run() -> run
    void access$0(net.simonvt.numberpicker.NumberPicker$SetSelectionCommand,int) -> access$0
    void access$1(net.simonvt.numberpicker.NumberPicker$SetSelectionCommand,int) -> access$1
net.simonvt.numberpicker.NumberPicker$SupportAccessibilityNodeProvider -> net.simonvt.numberpicker.NumberPicker$SupportAccessibilityNodeProvider:
    net.simonvt.numberpicker.NumberPicker$AccessibilityNodeProviderImpl mProvider -> mProvider
    net.simonvt.numberpicker.NumberPicker this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    void sendAccessibilityEventForVirtualView(int,int) -> sendAccessibilityEventForVirtualView
net.simonvt.numberpicker.NumberPicker$TwoDigitFormatter -> net.simonvt.numberpicker.NumberPicker$TwoDigitFormatter:
    java.lang.StringBuilder mBuilder -> mBuilder
    char mZeroDigit -> mZeroDigit
    java.util.Formatter mFmt -> mFmt
    java.lang.Object[] mArgs -> mArgs
    void init(java.util.Locale) -> init
    java.lang.String format(int) -> format
    char getZeroDigit(java.util.Locale) -> getZeroDigit
    java.util.Formatter createFormatter(java.util.Locale) -> createFormatter
net.simonvt.numberpicker.R -> net.simonvt.numberpicker.R:
net.simonvt.numberpicker.R$attr -> net.simonvt.numberpicker.R$attr:
    int internalLayout -> internalLayout
    int internalMaxHeight -> internalMaxHeight
    int internalMaxWidth -> internalMaxWidth
    int internalMinHeight -> internalMinHeight
    int internalMinWidth -> internalMinWidth
    int numberPickerStyle -> numberPickerStyle
    int selectionDivider -> selectionDivider
    int selectionDividerHeight -> selectionDividerHeight
    int selectionDividersDistance -> selectionDividersDistance
    int solidColor -> solidColor
    int virtualButtonPressedDrawable -> virtualButtonPressedDrawable
net.simonvt.numberpicker.R$color -> net.simonvt.numberpicker.R$color:
    int transparent -> transparent
net.simonvt.numberpicker.R$drawable -> net.simonvt.numberpicker.R$drawable:
    int item_background_holo_dark -> item_background_holo_dark
    int item_background_holo_light -> item_background_holo_light
    int list_focused_holo -> list_focused_holo
    int list_longpressed_holo -> list_longpressed_holo
    int list_pressed_holo_dark -> list_pressed_holo_dark
    int list_pressed_holo_light -> list_pressed_holo_light
    int list_selector_background_transition_holo_dark -> list_selector_background_transition_holo_dark
    int list_selector_background_transition_holo_light -> list_selector_background_transition_holo_light
    int list_selector_disabled_holo_dark -> list_selector_disabled_holo_dark
    int list_selector_disabled_holo_light -> list_selector_disabled_holo_light
    int np_numberpicker_selection_divider -> np_numberpicker_selection_divider
net.simonvt.numberpicker.R$id -> net.simonvt.numberpicker.R$id:
    int np__decrement -> np__decrement
    int np__increment -> np__increment
    int np__numberpicker_input -> np__numberpicker_input
net.simonvt.numberpicker.R$layout -> net.simonvt.numberpicker.R$layout:
    int number_picker_with_selector_wheel -> number_picker_with_selector_wheel
net.simonvt.numberpicker.R$style -> net.simonvt.numberpicker.R$style:
    int NPWidget -> NPWidget
    int NPWidget_Holo_Light_NumberPicker -> NPWidget_Holo_Light_NumberPicker
    int NPWidget_Holo_NumberPicker -> NPWidget_Holo_NumberPicker
    int NPWidget_NumberPicker -> NPWidget_NumberPicker
net.simonvt.numberpicker.R$styleable -> net.simonvt.numberpicker.R$styleable:
    int[] NumberPicker -> NumberPicker
    int NumberPicker_internalLayout -> NumberPicker_internalLayout
    int NumberPicker_internalMaxHeight -> NumberPicker_internalMaxHeight
    int NumberPicker_internalMaxWidth -> NumberPicker_internalMaxWidth
    int NumberPicker_internalMinHeight -> NumberPicker_internalMinHeight
    int NumberPicker_internalMinWidth -> NumberPicker_internalMinWidth
    int NumberPicker_selectionDivider -> NumberPicker_selectionDivider
    int NumberPicker_selectionDividerHeight -> NumberPicker_selectionDividerHeight
    int NumberPicker_selectionDividersDistance -> NumberPicker_selectionDividersDistance
    int NumberPicker_solidColor -> NumberPicker_solidColor
    int NumberPicker_virtualButtonPressedDrawable -> NumberPicker_virtualButtonPressedDrawable
net.simonvt.numberpicker.Scroller -> net.simonvt.numberpicker.Scroller:
    int mMode -> mMode
    int mStartX -> mStartX
    int mStartY -> mStartY
    int mFinalX -> mFinalX
    int mFinalY -> mFinalY
    int mMinX -> mMinX
    int mMaxX -> mMaxX
    int mMinY -> mMinY
    int mMaxY -> mMaxY
    int mCurrX -> mCurrX
    int mCurrY -> mCurrY
    long mStartTime -> mStartTime
    int mDuration -> mDuration
    float mDurationReciprocal -> mDurationReciprocal
    float mDeltaX -> mDeltaX
    float mDeltaY -> mDeltaY
    boolean mFinished -> mFinished
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    boolean mFlywheel -> mFlywheel
    float mVelocity -> mVelocity
    int DEFAULT_DURATION -> DEFAULT_DURATION
    int SCROLL_MODE -> SCROLL_MODE
    int FLING_MODE -> FLING_MODE
    float DECELERATION_RATE -> DECELERATION_RATE
    float ALPHA -> ALPHA
    float START_TENSION -> START_TENSION
    float END_TENSION -> END_TENSION
    int NB_SAMPLES -> NB_SAMPLES
    float[] SPLINE -> SPLINE
    float mDeceleration -> mDeceleration
    float mPpi -> mPpi
    float sViscousFluidScale -> sViscousFluidScale
    float sViscousFluidNormalize -> sViscousFluidNormalize
    void setFriction(float) -> setFriction
    float computeDeceleration(float) -> computeDeceleration
    boolean isFinished() -> isFinished
    void forceFinished(boolean) -> forceFinished
    int getDuration() -> getDuration
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
    float getCurrVelocity() -> getCurrVelocity
    int getStartX() -> getStartX
    int getStartY() -> getStartY
    int getFinalX() -> getFinalX
    int getFinalY() -> getFinalY
    boolean computeScrollOffset() -> computeScrollOffset
    void startScroll(int,int,int,int) -> startScroll
    void startScroll(int,int,int,int,int) -> startScroll
    void fling(int,int,int,int,int,int,int,int) -> fling
    float viscousFluid(float) -> viscousFluid
    void abortAnimation() -> abortAnimation
    void extendDuration(int) -> extendDuration
    int timePassed() -> timePassed
    void setFinalX(int) -> setFinalX
    void setFinalY(int) -> setFinalY
    boolean isScrollingInDirection(float,float) -> isScrollingInDirection
